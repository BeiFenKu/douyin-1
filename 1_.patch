Index: app/src/main/java/com/b3ad/yuxie/myapplication/myview/RadarView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/myview/RadarView.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/myview/RadarView.java	(revision )
@@ -0,0 +1,206 @@
+package com.b3ad.yuxie.myapplication.myview;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.Path;
+import android.support.annotation.Nullable;
+import android.util.AttributeSet;
+import android.view.View;
+
+/**
+ * Created by Administrator on 2017/7/25.
+ */
+
+public class RadarView extends View {
+
+    private int count=6;//数据个数
+    private float angle=(float) (Math.PI*2/count);
+    private float radius;//网格最大半径
+    private int centerX;//中心X
+    private int centerY;//中心Y
+    private String[] titles={"a","b","c","d","e","f"};//标题
+    private double[] data={80,30,50,60,70,50};//各维度分值
+    private float maxValue=100;//数据最大值
+    private Paint mainPaint;                //雷达区画笔
+    private Paint valuePaint;               //数据区画笔
+    private Paint textPaint;                //文本画笔
+
+    public RadarView(Context context) {
+        this(context,null);
+    }
+
+    public RadarView(Context context, @Nullable AttributeSet attrs) {
+        this(context, attrs,0);
+    }
+
+    public RadarView(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        init();
+    }
+
+    //初始化
+    private void init() {
+        count = Math.min(data.length,titles.length);
+
+        mainPaint = new Paint();
+        mainPaint.setAntiAlias(true);
+        mainPaint.setColor(Color.GRAY);
+        mainPaint.setStyle(Paint.Style.STROKE);
+
+        valuePaint = new Paint();
+        valuePaint.setAntiAlias(true);
+        valuePaint.setColor(Color.BLUE);
+        valuePaint.setStyle(Paint.Style.FILL_AND_STROKE);
+
+        textPaint = new Paint();
+        textPaint.setTextSize(20);
+        textPaint.setStyle(Paint.Style.FILL);
+        textPaint.setColor(Color.BLACK);
+    }
+
+    @Override
+    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
+        radius = Math.min(h, w)/2*0.9f;
+        //中心坐标
+        centerX = w/2;
+        centerY = h/2;
+        postInvalidate();
+        super.onSizeChanged(w, h, oldw, oldh);
+    }
+
+    /**
+     * 绘制正多边形
+     */
+    private void drawPolygon(Canvas canvas){
+        Path path = new Path();
+        float r = radius/(count-1);//r是蜘蛛丝之间的间距
+        for(int i=1;i<count;i++){//中心点不用绘制
+            float curR = r*i;//当前半径
+            path.reset();
+            for(int j=0;j<count;j++){
+                if(j==0){
+                    path.moveTo(centerX+curR,centerY);
+                }else{
+                    //根据半径，计算出蜘蛛丝上每个点的坐标
+                    float x = (float) (centerX+curR*Math.cos(angle*j));
+                    float y = (float) (centerY+curR*Math.sin(angle*j));
+                    path.lineTo(x,y);
+                }
+            }
+            path.close();//闭合路径
+            canvas.drawPath(path, mainPaint);
+        }
+    }
+
+    /**
+     * 绘制直线
+     */
+    private void drawLines(Canvas canvas){
+        Path path = new Path();
+        for(int i=0;i<count;i++){
+            path.reset();
+            path.moveTo(centerX, centerY);
+            float x = (float) (centerX+radius*Math.cos(angle*i));
+            float y = (float) (centerY+radius*Math.sin(angle*i));
+            path.lineTo(x, y);
+            canvas.drawPath(path, mainPaint);
+        }
+    }
+
+    /**
+     * 绘制文字
+     * @param canvas
+     */
+    private void drawText(Canvas canvas){
+        Paint.FontMetrics fontMetrics = textPaint.getFontMetrics();
+        float fontHeight = fontMetrics.descent - fontMetrics.ascent;
+        for(int i=0;i<count;i++){
+            float x = (float) (centerX+(radius+fontHeight/2)*Math.cos(angle*i));
+            float y = (float) (centerY+(radius+fontHeight/2)*Math.sin(angle*i));
+            if(angle*i>=0&&angle*i<=Math.PI/2){//第4象限
+                canvas.drawText(titles[i], x,y,textPaint);
+            }else if(angle*i>=3*Math.PI/2&&angle*i<=Math.PI*2){//第3象限
+                canvas.drawText(titles[i], x,y,textPaint);
+            }else if(angle*i>Math.PI/2&&angle*i<=Math.PI){//第2象限
+                float dis = textPaint.measureText(titles[i]);//文本长度
+                canvas.drawText(titles[i], x-dis,y,textPaint);
+            }else if(angle*i>=Math.PI&&angle*i<3*Math.PI/2){//第1象限
+                float dis = textPaint.measureText(titles[i]);//文本长度
+                canvas.drawText(titles[i], x-dis,y,textPaint);
+            }
+        }
+    }
+
+    /**
+     * 绘制区域
+     * @param canvas
+     */
+    private void drawRegion(Canvas canvas){
+        Path path = new Path();
+        valuePaint.setAlpha(255);
+        for(int i=0;i<count;i++){
+            double percent = data[i]/maxValue;
+            float x = (float) (centerX+radius*Math.cos(angle*i)*percent);
+            float y = (float) (centerY+radius*Math.sin(angle*i)*percent);
+            if(i==0){
+                path.moveTo(x, centerY);
+            }else{
+                path.lineTo(x,y);
+            }
+            //绘制小圆点
+            canvas.drawCircle(x,y,10,valuePaint);
+        }
+        valuePaint.setStyle(Paint.Style.STROKE);
+        canvas.drawPath(path, valuePaint);
+        valuePaint.setAlpha(127);
+        //绘制填充区域
+        valuePaint.setStyle(Paint.Style.FILL_AND_STROKE);
+        canvas.drawPath(path, valuePaint);
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        drawPolygon(canvas);
+        drawLines(canvas);
+        drawText(canvas);
+        drawRegion(canvas);
+    }
+
+    //设置标题
+    public void setTitles(String[] titles) {
+        this.titles = titles;
+    }
+
+    //设置数值
+    public void setData(double[] data) {
+        this.data = data;
+    }
+
+
+    public float getMaxValue() {
+        return maxValue;
+    }
+
+    //设置最大数值
+    public void setMaxValue(float maxValue) {
+        this.maxValue = maxValue;
+    }
+
+    //设置蜘蛛网颜色
+    public void setMainPaintColor(int color){
+        mainPaint.setColor(color);
+    }
+
+    //设置标题颜色
+    public void setTextPaintColor(int color){
+        textPaint.setColor(color);
+    }
+
+    //设置覆盖局域颜色
+    public void setValuePaintColor(int color){
+        valuePaint.setColor(color);
+    }
+
+}
Index: baselib/src/main/res/drawable/shape_number_button_right.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/drawable/shape_number_button_right.xml	(revision )
+++ baselib/src/main/res/drawable/shape_number_button_right.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android" android:enterFadeDuration="200" android:exitFadeDuration="200">
+    <item android:state_pressed="true">
+        <shape>
+            <solid android:color="#ebedf0" />
+        </shape>
+    </item>
+
+</selector>
\ No newline at end of file
Index: baselib/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/values/colors.xml	(revision )
+++ baselib/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,92 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="code_text">#F86E0C</color>
+    <color name="navigation_bar_bg">#222222</color>
+    <color name="colorPrimary">#ff2C2C2C</color>
+    <color name="colorPrimaryDark">#ff2C2C2C</color>
+    <color name="colorAccent">#ff2C2C2C</color>
+
+    <!--状态栏颜色-->
+    <color name="status_bar_color">#ff2C2C2C</color>
+
+    <!--白天主题-->
+    <color name="day_backgroup_color">#FFFFFFFF</color>
+    <color name="day_one_text_color">#FF000000</color>
+    <color name="day_two_text_color">#c9000000</color>
+    <color name="day_three_text_color">#8A9599</color>
+    <!--夜间主题-->
+    <color name="night_backgroup_color">#3F3F3F</color>
+    <color name="night_one_text_color">#FFbbbbbb</color>
+    <color name="night_two_text_color">#8A9599</color>
+    <color name="night_there_text_color">#8A9599</color>
+    <!-- app主色调-->
+    <color name="main_color">@color/colorPrimary</color>
+    <color name="orange">#FA8C20</color>
+    <color name="wheel_divider_line_color">#FF000000</color>
+    <color name="wheel_item_text_color_selected">#FF0288ce</color>
+    <color name="wheel_item_text_color_no_select">#FFbbbbbb</color>
+    <color name="black">#FF000000</color>
+    <color name="white">#FFFFFFFF</color>
+    <color name="red">#FFFF0000</color>
+    <color name="green">#FF00FF00</color>
+    <color name="white_alpha_half">#99FFFFFF</color>
+    <color name="gray">#FFF0F0F0</color>
+    <color name="gray_deep">#c9000000</color>
+    <color name="transparent">#00000000</color>
+    <color name="role_right_gray">#929292</color>
+    <color name="role_yellow_gray">#33CC99</color>
+    <color name="tv_right_gray">#929292</color>
+    <color name="bg_white_gray">#f2f2f2</color>
+    <color name="tv_talk_content">#FFB3B3B3</color>
+    <color name="line_recent_contact">#FFEEEEEE</color>
+    <color name="light_gray">#808080</color>
+    <color name="light_white">#33ffffff</color>
+    <color name="chat_tip_color">#FFcccccc</color>
+    <color name="blue">#5CA3E5</color>
+    <color name="main_blue">#3598db</color>
+    <color name="blue_check">#3493d4</color>
+    <color name="toast_white">#ffffff</color>
+    <color name="toast_stroke_gray">#99d4d4d4</color>
+
+
+    <color name="alpha_05_white">#0DFFFFFF</color>
+    <color name="alpha_10_white">#1AFFFFFF</color>
+    <color name="alpha_15_white">#26FFFFFF</color>
+    <color name="alpha_20_white">#33FFFFFF</color>
+    <color name="alpha_25_white">#40FFFFFF</color>
+    <color name="alpha_30_white">#4DFFFFFF</color>
+    <color name="alpha_35_white">#59FFFFFF</color>
+    <color name="alpha_40_white">#66FFFFFF</color>
+    <color name="alpha_45_white">#73FFFFFF</color>
+    <color name="alpha_50_white">#80FFFFFF</color>
+    <color name="alpha_55_white">#8CFFFFFF</color>
+    <color name="alpha_60_white">#99FFFFFF</color>
+    <color name="alpha_65_white">#A6FFFFFF</color>
+    <color name="alpha_70_white">#B3FFFFFF</color>
+    <color name="alpha_75_white">#BFFFFFFF</color>
+    <color name="alpha_80_white">#CCFFFFFF</color>
+    <color name="alpha_85_white">#D9FFFFFF</color>
+    <color name="alpha_90_white">#E6FFFFFF</color>
+    <color name="alpha_95_white">#F2FFFFFF</color>
+
+    <color name="alpha_05_black">#0D000000</color>
+    <color name="alpha_10_black">#1A000000</color>
+    <color name="alpha_15_black">#26000000</color>
+    <color name="alpha_20_black">#33000000</color>
+    <color name="alpha_25_black">#40000000</color>
+    <color name="alpha_30_black">#4D000000</color>
+    <color name="alpha_35_black">#59000000</color>
+    <color name="alpha_40_black">#66000000</color>
+    <color name="alpha_45_black">#73000000</color>
+    <color name="alpha_50_black">#80000000</color>
+    <color name="alpha_55_black">#8C000000</color>
+    <color name="alpha_60_black">#99000000</color>
+    <color name="alpha_65_black">#A6000000</color>
+    <color name="alpha_70_black">#B3000000</color>
+    <color name="alpha_75_black">#BF000000</color>
+    <color name="alpha_80_black">#CC000000</color>
+    <color name="alpha_85_black">#D9000000</color>
+    <color name="alpha_90_black">#E6000000</color>
+    <color name="alpha_95_black">#F2000000</color>
+
+</resources>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/baserx/GsonResponseGeneralBodyConverter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baserx/GsonResponseGeneralBodyConverter.java	(revision )
+++ baselib/src/main/java/com/baselib/baserx/GsonResponseGeneralBodyConverter.java	(revision )
@@ -0,0 +1,43 @@
+package com.baselib.baserx;
+
+/**
+ * 作者: liuhuaqian on 2017/10/8.
+ */
+
+import com.baselib.basebean.BaseRespose;
+import com.baselib.commonutils.LogUtils;
+import com.google.gson.Gson;
+
+import java.io.IOException;
+import java.lang.reflect.Type;
+
+import okhttp3.ResponseBody;
+import retrofit2.Converter;
+
+final class GsonResponseGeneralBodyConverter<T> implements Converter<ResponseBody, T> {
+    private final Gson gson;
+    private final Type type;
+
+    GsonResponseGeneralBodyConverter(Gson gson, Type type) {
+        this.gson = gson;
+        this.type = type;
+    }
+
+    /**
+     * 针对数据返回成功、错误不同类型字段处理
+     */
+    @Override
+    public T convert(ResponseBody value) throws IOException {
+        String response = value.string();
+        LogUtils.logd("--HttpManager,返回err==：" + response);
+        try {
+            T result = gson.fromJson(response, type);
+            return gson.fromJson(response, type);
+        } catch (Exception e) {
+            LogUtils.logd("HttpManager,返回err==：" + response);
+            throw new ResultException("000000", true);
+        } finally {
+            value.close();
+        }
+    }
+}
Index: app/src/main/java/com/example/anonymous/greendao/UserDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/anonymous/greendao/UserDao.java	(revision )
+++ app/src/main/java/com/example/anonymous/greendao/UserDao.java	(revision )
@@ -0,0 +1,157 @@
+package com.example.anonymous.greendao;
+
+import android.database.Cursor;
+import android.database.sqlite.SQLiteStatement;
+
+import org.greenrobot.greendao.AbstractDao;
+import org.greenrobot.greendao.Property;
+import org.greenrobot.greendao.internal.DaoConfig;
+import org.greenrobot.greendao.database.Database;
+import org.greenrobot.greendao.database.DatabaseStatement;
+
+import com.b3ad.yuxie.myapplication.entity.User;
+
+// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
+/** 
+ * DAO for table "USER".
+*/
+public class UserDao extends AbstractDao<User, Long> {
+
+    public static final String TABLENAME = "USER";
+
+    /**
+     * Properties of entity User.<br/>
+     * Can be used for QueryBuilder and for referencing column names.
+     */
+    public static class Properties {
+        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
+        public final static Property Name = new Property(1, String.class, "name", false, "NAME");
+        public final static Property Pwd = new Property(2, String.class, "pwd", false, "PWD");
+        public final static Property City = new Property(3, String.class, "city", false, "CITY");
+    }
+
+
+    public UserDao(DaoConfig config) {
+        super(config);
+    }
+    
+    public UserDao(DaoConfig config, DaoSession daoSession) {
+        super(config, daoSession);
+    }
+
+    /** Creates the underlying database table. */
+    public static void createTable(Database db, boolean ifNotExists) {
+        String constraint = ifNotExists? "IF NOT EXISTS ": "";
+        db.execSQL("CREATE TABLE " + constraint + "\"USER\" (" + //
+                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
+                "\"NAME\" TEXT," + // 1: name
+                "\"PWD\" TEXT," + // 2: pwd
+                "\"CITY\" TEXT);"); // 3: city
+    }
+
+    /** Drops the underlying database table. */
+    public static void dropTable(Database db, boolean ifExists) {
+        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"USER\"";
+        db.execSQL(sql);
+    }
+
+    @Override
+    protected final void bindValues(DatabaseStatement stmt, User entity) {
+        stmt.clearBindings();
+ 
+        Long id = entity.getId();
+        if (id != null) {
+            stmt.bindLong(1, id);
+        }
+ 
+        String name = entity.getName();
+        if (name != null) {
+            stmt.bindString(2, name);
+        }
+ 
+        String pwd = entity.getPwd();
+        if (pwd != null) {
+            stmt.bindString(3, pwd);
+        }
+ 
+        String city = entity.getCity();
+        if (city != null) {
+            stmt.bindString(4, city);
+        }
+    }
+
+    @Override
+    protected final void bindValues(SQLiteStatement stmt, User entity) {
+        stmt.clearBindings();
+ 
+        Long id = entity.getId();
+        if (id != null) {
+            stmt.bindLong(1, id);
+        }
+ 
+        String name = entity.getName();
+        if (name != null) {
+            stmt.bindString(2, name);
+        }
+ 
+        String pwd = entity.getPwd();
+        if (pwd != null) {
+            stmt.bindString(3, pwd);
+        }
+ 
+        String city = entity.getCity();
+        if (city != null) {
+            stmt.bindString(4, city);
+        }
+    }
+
+    @Override
+    public Long readKey(Cursor cursor, int offset) {
+        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
+    }    
+
+    @Override
+    public User readEntity(Cursor cursor, int offset) {
+        User entity = new User( //
+            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
+            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // name
+            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // pwd
+            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3) // city
+        );
+        return entity;
+    }
+     
+    @Override
+    public void readEntity(Cursor cursor, User entity, int offset) {
+        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
+        entity.setName(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
+        entity.setPwd(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
+        entity.setCity(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
+     }
+    
+    @Override
+    protected final Long updateKeyAfterInsert(User entity, long rowId) {
+        entity.setId(rowId);
+        return rowId;
+    }
+    
+    @Override
+    public Long getKey(User entity) {
+        if(entity != null) {
+            return entity.getId();
+        } else {
+            return null;
+        }
+    }
+
+    @Override
+    public boolean hasKey(User entity) {
+        return entity.getId() != null;
+    }
+
+    @Override
+    protected final boolean isEntityUpdateable() {
+        return true;
+    }
+    
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/myview/MyView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/myview/MyView.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/myview/MyView.java	(revision )
@@ -0,0 +1,138 @@
+package com.b3ad.yuxie.myapplication.myview;
+
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+
+/**
+ * Created by Administrator on 2017/7/24.
+ * 自定义view流程:
+ * 1    构造函数 	View初始化
+ * 2 	onMeasure 	测量View大小
+ * 3 	onSizeChanged 	确定View大小
+ * 4 	onLayout 	确定子View布局(自定义View包含子View时有用)
+ * 5 	onDraw 	实际绘制内容(invalidate()重新绘制)
+ * 6 	提供接口 	控制View或监听View某些状态。
+ */
+
+public class MyView extends View implements Runnable {
+
+    private Paint mPaint;
+    private Context mContext;
+    private float widthSize;
+    private float heightSize;
+    private float radiu;
+
+    public MyView(Context context) {
+        super(context);
+        mContext = context;
+    }
+
+    public MyView(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        initPaint();
+    }
+
+    public MyView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        //重写绘画方法
+        super.onDraw(canvas);
+
+        float x = widthSize / 2;
+        float y = heightSize / 2;
+
+        canvas.drawCircle(x, y, radiu, mPaint);
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+        //测量view的大小
+
+        //修改view的宽高使用,注释super.onMeasure(widthMeasureSpec, heightMeasureSpec);
+        //setMeasuredDimension(widthMeasureSpec,heightMeasureSpec);
+
+        //widthMeasureSpec 是测量模式和高度合成的值
+        //在int类型的32位二进制位中，31-30这两位表示测量模式,29~0这三十位表示宽和高的实际值
+
+        //MeasureSpec.UNSPECIFIED 0 默认值，父控件没有给子view任何限制，子View可以设置为任意大小。
+        //MeasureSpec.EXACTLY 1 表示父控件已经确切的指定了子View的大小。
+        //MeasureSpec.AT_MOST 2 表示子View具体大小没有尺寸限制，但是存在上限，上限一般为父View大小。
+        //获取测量模式
+        int withMode = MeasureSpec.getMode(widthMeasureSpec);
+        int higthMode = MeasureSpec.getMode(heightMeasureSpec);
+
+        widthSize = MeasureSpec.getSize(widthMeasureSpec);//获取父控件的宽度
+        heightSize = MeasureSpec.getSize(heightMeasureSpec);//获取父控件的高度
+
+//        Log.i("TAG","widthSize:"+widthSize);
+//        Log.i("TAG","heightSize:"+heightSize);
+    }
+
+    @Override
+    protected void onSizeChanged(int w, int h, int oldw, int oldh) {
+        //确认view的大小
+
+        //这是因为View的大小不仅由View本身控制，而且受父控件的影响，
+        //所以我们在确定View大小的时候最好使用系统提供的onSizeChanged回调函数。
+        super.onSizeChanged(w, h, oldw, oldh);
+    }
+
+    @Override
+    protected void onLayout(boolean changed, int left, int top, int right, int bottom) {
+        //确定子View布局(自定义View包含子View时有用)
+        super.onLayout(changed, left, top, right, bottom);
+    }
+
+    private void initPaint() {
+        //实例画笔,并打开抗锯齿
+        mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        //Paint.Style.STROKE:描边
+        //Paint.Style.FULL_AND_STROKE:描边并填充
+        //Paint.Style.FULL :填充
+        mPaint.setStyle(Paint.Style.STROKE);//设置画笔样式为,描边
+        mPaint.setColor(Color.LTGRAY);//设置画笔颜色为浅灰色
+        mPaint.setStrokeWidth(10);//设置画笔的粗细,单位:像素px
+    }
+
+    @Override
+    public boolean dispatchTouchEvent(MotionEvent event) {
+        return super.dispatchTouchEvent(event);
+    }
+
+    @Override
+    public void run() {
+        /*
+         * 确保线程不断执行不断刷新界面
+         */
+        while (true) {
+            try {
+                /*
+                 * 如果半径小于200则自加否则大于200后重置半径值以实现往复
+                 */
+                if (radiu <= 200) {
+                    radiu += 10;
+
+                    // 刷新View
+                    //invalidate();
+                    postInvalidate();//子线程刷新ui
+                } else {
+                    radiu = 0;
+                }
+
+                // 每执行一次暂停40毫秒
+                Thread.sleep(40);
+            } catch (InterruptedException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/compress/CompressImageImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/compress/CompressImageImpl.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/compress/CompressImageImpl.java	(revision )
@@ -0,0 +1,98 @@
+package com.baselib.takephoto.compress;
+
+import android.content.Context;
+import android.text.TextUtils;
+import com.baselib.takephoto.model.TImage;
+import java.io.File;
+import java.util.ArrayList;
+
+/**
+ * 压缩照片
+ *
+ * Date: 2016/9/21 0007 20:10
+ * Version:3.0.0
+ * 技术博文：http://www.cboy.me
+ * GitHub:https://github.com/crazycodeboy
+ * Eamil:crazycodeboy@gmail.com
+ */
+public class CompressImageImpl implements CompressImage {
+    private CompressImageUtil compressImageUtil;
+    private ArrayList<TImage> images;
+    private CompressImage.CompressListener listener;
+
+    public static CompressImage of(Context context,CompressConfig config, ArrayList<TImage> images, CompressImage.CompressListener listener) {
+        if(config.getLubanOptions()!=null){
+            return new CompressWithLuBan(context,config,images,listener);
+        }else {
+            return new CompressImageImpl(context,config,images,listener);
+        }
+    }
+    private CompressImageImpl(Context context,CompressConfig config, ArrayList<TImage> images, CompressImage.CompressListener listener){
+        compressImageUtil = new CompressImageUtil(context,config);
+        this.images = images;
+        this.listener = listener;
+    }
+
+    @Override
+    public void compress() {
+        if(images==null||images.isEmpty())listener.onCompressFailed(images," images is null");
+        for(TImage image:images){
+            if(image==null){
+                listener.onCompressFailed(images," There are pictures of compress  is null.");
+                return;
+            }
+        }
+        compress(images.get(0));
+    }
+
+    private void compress(final TImage image) {
+        if (TextUtils.isEmpty(image.getOriginalPath())){
+            continueCompress(image,false);
+            return;
+        }
+
+        File file = new File(image.getOriginalPath());
+        if (file == null || !file.exists() || !file.isFile()){
+            continueCompress(image,false);
+            return;
+        }
+
+        compressImageUtil.compress(image.getOriginalPath(), new CompressImageUtil.CompressListener() {
+            @Override
+            public void onCompressSuccess(String imgPath) {
+                image.setCompressPath(imgPath);
+                continueCompress(image,true);
+            }
+
+            @Override
+            public void onCompressFailed(String imgPath, String msg) {
+                continueCompress(image,false,msg);
+            }
+        });
+    }
+
+    private void continueCompress(TImage image,boolean preSuccess,String...message){
+        image.setCompressed(preSuccess);
+        int index=images.indexOf(image);
+        boolean isLast=index== images.size() - 1;
+        if (isLast) {
+            handleCompressCallBack(message);
+        }else {
+            compress(images.get(index+1));
+        }
+    }
+    private void handleCompressCallBack(String...message){
+        if(message.length>0){
+            listener.onCompressFailed(images,message[0]);
+            return;
+        }
+
+        for(TImage image:images){
+            if(!image.isCompressed()){
+                listener.onCompressFailed(images,image.getCompressPath()+" is compress failures");
+                return;
+            }
+        }
+        listener.onCompressSuccess(images);
+    }
+}
Index: app/src/main/res/values/styles.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/styles.xml	(revision )
+++ app/src/main/res/values/styles.xml	(revision )
@@ -0,0 +1,20 @@
+<resources>
+
+    <!-- Base application theme. -->
+    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+    </style>
+
+    <style name="AppTheme.NoActionBar">
+        <item name="windowActionBar">false</item>
+        <item name="windowNoTitle">true</item>
+    </style>
+
+    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />
+
+    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />
+
+</resources>
Index: app/src/main/res/layout/activity_mvp_user.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_mvp_user.xml	(revision )
+++ app/src/main/res/layout/activity_mvp_user.xml	(revision )
@@ -0,0 +1,95 @@
+<?xml version="1.0"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="fill_parent"
+    android:layout_height="fill_parent"
+    android:orientation="vertical">
+
+    <TextView
+        android:id="@+id/id_txv"
+        android:layout_width="150dp"
+        android:layout_height="50dp"
+        android:gravity="center_horizontal"
+        android:text="@string/id"
+        android:textSize="28sp" />
+
+    <EditText
+        android:id="@+id/id_edt"
+        android:layout_width="150dp"
+        android:layout_height="50dp"
+        android:layout_toRightOf="@id/id_txv"
+        android:inputType="text"
+        android:textSize="18sp" />
+
+    <TextView
+        android:id="@+id/first_name_txv"
+        android:layout_width="150dp"
+        android:layout_height="50dp"
+        android:layout_below="@id/id_txv"
+        android:gravity="center_horizontal"
+        android:text="@string/firstname"
+        android:textSize="28sp" />
+
+    <EditText
+        android:id="@+id/first_name_edt"
+        android:layout_width="150dp"
+        android:layout_height="50dp"
+        android:layout_below="@id/id_txv"
+        android:layout_toRightOf="@id/first_name_txv"
+        android:inputType="text"
+        android:textSize="18sp" />
+
+    <TextView
+        android:id="@+id/last_name_txv"
+        android:layout_width="150dp"
+        android:layout_height="50dp"
+        android:layout_below="@id/first_name_txv"
+        android:gravity="center_horizontal"
+        android:text="@string/lastname"
+        android:textSize="28sp" />
+
+
+    <EditText
+        android:id="@+id/last_name_edt"
+        android:layout_width="150dp"
+        android:layout_height="50dp"
+        android:layout_below="@id/first_name_edt"
+        android:layout_toRightOf="@id/last_name_txv"
+        android:inputType="text"
+        android:textSize="18sp" />
+
+    <TextView
+        android:id="@+id/address_txv"
+        android:layout_width="150dp"
+        android:layout_height="50dp"
+        android:layout_below="@id/last_name_txv"
+        android:gravity="center_horizontal"
+        android:text="地址"
+        android:textSize="28sp" />
+
+    <EditText
+        android:id="@+id/address_edt"
+        android:layout_width="150dp"
+        android:layout_height="50dp"
+        android:layout_below="@id/last_name_txv"
+        android:layout_toRightOf="@id/address_txv"
+        android:inputType="text"
+        android:textSize="18sp" />
+
+
+    <Button
+        android:id="@+id/saveButton"
+        android:layout_width="150dp"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/address_edt"
+        android:text="@string/save" />
+
+    <Button
+        android:id="@+id/loadButton"
+        android:layout_width="150dp"
+        android:layout_height="wrap_content"
+        android:layout_below="@id/address_edt"
+        android:layout_toRightOf="@id/saveButton"
+        android:text="@string/load" />
+
+</RelativeLayout>
Index: baselib/src/main/java/com/baselib/takephoto/uitl/IntentUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/uitl/IntentUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/uitl/IntentUtils.java	(revision )
@@ -0,0 +1,92 @@
+package com.baselib.takephoto.uitl;
+
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.net.Uri;
+import android.provider.MediaStore;
+import android.util.Log;
+import com.darsh.multipleimageselect.activities.AlbumSelectActivity;
+import com.darsh.multipleimageselect.helpers.Constants;
+import com.baselib.takephoto.model.CropOptions;
+import com.baselib.takephoto.model.TContextWrap;
+
+/**
+ * Intent工具类用于生成拍照、
+ * 从相册选择照片，裁剪照片所需的Intent
+ * Author: JPH
+ * Date: 2016/6/7 0007 13:41
+ */
+public class IntentUtils {
+    private static final String TAG = IntentUtils.class.getName();
+
+    /**
+     *  获取图片多选的Intent
+     * @param limit 最多选择图片张数的限制
+     * */
+    public static Intent getPickMultipleIntent(TContextWrap contextWrap, int limit){
+        Intent intent = new Intent(contextWrap.getActivity(), AlbumSelectActivity.class);
+        intent.putExtra(Constants.INTENT_EXTRA_LIMIT, limit>0? limit:1);
+        return intent;
+    }
+
+    /**
+     * 获取裁剪照片的Intent
+     * @param targetUri 要裁剪的照片
+     * @param outPutUri 裁剪完成的照片
+     * @param options 裁剪配置
+     * @return
+     */
+    public static Intent getCropIntentWithOtherApp(Uri targetUri, Uri outPutUri, CropOptions options) {
+        boolean isReturnData = TUtils.isReturnData();
+        Log.w(TAG, "getCaptureIntentWithCrop:isReturnData:" + (isReturnData ? "true" : "false"));
+        Intent intent = new Intent("com.android.camera.action.CROP");
+        intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
+        intent.setDataAndType(targetUri, "image/*");
+        intent.putExtra("crop", "true");
+        if (options.getAspectX()*options.getAspectY()>0){
+            intent.putExtra("aspectX", options.getAspectX());
+            intent.putExtra("aspectY", options.getAspectY());
+        }
+        if (options.getOutputX()*options.getOutputY()>0){
+            intent.putExtra("outputX", options.getOutputX());
+            intent.putExtra("outputY", options.getOutputY());
+        }
+        intent.putExtra("scale", true);
+        intent.putExtra(MediaStore.EXTRA_OUTPUT, outPutUri);
+        intent.putExtra("return-data", isReturnData);
+        intent.putExtra("outputFormat", Bitmap.CompressFormat.JPEG.toString());
+        intent.putExtra("noFaceDetection", true); // no face detection
+        return intent;
+    }
+
+    /**
+     * 获取拍照的Intent
+     * @return
+     */
+    public static Intent getCaptureIntent(Uri outPutUri) {
+        Intent intent = new Intent();
+        intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
+        intent.setAction(MediaStore.ACTION_IMAGE_CAPTURE);//设置Action为拍照
+        intent.putExtra(MediaStore.EXTRA_OUTPUT, outPutUri);//将拍取的照片保存到指定URI
+        return intent;
+    }
+    /**
+     * 获取选择照片的Intent
+     * @return
+     */
+    public static Intent getPickIntentWithGallery() {
+        Intent intent = new Intent();
+        intent.setAction(Intent.ACTION_PICK);//Pick an item from the data
+        intent.setType("image/*");//从所有图片中进行选择
+        return intent;
+    }
+    /**
+     * 获取从文件中选择照片的Intent
+     * @return
+     */
+    public static Intent getPickIntentWithDocuments() {
+        Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
+        intent.setType("image/*");
+        return intent;
+    }
+}
Index: app/src/main/java/com/example/anonymous/greendao/SmsApiDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/anonymous/greendao/SmsApiDao.java	(revision )
+++ app/src/main/java/com/example/anonymous/greendao/SmsApiDao.java	(revision )
@@ -0,0 +1,185 @@
+package com.example.anonymous.greendao;
+
+import android.database.Cursor;
+import android.database.sqlite.SQLiteStatement;
+
+import org.greenrobot.greendao.AbstractDao;
+import org.greenrobot.greendao.Property;
+import org.greenrobot.greendao.internal.DaoConfig;
+import org.greenrobot.greendao.database.Database;
+import org.greenrobot.greendao.database.DatabaseStatement;
+
+import com.b3ad.yuxie.myapplication.entity.SmsApi;
+
+// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
+/** 
+ * DAO for table "SMS_API".
+*/
+public class SmsApiDao extends AbstractDao<SmsApi, Long> {
+
+    public static final String TABLENAME = "SMS_API";
+
+    /**
+     * Properties of entity SmsApi.<br/>
+     * Can be used for QueryBuilder and for referencing column names.
+     */
+    public static class Properties {
+        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
+        public final static Property Type = new Property(1, String.class, "type", false, "TYPE");
+        public final static Property Url = new Property(2, String.class, "url", false, "URL");
+        public final static Property ParameterBefore = new Property(3, String.class, "parameterBefore", false, "PARAMETER_BEFORE");
+        public final static Property ParameterAfter = new Property(4, String.class, "parameterAfter", false, "PARAMETER_AFTER");
+        public final static Property ResultOk = new Property(5, String.class, "resultOk", false, "RESULT_OK");
+    }
+
+
+    public SmsApiDao(DaoConfig config) {
+        super(config);
+    }
+    
+    public SmsApiDao(DaoConfig config, DaoSession daoSession) {
+        super(config, daoSession);
+    }
+
+    /** Creates the underlying database table. */
+    public static void createTable(Database db, boolean ifNotExists) {
+        String constraint = ifNotExists? "IF NOT EXISTS ": "";
+        db.execSQL("CREATE TABLE " + constraint + "\"SMS_API\" (" + //
+                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
+                "\"TYPE\" TEXT," + // 1: type
+                "\"URL\" TEXT," + // 2: url
+                "\"PARAMETER_BEFORE\" TEXT," + // 3: parameterBefore
+                "\"PARAMETER_AFTER\" TEXT," + // 4: parameterAfter
+                "\"RESULT_OK\" TEXT);"); // 5: resultOk
+    }
+
+    /** Drops the underlying database table. */
+    public static void dropTable(Database db, boolean ifExists) {
+        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"SMS_API\"";
+        db.execSQL(sql);
+    }
+
+    @Override
+    protected final void bindValues(DatabaseStatement stmt, SmsApi entity) {
+        stmt.clearBindings();
+ 
+        Long id = entity.getId();
+        if (id != null) {
+            stmt.bindLong(1, id);
+        }
+ 
+        String type = entity.getType();
+        if (type != null) {
+            stmt.bindString(2, type);
+        }
+ 
+        String url = entity.getUrl();
+        if (url != null) {
+            stmt.bindString(3, url);
+        }
+ 
+        String parameterBefore = entity.getParameterBefore();
+        if (parameterBefore != null) {
+            stmt.bindString(4, parameterBefore);
+        }
+ 
+        String parameterAfter = entity.getParameterAfter();
+        if (parameterAfter != null) {
+            stmt.bindString(5, parameterAfter);
+        }
+ 
+        String resultOk = entity.getResultOk();
+        if (resultOk != null) {
+            stmt.bindString(6, resultOk);
+        }
+    }
+
+    @Override
+    protected final void bindValues(SQLiteStatement stmt, SmsApi entity) {
+        stmt.clearBindings();
+ 
+        Long id = entity.getId();
+        if (id != null) {
+            stmt.bindLong(1, id);
+        }
+ 
+        String type = entity.getType();
+        if (type != null) {
+            stmt.bindString(2, type);
+        }
+ 
+        String url = entity.getUrl();
+        if (url != null) {
+            stmt.bindString(3, url);
+        }
+ 
+        String parameterBefore = entity.getParameterBefore();
+        if (parameterBefore != null) {
+            stmt.bindString(4, parameterBefore);
+        }
+ 
+        String parameterAfter = entity.getParameterAfter();
+        if (parameterAfter != null) {
+            stmt.bindString(5, parameterAfter);
+        }
+ 
+        String resultOk = entity.getResultOk();
+        if (resultOk != null) {
+            stmt.bindString(6, resultOk);
+        }
+    }
+
+    @Override
+    public Long readKey(Cursor cursor, int offset) {
+        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
+    }    
+
+    @Override
+    public SmsApi readEntity(Cursor cursor, int offset) {
+        SmsApi entity = new SmsApi( //
+            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
+            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // type
+            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // url
+            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // parameterBefore
+            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // parameterAfter
+            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5) // resultOk
+        );
+        return entity;
+    }
+     
+    @Override
+    public void readEntity(Cursor cursor, SmsApi entity, int offset) {
+        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
+        entity.setType(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
+        entity.setUrl(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
+        entity.setParameterBefore(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
+        entity.setParameterAfter(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
+        entity.setResultOk(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
+     }
+    
+    @Override
+    protected final Long updateKeyAfterInsert(SmsApi entity, long rowId) {
+        entity.setId(rowId);
+        return rowId;
+    }
+    
+    @Override
+    public Long getKey(SmsApi entity) {
+        if(entity != null) {
+            return entity.getId();
+        } else {
+            return null;
+        }
+    }
+
+    @Override
+    public boolean hasKey(SmsApi entity) {
+        return entity.getId() != null;
+    }
+
+    @Override
+    protected final boolean isEntityUpdateable() {
+        return true;
+    }
+    
+}
Index: baselib/src/main/java/com/baselib/listview/ItemViewDelegateManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/listview/ItemViewDelegateManager.java	(revision )
+++ baselib/src/main/java/com/baselib/listview/ItemViewDelegateManager.java	(revision )
@@ -0,0 +1,131 @@
+package com.baselib.listview;
+
+import android.support.v4.util.SparseArrayCompat;
+
+public class ItemViewDelegateManager<T>
+{
+    SparseArrayCompat<ItemViewDelegate<T>> delegates = new SparseArrayCompat();
+
+    public int getItemViewDelegateCount()
+    {
+        return delegates.size();
+    }
+
+    public ItemViewDelegateManager<T> addDelegate(ItemViewDelegate<T> delegate)
+    {
+        int viewType = delegates.size();
+        if (delegate != null)
+        {
+            delegates.put(viewType, delegate);
+            viewType++;
+        }
+        return this;
+    }
+
+    public ItemViewDelegateManager<T> addDelegate(int viewType, ItemViewDelegate<T> delegate)
+    {
+        if (delegates.get(viewType) != null)
+        {
+            throw new IllegalArgumentException(
+                    "An ItemViewDelegate is already registered for the viewType = "
+                            + viewType
+                            + ". Already registered ItemViewDelegate is "
+                            + delegates.get(viewType));
+        }
+        delegates.put(viewType, delegate);
+        return this;
+    }
+
+    public ItemViewDelegateManager<T> removeDelegate(ItemViewDelegate<T> delegate)
+    {
+        if (delegate == null)
+        {
+            throw new NullPointerException("ItemViewDelegate is null");
+        }
+        int indexToRemove = delegates.indexOfValue(delegate);
+
+        if (indexToRemove >= 0)
+        {
+            delegates.removeAt(indexToRemove);
+        }
+        return this;
+    }
+
+    public ItemViewDelegateManager<T> removeDelegate(int itemType)
+    {
+        int indexToRemove = delegates.indexOfKey(itemType);
+
+        if (indexToRemove >= 0)
+        {
+            delegates.removeAt(indexToRemove);
+        }
+        return this;
+    }
+
+    public int getItemViewType(T item, int position)
+    {
+        int delegatesCount = delegates.size();
+        for (int i = delegatesCount - 1; i >= 0; i--)
+        {
+            ItemViewDelegate<T> delegate = delegates.valueAt(i);
+            if (delegate.isForViewType(item, position))
+            {
+                return delegates.keyAt(i);
+            }
+        }
+        throw new IllegalArgumentException(
+                "No ItemViewDelegate added that matches position=" + position + " in data source");
+    }
+
+    public void convert(ViewHolder holder, T item, int position)
+    {
+        int delegatesCount = delegates.size();
+        for (int i = 0; i < delegatesCount; i++)
+        {
+            ItemViewDelegate<T> delegate = delegates.valueAt(i);
+
+            if (delegate.isForViewType(item, position))
+            {
+                delegate.convert(holder, item, position);
+                return;
+            }
+        }
+        throw new IllegalArgumentException(
+                "No ItemViewDelegateManager added that matches position=" + position + " in data source");
+    }
+
+    public int getItemViewLayoutId(int viewType)
+    {
+        return delegates.get(viewType).getItemViewLayoutId();
+    }
+
+    public int getItemViewType(ItemViewDelegate itemViewDelegate)
+    {
+        return delegates.indexOfValue(itemViewDelegate);
+    }
+
+    public ItemViewDelegate getItemViewDelegate(T item, int position)
+    {
+        int delegatesCount = delegates.size();
+        for (int i = delegatesCount - 1; i >= 0; i--)
+        {
+            ItemViewDelegate<T> delegate = delegates.valueAt(i);
+            if (delegate.isForViewType(item, position))
+            {
+                return delegate;
+            }
+        }
+        throw new IllegalArgumentException(
+                "No ItemViewDelegate added that matches position=" + position + " in data source");
+    }
+
+    public int getItemViewLayoutId(T item, int position)
+    {
+        return getItemViewDelegate(item,position).getItemViewLayoutId();
+    }
+
+    public ItemViewDelegate getItemViewDelegate(int viewType)
+    {
+        return delegates.get(viewType);
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/ZipUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/ZipUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/ZipUtils.java	(revision )
@@ -0,0 +1,347 @@
+package com.baselib.utilcode.util;
+
+import java.io.BufferedInputStream;
+import java.io.BufferedOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.util.ArrayList;
+import java.util.Enumeration;
+import java.util.List;
+import java.util.zip.ZipEntry;
+import java.util.zip.ZipFile;
+import java.util.zip.ZipOutputStream;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/27
+ *     desc  : 压缩相关工具类
+ * </pre>
+ */
+public final class ZipUtils {
+
+    private static final int BUFFER_LEN = 8192;
+
+    private ZipUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 压缩文件
+     *
+     * @param resFilePath 待压缩文件路径
+     * @param zipFilePath 压缩文件路径
+     * @return {@code true}: 压缩成功<br>{@code false}: 压缩失败
+     * @throws IOException IO错误时抛出
+     */
+    public static boolean zipFile(final String resFilePath,
+                                  final String zipFilePath)
+            throws IOException {
+        return zipFile(resFilePath, zipFilePath, null);
+    }
+
+    /**
+     * 压缩文件
+     *
+     * @param resFilePath 待压缩文件路径
+     * @param zipFilePath 压缩文件路径
+     * @param comment     压缩文件的注释
+     * @return {@code true}: 压缩成功<br>{@code false}: 压缩失败
+     * @throws IOException IO错误时抛出
+     */
+    public static boolean zipFile(final String resFilePath,
+                                  final String zipFilePath,
+                                  final String comment)
+            throws IOException {
+        return zipFile(getFileByPath(resFilePath), getFileByPath(zipFilePath), comment);
+    }
+
+    /**
+     * 压缩文件
+     *
+     * @param resFile 待压缩文件
+     * @param zipFile 压缩文件
+     * @return {@code true}: 压缩成功<br>{@code false}: 压缩失败
+     * @throws IOException IO错误时抛出
+     */
+    public static boolean zipFile(final File resFile,
+                                  final File zipFile)
+            throws IOException {
+        return zipFile(resFile, zipFile, null);
+    }
+
+    /**
+     * 压缩文件
+     *
+     * @param resFile 待压缩文件
+     * @param zipFile 压缩文件
+     * @param comment 压缩文件的注释
+     * @return {@code true}: 压缩成功<br>{@code false}: 压缩失败
+     * @throws IOException IO错误时抛出
+     */
+    public static boolean zipFile(final File resFile,
+                                  final File zipFile,
+                                  final String comment)
+            throws IOException {
+        if (resFile == null || zipFile == null) return false;
+        ZipOutputStream zos = null;
+        try {
+            zos = new ZipOutputStream(new FileOutputStream(zipFile));
+            return zipFile(resFile, "", zos, comment);
+        } finally {
+            if (zos != null) {
+                CloseUtils.closeIO(zos);
+            }
+        }
+    }
+
+    /**
+     * 压缩文件
+     *
+     * @param resFile  待压缩文件
+     * @param rootPath 相对于压缩文件的路径
+     * @param zos      压缩文件输出流
+     * @param comment  压缩文件的注释
+     * @return {@code true}: 压缩成功<br>{@code false}: 压缩失败
+     * @throws IOException IO错误时抛出
+     */
+    private static boolean zipFile(final File resFile,
+                                   String rootPath,
+                                   final ZipOutputStream zos,
+                                   final String comment)
+            throws IOException {
+        rootPath = rootPath + (isSpace(rootPath) ? "" : File.separator) + resFile.getName();
+        if (resFile.isDirectory()) {
+            File[] fileList = resFile.listFiles();
+            // 如果是空文件夹那么创建它，我把'/'换为File.separator测试就不成功，eggPain
+            if (fileList == null || fileList.length <= 0) {
+                ZipEntry entry = new ZipEntry(rootPath + '/');
+                if (!isSpace(comment)) entry.setComment(comment);
+                zos.putNextEntry(entry);
+                zos.closeEntry();
+            } else {
+                for (File file : fileList) {
+                    // 如果递归返回false则返回false
+                    if (!zipFile(file, rootPath, zos, comment)) return false;
+                }
+            }
+        } else {
+            InputStream is = null;
+            try {
+                is = new BufferedInputStream(new FileInputStream(resFile));
+                ZipEntry entry = new ZipEntry(rootPath);
+                if (!isSpace(comment)) entry.setComment(comment);
+                zos.putNextEntry(entry);
+                byte buffer[] = new byte[BUFFER_LEN];
+                int len;
+                while ((len = is.read(buffer, 0, BUFFER_LEN)) != -1) {
+                    zos.write(buffer, 0, len);
+                }
+                zos.closeEntry();
+            } finally {
+                CloseUtils.closeIO(is);
+            }
+        }
+        return true;
+    }
+
+    /**
+     * 解压文件
+     *
+     * @param zipFilePath 待解压文件路径
+     * @param destDirPath 目标目录路径
+     * @return 文件链表
+     * @throws IOException IO错误时抛出
+     */
+    public static List<File> unzipFile(final String zipFilePath,
+                                       final String destDirPath)
+            throws IOException {
+        return unzipFileByKeyword(zipFilePath, destDirPath, null);
+    }
+
+    /**
+     * 解压文件
+     *
+     * @param zipFile 待解压文件
+     * @param destDir 目标目录
+     * @return 文件链表
+     * @throws IOException IO错误时抛出
+     */
+    public static List<File> unzipFile(final File zipFile,
+                                       final File destDir)
+            throws IOException {
+        return unzipFileByKeyword(zipFile, destDir, null);
+    }
+
+    /**
+     * 解压带有关键字的文件
+     *
+     * @param zipFilePath 待解压文件路径
+     * @param destDirPath 目标目录路径
+     * @param keyword     关键字
+     * @return 返回带有关键字的文件链表
+     * @throws IOException IO错误时抛出
+     */
+    public static List<File> unzipFileByKeyword(final String zipFilePath,
+                                                final String destDirPath,
+                                                final String keyword)
+            throws IOException {
+        return unzipFileByKeyword(getFileByPath(zipFilePath), getFileByPath(destDirPath), keyword);
+    }
+
+    /**
+     * 解压带有关键字的文件
+     *
+     * @param zipFile 待解压文件
+     * @param destDir 目标目录
+     * @param keyword 关键字
+     * @return 返回带有关键字的文件链表
+     * @throws IOException IO错误时抛出
+     */
+    public static List<File> unzipFileByKeyword(final File zipFile,
+                                                final File destDir,
+                                                final String keyword)
+            throws IOException {
+        if (zipFile == null || destDir == null) return null;
+        List<File> files = new ArrayList<>();
+        ZipFile zf = new ZipFile(zipFile);
+        Enumeration<?> entries = zf.entries();
+        if (isSpace(keyword)) {
+            while (entries.hasMoreElements()) {
+                ZipEntry entry = ((ZipEntry) entries.nextElement());
+                String entryName = entry.getName();
+                if (!unzipChildFile(destDir, files, zf, entry, entryName)) return files;
+            }
+        } else {
+            while (entries.hasMoreElements()) {
+                ZipEntry entry = ((ZipEntry) entries.nextElement());
+                String entryName = entry.getName();
+                if (entryName.contains(keyword)) {
+                    if (!unzipChildFile(destDir, files, zf, entry, entryName)) return files;
+                }
+            }
+        }
+        return files;
+    }
+
+    private static boolean unzipChildFile(File destDir, List<File> files, ZipFile zf, ZipEntry entry, String entryName) throws IOException {
+        String filePath = destDir + File.separator + entryName;
+        File file = new File(filePath);
+        files.add(file);
+        if (entry.isDirectory()) {
+            if (!createOrExistsDir(file)) return false;
+        } else {
+            if (!createOrExistsFile(file)) return false;
+            InputStream in = null;
+            OutputStream out = null;
+            try {
+                in = new BufferedInputStream(zf.getInputStream(entry));
+                out = new BufferedOutputStream(new FileOutputStream(file));
+                byte buffer[] = new byte[BUFFER_LEN];
+                int len;
+                while ((len = in.read(buffer)) != -1) {
+                    out.write(buffer, 0, len);
+                }
+            } finally {
+                CloseUtils.closeIO(in, out);
+            }
+        }
+        return true;
+    }
+
+    /**
+     * 获取压缩文件中的文件路径链表
+     *
+     * @param zipFilePath 压缩文件路径
+     * @return 压缩文件中的文件路径链表
+     * @throws IOException IO错误时抛出
+     */
+    public static List<String> getFilesPath(final String zipFilePath)
+            throws IOException {
+        return getFilesPath(getFileByPath(zipFilePath));
+    }
+
+    /**
+     * 获取压缩文件中的文件路径链表
+     *
+     * @param zipFile 压缩文件
+     * @return 压缩文件中的文件路径链表
+     * @throws IOException IO错误时抛出
+     */
+    public static List<String> getFilesPath(final File zipFile)
+            throws IOException {
+        if (zipFile == null) return null;
+        List<String> paths = new ArrayList<>();
+        Enumeration<?> entries = new ZipFile(zipFile).entries();
+        while (entries.hasMoreElements()) {
+            paths.add(((ZipEntry) entries.nextElement()).getName());
+        }
+        return paths;
+    }
+
+    /**
+     * 获取压缩文件中的注释链表
+     *
+     * @param zipFilePath 压缩文件路径
+     * @return 压缩文件中的注释链表
+     * @throws IOException IO错误时抛出
+     */
+    public static List<String> getComments(final String zipFilePath)
+            throws IOException {
+        return getComments(getFileByPath(zipFilePath));
+    }
+
+    /**
+     * 获取压缩文件中的注释链表
+     *
+     * @param zipFile 压缩文件
+     * @return 压缩文件中的注释链表
+     * @throws IOException IO错误时抛出
+     */
+    public static List<String> getComments(final File zipFile)
+            throws IOException {
+        if (zipFile == null) return null;
+        List<String> comments = new ArrayList<>();
+        Enumeration<?> entries = new ZipFile(zipFile).entries();
+        while (entries.hasMoreElements()) {
+            ZipEntry entry = ((ZipEntry) entries.nextElement());
+            comments.add(entry.getComment());
+        }
+        return comments;
+    }
+
+    private static boolean createOrExistsDir(final File file) {
+        return file != null && (file.exists() ? file.isDirectory() : file.mkdirs());
+    }
+
+    private static boolean createOrExistsFile(final File file) {
+        if (file == null) return false;
+        if (file.exists()) return file.isFile();
+        if (!createOrExistsDir(file.getParentFile())) return false;
+        try {
+            return file.createNewFile();
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    private static File getFileByPath(final String filePath) {
+        return isSpace(filePath) ? null : new File(filePath);
+    }
+
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+}
Index: baselib/src/main/java/com/baselib/commonutils/FormatUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/commonutils/FormatUtil.java	(revision )
+++ baselib/src/main/java/com/baselib/commonutils/FormatUtil.java	(revision )
@@ -0,0 +1,25 @@
+package com.baselib.commonutils;
+
+import android.text.TextUtils;
+
+/**
+ * 作者: liuhuaqian on 2017/9/8.
+ * 验证手机格式
+ */
+
+public class FormatUtil {
+    /**
+     * 验证手机格式
+     */
+    public static boolean isMobileNO(String mobiles) {
+		/*
+	    移动：134、135、136、137、138、139、150、151、157(TD)、158、159、187、188、178
+	    联通：130、131、132、152、155、156、185、186、176
+	    电信：133、153、180、189、（1349卫通）、177
+	    总结起来就是第一位必定为1，第二位必定为3或5或8或7，其他位置的可以为0-9
+		 */
+        String telRegex = "[1][3578]\\d{9}";//"[1]"代表第1位为数字1，"[358]"代表第二位可以为3、5、8中的一个，"\\d{9}"代表后面是可以是0～9的数字，有9位。
+        if (TextUtils.isEmpty(mobiles)) return false;
+        else return mobiles.matches(telRegex);
+    }
+}
Index: baselib/src/main/res/layout/layout_picture_selector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/layout/layout_picture_selector.xml	(revision )
+++ baselib/src/main/res/layout/layout_picture_selector.xml	(revision )
@@ -0,0 +1,61 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="fill_parent"
+    android:layout_height="wrap_content"
+    android:gravity="center_horizontal"
+    android:orientation="vertical">
+
+    <LinearLayout
+        android:id="@+id/pop_layout"
+        android:layout_width="fill_parent"
+        android:layout_height="wrap_content"
+        android:layout_alignParentBottom="true"
+        android:background="#444"
+        android:gravity="center_horizontal"
+        android:orientation="vertical">
+
+        <Button
+            android:id="@+id/picture_selector_take_photo_btn"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="10dip"
+            android:layout_marginRight="10dip"
+            android:layout_marginTop="10dp"
+            android:background="#4d69ff"
+            android:padding="10dp"
+            android:text="拍照"
+            android:textColor="#CEC9E7"
+            android:textSize="18sp"
+            android:textStyle="bold" />
+
+        <Button
+            android:id="@+id/picture_selector_pick_picture_btn"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginLeft="10dip"
+            android:layout_marginRight="10dip"
+            android:layout_marginTop="5dp"
+            android:background="#4d69ff"
+            android:padding="10dp"
+            android:text="从相册选择"
+            android:textColor="#CEC9E7"
+            android:textSize="18sp"
+            android:textStyle="bold" />
+
+        <Button
+            android:id="@+id/picture_selector_cancel_btn"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="15dip"
+            android:layout_marginLeft="10dip"
+            android:layout_marginRight="10dip"
+            android:layout_marginTop="20dp"
+            android:background="@android:color/white"
+            android:padding="10dp"
+            android:text="取消"
+            android:textColor="#373447"
+            android:textSize="18sp"
+            android:textStyle="bold" />
+    </LinearLayout>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/b3ad/yuxie/myapplication/retrofit/GitHubApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/retrofit/GitHubApi.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/retrofit/GitHubApi.java	(revision )
@@ -0,0 +1,84 @@
+package com.b3ad.yuxie.myapplication.retrofit;
+
+
+import com.b3ad.yuxie.myapplication.music.RetrofitBean;
+
+import java.util.List;
+import java.util.Map;
+
+import okhttp3.ResponseBody;
+import retrofit2.Call;
+import retrofit2.http.Field;
+import retrofit2.http.FieldMap;
+import retrofit2.http.FormUrlEncoded;
+import retrofit2.http.GET;
+import retrofit2.http.Headers;
+import retrofit2.http.POST;
+import retrofit2.http.Path;
+import retrofit2.http.Query;
+import retrofit2.http.QueryMap;
+import retrofit2.http.Url;
+
+
+/**
+ * Created by Administrator on 2017/7/26.
+ */
+
+public interface GitHubApi {
+
+    //@GET()get请求("存放url")一般是不以"/"开头
+    //@Headers()添加请求头
+    //@Path请求路径
+    //@QueryMap 请求map
+    //@Query 请求参数
+    //@Url 声明传入完整的URL(2.0新增)
+
+//    @Query、@QueryMap：用于Http Get请求传递参数
+//    @Field,@FieldMap：用于Post方式传递参数,需要在请求接口方法上添加@FormUrlEncoded,即以表单的方式传递参数
+//    @Body：用于Post,根据转换方式将实例对象转化为对应字符串传递参数.比如Retrofit添加GsonConverterFactory则是将body转化为gson字符串进行传递
+//    @Path：用于URL上占位符
+//    @Part：配合@Multipart使用,一般用于文件上传
+//    @Header：添加http header
+//    @Headers：跟@Header作用一样,只是使用方式不一样,@Header是作为请求方法的参数传入,@Headers是以固定方式直接添加到请求方法上
+
+    //返回集合已经解决json数据
+    @GET("repos/{owner}/{repo}/contributors")
+    Call<List<Contributor>> contributorsBySimpleGetList(@Path("owner") String owner, @Path("repo") String repo);
+
+
+    @Headers({
+            "Accept: application/vnd.github.v3.full+json",
+            "User-Agent: RetrofitBean-Sample-App",
+            "name:ljd"
+    })
+    @GET("repos/{owner}/{repo}/contributors")
+    Call<ResponseBody> contributorsBySimpleGetString(@Path("owner") String owner, @Path("repo") String repo);
+
+
+    @GET("search/repositories")
+    Call<RetrofitBean> queryRetrofitByGetCallMap(@QueryMap Map<String, String> map);
+
+    @GET("search/repositories")
+    Call<RetrofitBean> queryRetrofitByGetCall(@Query("q") String owner,
+                                              @Query("since") String time,
+                                              @Query("page") int page,
+                                              @Query("per_page") int per_Page);
+    @GET
+    Call<ResponseBody> queryRetrofitByGetCall(@Url String url);
+
+
+    @FormUrlEncoded
+    @POST("user/edit")
+    Call<User> updateUser(@FieldMap Map<String,String> fieldMap);
+
+
+    @FormUrlEncoded
+    @POST("user/edit")
+    Call<User> updateUser(@Field("first_name") String firstName,@Field("last_name") String lastName);
+
+//    @Multipart
+//    @PUT("/user/photo")
+//    User updateUser(@Part("photo") TypedFile photo, @Part("description") TypedString description);
+
+
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/EN.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/EN.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/EN.java	(revision )
@@ -0,0 +1,30 @@
+package com.baselib.ui.widget.mydatepicker;
+
+/**
+ * 英文的默认实现类
+ * 如果你想实现更多的语言请参考Language{@link DPLManager}
+ * 作者: liuhuaqian on 2017/9/23.
+ */
+
+public class EN extends DPLManager {
+    @Override
+    public String[] titleMonth() {
+        return new String[]{"January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
+    }
+
+    @Override
+    public String titleEnsure() {
+        return "Ok";
+    }
+
+    @Override
+    public String titleBC() {
+        return "B.C.";
+    }
+
+    @Override
+    public String[] titleWeek() {
+        return new String[]{"MON", "TUE", "WED", "THU", "FRI", "SAT", "SUN"};
+    }
+}
+
Index: baselib/src/main/res/drawable/triangle_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/drawable/triangle_bg.xml	(revision )
+++ baselib/src/main/res/drawable/triangle_bg.xml	(revision )
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <rotate
+            android:fromDegrees="45"
+            android:toDegrees="45"
+            android:pivotX="-40%"
+            android:pivotY="87%">
+            <shape android:shape="rectangle">
+                <solid android:color="@color/navigation_bar_bg" />
+                <stroke
+                    android:width="1px"
+                    android:color="@color/navigation_bar_bg" />
+            </shape>
+        </rotate>
+    </item>
+</layer-list>
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPUSCalendar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPUSCalendar.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPUSCalendar.java	(revision )
@@ -0,0 +1,79 @@
+package com.baselib.ui.widget.mydatepicker;
+
+import android.text.TextUtils;
+
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 美国月历
+ */
+
+public class DPUSCalendar  extends DPCalendar {
+    private static final String[][] FESTIVAL_G = {
+            {"New Year"},
+            {"Lincoln's Birthday", "St.Valentine's Day", "Washington's Birthday"},
+            {"St.Patrick's Day"},
+            {"All Fools' Day"},
+            {},
+            {"Flag Day"},
+            {"Independence Day"},
+            {},
+            {},
+            {"Columbus Day"},
+            {"Halloween"},
+            {"Christmas"}};
+
+    private static final int[][] FESTIVAL_G_DATE = {
+            {1},
+            {12, 14, 18},
+            {17},
+            {1},
+            {},
+            {14},
+            {4},
+            {},
+            {},
+            {12},
+            {1},
+            {25}};
+    private static final String[][] HOLIDAY = {{"1"}, {""}, {""}, {""}, {"24", "25", "26"}, {""}, {"4", "5", "6"}, {"30"}, {"1", "2"}, {""}, {"27", "28", "29", "30"}, {"25", "26", "27"}};
+
+    @Override
+    public String[][] buildMonthFestival(int year, int month) {
+        String[][] gregorianMonth = buildMonthG(year, month);
+        String tmp[][] = new String[6][7];
+        for (int i = 0; i < tmp.length; i++) {
+            for (int j = 0; j < tmp[0].length; j++) {
+                tmp[i][j] = "";
+                String day = gregorianMonth[i][j];
+                if (!TextUtils.isEmpty(day)) {
+                    tmp[i][j] = getFestivalG(month, Integer.valueOf(day));
+                }
+            }
+        }
+        return tmp;
+    }
+
+    @Override
+    public Set<String> buildMonthHoliday(int year, int month) {
+        Set<String> tmp = new HashSet<>();
+        if (year == 2015) {
+            Collections.addAll(tmp, HOLIDAY[month - 1]);
+        }
+        return tmp;
+    }
+
+    private String getFestivalG(int month, int day) {
+        String tmp = "";
+        int[] daysInMonth = FESTIVAL_G_DATE[month - 1];
+        for (int i = 0; i < daysInMonth.length; i++) {
+            if (day == daysInMonth[i]) {
+                tmp = FESTIVAL_G[month - 1][i];
+            }
+        }
+        return tmp;
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/ServiceUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/ServiceUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/ServiceUtils.java	(revision )
@@ -0,0 +1,159 @@
+package com.baselib.utilcode.util;
+
+import android.app.ActivityManager;
+import android.app.ActivityManager.RunningServiceInfo;
+import android.content.Context;
+import android.content.Intent;
+import android.content.ServiceConnection;
+
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/02
+ *     desc  : 服务相关工具类
+ * </pre>
+ */
+public final class ServiceUtils {
+
+    private ServiceUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 获取所有运行的服务
+     *
+     * @return 服务名集合
+     */
+    public static Set getAllRunningService() {
+        ActivityManager activityManager = (ActivityManager) Utils.getApp().getSystemService(Context.ACTIVITY_SERVICE);
+        List<RunningServiceInfo> info = activityManager.getRunningServices(0x7FFFFFFF);
+        Set<String> names = new HashSet<>();
+        if (info == null || info.size() == 0) return null;
+        for (RunningServiceInfo aInfo : info) {
+            names.add(aInfo.service.getClassName());
+        }
+        return names;
+    }
+
+    /**
+     * 启动服务
+     *
+     * @param className 完整包名的服务类名
+     */
+    public static void startService(final String className) {
+        try {
+            startService(Class.forName(className));
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * 启动服务
+     *
+     * @param cls 服务类
+     */
+    public static void startService(final Class<?> cls) {
+        Intent intent = new Intent(Utils.getApp(), cls);
+        Utils.getApp().startService(intent);
+    }
+
+    /**
+     * 停止服务
+     *
+     * @param className 完整包名的服务类名
+     * @return {@code true}: 停止成功<br>{@code false}: 停止失败
+     */
+    public static boolean stopService(final String className) {
+        try {
+            return stopService(Class.forName(className));
+        } catch (Exception e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    /**
+     * 停止服务
+     *
+     * @param cls 服务类
+     * @return {@code true}: 停止成功<br>{@code false}: 停止失败
+     */
+    public static boolean stopService(final Class<?> cls) {
+        Intent intent = new Intent(Utils.getApp(), cls);
+        return Utils.getApp().stopService(intent);
+    }
+
+    /**
+     * 绑定服务
+     *
+     * @param className 完整包名的服务类名
+     * @param conn      服务连接对象
+     * @param flags     绑定选项
+     *                  <ul>
+     *                  <li>{@link Context#BIND_AUTO_CREATE}</li>
+     *                  <li>{@link Context#BIND_DEBUG_UNBIND}</li>
+     *                  <li>{@link Context#BIND_NOT_FOREGROUND}</li>
+     *                  <li>{@link Context#BIND_ABOVE_CLIENT}</li>
+     *                  <li>{@link Context#BIND_ALLOW_OOM_MANAGEMENT}</li>
+     *                  <li>{@link Context#BIND_WAIVE_PRIORITY}</li>
+     *                  </ul>
+     */
+    public static void bindService(final String className, final ServiceConnection conn, final int flags) {
+        try {
+            bindService(Class.forName(className), conn, flags);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * 绑定服务
+     *
+     * @param cls   服务类
+     * @param conn  服务连接对象
+     * @param flags 绑定选项
+     *              <ul>
+     *              <li>{@link Context#BIND_AUTO_CREATE}</li>
+     *              <li>{@link Context#BIND_DEBUG_UNBIND}</li>
+     *              <li>{@link Context#BIND_NOT_FOREGROUND}</li>
+     *              <li>{@link Context#BIND_ABOVE_CLIENT}</li>
+     *              <li>{@link Context#BIND_ALLOW_OOM_MANAGEMENT}</li>
+     *              <li>{@link Context#BIND_WAIVE_PRIORITY}</li>
+     *              </ul>
+     */
+    public static void bindService(final Class<?> cls, final ServiceConnection conn, final int flags) {
+        Intent intent = new Intent(Utils.getApp(), cls);
+        Utils.getApp().bindService(intent, conn, flags);
+    }
+
+    /**
+     * 解绑服务
+     *
+     * @param conn 服务连接对象
+     */
+    public static void unbindService(final ServiceConnection conn) {
+        Utils.getApp().unbindService(conn);
+    }
+
+    /**
+     * 判断服务是否运行
+     *
+     * @param className 完整包名的服务类名
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isServiceRunning(final String className) {
+        ActivityManager activityManager = (ActivityManager) Utils.getApp().getSystemService(Context.ACTIVITY_SERVICE);
+        List<RunningServiceInfo> info = activityManager.getRunningServices(0x7FFFFFFF);
+        if (info == null || info.size() == 0) return false;
+        for (RunningServiceInfo aInfo : info) {
+            if (className.equals(aInfo.service.getClassName())) return true;
+        }
+        return false;
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/retrofit/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/retrofit/User.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/retrofit/User.java	(revision )
@@ -0,0 +1,26 @@
+package com.b3ad.yuxie.myapplication.retrofit;
+
+/**
+ * Created by Administrator on 2017/7/27.
+ */
+
+public class User {
+    private String first_name;
+    private String last_name;
+
+    public String getFirst_name() {
+        return first_name;
+    }
+
+    public void setFirst_name(String first_name) {
+        this.first_name = first_name;
+    }
+
+    public String getLast_name() {
+        return last_name;
+    }
+
+    public void setLast_name(String last_name) {
+        this.last_name = last_name;
+    }
+}
Index: baselib/src/main/java/com/baselib/listview/ItemViewDelegate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/listview/ItemViewDelegate.java	(revision )
+++ baselib/src/main/java/com/baselib/listview/ItemViewDelegate.java	(revision )
@@ -0,0 +1,11 @@
+package com.baselib.listview;
+
+public interface ItemViewDelegate<T> {
+
+    public abstract int getItemViewLayoutId();
+
+    public abstract boolean isForViewType(T item, int position);
+
+    public abstract void convert(ViewHolder holder, T t, int position);
+
+}
Index: baselib/src/main/java/com/baselib/takephoto/model/MultipleCrop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/model/MultipleCrop.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/model/MultipleCrop.java	(revision )
@@ -0,0 +1,82 @@
+package com.baselib.takephoto.model;
+
+import android.app.Activity;
+import android.net.Uri;
+import com.baselib.takephoto.uitl.TImageFiles;
+import com.baselib.takephoto.uitl.TUtils;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.Map;
+
+/**
+ * Author: JPH
+ * Date: 2016/8/11 17:01
+ */
+public class MultipleCrop {
+    private ArrayList<Uri> uris;
+    private ArrayList<Uri> outUris;
+    private ArrayList<TImage>tImages;
+    private TImage.FromType fromType;
+    public boolean hasFailed;//是否有裁切失败的标识
+    public static MultipleCrop of(ArrayList<Uri> uris,Activity activity, TImage.FromType fromType) throws TException {
+        return new MultipleCrop(uris,activity, fromType);
+    }
+    public static MultipleCrop of(ArrayList<Uri> uris,ArrayList<Uri>outUris, TImage.FromType fromType){
+        return new MultipleCrop(uris,outUris, fromType);
+    }
+    private MultipleCrop(ArrayList<Uri> uris,Activity activity, TImage.FromType fromType) throws TException {
+        this.uris=uris;
+        ArrayList<Uri>outUris=new ArrayList<>();
+        for (Uri uri:uris){
+            outUris.add(Uri.fromFile(TImageFiles.getTempFile(activity,uri)));//生成临时裁切输出路径
+        }
+        this.outUris=outUris;
+        this.tImages= TUtils.getTImagesWithUris(outUris, fromType);
+        this.fromType = fromType;
+    }
+    private MultipleCrop(ArrayList<Uri> uris,ArrayList<Uri>outUris, TImage.FromType fromType) {
+        this.uris=uris;
+        this.outUris=outUris;
+        this.tImages= TUtils.getTImagesWithUris(outUris, fromType);
+        this.fromType = fromType;
+    }
+
+    public ArrayList<Uri> getUris() {
+        return uris;
+    }
+
+    public void setUris(ArrayList<Uri> uris) {
+        this.uris = uris;
+    }
+
+    public ArrayList<Uri> getOutUris() {
+        return outUris;
+    }
+
+    public void setOutUris(ArrayList<Uri> outUris) {
+        this.outUris = outUris;
+    }
+
+    public ArrayList<TImage> gettImages() {
+        return tImages;
+    }
+
+    public void settImages(ArrayList<TImage> tImages) {
+        this.tImages = tImages;
+    }
+
+    /**
+     * 为被裁切的图片设置已被裁切的标识
+     * @param uri 被裁切的图片
+     * @return 该图片是否是最后一张
+     */
+    public Map setCropWithUri(Uri uri,boolean cropped){
+        if(!cropped)hasFailed=true;
+        int index=outUris.indexOf(uri);
+        tImages.get(index).setCropped(cropped);
+        Map result=new HashMap();
+        result.put("index",index);
+        result.put("isLast",index==outUris.size()-1? true:false);
+        return result;
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/music/RetrofitBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/music/RetrofitBean.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/music/RetrofitBean.java	(revision )
@@ -0,0 +1,913 @@
+package com.b3ad.yuxie.myapplication.music;
+
+import java.util.List;
+
+/**
+ * Created by Administrator on 2017/7/26.
+ */
+
+public class RetrofitBean {
+
+    private int total_count;
+
+    private boolean incomplete_results;
+
+    private List<Items> items;
+
+    public void setTotal_count(int total_count) {
+        this.total_count = total_count;
+    }
+
+    public int getTotal_count() {
+        return this.total_count;
+    }
+
+    public void setIncomplete_results(boolean incomplete_results) {
+        this.incomplete_results = incomplete_results;
+    }
+
+    public boolean getIncomplete_results() {
+        return this.incomplete_results;
+    }
+
+    public void setItems(List<Items> items) {
+        this.items = items;
+    }
+
+    public List<Items> getItems() {
+        return this.items;
+    }
+
+    public static class Owner {
+        private String login;
+
+        private int id;
+
+        private String avatar_url;
+
+        private String gravatar_id;
+
+        private String url;
+
+        private String html_url;
+
+        private String followers_url;
+
+        private String following_url;
+
+        private String gists_url;
+
+        private String starred_url;
+
+        private String subscriptions_url;
+
+        private String organizations_url;
+
+        private String repos_url;
+
+        private String events_url;
+
+        private String received_events_url;
+
+        private String type;
+
+        private boolean site_admin;
+
+        public void setLogin(String login) {
+            this.login = login;
+        }
+
+        public String getLogin() {
+            return this.login;
+        }
+
+        public void setId(int id) {
+            this.id = id;
+        }
+
+        public int getId() {
+            return this.id;
+        }
+
+        public void setAvatar_url(String avatar_url) {
+            this.avatar_url = avatar_url;
+        }
+
+        public String getAvatar_url() {
+            return this.avatar_url;
+        }
+
+        public void setGravatar_id(String gravatar_id) {
+            this.gravatar_id = gravatar_id;
+        }
+
+        public String getGravatar_id() {
+            return this.gravatar_id;
+        }
+
+        public void setUrl(String url) {
+            this.url = url;
+        }
+
+        public String getUrl() {
+            return this.url;
+        }
+
+        public void setHtml_url(String html_url) {
+            this.html_url = html_url;
+        }
+
+        public String getHtml_url() {
+            return this.html_url;
+        }
+
+        public void setFollowers_url(String followers_url) {
+            this.followers_url = followers_url;
+        }
+
+        public String getFollowers_url() {
+            return this.followers_url;
+        }
+
+        public void setFollowing_url(String following_url) {
+            this.following_url = following_url;
+        }
+
+        public String getFollowing_url() {
+            return this.following_url;
+        }
+
+        public void setGists_url(String gists_url) {
+            this.gists_url = gists_url;
+        }
+
+        public String getGists_url() {
+            return this.gists_url;
+        }
+
+        public void setStarred_url(String starred_url) {
+            this.starred_url = starred_url;
+        }
+
+        public String getStarred_url() {
+            return this.starred_url;
+        }
+
+        public void setSubscriptions_url(String subscriptions_url) {
+            this.subscriptions_url = subscriptions_url;
+        }
+
+        public String getSubscriptions_url() {
+            return this.subscriptions_url;
+        }
+
+        public void setOrganizations_url(String organizations_url) {
+            this.organizations_url = organizations_url;
+        }
+
+        public String getOrganizations_url() {
+            return this.organizations_url;
+        }
+
+        public void setRepos_url(String repos_url) {
+            this.repos_url = repos_url;
+        }
+
+        public String getRepos_url() {
+            return this.repos_url;
+        }
+
+        public void setEvents_url(String events_url) {
+            this.events_url = events_url;
+        }
+
+        public String getEvents_url() {
+            return this.events_url;
+        }
+
+        public void setReceived_events_url(String received_events_url) {
+            this.received_events_url = received_events_url;
+        }
+
+        public String getReceived_events_url() {
+            return this.received_events_url;
+        }
+
+        public void setType(String type) {
+            this.type = type;
+        }
+
+        public String getType() {
+            return this.type;
+        }
+
+        public void setSite_admin(boolean site_admin) {
+            this.site_admin = site_admin;
+        }
+
+        public boolean getSite_admin() {
+            return this.site_admin;
+        }
+    }
+
+    public static class Items {
+        private int id;
+
+        private String name;
+
+        private String full_name;
+
+        private Owner owner;
+
+        private String html_url;
+
+        private String description;
+
+        private boolean fork;
+
+        private String url;
+
+        private String forks_url;
+
+        private String keys_url;
+
+        private String collaborators_url;
+
+        private String teams_url;
+
+        private String hooks_url;
+
+        private String issue_events_url;
+
+        private String events_url;
+
+        private String assignees_url;
+
+        private String branches_url;
+
+        private String tags_url;
+
+        private String blobs_url;
+
+        private String git_tags_url;
+
+        private String git_refs_url;
+
+        private String trees_url;
+
+        private String statuses_url;
+
+        private String languages_url;
+
+        private String stargazers_url;
+
+        private String contributors_url;
+
+        private String subscribers_url;
+
+        private String subscription_url;
+
+        private String commits_url;
+
+        private String git_commits_url;
+
+        private String comments_url;
+
+        private String issue_comment_url;
+
+        private String contents_url;
+
+        private String compare_url;
+
+        private String merges_url;
+
+        private String archive_url;
+
+        private String downloads_url;
+
+        private String issues_url;
+
+        private String pulls_url;
+
+        private String milestones_url;
+
+        private String notifications_url;
+
+        private String labels_url;
+
+        private String releases_url;
+
+        private String deployments_url;
+
+        private String created_at;
+
+        private String updated_at;
+
+        private String pushed_at;
+
+        private String git_url;
+
+        private String ssh_url;
+
+        private String clone_url;
+
+        private String svn_url;
+
+        private String homepage;
+
+        private int size;
+
+        private int stargazers_count;
+
+        private int watchers_count;
+
+        private String language;
+
+        private boolean has_issues;
+
+        private boolean has_projects;
+
+        private boolean has_downloads;
+
+        private boolean has_wiki;
+
+        private boolean has_pages;
+
+        private int forks_count;
+
+        private String mirror_url;
+
+        private int open_issues_count;
+
+        private int forks;
+
+        private int open_issues;
+
+        private int watchers;
+
+        private String default_branch;
+
+        private double score;
+
+        public void setId(int id) {
+            this.id = id;
+        }
+
+        public int getId() {
+            return this.id;
+        }
+
+        public void setName(String name) {
+            this.name = name;
+        }
+
+        public String getName() {
+            return this.name;
+        }
+
+        public void setFull_name(String full_name) {
+            this.full_name = full_name;
+        }
+
+        public String getFull_name() {
+            return this.full_name;
+        }
+
+        public void setOwner(Owner owner) {
+            this.owner = owner;
+        }
+
+        public Owner getOwner() {
+            return this.owner;
+        }
+
+        public void setHtml_url(String html_url) {
+            this.html_url = html_url;
+        }
+
+        public String getHtml_url() {
+            return this.html_url;
+        }
+
+        public void setDescription(String description) {
+            this.description = description;
+        }
+
+        public String getDescription() {
+            return this.description;
+        }
+
+        public void setFork(boolean fork) {
+            this.fork = fork;
+        }
+
+        public boolean getFork() {
+            return this.fork;
+        }
+
+        public void setUrl(String url) {
+            this.url = url;
+        }
+
+        public String getUrl() {
+            return this.url;
+        }
+
+        public void setForks_url(String forks_url) {
+            this.forks_url = forks_url;
+        }
+
+        public String getForks_url() {
+            return this.forks_url;
+        }
+
+        public void setKeys_url(String keys_url) {
+            this.keys_url = keys_url;
+        }
+
+        public String getKeys_url() {
+            return this.keys_url;
+        }
+
+        public void setCollaborators_url(String collaborators_url) {
+            this.collaborators_url = collaborators_url;
+        }
+
+        public String getCollaborators_url() {
+            return this.collaborators_url;
+        }
+
+        public void setTeams_url(String teams_url) {
+            this.teams_url = teams_url;
+        }
+
+        public String getTeams_url() {
+            return this.teams_url;
+        }
+
+        public void setHooks_url(String hooks_url) {
+            this.hooks_url = hooks_url;
+        }
+
+        public String getHooks_url() {
+            return this.hooks_url;
+        }
+
+        public void setIssue_events_url(String issue_events_url) {
+            this.issue_events_url = issue_events_url;
+        }
+
+        public String getIssue_events_url() {
+            return this.issue_events_url;
+        }
+
+        public void setEvents_url(String events_url) {
+            this.events_url = events_url;
+        }
+
+        public String getEvents_url() {
+            return this.events_url;
+        }
+
+        public void setAssignees_url(String assignees_url) {
+            this.assignees_url = assignees_url;
+        }
+
+        public String getAssignees_url() {
+            return this.assignees_url;
+        }
+
+        public void setBranches_url(String branches_url) {
+            this.branches_url = branches_url;
+        }
+
+        public String getBranches_url() {
+            return this.branches_url;
+        }
+
+        public void setTags_url(String tags_url) {
+            this.tags_url = tags_url;
+        }
+
+        public String getTags_url() {
+            return this.tags_url;
+        }
+
+        public void setBlobs_url(String blobs_url) {
+            this.blobs_url = blobs_url;
+        }
+
+        public String getBlobs_url() {
+            return this.blobs_url;
+        }
+
+        public void setGit_tags_url(String git_tags_url) {
+            this.git_tags_url = git_tags_url;
+        }
+
+        public String getGit_tags_url() {
+            return this.git_tags_url;
+        }
+
+        public void setGit_refs_url(String git_refs_url) {
+            this.git_refs_url = git_refs_url;
+        }
+
+        public String getGit_refs_url() {
+            return this.git_refs_url;
+        }
+
+        public void setTrees_url(String trees_url) {
+            this.trees_url = trees_url;
+        }
+
+        public String getTrees_url() {
+            return this.trees_url;
+        }
+
+        public void setStatuses_url(String statuses_url) {
+            this.statuses_url = statuses_url;
+        }
+
+        public String getStatuses_url() {
+            return this.statuses_url;
+        }
+
+        public void setLanguages_url(String languages_url) {
+            this.languages_url = languages_url;
+        }
+
+        public String getLanguages_url() {
+            return this.languages_url;
+        }
+
+        public void setStargazers_url(String stargazers_url) {
+            this.stargazers_url = stargazers_url;
+        }
+
+        public String getStargazers_url() {
+            return this.stargazers_url;
+        }
+
+        public void setContributors_url(String contributors_url) {
+            this.contributors_url = contributors_url;
+        }
+
+        public String getContributors_url() {
+            return this.contributors_url;
+        }
+
+        public void setSubscribers_url(String subscribers_url) {
+            this.subscribers_url = subscribers_url;
+        }
+
+        public String getSubscribers_url() {
+            return this.subscribers_url;
+        }
+
+        public void setSubscription_url(String subscription_url) {
+            this.subscription_url = subscription_url;
+        }
+
+        public String getSubscription_url() {
+            return this.subscription_url;
+        }
+
+        public void setCommits_url(String commits_url) {
+            this.commits_url = commits_url;
+        }
+
+        public String getCommits_url() {
+            return this.commits_url;
+        }
+
+        public void setGit_commits_url(String git_commits_url) {
+            this.git_commits_url = git_commits_url;
+        }
+
+        public String getGit_commits_url() {
+            return this.git_commits_url;
+        }
+
+        public void setComments_url(String comments_url) {
+            this.comments_url = comments_url;
+        }
+
+        public String getComments_url() {
+            return this.comments_url;
+        }
+
+        public void setIssue_comment_url(String issue_comment_url) {
+            this.issue_comment_url = issue_comment_url;
+        }
+
+        public String getIssue_comment_url() {
+            return this.issue_comment_url;
+        }
+
+        public void setContents_url(String contents_url) {
+            this.contents_url = contents_url;
+        }
+
+        public String getContents_url() {
+            return this.contents_url;
+        }
+
+        public void setCompare_url(String compare_url) {
+            this.compare_url = compare_url;
+        }
+
+        public String getCompare_url() {
+            return this.compare_url;
+        }
+
+        public void setMerges_url(String merges_url) {
+            this.merges_url = merges_url;
+        }
+
+        public String getMerges_url() {
+            return this.merges_url;
+        }
+
+        public void setArchive_url(String archive_url) {
+            this.archive_url = archive_url;
+        }
+
+        public String getArchive_url() {
+            return this.archive_url;
+        }
+
+        public void setDownloads_url(String downloads_url) {
+            this.downloads_url = downloads_url;
+        }
+
+        public String getDownloads_url() {
+            return this.downloads_url;
+        }
+
+        public void setIssues_url(String issues_url) {
+            this.issues_url = issues_url;
+        }
+
+        public String getIssues_url() {
+            return this.issues_url;
+        }
+
+        public void setPulls_url(String pulls_url) {
+            this.pulls_url = pulls_url;
+        }
+
+        public String getPulls_url() {
+            return this.pulls_url;
+        }
+
+        public void setMilestones_url(String milestones_url) {
+            this.milestones_url = milestones_url;
+        }
+
+        public String getMilestones_url() {
+            return this.milestones_url;
+        }
+
+        public void setNotifications_url(String notifications_url) {
+            this.notifications_url = notifications_url;
+        }
+
+        public String getNotifications_url() {
+            return this.notifications_url;
+        }
+
+        public void setLabels_url(String labels_url) {
+            this.labels_url = labels_url;
+        }
+
+        public String getLabels_url() {
+            return this.labels_url;
+        }
+
+        public void setReleases_url(String releases_url) {
+            this.releases_url = releases_url;
+        }
+
+        public String getReleases_url() {
+            return this.releases_url;
+        }
+
+        public void setDeployments_url(String deployments_url) {
+            this.deployments_url = deployments_url;
+        }
+
+        public String getDeployments_url() {
+            return this.deployments_url;
+        }
+
+        public void setCreated_at(String created_at) {
+            this.created_at = created_at;
+        }
+
+        public String getCreated_at() {
+            return this.created_at;
+        }
+
+        public void setUpdated_at(String updated_at) {
+            this.updated_at = updated_at;
+        }
+
+        public String getUpdated_at() {
+            return this.updated_at;
+        }
+
+        public void setPushed_at(String pushed_at) {
+            this.pushed_at = pushed_at;
+        }
+
+        public String getPushed_at() {
+            return this.pushed_at;
+        }
+
+        public void setGit_url(String git_url) {
+            this.git_url = git_url;
+        }
+
+        public String getGit_url() {
+            return this.git_url;
+        }
+
+        public void setSsh_url(String ssh_url) {
+            this.ssh_url = ssh_url;
+        }
+
+        public String getSsh_url() {
+            return this.ssh_url;
+        }
+
+        public void setClone_url(String clone_url) {
+            this.clone_url = clone_url;
+        }
+
+        public String getClone_url() {
+            return this.clone_url;
+        }
+
+        public void setSvn_url(String svn_url) {
+            this.svn_url = svn_url;
+        }
+
+        public String getSvn_url() {
+            return this.svn_url;
+        }
+
+        public void setHomepage(String homepage) {
+            this.homepage = homepage;
+        }
+
+        public String getHomepage() {
+            return this.homepage;
+        }
+
+        public void setSize(int size) {
+            this.size = size;
+        }
+
+        public int getSize() {
+            return this.size;
+        }
+
+        public void setStargazers_count(int stargazers_count) {
+            this.stargazers_count = stargazers_count;
+        }
+
+        public int getStargazers_count() {
+            return this.stargazers_count;
+        }
+
+        public void setWatchers_count(int watchers_count) {
+            this.watchers_count = watchers_count;
+        }
+
+        public int getWatchers_count() {
+            return this.watchers_count;
+        }
+
+        public void setLanguage(String language) {
+            this.language = language;
+        }
+
+        public String getLanguage() {
+            return this.language;
+        }
+
+        public void setHas_issues(boolean has_issues) {
+            this.has_issues = has_issues;
+        }
+
+        public boolean getHas_issues() {
+            return this.has_issues;
+        }
+
+        public void setHas_projects(boolean has_projects) {
+            this.has_projects = has_projects;
+        }
+
+        public boolean getHas_projects() {
+            return this.has_projects;
+        }
+
+        public void setHas_downloads(boolean has_downloads) {
+            this.has_downloads = has_downloads;
+        }
+
+        public boolean getHas_downloads() {
+            return this.has_downloads;
+        }
+
+        public void setHas_wiki(boolean has_wiki) {
+            this.has_wiki = has_wiki;
+        }
+
+        public boolean getHas_wiki() {
+            return this.has_wiki;
+        }
+
+        public void setHas_pages(boolean has_pages) {
+            this.has_pages = has_pages;
+        }
+
+        public boolean getHas_pages() {
+            return this.has_pages;
+        }
+
+        public void setForks_count(int forks_count) {
+            this.forks_count = forks_count;
+        }
+
+        public int getForks_count() {
+            return this.forks_count;
+        }
+
+        public void setMirror_url(String mirror_url) {
+            this.mirror_url = mirror_url;
+        }
+
+        public String getMirror_url() {
+            return this.mirror_url;
+        }
+
+        public void setOpen_issues_count(int open_issues_count) {
+            this.open_issues_count = open_issues_count;
+        }
+
+        public int getOpen_issues_count() {
+            return this.open_issues_count;
+        }
+
+        public void setForks(int forks) {
+            this.forks = forks;
+        }
+
+        public int getForks() {
+            return this.forks;
+        }
+
+        public void setOpen_issues(int open_issues) {
+            this.open_issues = open_issues;
+        }
+
+        public int getOpen_issues() {
+            return this.open_issues;
+        }
+
+        public void setWatchers(int watchers) {
+            this.watchers = watchers;
+        }
+
+        public int getWatchers() {
+            return this.watchers;
+        }
+
+        public void setDefault_branch(String default_branch) {
+            this.default_branch = default_branch;
+        }
+
+        public String getDefault_branch() {
+            return this.default_branch;
+        }
+
+        public void setScore(double score) {
+            this.score = score;
+        }
+
+        public double getScore() {
+            return this.score;
+        }
+    }
+
+    @Override
+    public String toString() {
+        return "RetrofitBean{" +
+                "total_count=" + total_count +
+                ", incomplete_results=" + incomplete_results +
+                ", items=" + items +
+                '}';
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/CN.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/CN.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/CN.java	(revision )
@@ -0,0 +1,29 @@
+package com.baselib.ui.widget.mydatepicker;
+
+/**
+ * 中文的默认实现类
+ * 如果你想实现更多的语言请参考Language{@link DPLManager}
+ * 作者: liuhuaqian on 2017/9/23.
+ */
+
+public class CN extends DPLManager {
+    @Override
+    public String[] titleMonth() {
+        return new String[]{"一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"};
+    }
+
+    @Override
+    public String titleEnsure() {
+        return "确定";
+    }
+
+    @Override
+    public String titleBC() {
+        return "公元前";
+    }
+
+    @Override
+    public String[] titleWeek() {
+        return new String[]{"日", "一", "二", "三", "四", "五", "六"};
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/IntentUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/IntentUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/IntentUtils.java	(revision )
@@ -0,0 +1,303 @@
+package com.baselib.utilcode.util;
+
+import android.content.ComponentName;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Build;
+import android.os.Bundle;
+import android.provider.MediaStore;
+import android.support.v4.content.FileProvider;
+
+import java.io.File;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/09/23
+ *     desc  : 意图相关工具类
+ * </pre>
+ */
+public final class IntentUtils {
+
+    private IntentUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 获取安装App（支持7.0）的意图
+     *
+     * @param filePath  文件路径
+     * @param authority 7.0及以上安装需要传入清单文件中的{@code <provider>}的authorities属性
+     *                  <br>参看https://developer.android.com/reference/android/support/v4/content/FileProvider.html
+     * @return intent
+     */
+    public static Intent getInstallAppIntent(final String filePath, final String authority) {
+        return getInstallAppIntent(FileUtils.getFileByPath(filePath), authority);
+    }
+
+    /**
+     * 获取安装App(支持7.0)的意图
+     *
+     * @param file      文件
+     * @param authority 7.0及以上安装需要传入清单文件中的{@code <provider>}的authorities属性
+     *                  <br>参看https://developer.android.com/reference/android/support/v4/content/FileProvider.html
+     * @return intent
+     */
+    public static Intent getInstallAppIntent(final File file, final String authority) {
+        if (file == null) return null;
+        Intent intent = new Intent(Intent.ACTION_VIEW);
+        Uri data;
+        String type = "application/vnd.android.package-archive";
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.N) {
+            data = Uri.fromFile(file);
+        } else {
+            intent.setFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION);
+            data = FileProvider.getUriForFile(Utils.getApp(), authority, file);
+        }
+        intent.setDataAndType(data, type);
+        return intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+    }
+
+    /**
+     * 获取卸载App的意图
+     *
+     * @param packageName 包名
+     * @return intent
+     */
+    public static Intent getUninstallAppIntent(final String packageName) {
+        Intent intent = new Intent(Intent.ACTION_DELETE);
+        intent.setData(Uri.parse("package:" + packageName));
+        return intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+    }
+
+    /**
+     * 获取打开App的意图
+     *
+     * @param packageName 包名
+     * @return intent
+     */
+    public static Intent getLaunchAppIntent(final String packageName) {
+        return Utils.getApp().getPackageManager().getLaunchIntentForPackage(packageName);
+    }
+
+    /**
+     * 获取App具体设置的意图
+     *
+     * @param packageName 包名
+     * @return intent
+     */
+    public static Intent getAppDetailsSettingsIntent(final String packageName) {
+        Intent intent = new Intent("android.settings.APPLICATION_DETAILS_SETTINGS");
+        intent.setData(Uri.parse("package:" + packageName));
+        return intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+    }
+
+    /**
+     * 获取分享文本的意图
+     *
+     * @param content 分享文本
+     * @return intent
+     */
+    public static Intent getShareTextIntent(final String content) {
+        Intent intent = new Intent(Intent.ACTION_SEND);
+        intent.setType("text/plain");
+        intent.putExtra(Intent.EXTRA_TEXT, content);
+        return intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+    }
+
+    /**
+     * 获取分享图片的意图
+     *
+     * @param content   文本
+     * @param imagePath 图片文件路径
+     * @return intent
+     */
+    public static Intent getShareImageIntent(final String content, final String imagePath) {
+        return getShareImageIntent(content, FileUtils.getFileByPath(imagePath));
+    }
+
+    /**
+     * 获取分享图片的意图
+     *
+     * @param content 文本
+     * @param image   图片文件
+     * @return intent
+     */
+    public static Intent getShareImageIntent(final String content, final File image) {
+        if (!FileUtils.isFileExists(image)) return null;
+        return getShareImageIntent(content, Uri.fromFile(image));
+    }
+
+    /**
+     * 获取分享图片的意图
+     *
+     * @param content 分享文本
+     * @param uri     图片uri
+     * @return intent
+     */
+    public static Intent getShareImageIntent(final String content, final Uri uri) {
+        Intent intent = new Intent(Intent.ACTION_SEND);
+        intent.putExtra(Intent.EXTRA_TEXT, content);
+        intent.putExtra(Intent.EXTRA_STREAM, uri);
+        intent.setType("image/*");
+        return intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+    }
+
+    /**
+     * 获取其他应用组件的意图
+     *
+     * @param packageName 包名
+     * @param className   全类名
+     * @return intent
+     */
+    public static Intent getComponentIntent(final String packageName, final String className) {
+        return getComponentIntent(packageName, className, null);
+    }
+
+    /**
+     * 获取其他应用组件的意图
+     *
+     * @param packageName 包名
+     * @param className   全类名
+     * @param bundle      bundle
+     * @return intent
+     */
+    public static Intent getComponentIntent(final String packageName, final String className, final Bundle bundle) {
+        Intent intent = new Intent(Intent.ACTION_VIEW);
+        if (bundle != null) intent.putExtras(bundle);
+        ComponentName cn = new ComponentName(packageName, className);
+        intent.setComponent(cn);
+        return intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+    }
+
+    /**
+     * 获取关机的意图
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.SHUTDOWN"/>}</p>
+     *
+     * @return intent
+     */
+    public static Intent getShutdownIntent() {
+        Intent intent = new Intent(Intent.ACTION_SHUTDOWN);
+        return intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+    }
+
+    /**
+     * 获取跳至拨号界面意图
+     *
+     * @param phoneNumber 电话号码
+     */
+    public static Intent getDialIntent(final String phoneNumber) {
+        Intent intent = new Intent(Intent.ACTION_DIAL, Uri.parse("tel:" + phoneNumber));
+        return intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+    }
+
+    /**
+     * 获取拨打电话意图
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.CALL_PHONE"/>}</p>
+     *
+     * @param phoneNumber 电话号码
+     */
+    public static Intent getCallIntent(final String phoneNumber) {
+        Intent intent = new Intent("android.intent.action.CALL", Uri.parse("tel:" + phoneNumber));
+        return intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+    }
+
+    /**
+     * 获取跳至发送短信界面的意图
+     *
+     * @param phoneNumber 接收号码
+     * @param content     短信内容
+     */
+    public static Intent getSendSmsIntent(final String phoneNumber, final String content) {
+        Uri uri = Uri.parse("smsto:" + phoneNumber);
+        Intent intent = new Intent(Intent.ACTION_SENDTO, uri);
+        intent.putExtra("sms_body", content);
+        return intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+    }
+
+
+    /**
+     * 获取拍照的意图
+     *
+     * @param outUri 输出的uri
+     * @return 拍照的意图
+     */
+    public static Intent getCaptureIntent(final Uri outUri) {
+        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
+        intent.putExtra(MediaStore.EXTRA_OUTPUT, outUri);
+        return intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_ACTIVITY_NEW_TASK);
+    }
+
+//    /**
+//     * 获取选择照片的Intent
+//     *
+//     * @return
+//     */
+//    public static Intent getPickIntentWithGallery() {
+//        Intent intent = new Intent(Intent.ACTION_PICK);
+//        return intent.setType("image*//*");
+//    }
+//
+//    /**
+//     * 获取从文件中选择照片的Intent
+//     *
+//     * @return
+//     */
+//    public static Intent getPickIntentWithDocuments() {
+//        Intent intent = new Intent(Intent.ACTION_GET_CONTENT);
+//        return intent.setType("image*//*");
+//    }
+//
+//
+//    public static Intent buildImageGetIntent(final Uri saveTo, final int outputX, final int outputY, final boolean returnData) {
+//        return buildImageGetIntent(saveTo, 1, 1, outputX, outputY, returnData);
+//    }
+//
+//    public static Intent buildImageGetIntent(Uri saveTo, int aspectX, int aspectY,
+//                                             int outputX, int outputY, boolean returnData) {
+//        Intent intent = new Intent();
+//        if (Build.VERSION.SDK_INT < 19) {
+//            intent.setAction(Intent.ACTION_GET_CONTENT);
+//        } else {
+//            intent.setAction(Intent.ACTION_OPEN_DOCUMENT);
+//            intent.addCategory(Intent.CATEGORY_OPENABLE);
+//        }
+//        intent.setType("image*//*");
+//        intent.putExtra("output", saveTo);
+//        intent.putExtra("aspectX", aspectX);
+//        intent.putExtra("aspectY", aspectY);
+//        intent.putExtra("outputX", outputX);
+//        intent.putExtra("outputY", outputY);
+//        intent.putExtra("scale", true);
+//        intent.putExtra("return-data", returnData);
+//        intent.putExtra("outputFormat", Bitmap.CompressFormat.PNG.toString());
+//        return intent;
+//    }
+//
+//    public static Intent buildImageCropIntent(final Uri uriFrom, final Uri uriTo, final int outputX, final int outputY, final boolean returnData) {
+//        return buildImageCropIntent(uriFrom, uriTo, 1, 1, outputX, outputY, returnData);
+//    }
+//
+//    public static Intent buildImageCropIntent(Uri uriFrom, Uri uriTo, int aspectX, int aspectY,
+//                                              int outputX, int outputY, boolean returnData) {
+//        Intent intent = new Intent("com.android.camera.action.CROP");
+//        intent.setDataAndType(uriFrom, "image*//*");
+//        intent.putExtra("crop", "true");
+//        intent.putExtra("output", uriTo);
+//        intent.putExtra("aspectX", aspectX);
+//        intent.putExtra("aspectY", aspectY);
+//        intent.putExtra("outputX", outputX);
+//        intent.putExtra("outputY", outputY);
+//        intent.putExtra("scale", true);
+//        intent.putExtra("return-data", returnData);
+//        intent.putExtra("outputFormat", Bitmap.CompressFormat.PNG.toString());
+//        return intent;
+//    }
+//
+//    public static Intent buildImageCaptureIntent(final Uri uri) {
+//        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
+//        intent.putExtra(MediaStore.EXTRA_OUTPUT, uri);
+//        return intent;
+//    }
+}
Index: baselib/src/main/res/drawable/shape_number_button_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/drawable/shape_number_button_bg.xml	(revision )
+++ baselib/src/main/res/drawable/shape_number_button_bg.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+    <stroke
+        android:width="0.5dp"
+        android:color="#ebedf0" />
+</shape>
\ No newline at end of file
Index: app/src/androidTest/java/com/b3ad/yuxie/myapplication/ExampleInstrumentedTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/androidTest/java/com/b3ad/yuxie/myapplication/ExampleInstrumentedTest.java	(revision )
+++ app/src/androidTest/java/com/b3ad/yuxie/myapplication/ExampleInstrumentedTest.java	(revision )
@@ -0,0 +1,26 @@
+package com.b3ad.yuxie.myapplication;
+
+import android.content.Context;
+import android.support.test.InstrumentationRegistry;
+import android.support.test.runner.AndroidJUnit4;
+
+import org.junit.Test;
+import org.junit.runner.RunWith;
+
+import static org.junit.Assert.*;
+
+/**
+ * Instrumentation test, which will execute on an Android device.
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+@RunWith(AndroidJUnit4.class)
+public class ExampleInstrumentedTest {
+    @Test
+    public void useAppContext() throws Exception {
+        // Context of the app under test.
+        Context appContext = InstrumentationRegistry.getTargetContext();
+
+        assertEquals("com.b3ad.yuxie.myapplication", appContext.getPackageName());
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/SDCardUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/SDCardUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/SDCardUtils.java	(revision )
@@ -0,0 +1,98 @@
+package com.baselib.utilcode.util;
+
+import android.content.Context;
+import android.os.storage.StorageManager;
+
+import java.lang.reflect.Array;
+import java.lang.reflect.InvocationTargetException;
+import java.lang.reflect.Method;
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/11
+ *     desc  : SD卡相关工具类
+ * </pre>
+ */
+public final class SDCardUtils {
+
+    private SDCardUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 判断SD卡是否可用
+     *
+     * @return true : 可用<br>false : 不可用
+     */
+    public static boolean isSDCardEnable() {
+        return !getSDCardPaths().isEmpty();
+    }
+
+    /**
+     * 获取SD卡路径
+     *
+     * @param removable true : 外置SD卡<br>false : 内置SD卡
+     * @return SD卡路径
+     */
+    @SuppressWarnings("TryWithIdenticalCatches")
+    public static List<String> getSDCardPaths(boolean removable) {
+        List<String> paths = new ArrayList<>();
+        StorageManager mStorageManager = (StorageManager) Utils.getApp()
+                .getSystemService(Context.STORAGE_SERVICE);
+        try {
+            Class<?> storageVolumeClazz = Class.forName("android.os.storage.StorageVolume");
+            Method getVolumeList = StorageManager.class.getMethod("getVolumeList");
+            Method getPath = storageVolumeClazz.getMethod("getPath");
+            Method isRemovable = storageVolumeClazz.getMethod("isRemovable");
+            Object result = getVolumeList.invoke(mStorageManager);
+            final int length = Array.getLength(result);
+            for (int i = 0; i < length; i++) {
+                Object storageVolumeElement = Array.get(result, i);
+                String path = (String) getPath.invoke(storageVolumeElement);
+                boolean res = (Boolean) isRemovable.invoke(storageVolumeElement);
+                if (removable == res) {
+                    paths.add(path);
+                }
+            }
+        } catch (ClassNotFoundException e) {
+            e.printStackTrace();
+        } catch (InvocationTargetException e) {
+            e.printStackTrace();
+        } catch (NoSuchMethodException e) {
+            e.printStackTrace();
+        } catch (IllegalAccessException e) {
+            e.printStackTrace();
+        }
+        return paths;
+    }
+
+    /**
+     * 获取SD卡路径
+     *
+     * @return SD卡路径
+     */
+    @SuppressWarnings("TryWithIdenticalCatches")
+    public static List<String> getSDCardPaths() {
+        StorageManager storageManager = (StorageManager) Utils.getApp()
+                .getSystemService(Context.STORAGE_SERVICE);
+        List<String> paths = new ArrayList<>();
+        try {
+            Method getVolumePathsMethod = StorageManager.class.getMethod("getVolumePaths");
+            getVolumePathsMethod.setAccessible(true);
+            Object invoke = getVolumePathsMethod.invoke(storageManager);
+            paths = Arrays.asList((String[]) invoke);
+        } catch (NoSuchMethodException e) {
+            e.printStackTrace();
+        } catch (IllegalAccessException e) {
+            e.printStackTrace();
+        } catch (InvocationTargetException e) {
+            e.printStackTrace();
+        }
+        return paths;
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/model/InvokeParam.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/model/InvokeParam.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/model/InvokeParam.java	(revision )
@@ -0,0 +1,42 @@
+package com.baselib.takephoto.model;
+
+import java.lang.reflect.Method;
+
+/**
+ * Created by penn on 16/9/22.
+ */
+public class InvokeParam {
+    private Object proxy;
+    private Method method;
+    private Object[] args;
+
+    public InvokeParam(Object proxy, Method method, Object[] args) {
+        this.proxy = proxy;
+        this.method = method;
+        this.args = args;
+    }
+
+    public Object getProxy() {
+        return proxy;
+    }
+
+    public void setProxy(Object proxy) {
+        this.proxy = proxy;
+    }
+
+    public Method getMethod() {
+        return method;
+    }
+
+    public void setMethod(Method method) {
+        this.method = method;
+    }
+
+    public Object[] getArgs() {
+        return args;
+    }
+
+    public void setArgs(Object[] args) {
+        this.args = args;
+    }
+}
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>NATIVE_TO_ASCII_UTF-8
===================================================================
--- gradle.properties	(revision )
+++ gradle.properties	(revision )
@@ -0,0 +1,3 @@
+
+android.useDeprecatedNdk = true
+
Index: baselib/src/main/java/com/baselib/baseapp/BaseApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baseapp/BaseApplication.java	(revision )
+++ baselib/src/main/java/com/baselib/baseapp/BaseApplication.java	(revision )
@@ -0,0 +1,71 @@
+package com.baselib.baseapp;
+
+import android.app.Application;
+import android.content.Context;
+import android.content.res.Resources;
+import android.os.Debug;
+import android.support.multidex.MultiDex;
+//import android.support.multidex.MultiDex;
+
+import com.baselib.R;
+import com.baselib.commonutils.LogUtils;
+
+import com.baselib.uitls.CommonUtils;
+import com.baselib.utilcode.util.Utils;
+import com.tencent.bugly.crashreport.CrashReport;
+import com.zhy.autolayout.config.AutoLayoutConifg;
+
+/**
+ * Created by liuhuaqian on 2017/9/8.
+ */
+
+public class BaseApplication extends Application {
+
+    private static BaseApplication baseApplication;
+    public static AppManager appManager;
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        baseApplication = this;
+        //屏幕适配
+        AutoLayoutConifg.getInstance().useDeviceSize();
+        appManager = AppManager.getAppManager();
+
+        //初始化Utils
+        Utils.init(this);
+
+        if (CommonUtils.isApkDebugable()) {
+            LogUtils.logInit(true);//日志
+        }
+        //腾讯Bugly初始化
+        CrashReport.initCrashReport(getApplicationContext(), getString(R.string.bugly_app_id), false);
+
+    }
+
+    public static Context getAppContext() {
+        return baseApplication;
+    }
+
+    public static Resources getAppResources() {
+        return baseApplication.getResources();
+    }
+
+    @Override
+    public void onTerminate() {
+        super.onTerminate();
+    }
+
+    /**
+     * 分包
+     *
+     * @param base
+     */
+    @Override
+    protected void attachBaseContext(Context base) {
+        super.attachBaseContext(base);
+        MultiDex.install(this);
+    }
+
+}
+
Index: baselib/src/main/java/com/baselib/takephoto/model/LubanOptions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/model/LubanOptions.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/model/LubanOptions.java	(revision )
@@ -0,0 +1,75 @@
+package com.baselib.takephoto.model;
+
+import java.io.Serializable;
+
+/**
+ * Luban配置类
+ * Author: crazycodeboy
+ * Date: 2016/11/5 0007 20:10
+ * Version:4.0.1
+ * 技术博文：http://www.devio.org/
+ * GitHub:https://github.com/crazycodeboy
+ * Eamil:crazycodeboy@gmail.com
+ */
+public class LubanOptions implements Serializable {
+  /**
+   * 压缩到的最大大小，单位B
+   */
+  private int maxSize;
+  private int maxHeight;
+  private int maxWidth;
+
+  private LubanOptions() {
+  }
+
+  public int getMaxSize() {
+    return maxSize;
+  }
+
+  public void setMaxSize(int maxSize) {
+    this.maxSize = maxSize;
+  }
+
+  public int getMaxHeight() {
+    return maxHeight;
+  }
+
+  public void setMaxHeight(int maxHeight) {
+    this.maxHeight = maxHeight;
+  }
+
+  public int getMaxWidth() {
+    return maxWidth;
+  }
+
+  public void setMaxWidth(int maxWidth) {
+    this.maxWidth = maxWidth;
+  }
+
+  public static class Builder {
+    private LubanOptions options;
+
+    public Builder() {
+      options = new LubanOptions();
+    }
+
+    public Builder setMaxSize(int maxSize) {
+      options.setMaxSize(maxSize);
+      return this;
+    }
+
+    public Builder setMaxHeight(int maxHeight) {
+      options.setMaxHeight(maxHeight);
+      return this;
+    }
+
+    public Builder setMaxWidth(int maxWidth) {
+      options.setMaxWidth(maxWidth);
+      return this;
+    }
+
+    public LubanOptions create() {
+      return options;
+    }
+  }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPMode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPMode.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPMode.java	(revision )
@@ -0,0 +1,11 @@
+package com.baselib.ui.widget.mydatepicker;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * *日期选择模式
+ * 支持单选和多选和展示
+ */
+
+public enum DPMode {
+    SINGLE, MULTIPLE, NONE
+}
Index: baselib/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/values/dimens.xml	(revision )
+++ baselib/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,5 @@
+<resources>
+    <!-- Default screen margins, per the Android Design guidelines. -->
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
Index: baselib/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/AndroidManifest.xml	(revision )
+++ baselib/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,96 @@
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.baselib">
+    //地图SDK（包含其搜索功能）需要的基础权限
+
+    <!--允许程序打开网络套接字-->
+    <uses-permission android:name="android.permission.BLUETOOTH" />
+    <uses-permission android:name="android.permission.INTERNET" />
+    <!--允许程序设置内置sd卡的写权限-->
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <!--允许程序获取网络状态-->
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <!--允许程序访问WiFi网络信息-->
+    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
+    <!--允许程序读写手机状态和身份-->
+    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
+    <!--允许程序访问CellID或WiFi热点来获取粗略的位置-->
+
+    <!--调用相机权限-->
+    <uses-permission android:name="android.permission.CAMERA" />
+
+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
+    <uses-permission android:name="android.permission.CHANGE_CONFIGURATION" />
+    <uses-permission android:name="android.permission.WAKE_LOCK" />
+     
+
+    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
+
+    <uses-permission android:name="android.permission.READ_LOGS" />
+
+
+    <application
+        android:allowBackup="true"
+        android:hardwareAccelerated="false"
+        android:label="@string/app_name"
+        android:largeHeap="true"
+        android:supportsRtl="true">
+
+        <activity android:name="com.soundcloud.android.crop.CropImageActivity" />
+
+        <provider
+            android:name="android.support.v4.content.FileProvider"
+            android:authorities="${applicationId}.fileprovider"
+            android:exported="false"
+            android:grantUriPermissions="true">
+            <meta-data
+                android:name="android.support.FILE_PROVIDER_PATHS"
+                android:resource="@xml/file_paths" />
+        </provider>
+
+        <meta-data
+            android:name="design_width"
+            android:value="750"></meta-data>
+        <meta-data
+            android:name="design_height"
+            android:value="1334"></meta-data>
+
+        <!--设置高德Key-->
+        <!--<meta-data-->
+            <!--android:name="com.amap.api.v2.apikey"-->
+            <!--android:value="caa67d9f01219028370158753e1efce0"></meta-data>-->
+
+        <!-- 定位需要的服务 使用2.0的定位需要加上这个 -->
+        <!--<service android:name="com.amap.api.location.APSService"></service>-->
+
+        <!-- umengAppKey，replace to yours -->
+        <!-- 友盟 -->
+        <!--友盟ID-->
+        <!--<meta-data-->
+            <!--android:name="UMENG_APPKEY"-->
+            <!--android:value="5a4ae7c0b27b0a3aab000044" />-->
+        <!--<meta-data-->
+            <!--android:name="UMENG_CHANNEL"-->
+            <!--android:value="Channel ID" />-->
+        <!-- Channel ID 替换为您应用的推广渠道名称，channel id自定义。如:Wandoujia -->
+
+        <!--支付宝-->
+        <activity
+            android:name="com.alipay.sdk.app.H5PayActivity"
+            android:configChanges="orientation|keyboardHidden|navigation|screenSize"
+            android:exported="false"
+            android:screenOrientation="behind"
+            android:windowSoftInputMode="adjustResize|stateHidden"></activity>
+        <activity
+            android:name="com.alipay.sdk.app.H5AuthActivity"
+            android:configChanges="orientation|keyboardHidden|navigation"
+            android:exported="false"
+            android:screenOrientation="behind"
+            android:windowSoftInputMode="adjustResize|stateHidden"></activity>
+        <!--支付宝-->
+
+
+    </application>
+
+</manifest>
Index: baselib/src/main/java/com/baselib/recycleview/CommonAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/CommonAdapter.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/CommonAdapter.java	(revision )
@@ -0,0 +1,56 @@
+package com.baselib.recycleview;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+
+import java.util.List;
+
+
+public abstract class CommonAdapter<T> extends MultiItemTypeAdapter<T>
+{
+    protected Context mContext;
+    protected int mLayoutId;
+    protected List<T> mDatas;
+    protected LayoutInflater mInflater;
+
+    public CommonAdapter(final Context context, final int layoutId, List<T> datas)
+    {
+        super(context, datas);
+        mContext = context;
+        mInflater = LayoutInflater.from(context);
+        mLayoutId = layoutId;
+        mDatas = datas;
+
+        addItemViewDelegate(new ItemViewDelegate<T>()
+        {
+            @Override
+            public int getItemViewLayoutId()
+            {
+                return layoutId;
+            }
+
+            @Override
+            public boolean isForViewType( T item, int position)
+            {
+                return true;
+            }
+
+            @Override
+            public void convert(ViewHolder holder, T t, int position)
+            {
+                CommonAdapter.this.convert(holder, t, position);
+            }
+        });
+    }
+
+    protected abstract void convert(ViewHolder holder, T t, int position);
+
+    //默认第几项
+    public int mPosition = -1;
+
+    public void setPosition(int position) {
+        mPosition = position;
+    }
+
+
+}
Index: baselib/src/main/java/com/baselib/ui/widget/NumberButton.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/NumberButton.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/NumberButton.java	(revision )
@@ -0,0 +1,253 @@
+package com.baselib.ui.widget;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.text.method.DigitsKeyListener;
+import android.util.AttributeSet;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.EditText;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import com.baselib.R;
+
+
+/**
+ * Description
+ * Roken
+ * Date 2017/5/11 0011 上午 11:13.
+ */
+
+public class NumberButton extends LinearLayout implements View.OnClickListener, TextWatcher {
+    //库存
+    private int mInventory = Integer.MAX_VALUE;
+    //最大购买数，默认无限制
+    private int mBuyMax = Integer.MAX_VALUE;
+    private EditText mCount;
+    private OnWarnListener mOnWarnListener;
+
+    private Context context;
+
+    public NumberButton(Context context) {
+        this(context, null);
+    }
+
+    public NumberButton(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        this.context = context;
+        init(context, attrs);
+
+    }
+//
+//    public NumberButton(Context context, AttributeSet attrs, int defStyleAttr) {
+//        super(context, attrs, defStyleAttr);
+//    }
+
+    private void init(Context context, AttributeSet attrs) {
+        LayoutInflater.from(context).inflate(R.layout.view_number_button, this);
+
+        TextView addButton = (TextView) findViewById(R.id.button_add);
+        addButton.setOnClickListener(this);
+        TextView subButton = (TextView) findViewById(R.id.button_sub);
+        subButton.setOnClickListener(this);
+
+        mCount = ((EditText) findViewById(R.id.text_count));
+        mCount.addTextChangedListener(this);
+        mCount.setOnClickListener(this);
+
+
+        TypedArray typedArray = context.obtainStyledAttributes(attrs, R.styleable.NumberButton);
+        boolean editable = typedArray.getBoolean(R.styleable.NumberButton_editable, false);
+        int buttonWidth = typedArray.getDimensionPixelSize(R.styleable.NumberButton_buttonWidth, -1);
+        int textWidth = typedArray.getDimensionPixelSize(R.styleable.NumberButton_textWidth, -1);
+        int textSize = typedArray.getDimensionPixelSize(R.styleable.NumberButton_textSize, -1);
+        int textColor = typedArray.getColor(R.styleable.NumberButton_textColor, 0xff000000);
+        typedArray.recycle();
+
+        setEditable(editable);
+        mCount.setTextColor(textColor);
+        subButton.setTextColor(textColor);
+        addButton.setTextColor(textColor);
+
+        if (textSize > 0)
+            mCount.setTextSize(textSize);
+
+        if (buttonWidth > 0) {
+            LayoutParams textParams = new LayoutParams(buttonWidth, LayoutParams.MATCH_PARENT);
+            subButton.setLayoutParams(textParams);
+            addButton.setLayoutParams(textParams);
+        }
+        if (textWidth > 0) {
+            LayoutParams textParams = new LayoutParams(textWidth, LayoutParams.MATCH_PARENT);
+            mCount.setLayoutParams(textParams);
+        }
+    }
+
+    public int getNumber() {
+        try {
+            return Integer.parseInt(mCount.getText().toString());
+        } catch (NumberFormatException e) {
+        }
+        mCount.setText("1");
+        return 1;
+    }
+
+    public EditText setText(String s){
+        mCount.setText(s);
+        return mCount;
+    }
+
+    public void setClickable(boolean bool){
+        mCount.setEnabled(bool);
+    }
+
+    @Override
+    public void onClick(View v) {
+        int id = v.getId();
+        int count = getNumber();
+        if (id == R.id.button_sub) {
+
+            if (count > 1) {
+                //正常减
+                mCount.setText("" + (count - 1));
+                if(changeListener != null){
+                    changeListener.onUpdateNum(count - 1);
+                }
+            }
+        } else if (id == R.id.button_add) {
+            if (count < Math.min(mBuyMax, mInventory)) {
+                //正常添加
+                mCount.setText("" + (count + 1));
+                if(changeListener != null){
+                    changeListener.onUpdateNum(count + 1);
+                }
+            } else if (mInventory < mBuyMax) {
+                //库存不足
+                warningForInventory();
+            } else {
+                //超过最大购买数
+                warningForBuyMax();
+            }
+
+        } else if (id == R.id.text_count) {
+            mCount.setSelection(mCount.getText().toString().length());
+        }
+    }
+
+    public interface onChangeNumberListener {
+        void onUpdateNum(int position);
+    }
+
+    private onChangeNumberListener changeListener;
+
+    public void setOnChangeNumberListener(onChangeNumberListener changeListener) {
+        this.changeListener = changeListener;
+    }
+
+
+    private void onNumberInput() {
+        //当前数量
+        int count = getNumber();
+        if (count <= 0) {
+            //手动输入
+            Toast.makeText(context, "数量不能小于1", Toast.LENGTH_SHORT).show();
+            mCount.setText("1");
+            return;
+        }
+
+        int limit = Math.min(mBuyMax, mInventory);
+        if (count > limit) {
+            //超过了数量
+            mCount.setText(limit + "");
+            if (mInventory < mBuyMax) {
+                //库存不足
+                warningForInventory();
+            } else {
+                //超过最大购买数
+                warningForBuyMax();
+            }
+        }
+
+    }
+
+    /**
+     * 超过的库存限制
+     * Warning for inventory.
+     */
+    private void warningForInventory() {
+        if (mOnWarnListener != null) mOnWarnListener.onWarningForInventory(mInventory);
+    }
+
+    /**
+     * 超过的最大购买数限制
+     * Warning for buy max.
+     */
+    private void warningForBuyMax() {
+        if (mOnWarnListener != null) mOnWarnListener.onWarningForBuyMax(mBuyMax);
+    }
+
+
+    private void setEditable(boolean editable) {
+        if (editable) {
+            mCount.setFocusable(true);
+            mCount.setKeyListener(new DigitsKeyListener());
+        } else {
+            mCount.setFocusable(false);
+            mCount.setKeyListener(null);
+        }
+    }
+
+    public NumberButton setCurrentNumber(int currentNumber) {
+        if (currentNumber < 1) mCount.setText("1");
+        mCount.setText(""+Math.min(Math.min(mBuyMax, mInventory), currentNumber));
+        return this;
+    }
+
+    public int getInventory() {
+        return mInventory;
+    }
+
+    public NumberButton setInventory(int inventory) {
+        mInventory = inventory;
+        return this;
+    }
+
+    public int getBuyMax() {
+        return mBuyMax;
+    }
+
+    public NumberButton setBuyMax(int buyMax) {
+        mBuyMax = buyMax;
+        return this;
+    }
+
+    public NumberButton setOnWarnListener(OnWarnListener onWarnListener) {
+        mOnWarnListener = onWarnListener;
+        return this;
+    }
+
+    @Override
+    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+
+    }
+
+    @Override
+    public void onTextChanged(CharSequence s, int start, int before, int count) {
+        onNumberInput();
+    }
+
+    @Override
+    public void afterTextChanged(Editable s) {
+
+    }
+
+    public interface OnWarnListener {
+        void onWarningForInventory(int inventory);
+
+        void onWarningForBuyMax(int max);
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/compress/CompressConfig.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/compress/CompressConfig.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/compress/CompressConfig.java	(revision )
@@ -0,0 +1,123 @@
+package com.baselib.takephoto.compress;
+
+
+import com.baselib.takephoto.model.LubanOptions;
+
+import java.io.Serializable;
+
+/**
+ * 压缩配置类
+ * Author: JPH
+ * Date: 2016/6/7 0007 18:01
+ */
+public class CompressConfig implements Serializable {
+
+    /**
+     * 长或宽不超过的最大像素,单位px
+     */
+    private int maxPixel=1200;
+    /**
+     * 压缩到的最大大小，单位B
+     */
+    private int maxSize=100*1024;
+
+    /**
+     * 是否启用像素压缩
+     */
+    private boolean enablePixelCompress=true;
+    /**
+     * 是否启用质量压缩
+     */
+    private boolean enableQualityCompress=true;
+
+    /**
+     * 是否保留原文件
+     */
+    private boolean enableReserveRaw = true;
+
+    /**
+     * Luban压缩配置
+     */
+    private LubanOptions lubanOptions;
+    public static CompressConfig ofDefaultConfig(){
+        return new CompressConfig();
+    }
+    public static CompressConfig ofLuban(LubanOptions options){
+        return new CompressConfig(options);
+    }
+    private CompressConfig(){}
+    private CompressConfig(LubanOptions options){
+        this.lubanOptions=options;
+    }
+
+    public LubanOptions getLubanOptions() {
+        return lubanOptions;
+    }
+
+    public int getMaxPixel() {
+        return maxPixel;
+    }
+    public CompressConfig setMaxPixel(int maxPixel) {
+        this.maxPixel = maxPixel;
+        return this;
+    }
+    public int getMaxSize() {
+        return maxSize;
+    }
+    public void setMaxSize(int maxSize) {
+        this.maxSize = maxSize;
+    }
+
+    public boolean isEnablePixelCompress() {
+        return enablePixelCompress;
+    }
+
+    public void enablePixelCompress(boolean enablePixelCompress) {
+        this.enablePixelCompress = enablePixelCompress;
+    }
+
+    public boolean isEnableQualityCompress() {
+        return enableQualityCompress;
+    }
+
+    public void enableQualityCompress(boolean enableQualityCompress) {
+        this.enableQualityCompress = enableQualityCompress;
+    }
+
+    public boolean isEnableReserveRaw() {
+        return enableReserveRaw;
+    }
+    public void enableReserveRaw(boolean enableReserveRaw) {
+        this.enableReserveRaw = enableReserveRaw;
+    }
+    public static class Builder{
+        private CompressConfig config;
+        public Builder() {
+            config=new CompressConfig();
+        }
+        public Builder setMaxSize(int maxSize) {
+            config.setMaxSize( maxSize);
+            return this;
+        }
+        public Builder setMaxPixel(int maxPixel) {
+            config.setMaxPixel(maxPixel);
+            return this;
+        }
+        public Builder enablePixelCompress(boolean enablePixelCompress) {
+            config.enablePixelCompress(enablePixelCompress);
+            return this;
+        }
+        public Builder enableQualityCompress(boolean enableQualityCompress) {
+            config.enableQualityCompress(enableQualityCompress);
+            return this;
+        }
+        public Builder enableReserveRaw(boolean enableReserveRaw) {
+            config.enableReserveRaw(enableReserveRaw);
+            return this;
+        }
+        public CompressConfig create(){
+            return config;
+        }
+    }
+}
+
Index: app/src/main/java/com/b3ad/yuxie/myapplication/activity/RxjavaActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/activity/RxjavaActivity.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/activity/RxjavaActivity.java	(revision )
@@ -0,0 +1,66 @@
+package com.b3ad.yuxie.myapplication.activity;
+
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+
+import com.b3ad.yuxie.myapplication.R;
+
+
+public class RxjavaActivity extends AppCompatActivity {
+
+//    private Observable<String> observable;
+//    private Observer<String> observer;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_rxjava);
+    }
+
+    public void doClick(View View) {
+
+//        //被观察者
+//        observable = Observable.create(new ObservableOnSubscribe<String>() {
+//            @Override
+//            public void subscribe(ObservableEmitter<String> e) throws Exception {
+//                //执行一些其他操作
+//                // .............
+//                // 执行完毕，触发回调，通知观察者
+//                e.onNext("我来发射数据");
+//            }
+//        });
+//        //观察者
+//        observer = new Observer<String>() {
+//            @Override
+//            public void onSubscribe(Disposable d) {
+//                Log.i("TAG", "onSubscribe");
+//            }
+//
+//            @Override
+//            public void onNext(String aLong) {//观察者接收到通知,进行相关操作
+//                Log.i("TAG", "aLong:"+aLong);
+//                Log.i("TAG", "我接收到数据了");
+//            }
+//
+//            @Override
+//            public void onError(Throwable e) {
+//                Log.i("TAG", "onError");
+//            }
+//
+//            @Override
+//            public void onComplete() {
+//                Log.i("TAG", "onComplete");
+//            }
+//        };
+//
+//        observable.subscribe(observer);
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+//        observable.unsubscribeOn()
+    }
+}
Index: baselib/src/main/java/com/baselib/baserx/ServerException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baserx/ServerException.java	(revision )
+++ baselib/src/main/java/com/baselib/baserx/ServerException.java	(revision )
@@ -0,0 +1,14 @@
+package com.baselib.baserx;
+
+/**
+ * 作者: liuhuaqian on 2017/9/8.
+ * 服务器请求异常
+ */
+
+public class ServerException  extends Exception{
+
+    public ServerException(String msg){
+        super(msg);
+    }
+
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/ShellUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/ShellUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/ShellUtils.java	(revision )
@@ -0,0 +1,161 @@
+package com.baselib.utilcode.util;
+
+import java.io.BufferedReader;
+import java.io.DataOutputStream;
+import java.io.InputStreamReader;
+import java.util.List;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/07
+ *     desc  : Shell相关工具类
+ * </pre>
+ */
+public final class ShellUtils {
+
+    private ShellUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 是否是在root下执行命令
+     *
+     * @param command 命令
+     * @param isRoot  是否需要root权限执行
+     * @return CommandResult
+     */
+    public static CommandResult execCmd(final String command, final boolean isRoot) {
+        return execCmd(new String[]{command}, isRoot, true);
+    }
+
+    /**
+     * 是否是在root下执行命令
+     *
+     * @param commands 多条命令链表
+     * @param isRoot   是否需要root权限执行
+     * @return CommandResult
+     */
+    public static CommandResult execCmd(final List<String> commands, final boolean isRoot) {
+        return execCmd(commands == null ? null : commands.toArray(new String[]{}), isRoot, true);
+    }
+
+    /**
+     * 是否是在root下执行命令
+     *
+     * @param commands 多条命令数组
+     * @param isRoot   是否需要root权限执行
+     * @return CommandResult
+     */
+    public static CommandResult execCmd(final String[] commands, final boolean isRoot) {
+        return execCmd(commands, isRoot, true);
+    }
+
+    /**
+     * 是否是在root下执行命令
+     *
+     * @param command         命令
+     * @param isRoot          是否需要root权限执行
+     * @param isNeedResultMsg 是否需要结果消息
+     * @return CommandResult
+     */
+    public static CommandResult execCmd(final String command, final boolean isRoot, final boolean isNeedResultMsg) {
+        return execCmd(new String[]{command}, isRoot, isNeedResultMsg);
+    }
+
+    /**
+     * 是否是在root下执行命令
+     *
+     * @param commands        命令链表
+     * @param isRoot          是否需要root权限执行
+     * @param isNeedResultMsg 是否需要结果消息
+     * @return CommandResult
+     */
+    public static CommandResult execCmd(final List<String> commands, final boolean isRoot, final boolean isNeedResultMsg) {
+        return execCmd(commands == null ? null : commands.toArray(new String[]{}), isRoot, isNeedResultMsg);
+    }
+
+    /**
+     * 是否是在root下执行命令
+     *
+     * @param commands        命令数组
+     * @param isRoot          是否需要root权限执行
+     * @param isNeedResultMsg 是否需要结果消息
+     * @return CommandResult
+     */
+    public static CommandResult execCmd(final String[] commands, final boolean isRoot, final boolean isNeedResultMsg) {
+        int result = -1;
+        if (commands == null || commands.length == 0) {
+            return new CommandResult(result, null, null);
+        }
+        Process process = null;
+        BufferedReader successResult = null;
+        BufferedReader errorResult = null;
+        StringBuilder successMsg = null;
+        StringBuilder errorMsg = null;
+        DataOutputStream os = null;
+        try {
+            process = Runtime.getRuntime().exec(isRoot ? "su" : "sh");
+            os = new DataOutputStream(process.getOutputStream());
+            for (String command : commands) {
+                if (command == null) continue;
+                os.write(command.getBytes());
+                os.writeBytes("\n");
+                os.flush();
+            }
+            os.writeBytes("exit\n");
+            os.flush();
+            result = process.waitFor();
+            if (isNeedResultMsg) {
+                successMsg = new StringBuilder();
+                errorMsg = new StringBuilder();
+                successResult = new BufferedReader(new InputStreamReader(process.getInputStream(), "UTF-8"));
+                errorResult = new BufferedReader(new InputStreamReader(process.getErrorStream(), "UTF-8"));
+                String s;
+                while ((s = successResult.readLine()) != null) {
+                    successMsg.append(s);
+                }
+                while ((s = errorResult.readLine()) != null) {
+                    errorMsg.append(s);
+                }
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            CloseUtils.closeIO(os, successResult, errorResult);
+            if (process != null) {
+                process.destroy();
+            }
+        }
+        return new CommandResult(
+                result,
+                successMsg == null ? null : successMsg.toString(),
+                errorMsg == null ? null : errorMsg.toString()
+        );
+    }
+
+    /**
+     * 返回的命令结果
+     */
+    public static class CommandResult {
+        /**
+         * 结果码
+         **/
+        public int    result;
+        /**
+         * 成功信息
+         **/
+        public String successMsg;
+        /**
+         * 错误信息
+         **/
+        public String errorMsg;
+
+        public CommandResult(final int result, final String successMsg, final String errorMsg) {
+            this.result = result;
+            this.successMsg = successMsg;
+            this.errorMsg = errorMsg;
+        }
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/ndk/NdkJniUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/ndk/NdkJniUtils.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/ndk/NdkJniUtils.java	(revision )
@@ -0,0 +1,14 @@
+package com.b3ad.yuxie.myapplication.ndk;
+
+/**
+ * Created by Administrator on 2017/7/14.
+ */
+
+public class NdkJniUtils {
+
+//    static {
+//        System.loadLibrary("print");   //defaultConfig.ndk.moduleName
+//    }
+
+//    public native String getCLanguageString();
+}
Index: baselib/src/main/java/com/baselib/ui/widget/LoadingDialog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/LoadingDialog.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/LoadingDialog.java	(revision )
@@ -0,0 +1,55 @@
+package com.baselib.ui.widget;
+
+import android.app.Activity;
+import android.app.Dialog;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.baselib.R;
+import com.baselib.baseapp.BaseApplication;
+
+/**
+ * 弹窗浮动加载进度条
+ * 作者: liuhuaqian on 2017/9/8.
+ */
+
+public class LoadingDialog {
+    /**
+     * 加载数据对话框
+     */
+    private static  Dialog mLoadingDialog;
+
+    /**
+     * 显示加载对话框
+     *
+     * @param context    上下文
+     * @param msg        对话框显示内容
+     * @param cancelable 对话框是否可以取消
+     */
+    public static synchronized Dialog showDialogForLoading(Activity context, String msg, boolean cancelable) {
+        View view = LayoutInflater.from(context).inflate(R.layout.dialog_loading, null);
+        TextView loadingText = (TextView) view.findViewById(R.id.id_tv_loading_dialog_text);
+        loadingText.setText(msg);
+        mLoadingDialog = new Dialog(context, R.style.CustomProgressDialog);
+        mLoadingDialog.setCancelable(cancelable);
+        mLoadingDialog.setCanceledOnTouchOutside(false);
+        mLoadingDialog.setContentView(view, new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT));
+        mLoadingDialog.show();
+        return mLoadingDialog;
+    }
+
+    public static synchronized Dialog showDialogForLoading(Activity context) {
+        return showDialogForLoading(context, BaseApplication.getAppContext().getString(R.string.loading), true);
+    }
+
+    /**
+     * 关闭加载对话框
+     */
+    public static synchronized void cancelDialogForLoading() {
+        if (mLoadingDialog != null) {
+            mLoadingDialog.cancel();
+        }
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/ToastUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/ToastUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/ToastUtils.java	(revision )
@@ -0,0 +1,272 @@
+package com.baselib.utilcode.util;
+
+import android.content.Context;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffColorFilter;
+import android.graphics.drawable.Drawable;
+import android.os.Handler;
+import android.os.Looper;
+import android.support.annotation.ColorInt;
+import android.support.annotation.DrawableRes;
+import android.support.annotation.LayoutRes;
+import android.support.annotation.NonNull;
+import android.support.annotation.StringRes;
+import android.support.v4.widget.TextViewCompat;
+import android.text.TextUtils;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import java.lang.ref.WeakReference;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/09/29
+ *     desc  : 吐司相关工具类
+ * </pre>
+ */
+public final class ToastUtils {
+
+    private static final int COLOR_DEFAULT = 0xFEFFFFFF;
+    private static final Handler HANDLER = new Handler(Looper.getMainLooper());
+
+    private static Toast sToast;
+    private static WeakReference<View> sViewWeakReference;
+    private static int sLayoutId = -1;
+//    private static int gravity = Gravity.CENTER_HORIZONTAL | Gravity.BOTTOM;
+    private static int gravity = Gravity.CENTER;
+    private static int xOffset = 0;
+//    private static int yOffset = (int) (64 * Utils.getApp().getResources().getDisplayMetrics().density + 0.5);
+    private static int yOffset = 0;
+    private static int bgColor = COLOR_DEFAULT;
+    private static int bgResource = -1;
+    private static int msgColor = COLOR_DEFAULT;
+
+    private ToastUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 设置吐司位置
+     *
+     * @param gravity 位置
+     * @param xOffset x偏移
+     * @param yOffset y偏移
+     */
+    public static void setGravity(final int gravity, final int xOffset, final int yOffset) {
+        ToastUtils.gravity = gravity;
+        ToastUtils.xOffset = xOffset;
+        ToastUtils.yOffset = yOffset;
+    }
+
+    /**
+     * 设置背景颜色
+     *
+     * @param backgroundColor 背景色
+     */
+    public static void setBgColor(@ColorInt final int backgroundColor) {
+        ToastUtils.bgColor = backgroundColor;
+    }
+
+    /**
+     * 设置背景资源
+     *
+     * @param bgResource 背景资源
+     */
+    public static void setBgResource(@DrawableRes final int bgResource) {
+        ToastUtils.bgResource = bgResource;
+    }
+
+    /**
+     * 设置消息颜色
+     *
+     * @param msgColor 颜色
+     */
+    public static void setMsgColor(@ColorInt final int msgColor) {
+        ToastUtils.msgColor = msgColor;
+    }
+
+    /**
+     * 安全地显示短时吐司
+     *
+     * @param text 文本
+     */
+    public static void showShort(@NonNull final CharSequence text) {
+        show(text, Toast.LENGTH_SHORT);
+    }
+
+    /**
+     * 安全地显示短时吐司
+     *
+     * @param resId 资源Id
+     */
+    public static void showShort(@StringRes final int resId) {
+        show(resId, Toast.LENGTH_SHORT);
+    }
+
+    /**
+     * 安全地显示短时吐司
+     *
+     * @param resId 资源Id
+     * @param args  参数
+     */
+    public static void showShort(@StringRes final int resId, final Object... args) {
+        show(resId, Toast.LENGTH_SHORT, args);
+    }
+
+    /**
+     * 安全地显示短时吐司
+     *
+     * @param format 格式
+     * @param args   参数
+     */
+    public static void showShort(final String format, final Object... args) {
+        show(format, Toast.LENGTH_SHORT, args);
+    }
+
+    /**
+     * 安全地显示长时吐司
+     *
+     * @param text 文本
+     */
+    public static void showLong(@NonNull final CharSequence text) {
+        show(text, Toast.LENGTH_LONG);
+    }
+
+    /**
+     * 安全地显示长时吐司
+     *
+     * @param resId 资源Id
+     */
+    public static void showLong(@StringRes final int resId) {
+        show(resId, Toast.LENGTH_LONG);
+    }
+
+    /**
+     * 安全地显示长时吐司
+     *
+     * @param resId 资源Id
+     * @param args  参数
+     */
+    public static void showLong(@StringRes final int resId, final Object... args) {
+        show(resId, Toast.LENGTH_LONG, args);
+    }
+
+    /**
+     * 安全地显示长时吐司
+     *
+     * @param format 格式
+     * @param args   参数
+     */
+    public static void showLong(final String format, final Object... args) {
+        show(format, Toast.LENGTH_LONG, args);
+    }
+
+    /**
+     * 安全地显示短时自定义吐司
+     */
+    public static View showCustomShort(@LayoutRes final int layoutId) {
+        final View view = getView(layoutId);
+        show(view, Toast.LENGTH_SHORT);
+        return view;
+    }
+
+    /**
+     * 安全地显示长时自定义吐司
+     */
+    public static View showCustomLong(@LayoutRes final int layoutId) {
+        final View view = getView(layoutId);
+        show(view, Toast.LENGTH_LONG);
+        return view;
+    }
+
+    /**
+     * 取消吐司显示
+     */
+    public static void cancel() {
+        if (sToast != null) {
+            sToast.cancel();
+            sToast = null;
+        }
+    }
+
+    private static void show(@StringRes final int resId, final int duration) {
+        show(Utils.getApp().getResources().getText(resId).toString(), duration);
+    }
+
+    private static void show(@StringRes final int resId, final int duration, final Object... args) {
+        show(String.format(Utils.getApp().getResources().getString(resId), args), duration);
+    }
+
+    private static void show(final String format, final int duration, final Object... args) {
+        show(String.format(format, args), duration);
+    }
+
+    private static void show(final CharSequence text, final int duration) {
+        if (TextUtils.isEmpty(text)) {
+            //文本没有内容,不Toast
+            return;
+        }
+
+        HANDLER.post(new Runnable() {
+            @Override
+            public void run() {
+                cancel();
+                sToast = Toast.makeText(Utils.getApp(), text, duration);
+                // solve the font of toast
+                TextView tvMessage = (TextView) sToast.getView().findViewById(android.R.id.message);
+                TextViewCompat.setTextAppearance(tvMessage, android.R.style.TextAppearance);
+                tvMessage.setTextColor(msgColor);
+                tvMessage.setTextSize(16);
+                tvMessage.setMaxLines(2);
+                setBgAndGravity();
+                sToast.show();
+            }
+        });
+    }
+
+    public static void show(final View view, final int duration) {
+        HANDLER.post(new Runnable() {
+            @Override
+            public void run() {
+                cancel();
+                sToast = new Toast(Utils.getApp());
+                sToast.setView(view);
+                sToast.setDuration(duration);
+                setBgAndGravity();
+                sToast.show();
+            }
+        });
+    }
+
+    private static void setBgAndGravity() {
+        View toastView = sToast.getView();
+        if (bgResource != -1) {
+            toastView.setBackgroundResource(bgResource);
+        } else if (bgColor != COLOR_DEFAULT) {
+            Drawable background = toastView.getBackground();
+            background.setColorFilter(new PorterDuffColorFilter(bgColor, PorterDuff.Mode.SRC_IN));
+        }
+        sToast.setGravity(gravity, xOffset, yOffset);
+    }
+
+    private static View getView(@LayoutRes final int layoutId) {
+        if (sLayoutId == layoutId) {
+            if (sViewWeakReference != null) {
+                final View toastView = sViewWeakReference.get();
+                if (toastView != null) {
+                    return toastView;
+                }
+            }
+        }
+        LayoutInflater inflate = (LayoutInflater) Utils.getApp().getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+        final View toastView = inflate.inflate(layoutId, null);
+        sViewWeakReference = new WeakReference<>(toastView);
+        sLayoutId = layoutId;
+        return toastView;
+    }
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/listview/CommonAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/listview/CommonAdapter.java	(revision )
+++ baselib/src/main/java/com/baselib/listview/CommonAdapter.java	(revision )
@@ -0,0 +1,38 @@
+package com.baselib.listview;
+
+import android.content.Context;
+
+import java.util.List;
+
+public abstract class CommonAdapter<T> extends MultiItemTypeAdapter<T>
+{
+
+    public CommonAdapter(Context context, final int layoutId, List<T> datas)
+    {
+        super(context, datas);
+
+        addItemViewDelegate(new ItemViewDelegate<T>()
+        {
+            @Override
+            public int getItemViewLayoutId()
+            {
+                return layoutId;
+            }
+
+            @Override
+            public boolean isForViewType(T item, int position)
+            {
+                return true;
+            }
+
+            @Override
+            public void convert(ViewHolder holder, T t, int position)
+            {
+                CommonAdapter.this.convert(holder, t, position);
+            }
+        });
+    }
+
+    protected abstract void convert(ViewHolder viewHolder, T item, int position);
+
+}
Index: baselib/src/main/java/com/baselib/recycleview/ItemViewDelegate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/ItemViewDelegate.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/ItemViewDelegate.java	(revision )
@@ -0,0 +1,12 @@
+package com.baselib.recycleview;
+
+
+public interface ItemViewDelegate<T>
+{
+    public abstract int getItemViewLayoutId();
+
+    public abstract boolean isForViewType(T item, int position);
+
+    public abstract void convert(ViewHolder holder, T t, int position);
+
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/mvp/model/UserModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/mvp/model/UserModel.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/mvp/model/UserModel.java	(revision )
@@ -0,0 +1,51 @@
+package com.b3ad.yuxie.myapplication.mvp.model;
+
+import android.util.SparseArray;
+
+import com.b3ad.yuxie.myapplication.mvp.bean.UserBean;
+
+
+public class UserModel implements IUserModel {
+
+	private String mFristName;
+	private String mLastName;
+	private String mAddress;
+	private int mID;
+	private SparseArray<UserBean> mUsererArray = new SparseArray<UserBean>();
+
+	@Override
+	public void setID(int id) {
+		// TODO Auto-generated method stub
+		mID = id;
+	}
+
+	@Override
+	public void setFirstName(String firstName) {
+		// TODO Auto-generated method stub
+		mFristName = firstName;
+	}
+
+	@Override
+	public void setAddress(String address) {
+		mAddress=address;
+		UserBean UserBean = new UserBean(mFristName, mLastName,mAddress);
+		mUsererArray.append(mID, UserBean);
+	}
+
+	@Override
+	public void setLastName(String lastName) {
+		// TODO Auto-generated method stub
+		mLastName = lastName;
+	}
+
+	@Override
+	public UserBean load(int id) {
+		// TODO Auto-generated method stub
+		mID = id;
+		UserBean userBean = mUsererArray.get(mID, new UserBean("not found",
+				"not found","not found"));
+		return userBean;
+
+	}
+
+}
Index: baselib/src/main/res/values/style.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/values/style.xml	(revision )
+++ baselib/src/main/res/values/style.xml	(revision )
@@ -0,0 +1,29 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <!--普通dialog-->
+    <style name="CustomProgressDialog" parent="@style/CustomDialog">
+        <item name="android:windowBackground">@android:color/transparent</item>
+        <item name="android:windowNoTitle">true</item>
+    </style>
+
+    <style name="CustomDialog" parent="@android:style/Theme.Dialog">
+        <item name="android:windowFrame">@null</item>
+        <item name="android:windowIsFloating">true</item>
+        <item name="android:windowContentOverlay">@null</item>
+        <item name="android:windowAnimationStyle">@android:style/Animation.Dialog</item>
+        <item name="android:windowSoftInputMode">stateUnspecified|adjustPan</item>
+    </style>
+    <!-- 状态栏 -->
+    <style name="MyToolBar" parent="@android:style/Widget.Holo.Light.ActionBar">
+        <item name="android:background">?colorPrimary</item>
+        <item name="android:textColorPrimary">@android:color/white</item>
+        <item name="android:textColorSecondary">@android:color/white</item>
+        <item name="colorControlActivated">@android:color/white</item>
+    </style>
+
+    <style name="Toolbar.TitleText" parent="TextAppearance.Widget.AppCompat.Toolbar.Title">
+        <item name="android:textSize">21dp</item>
+        <item name="android:textColor">@android:color/white</item>
+        <item name="android:textStyle">normal</item>
+    </style>
+</resources>
\ No newline at end of file
Index: app/src/main/res/values/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/dimens.xml	(revision )
+++ app/src/main/res/values/dimens.xml	(revision )
@@ -0,0 +1,5 @@
+<resources>
+    <dimen name="fab_margin">16dp</dimen>
+    <dimen name="activity_horizontal_margin">16dp</dimen>
+    <dimen name="activity_vertical_margin">16dp</dimen>
+</resources>
Index: baselib/src/main/java/com/baselib/commonwidget/StatusBarCompat.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/commonwidget/StatusBarCompat.java	(revision )
+++ baselib/src/main/java/com/baselib/commonwidget/StatusBarCompat.java	(revision )
@@ -0,0 +1,159 @@
+package com.baselib.commonwidget;
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Color;
+import android.os.Build;
+import android.support.v4.view.ViewCompat;
+import android.view.Gravity;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.FrameLayout;
+/**
+ *
+ * Created by liuhuaqian on 2017/9/6.
+ * 透明状态栏
+ */
+
+public class StatusBarCompat {
+    private static final int COLOR_TRANSLUCENT = Color.parseColor("#00000000");
+
+    public static final int DEFAULT_COLOR_ALPHA = 112;
+
+    /**
+     * set statusBarColor
+     * @param statusColor color
+     * @param alpha 0 - 255
+     */
+    public static void setStatusBarColor(Activity activity, int statusColor, int alpha) {
+        setStatusBarColor(activity, calculateStatusBarColor(statusColor, alpha));
+    }
+    public static void setStatusBarColor(Activity activity, int statusColor) {
+        Window window = activity.getWindow();
+        ViewGroup mContentView = (ViewGroup) activity.findViewById(Window.ID_ANDROID_CONTENT);
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            //First translucent status bar.
+            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+                //After LOLLIPOP not translucent status bar
+                window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+                //Then call setStatusBarColor.
+                window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
+                window.setStatusBarColor(statusColor);
+                //set child View not fill the system window
+                View mChildView = mContentView.getChildAt(0);
+                if (mChildView != null) {
+                    ViewCompat.setFitsSystemWindows(mChildView, true);
+                }
+            } else {
+                ViewGroup mDecorView = (ViewGroup) window.getDecorView();
+                if (mDecorView.getTag() != null && mDecorView.getTag() instanceof Boolean && (Boolean)mDecorView.getTag()) {
+                    //if has add fake status bar view
+                    View mStatusBarView = mDecorView.getChildAt(0);
+                    if (mStatusBarView != null) {
+                        mStatusBarView.setBackgroundColor(statusColor);
+                    }
+                } else {
+                    int statusBarHeight = getStatusBarHeight(activity);
+                    //add margin
+                    View mContentChild = mContentView.getChildAt(0);
+                    if (mContentChild != null) {
+                        ViewCompat.setFitsSystemWindows(mContentChild, false);
+                        FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) mContentChild.getLayoutParams();
+                        lp.topMargin += statusBarHeight;
+                        mContentChild.setLayoutParams(lp);
+                    }
+                    //add fake status bar view
+                    View mStatusBarView = new View(activity);
+                    FrameLayout.LayoutParams layoutParams = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, statusBarHeight);
+                    layoutParams.gravity = Gravity.TOP;
+                    mStatusBarView.setLayoutParams(layoutParams);
+                    mStatusBarView.setBackgroundColor(statusColor);
+                    mDecorView.addView(mStatusBarView, 0);
+                    mDecorView.setTag(true);
+                }
+            }
+        }
+    }
+
+    public static void translucentStatusBar(Activity activity) {
+        translucentStatusBar(activity, false);
+    }
+
+    /**
+     * change to full screen mode
+     * @param hideStatusBarBackground hide status bar alpha Background when SDK > 21, true if hide it
+     */
+    public static void translucentStatusBar(Activity activity, boolean hideStatusBarBackground) {
+        Window window = activity.getWindow();
+        ViewGroup mContentView = (ViewGroup) activity.findViewById(Window.ID_ANDROID_CONTENT);
+
+        //set child View not fill the system window
+        View mChildView = mContentView.getChildAt(0);
+        if (mChildView != null) {
+            ViewCompat.setFitsSystemWindows(mChildView, false);
+        }
+
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            int statusBarHeight = getStatusBarHeight(activity);
+
+            //First translucent status bar.
+            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+                //After LOLLIPOP just set LayoutParams.
+                window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
+                if (hideStatusBarBackground) {
+                    window.clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+                    window.setStatusBarColor(COLOR_TRANSLUCENT);
+                } else {
+                    window.setStatusBarColor(calculateStatusBarColor(COLOR_TRANSLUCENT, DEFAULT_COLOR_ALPHA));
+                }
+                //must call requestApplyInsets, otherwise it will have space in screen bottom
+                if (mChildView != null) {
+                    ViewCompat.requestApplyInsets(mChildView);
+                }
+            } else {
+                ViewGroup mDecorView = (ViewGroup) window.getDecorView();
+                if (mDecorView.getTag() != null && mDecorView.getTag() instanceof Boolean && (Boolean)mDecorView.getTag()) {
+                    mChildView = mDecorView.getChildAt(0);
+                    //remove fake status bar view.
+                    mContentView.removeView(mChildView);
+                    mChildView = mContentView.getChildAt(0);
+                    if (mChildView != null) {
+                        FrameLayout.LayoutParams lp = (FrameLayout.LayoutParams) mChildView.getLayoutParams();
+                        //cancel the margin top
+                        if (lp != null && lp.topMargin >= statusBarHeight) {
+                            lp.topMargin -= statusBarHeight;
+                            mChildView.setLayoutParams(lp);
+                        }
+                    }
+                    mDecorView.setTag(false);
+                }
+            }
+        }
+    }
+
+    //Get status bar height
+    public static int getStatusBarHeight(Context context) {
+        int result = 0;
+        int resId = context.getResources().getIdentifier("status_bar_height", "dimen", "android");
+        if (resId > 0) {
+            result = context.getResources().getDimensionPixelOffset(resId);
+        }
+        return result;
+    }
+
+    //Get alpha color
+    private static int calculateStatusBarColor(int color, int alpha) {
+        float a = 1 - alpha / 255f;
+        int red = color >> 16 & 0xff;
+        int green = color >> 8 & 0xff;
+        int blue = color & 0xff;
+        red = (int) (red * a + 0.5);
+        green = (int) (green * a + 0.5);
+        blue = (int) (blue * a + 0.5);
+        return 0xff << 24 | red << 16 | green << 8 | blue;
+    }
+}
Index: baselib/src/main/res/drawable/shape_normal_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/drawable/shape_normal_bg.xml	(revision )
+++ baselib/src/main/res/drawable/shape_normal_bg.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <solid android:color="#EEEEEE" />
+
+    <padding
+        android:bottom="2dp"
+        android:left="10dp"
+        android:right="10dp"
+        android:top="2dp" />
+
+
+</shape>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/takephoto/uitl/TUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/uitl/TUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/uitl/TUtils.java	(revision )
@@ -0,0 +1,204 @@
+package com.baselib.takephoto.uitl;
+
+import android.app.Activity;
+import android.app.ProgressDialog;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.net.Uri;
+import android.os.Build;
+import android.support.v4.content.FileProvider;
+import android.text.TextUtils;
+import android.util.Log;
+import android.widget.Toast;
+
+import com.darsh.multipleimageselect.models.Image;
+import com.baselib.R;
+import com.baselib.takephoto.model.CropOptions;
+import com.baselib.takephoto.model.TContextWrap;
+import com.baselib.takephoto.model.TException;
+import com.baselib.takephoto.model.TExceptionType;
+import com.baselib.takephoto.model.TImage;
+import com.baselib.takephoto.model.TIntentWap;
+import com.soundcloud.android.crop.Crop;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * 工具类
+ * Author: JPH
+ * Date: 2016/7/26 10:04
+ */
+public class TUtils {
+    private static final String TAG = IntentUtils.class.getName();
+
+
+    /**
+     * 将Image集合转换成Uri集合
+     * @param images
+     * @return
+     */
+    public static ArrayList<Uri> convertImageToUri(Context context,ArrayList<Image>images) throws TException {
+        ArrayList<Uri>uris=new ArrayList();
+        for(Image image:images){
+            uris.add(FileProvider.getUriForFile(context,TConstant.getFileProviderName(context), new File(image.path)));
+        }
+        return uris;
+    }
+    /**
+     * 将Image集合转换成TImage集合
+     * @param images
+     * @return
+     */
+    public static ArrayList<TImage> getTImagesWithImages(ArrayList<Image>images, TImage.FromType fromType){
+        ArrayList<TImage>tImages=new ArrayList();
+        for(Image image:images){
+            tImages.add(TImage.of(image.path, fromType));
+        }
+        return tImages;
+    }
+    /**
+     * 将Uri集合转换成TImage集合
+     * @param uris
+     * @return
+     */
+    public static ArrayList<TImage> getTImagesWithUris(ArrayList<Uri>uris, TImage.FromType fromType){
+        ArrayList<TImage>tImages=new ArrayList();
+        for(Uri uri:uris){
+            tImages.add(TImage.of(uri, fromType));
+        }
+        return tImages;
+    }
+    /**
+     * @param contextWrap
+     * @param intentWap
+     */
+    public static void startActivityForResult(TContextWrap contextWrap,TIntentWap intentWap){
+        if (contextWrap.getFragment()!=null){
+            contextWrap.getFragment().startActivityForResult(intentWap.getIntent(),intentWap.getRequestCode());
+        }else {
+            contextWrap.getActivity().startActivityForResult(intentWap.getIntent(),intentWap.getRequestCode());
+        }
+    }
+    /**
+     * 安全地发送Intent
+     * @param contextWrap
+     * @param intentWapList 要发送的Intent以及候选Intent
+     * @param defaultIndex 默认发送的Intent
+     * @param isCrop 是否为裁切照片的Intent
+     * @throws TException
+     */
+    public static void sendIntentBySafely(TContextWrap contextWrap, List<TIntentWap> intentWapList, int defaultIndex, boolean isCrop)throws TException{
+        if (defaultIndex+1>intentWapList.size())throw new TException(isCrop? TExceptionType.TYPE_NO_MATCH_PICK_INTENT:TExceptionType.TYPE_NO_MATCH_CROP_INTENT);
+        TIntentWap intentWap=intentWapList.get(defaultIndex);
+        List result=contextWrap.getActivity().getPackageManager().queryIntentActivities(intentWap.getIntent(),PackageManager.MATCH_ALL);
+        if (result.isEmpty()){
+            sendIntentBySafely(contextWrap,intentWapList,++defaultIndex,isCrop);
+        }else {
+            startActivityForResult(contextWrap,intentWap);
+        }
+    }
+    /**
+     * 拍照前检查是否有相机
+     **/
+    public static void captureBySafely(TContextWrap contextWrap,TIntentWap intentWap)throws TException{
+        List result=contextWrap.getActivity().getPackageManager().queryIntentActivities(intentWap.getIntent(),PackageManager.MATCH_ALL);
+        if (result.isEmpty()){
+            Toast.makeText(contextWrap.getActivity(),contextWrap.getActivity().getResources().getText(R.string.tip_no_camera),Toast.LENGTH_SHORT).show();
+            throw new TException(TExceptionType.TYPE_NO_CAMERA);
+        }else {
+            startActivityForResult(contextWrap,intentWap);
+        }
+    }
+    /**
+     * 通过第三方工具裁切照片，当没有第三方裁切工具时，会自动使用自带裁切工具进行裁切
+     * @param contextWrap
+     * @param imageUri
+     * @param outPutUri
+     * @param options
+     */
+    public static void cropWithOtherAppBySafely(TContextWrap contextWrap, Uri imageUri, Uri outPutUri, CropOptions options){
+        Intent nativeCropIntent=IntentUtils.getCropIntentWithOtherApp(imageUri, outPutUri,options);
+        List result=contextWrap.getActivity().getPackageManager().queryIntentActivities(nativeCropIntent,PackageManager.MATCH_ALL);
+        if (result.isEmpty()){
+            cropWithOwnApp(contextWrap,imageUri,outPutUri,options);
+        }else {
+//            try {
+//                imageUri=Uri.fromFile(new File(TUriParse.getFilePathWithDocumentsUri(imageUri,contextWrap.getActivity())));
+//            } catch (TException e) {
+//                e.printStackTrace();
+//            }
+            startActivityForResult(contextWrap,new TIntentWap(IntentUtils.getCropIntentWithOtherApp(imageUri, outPutUri,options), TConstant.RC_CROP));
+        }
+    }
+    /**
+     * 通过TakePhoto自带的裁切工具裁切图片
+     * @param contextWrap
+     * @param imageUri
+     * @param outPutUri
+     * @param options
+     */
+    public static void cropWithOwnApp(TContextWrap contextWrap, Uri imageUri, Uri outPutUri, CropOptions options){
+        if (options.getAspectX()*options.getAspectY()>0){
+            if (contextWrap.getFragment()!=null){
+                Crop.of(imageUri, outPutUri).withAspect(options.getAspectX(),options.getAspectY()).start(contextWrap.getActivity(),contextWrap.getFragment());
+            }else {
+                Crop.of(imageUri, outPutUri).withAspect(options.getAspectX(),options.getAspectY()).start(contextWrap.getActivity());
+            }
+        }else if (options.getOutputX()*options.getOutputY()>0){
+            if (contextWrap.getFragment()!=null){
+                Crop.of(imageUri, outPutUri).withMaxSize(options.getOutputX(),options.getOutputY()).start(contextWrap.getActivity(),contextWrap.getFragment());
+            }else {
+                Crop.of(imageUri, outPutUri).withMaxSize(options.getOutputX(),options.getOutputY()).start(contextWrap.getActivity());
+            }
+        }else {
+            if (contextWrap.getFragment()!=null){
+                Crop.of(imageUri, outPutUri).asSquare().start(contextWrap.getActivity(),contextWrap.getFragment());
+            }else {
+                Crop.of(imageUri, outPutUri).asSquare().start(contextWrap.getActivity());
+            }
+        }
+    }
+    /**
+     * 是否裁剪之后返回数据
+     **/
+    public static boolean isReturnData() {
+        String release= Build.VERSION.RELEASE;
+        int sdk= Build.VERSION.SDK_INT;
+        Log.i(TAG,"release:"+release+"sdk:"+sdk);
+        String manufacturer = android.os.Build.MANUFACTURER;
+        if (!TextUtils.isEmpty(manufacturer)) {
+            if (manufacturer.toLowerCase().contains("lenovo")) {//对于联想的手机返回数据
+                return true;
+            }
+        }
+//        if (sdk>=21){//5.0或以上版本要求返回数据
+//            return  true;
+//        }
+        return false;
+    }
+    /**
+     * 显示圆形进度对话框
+     *
+     * @author JPH
+     * Date 2014-12-12 下午7:04:09
+     * @param activity
+     * @param progressTitle
+     *            显示的标题
+     * @return
+     */
+    public static ProgressDialog showProgressDialog(final Activity activity,
+                                                    String... progressTitle) {
+        if(activity==null||activity.isFinishing())return null;
+        String title = activity.getResources().getString(R.string.tip_tips);
+        if (progressTitle != null && progressTitle.length > 0)
+            title = progressTitle[0];
+        ProgressDialog progressDialog = new ProgressDialog(activity);
+        progressDialog.setTitle(title);
+        progressDialog.setCancelable(false);
+        progressDialog.show();
+        return progressDialog;
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPTheme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPTheme.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPTheme.java	(revision )
@@ -0,0 +1,91 @@
+package com.baselib.ui.widget.mydatepicker;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 主题抽象类
+ * 你可以继承该类定制自己的颜色主题
+ */
+
+public abstract class DPTheme {
+    /**
+     * 月视图背景色
+     *
+     * Color of MonthView's background
+     *
+     * @return 16进制颜色值 hex color
+     */
+    public abstract int colorBG();
+
+    /**
+     * 背景圆颜色
+     *
+     * Color of MonthView's selected circle
+     *
+     * @return 16进制颜色值 hex color
+     */
+    public abstract int colorBGCircle();
+
+    /**
+     * 标题栏背景色
+     *
+     * Color of TitleBar's background
+     *
+     * @return 16进制颜色值 hex color
+     */
+    public abstract int colorTitleBG();
+
+    /**
+     * 标题栏文本颜色
+     *
+     * Color of TitleBar text
+     *
+     * @return 16进制颜色值 hex color
+     */
+    public abstract int colorTitle();
+
+    /**
+     * 今天的背景色
+     *
+     * Color of Today's background
+     *
+     * @return 16进制颜色值 hex color
+     */
+    public abstract int colorToday();
+
+    /**
+     * 公历文本颜色
+     *
+     * Color of Gregorian text
+     *
+     * @return 16进制颜色值 hex color
+     */
+    public abstract int colorG();
+
+    /**
+     * 节日文本颜色
+     *
+     * Color of Festival text
+     *
+     * @return 16进制颜色值 hex color
+     */
+    public abstract int colorF();
+
+    /**
+     * 周末文本颜色
+     *
+     * Color of Weekend text
+     *
+     * @return 16进制颜色值 hex color
+     */
+    public abstract int colorWeekend();
+
+    /**
+     * 假期文本颜色
+     *
+     * Color of Holiday text
+     *
+     * @return 16进制颜色值 hex color
+     */
+    public abstract int colorHoliday();
+}
+
Index: app/src/main/java/com/b3ad/yuxie/myapplication/mvp/model/IUserModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/mvp/model/IUserModel.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/mvp/model/IUserModel.java	(revision )
@@ -0,0 +1,16 @@
+package com.b3ad.yuxie.myapplication.mvp.model;
+
+
+import com.b3ad.yuxie.myapplication.mvp.bean.UserBean;
+
+public interface IUserModel {
+	void setID(int id);
+
+	void setFirstName(String firstName);
+
+	void setLastName(String lastName);
+
+	void setAddress(String address);
+
+	UserBean load(int id);
+}
Index: baselib/src/main/res/layout/title_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/layout/title_dialog.xml	(revision )
+++ baselib/src/main/res/layout/title_dialog.xml	(revision )
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              android:layout_width="match_parent"
+              android:layout_height="match_parent"
+              android:gravity="center"
+              android:orientation="vertical" >
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerHorizontal="true"
+        android:text="正在下载"
+        android:textColor="@color/white"
+        android:textSize="15sp" />
+
+</LinearLayout>
\ No newline at end of file
Index: baselib/src/main/res/layout/view_number_button.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/layout/view_number_button.xml	(revision )
+++ baselib/src/main/res/layout/view_number_button.xml	(revision )
@@ -0,0 +1,62 @@
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:background="@drawable/shape_number_button_bg"
+    android:orientation="horizontal"
+    android:showDividers="middle"
+    android:weightSum="4">
+
+    <TextView
+        android:id="@+id/button_sub"
+        android:layout_width="0dp"
+        android:layout_height="25dp"
+        android:layout_gravity="center"
+        android:layout_weight="1"
+        android:background="@drawable/shape_number_button_left"
+        android:gravity="center"
+        android:minWidth="25dp"
+        android:text="-"
+        android:textColor="#000000"
+        android:textSize="18sp" />
+
+    <View
+        android:layout_width="0.5dp"
+        android:layout_height="25dp"
+        android:background="#ebedf0" />
+
+    <EditText
+        android:id="@+id/text_count"
+        android:layout_width="0dp"
+        android:layout_height="25dp"
+        android:layout_gravity="center"
+        android:layout_weight="2"
+        android:background="@null"
+        android:cursorVisible="true"
+        android:digits="0123456789"
+        android:gravity="center"
+        android:inputType="number"
+        android:minWidth="45dp"
+        android:singleLine="true"
+        android:text="1"
+        android:textColor="#000000"
+        android:textCursorDrawable="@null"
+        android:textSize="15sp" />
+
+    <View
+        android:layout_width="0.5dp"
+        android:layout_height="25dp"
+        android:background="#ebedf0" />
+
+    <TextView
+        android:id="@+id/button_add"
+        android:layout_width="0dp"
+        android:layout_height="25dp"
+        android:layout_gravity="center"
+        android:layout_weight="1"
+        android:background="@drawable/shape_number_button_right"
+        android:gravity="center"
+        android:minWidth="25dp"
+        android:text="+"
+        android:textColor="#000000"
+        android:textSize="18sp" />
+</LinearLayout>
\ No newline at end of file
Index: baselib/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/build.gradle	(revision )
+++ baselib/build.gradle	(revision )
@@ -0,0 +1,166 @@
+apply plugin: 'com.android.library'
+
+android {
+    compileSdkVersion 25
+    buildToolsVersion "26.0.2"
+
+    defaultConfig {
+        minSdkVersion 14
+        targetSdkVersion 25
+        versionCode 1
+        versionName "1.0"
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+        multiDexEnabled true
+
+        //添加如下配置就OK了
+        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
+    }
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+    defaultConfig {
+        ndk {
+            // 设置支持的SO库架构
+            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
+        }
+    }
+    compileOptions {
+        targetCompatibility JavaVersion.VERSION_1_8
+        sourceCompatibility JavaVersion.VERSION_1_8
+    }
+
+
+    //添加如下配置就ok了
+//    lintOptions {
+//        checkReleaseBuilds false
+//        abortOnError false
+//    }
+
+    dexOptions {
+        javaMaxHeapSize "1000"
+        //打开dex增量编译
+        incremental true
+    }
+}
+
+dependencies {
+    compile 'com.nineoldandroids:library:2.4.0'
+    compile 'com.android.support:support-v4:25.3.1'
+    compile 'com.android.support:cardview-v7:25.3.1'
+    compile 'com.android.support:appcompat-v7:25.3.1'
+    compile 'com.android.support:recyclerview-v7:25.3.1'
+    //侧滑菜单效果
+    compile 'com.android.support:design:25.3.1'
+    //BRecyclerViewAdapter
+//    需要先在 build.gradle(Project:XXXX) 的 repositories 添加:
+//    allprojects {
+//        repositories {
+//            maven { url "https://jitpack.io" }
+//        }
+//    }
+    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.22'
+    //蓝牙快速开发框架
+    //    compile 'com.clj.fastble:FastBleLib:1.2.1'
+    //圆形图片类
+    compile 'de.hdodenhof:circleimageview:2.1.0'
+    //图片加载
+    compile 'com.github.bumptech.glide:glide:3.7.0'
+    //Gif动画
+//    compile 'pl.droidsonroids.gif:android-gif-drawable:1.2.6'
+    //rx
+    //    compile 'io.reactivex.rxjava2:rxjava:2.1.3'
+    //    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
+    //    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
+    compile 'io.reactivex:rxjava:1.0.1'
+    compile 'io.reactivex:rxandroid:1.0.1'
+    //retrofit2
+    compile 'com.squareup.okhttp3:okhttp:3.4.1'
+    compile 'com.squareup.okhttp3:okhttp-ws:3.4.1'
+
+    compile 'com.squareup.retrofit2:retrofit:2.0.2'
+    compile 'com.squareup.retrofit2:converter-gson:2.0.2'
+    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
+    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
+    //高德定位功能
+    //定位
+    compile 'com.amap.api:location:latest.integration'
+    //2D地图
+    //    compile 'com.amap.api:map2d:latest.integration'
+    //3D地图so及jar
+    compile 'com.amap.api:3dmap:latest.integration'
+    //搜索功能
+//    compile 'com.amap.api:search:latest.integration'
+
+    //okhttp3
+    //    compile 'com.squareup.okhttp3:okhttp:3.8.1'
+    compile 'com.squareup.retrofit2:converter-scalars:2.1.0'
+    //json 解析
+//    compile 'com.google.code.gson:gson:2.7'
+    //开源框架查看日志
+    compile 'com.orhanobut:logger:1.13'
+    //WheelView滚轮控件
+    compile 'com.wx.wheelview:wheelview:1.3.3'
+    // MultiDex的依赖分包
+    compile 'com.android.support:multidex:1.0.2'
+    //百分比布局
+    compile 'com.zhy:autolayout:1.4.3'
+    // 图表蛛网图形
+    //    compile 'me.xiaopan:spiderwebscoreview:1.0.0'
+    //图表开源库
+    //    compile 'com.github.PhilJay:MPAndroidChart:v3.0.2'
+    compile 'com.jakewharton:butterknife:7.0.1'
+    // 图像剪切
+    compile('com.kevin:crop:1.0.2') {
+        // 如果已经引入 support:appcompat-v7 可以加上这句话
+        exclude group: 'com.android.support', module: 'appcompat-v7'
+    }
+    testCompile 'junit:junit:4.12'
+    //TakePhoto使用包---
+    compile 'com.soundcloud.android.crop:lib_crop:1.0.0'
+    compile 'com.darsh.multipleimageselect:multipleimageselect:1.0.4'
+    compile 'me.shaohui.advancedluban:library:1.3.2'
+    //---TakePhoto使用包
+    //支付宝支付---
+    compile files('libs/alipaySdk-20160802.jar')
+    //---支付宝支付
+
+    //微信支付---
+    compile 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
+    //---微信支付
+
+    //---腾讯Bugly
+    compile 'com.tencent.bugly:crashreport:latest.release'
+    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
+    //compile 'com.tencent.bugly:nativecrashreport:latest.release'
+    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0
+    //---腾讯Bugly
+
+    //二维码扫描和生成
+    // compile 'cn.yipianfengye.android:zxing-library:2.2'
+
+    //友盟---
+    compile files('libs/open_sdk_r5788_lite.jar')
+    compile files('libs/SocialSDK_QQ_Simplify.jar')
+//    compile files('libs/SocialSDK_Sina_Simplify.jar')
+    compile files('libs/SocialSDK_WeChat_Simplify.jar')
+    compile files('libs/umeng_social_api.jar')
+    compile files('libs/umeng_social_net.jar')
+    compile files('libs/umeng_social_shareview.jar')
+    compile files('libs/umeng_social_tool.jar')
+    //友盟---
+
+    //极光推送--
+    compile 'cn.jiguang.sdk:jpush:3.0.9'
+    compile 'cn.jiguang.sdk:jcore:1.1.7'
+    //--极光推送
+
+    //不同状态view
+    compile 'com.github.Kennyc1012:MultiStateView:1.1.1'
+
+    //tabLayout
+    compile 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
+
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/Login/contract/LoginContract.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/Login/contract/LoginContract.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/Login/contract/LoginContract.java	(revision )
@@ -0,0 +1,29 @@
+package com.b3ad.yuxie.myapplication.Login.contract;
+
+import com.b3ad.yuxie.myapplication.Login.presenter.LoginPresenter;
+
+/**
+ * Created by Administrator on 2017/7/25.
+ */
+
+public interface LoginContract {
+    interface Model {
+        void login(String name, String psw, LoginPresenter mLoginPresenter);
+    }
+
+    interface View {
+        void showToast(String msg);
+
+        void onSuccess();
+
+        String getName();
+
+        String getPassWord();
+    }
+
+    interface Presenter {
+        void onSuccess();//登陆成功
+
+        void onfail(String msg);//登陆失败
+    }
+}
Index: baselib/src/main/java/com/baselib/commonutils/TUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/commonutils/TUtil.java	(revision )
+++ baselib/src/main/java/com/baselib/commonutils/TUtil.java	(revision )
@@ -0,0 +1,33 @@
+package com.baselib.commonutils;
+import java.lang.reflect.ParameterizedType;
+import java.lang.reflect.Type;
+/**
+ * Created by liuhuaqian on 2017/9/6.
+ * 类转换初始化
+ */
+
+public class TUtil {
+    public static <T> T getT(Object o, int i) {
+        Type type = o.getClass().getGenericSuperclass();
+        if (type instanceof ParameterizedType) {
+            try {
+                return ((Class<T>) ((ParameterizedType) type).getActualTypeArguments()[i]).newInstance();
+            } catch (InstantiationException e) {
+                e.printStackTrace();
+            } catch (IllegalAccessException e) {
+                e.printStackTrace();
+            }
+        }
+        return null;
+    }
+
+    public static Class<?> forName(String className) {
+        try {
+            return Class.forName(className);
+        } catch (ClassNotFoundException e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+}
+
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/MonthView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/MonthView.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/MonthView.java	(revision )
@@ -0,0 +1,892 @@
+package com.baselib.ui.widget.mydatepicker;
+
+import android.animation.Animator;
+import android.animation.AnimatorListenerAdapter;
+import android.animation.AnimatorSet;
+import android.animation.ObjectAnimator;
+import android.animation.ValueAnimator;
+import android.annotation.TargetApi;
+import android.content.Context;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.Rect;
+import android.graphics.Region;
+import android.graphics.drawable.ShapeDrawable;
+import android.graphics.drawable.shapes.OvalShape;
+import android.os.Build;
+import android.os.Parcelable;
+import android.text.TextUtils;
+import android.view.MotionEvent;
+import android.view.View;
+import android.view.animation.AccelerateInterpolator;
+import android.view.animation.DecelerateInterpolator;
+import android.widget.Scroller;
+
+import com.baselib.commonutils.MeasureUtil;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ */
+
+public class MonthView extends View {
+    private final Region[][] MONTH_REGIONS_4 = new Region[4][7];
+    private final Region[][] MONTH_REGIONS_5 = new Region[5][7];
+    private final Region[][] MONTH_REGIONS_6 = new Region[6][7];
+
+    private final DPInfo[][] INFO_4 = new DPInfo[4][7];
+    private final DPInfo[][] INFO_5 = new DPInfo[5][7];
+    private final DPInfo[][] INFO_6 = new DPInfo[6][7];
+
+    private final Map<String, List<Region>> REGION_SELECTED = new HashMap<>();
+
+    private DPCManager mCManager = DPCManager.getInstance();
+    private DPTManager mTManager = DPTManager.getInstance();
+
+    protected Paint mPaint = new Paint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG |
+            Paint.LINEAR_TEXT_FLAG);
+    private Scroller mScroller;
+    private DecelerateInterpolator decelerateInterpolator = new DecelerateInterpolator();
+    private AccelerateInterpolator accelerateInterpolator = new AccelerateInterpolator();
+    private OnDateChangeListener onDateChangeListener;
+    private DatePicker.OnDatePickedListener onDatePickedListener;
+    private OnDateScrollChangeListener onDateScrollChangeListener; //新加的滑动方向判断 目前没卵用  加着玩
+    private ScaleAnimationListener scaleAnimationListener;
+
+    private DPMode mDPMode = DPMode.MULTIPLE;
+    private SlideMode mSlideMode;
+    private DPDecor mDPDecor;
+
+    private int circleRadius;
+    private int indexYear, indexMonth;
+    private int centerYear, centerMonth;
+    private int leftYear, leftMonth;
+    private int rightYear, rightMonth;
+    private int topYear, topMonth;
+    private int bottomYear, bottomMonth;
+    private int width, height;
+    private int sizeDecor, sizeDecor2x, sizeDecor3x;
+    private int lastPointX, lastPointY;
+    private int lastMoveX, lastMoveY;
+    private int criticalWidth, criticalHeight;
+    private int animZoomOut1, animZoomIn1, animZoomOut2;
+
+    private float sizeTextGregorian, sizeTextFestival;
+    private float offsetYFestival1, offsetYFestival2;
+
+    private boolean isNewEvent,
+            isFestivalDisplay = true,
+            isHolidayDisplay = true,
+            isTodayDisplay = true,
+            isDeferredDisplay = true;
+
+    private boolean isScroll = true; //是否允许滑动
+
+    private boolean isSelChangeColor = false; //选中的日期画笔是否变色
+    private int selChangeTextColor = mTManager.colorG();
+
+    private Map<String, BGCircle> cirApr = new HashMap<>();
+    private Map<String, BGCircle> cirDpr = new HashMap<>();
+
+    private List<String> dateSelected = new ArrayList<>();
+
+    public MonthView(Context context) {
+        super(context);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
+            scaleAnimationListener = new ScaleAnimationListener();
+        }
+        mScroller = new Scroller(context);
+        mPaint.setTextAlign(Paint.Align.CENTER);
+//        mPaint.setColor(0xFFF86E0C);
+    }
+
+    @Override
+    protected Parcelable onSaveInstanceState() {
+        return super.onSaveInstanceState();
+    }
+
+    @Override
+    protected void onRestoreInstanceState(Parcelable state) {
+        super.onRestoreInstanceState(state);
+    }
+
+    @Override
+    public void computeScroll() {
+        if (mScroller.computeScrollOffset()) {
+            scrollTo(mScroller.getCurrX(), mScroller.getCurrY());
+            invalidate();
+        } else {
+            requestLayout();
+        }
+    }
+
+    @Override
+    public boolean onTouchEvent(MotionEvent event) {
+        switch (event.getAction()) {
+            case MotionEvent.ACTION_DOWN:
+                mScroller.forceFinished(true);
+                mSlideMode = null;
+                isNewEvent = true;
+                lastPointX = (int) event.getX();
+                lastPointY = (int) event.getY();
+                break;
+            case MotionEvent.ACTION_MOVE:
+                if (isNewEvent) {
+                    if (Math.abs(lastPointX - event.getX()) > 100) {
+                        mSlideMode = SlideMode.HOR;
+                        isNewEvent = false;
+                    } else if (Math.abs(lastPointY - event.getY()) > 50) {
+                        mSlideMode = SlideMode.VER;
+                        isNewEvent = false;
+                    }
+                }
+                if(isScroll){
+                    if (mSlideMode == SlideMode.HOR) {
+                        int totalMoveX = (int) (lastPointX - event.getX()) + lastMoveX;
+                        smoothScrollTo(totalMoveX, indexYear * height);
+                    } else if (mSlideMode == SlideMode.VER) {
+                        int totalMoveY = (int) (lastPointY - event.getY()) + lastMoveY;
+                        smoothScrollTo(width * indexMonth, totalMoveY);
+                    }
+                }
+                break;
+            case MotionEvent.ACTION_UP:
+                if(isScroll){
+                    if (mSlideMode == SlideMode.VER) {
+                        if (Math.abs(lastPointY - event.getY()) > 25) {
+                            if (lastPointY < event.getY()) {
+                                if (Math.abs(lastPointY - event.getY()) >= criticalHeight) {
+                                    indexYear--;
+                                    centerYear = centerYear - 1;
+
+                                    if(null!=onDateScrollChangeListener){
+                                        onDateScrollChangeListener.scrollBottom(centerYear,centerMonth);
+                                    }
+                                }
+                            } else if (lastPointY > event.getY()) {
+                                if (Math.abs(lastPointY - event.getY()) >= criticalHeight) {
+                                    indexYear++;
+                                    centerYear = centerYear + 1;
+
+                                    if(null!=onDateScrollChangeListener){
+                                        onDateScrollChangeListener.scrollTop(centerYear, centerMonth);
+                                    }
+                                }
+                            }
+                            buildRegion();
+                            computeDate();
+                            smoothScrollTo(width * indexMonth, height * indexYear);
+                            lastMoveY = height * indexYear;
+                        } else {
+                            defineRegion((int) event.getX(), (int) event.getY());
+                        }
+                    } else if (mSlideMode == SlideMode.HOR) {
+                        if (Math.abs(lastPointX - event.getX()) > 25) {
+                            if (lastPointX > event.getX() &&
+                                    Math.abs(lastPointX - event.getX()) >= criticalWidth) {
+                                indexMonth++;
+                                centerMonth = (centerMonth + 1) % 13;
+                                if (centerMonth == 0) {
+                                    centerMonth = 1;
+                                    centerYear++;
+                                }
+                                if(null!=onDateScrollChangeListener){
+                                    onDateScrollChangeListener.scrollLeft(centerYear, centerMonth);
+                                }
+                            } else if (lastPointX < event.getX() &&
+                                    Math.abs(lastPointX - event.getX()) >= criticalWidth) {
+                                indexMonth--;
+                                centerMonth = (centerMonth - 1) % 12;
+                                if (centerMonth == 0) {
+                                    centerMonth = 12;
+                                    centerYear--;
+                                }
+                                if(null!=onDateScrollChangeListener){
+                                    onDateScrollChangeListener.scrollRight(centerYear,centerMonth);
+                                }
+                            }
+                            buildRegion();
+                            computeDate();
+                            smoothScrollTo(width * indexMonth, indexYear * height);
+                            lastMoveX = width * indexMonth;
+                        } else {
+                            defineRegion((int) event.getX(), (int) event.getY());
+                        }
+                    } else {
+                        defineRegion((int) event.getX(), (int) event.getY());
+                    }
+                }
+                break;
+        }
+        return true;
+    }
+
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
+        int measureWidth = MeasureSpec.getSize(widthMeasureSpec);
+        setMeasuredDimension(measureWidth, (int) (measureWidth * 6F / 7F));
+    }
+
+    @Override
+    protected void onSizeChanged(int w, int h, int oldW, int oldH) {
+        width = w;
+        height = h;
+
+        criticalWidth = (int) (1F / 5F * width);
+        criticalHeight = (int) (1F / 5F * height);
+
+        int cellW = (int) (w / 7F);
+        int cellH4 = (int) (h / 4F);
+        int cellH5 = (int) (h / 5F);
+        int cellH6 = (int) (h / 6F);
+
+        circleRadius = cellW;
+
+        animZoomOut1 = (int) (cellW * 1.2F);
+        animZoomIn1 = (int) (cellW * 0.8F);
+        animZoomOut2 = (int) (cellW * 1.1F);
+
+        sizeDecor = (int) (cellW / 3F);
+        sizeDecor2x = sizeDecor * 2;
+        sizeDecor3x = sizeDecor * 3;
+
+        sizeTextGregorian = width / 20F;
+        mPaint.setTextSize(sizeTextGregorian);
+
+        float heightGregorian = mPaint.getFontMetrics().bottom - mPaint.getFontMetrics().top;
+        sizeTextFestival = width / 40F;
+        mPaint.setTextSize(sizeTextFestival);
+
+        float heightFestival = mPaint.getFontMetrics().bottom - mPaint.getFontMetrics().top;
+        offsetYFestival1 = (((Math.abs(mPaint.ascent() + mPaint.descent())) / 2F) +
+                heightFestival / 2F + heightGregorian / 2F) / 2F;
+        offsetYFestival2 = offsetYFestival1 * 2F;
+
+        for (int i = 0; i < MONTH_REGIONS_4.length; i++) {
+            for (int j = 0; j < MONTH_REGIONS_4[i].length; j++) {
+                Region region = new Region();
+                region.set((j * cellW), (i * cellH4), cellW + (j * cellW),
+                        cellW + (i * cellH4));
+                MONTH_REGIONS_4[i][j] = region;
+            }
+        }
+        for (int i = 0; i < MONTH_REGIONS_5.length; i++) {
+            for (int j = 0; j < MONTH_REGIONS_5[i].length; j++) {
+                Region region = new Region();
+                region.set((j * cellW), (i * cellH5), cellW + (j * cellW),
+                        cellW + (i * cellH5));
+                MONTH_REGIONS_5[i][j] = region;
+            }
+        }
+        for (int i = 0; i < MONTH_REGIONS_6.length; i++) {
+            for (int j = 0; j < MONTH_REGIONS_6[i].length; j++) {
+                Region region = new Region();
+                region.set((j * cellW), (i * cellH6), cellW + (j * cellW),
+                        cellW + (i * cellH6));
+                MONTH_REGIONS_6[i][j] = region;
+            }
+        }
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas) {
+        canvas.drawColor(mTManager.colorBG());
+
+        draw(canvas, width * indexMonth, (indexYear - 1) * height, topYear, topMonth);
+        draw(canvas, width * (indexMonth - 1), height * indexYear, leftYear, leftMonth);
+        draw(canvas, width * indexMonth, indexYear * height, centerYear, centerMonth);
+        draw(canvas, width * (indexMonth + 1), height * indexYear, rightYear, rightMonth);
+        draw(canvas, width * indexMonth, (indexYear + 1) * height, bottomYear, bottomMonth);
+
+        drawBGCircle(canvas);
+    }
+
+    private void drawBGCircle(Canvas canvas) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
+            for (String s : cirDpr.keySet()) {
+                BGCircle circle = cirDpr.get(s);
+                drawBGCircle(canvas, circle);
+            }
+        }
+        for (String s : cirApr.keySet()) {
+            BGCircle circle = cirApr.get(s);
+            drawBGCircle(canvas, circle);
+        }
+    }
+
+    private void drawBGCircle(Canvas canvas, BGCircle circle) {
+        canvas.save();
+        canvas.translate(circle.getX() - circle.getRadius() / 2,
+                circle.getY() - circle.getRadius() / 2);
+        circle.getShape().getShape().resize(circle.getRadius(), circle.getRadius());
+        circle.getShape().draw(canvas);
+        canvas.restore();
+    }
+
+    private void draw(Canvas canvas, int x, int y, int year, int month) {
+        canvas.save();
+        canvas.translate(x, y);
+        DPInfo[][] info = mCManager.obtainDPInfo(year, month);
+        DPInfo[][] result;
+        Region[][] tmp;
+        if (TextUtils.isEmpty(info[4][0].strG)) {
+            tmp = MONTH_REGIONS_4;
+            arrayClear(INFO_4);
+            result = arrayCopy(info, INFO_4);
+        } else if (TextUtils.isEmpty(info[5][0].strG)) {
+            tmp = MONTH_REGIONS_5;
+            arrayClear(INFO_5);
+            result = arrayCopy(info, INFO_5);
+        } else {
+            tmp = MONTH_REGIONS_6;
+            arrayClear(INFO_6);
+            result = arrayCopy(info, INFO_6);
+        }
+        for (int i = 0; i < result.length; i++) {
+            for (int j = 0; j < result[i].length; j++) {
+                draw(canvas, tmp[i][j].getBounds(), info[i][j]);
+            }
+        }
+        canvas.restore();
+    }
+
+    private void draw(Canvas canvas, Rect rect, DPInfo info) {
+        drawBG(canvas, rect, info);
+//        drawGregorian(canvas, rect, info.strG, info.isWeekend);
+        drawGregorian(canvas, rect, info);
+        if (isFestivalDisplay) drawFestival(canvas, rect, info.strF, info.isFestival);
+        drawDecor(canvas, rect, info);
+    }
+
+    private void drawBG(Canvas canvas, Rect rect, DPInfo info) {
+        if (null != mDPDecor && info.isDecorBG) {
+//            LogUtils.e("drawBG===="+info.strG);
+            mDPDecor.drawDecorBG(canvas, rect, mPaint,
+                    centerYear + "-" + centerMonth + "-" + info.strG);
+        }
+        if (info.isToday && isTodayDisplay) {
+            drawBGToday(canvas, rect);
+        } else {
+            if (isHolidayDisplay) drawBGHoliday(canvas, rect, info.isHoliday);
+            if (isDeferredDisplay) drawBGDeferred(canvas, rect, info.isDeferred);
+        }
+    }
+
+    private void drawBGToday(Canvas canvas, Rect rect) {
+        mPaint.setColor(mTManager.colorToday());
+        canvas.drawCircle(rect.centerX(), rect.centerY(), circleRadius / 2F, mPaint);
+    }
+
+    private void drawBGHoliday(Canvas canvas, Rect rect, boolean isHoliday) {
+        mPaint.setColor(mTManager.colorHoliday());
+        if (isHoliday) canvas.drawCircle(rect.centerX(), rect.centerY(), circleRadius / 2F, mPaint);
+    }
+
+    private void drawBGDeferred(Canvas canvas, Rect rect, boolean isDeferred) {
+        mPaint.setColor(mTManager.colorDeferred());
+        if (isDeferred)
+            canvas.drawCircle(rect.centerX(), rect.centerY(), circleRadius / 2F, mPaint);
+    }
+
+    private void drawGregorian(Canvas canvas, Rect rect,DPInfo info) {
+
+//        LogUtils.e("drawGregorian====" + str);
+//        LogUtils.e("getSelDatLIst====" + mCManager.getSelDateList().toString());
+
+        if (info.isToday && isTodayDisplay)
+
+        mPaint.setTextSize(MeasureUtil.dp2px(getContext(),16));
+        else
+            mPaint.setTextSize(MeasureUtil.dp2px(getContext(),12));
+//        if (isWeekend) {
+//            mPaint.setColor(mTManager.colorWeekend());
+//        } else {
+//            mPaint.setColor(mTManager.colorG());
+//        }
+//        if(isSelChangeColor&&mCManager.getSelDateList().contains(str)){ //选中了变色
+//            mPaint.setColor(selChangeTextColor);
+//        }
+
+
+        if(isSelChangeColor&&mCManager.getSelDateList().contains(info.strG)){
+                //选中了变色
+            mPaint.setColor(0xFFF86E0C);
+
+//            LogUtils.logd(mPaint.getColor()+"str="+str);
+        } else if (info.isWeekend) {
+
+            mPaint.setColor(mTManager.colorWeekend());
+//            LogUtils.logd(mPaint.getColor()+"str+="+str);
+        }
+        else {
+
+            mPaint.setColor(mTManager.colorG());
+//            LogUtils.logd(mPaint.getColor()+"str+=++="+str);
+        }
+
+
+        float y = rect.centerY();
+        if (!isFestivalDisplay)
+            y = rect.centerY() + Math.abs(mPaint.ascent()) - (mPaint.descent() - mPaint.ascent()) / 2F;
+//        LogUtils.logd(mPaint.getColor()+"++str+="+info.strG);
+        canvas.drawText(info.strG, rect.centerX(), y, mPaint);
+    }
+
+    private void drawFestival(Canvas canvas, Rect rect, String str, boolean isFestival) {
+        mPaint.setTextSize(sizeTextFestival);
+        if (isFestival) {
+            mPaint.setColor(mTManager.colorF());
+        } else {
+            mPaint.setColor(mTManager.colorL());
+        }
+        if (str.contains("&")) {
+            String[] s = str.split("&");
+            String str1 = s[0];
+            if (mPaint.measureText(str1) > rect.width()) {
+                float ch = mPaint.measureText(str1, 0, 1);
+                int length = (int) (rect.width() / ch);
+                canvas.drawText(str1.substring(0, length), rect.centerX(),
+                        rect.centerY() + offsetYFestival1, mPaint);
+                canvas.drawText(str1.substring(length), rect.centerX(),
+                        rect.centerY() + offsetYFestival2, mPaint);
+            } else {
+                canvas.drawText(str1, rect.centerX(),
+                        rect.centerY() + offsetYFestival1, mPaint);
+                String str2 = s[1];
+                if (mPaint.measureText(str2) < rect.width()) {
+                    canvas.drawText(str2, rect.centerX(),
+                            rect.centerY() + offsetYFestival2, mPaint);
+                }
+            }
+        } else {
+            if (mPaint.measureText(str) > rect.width()) {
+                float ch = 0.0F;
+                for (char c : str.toCharArray()) {
+                    float tmp = mPaint.measureText(String.valueOf(c));
+                    if (tmp > ch) {
+                        ch = tmp;
+                    }
+                }
+                int length = (int) (rect.width() / ch);
+                canvas.drawText(str.substring(0, length), rect.centerX(),
+                        rect.centerY() + offsetYFestival1, mPaint);
+                canvas.drawText(str.substring(length), rect.centerX(),
+                        rect.centerY() + offsetYFestival2, mPaint);
+            } else {
+                canvas.drawText(str, rect.centerX(),
+                        rect.centerY() + offsetYFestival1, mPaint);
+            }
+        }
+    }
+
+    private void drawDecor(Canvas canvas, Rect rect, DPInfo info) {
+        if (!TextUtils.isEmpty(info.strG)) {
+            String data = centerYear + "-" + centerMonth + "-" + info.strG;
+            if (null != mDPDecor && info.isDecorTL) {
+                canvas.save();
+                canvas.clipRect(rect.left, rect.top, rect.left + sizeDecor, rect.top + sizeDecor);
+                mDPDecor.drawDecorTL(canvas, canvas.getClipBounds(), mPaint, data);
+                canvas.restore();
+            }
+            if (null != mDPDecor && info.isDecorT) {
+                canvas.save();
+                canvas.clipRect(rect.left + sizeDecor, rect.top, rect.left + sizeDecor2x,
+                        rect.top + sizeDecor);
+                mDPDecor.drawDecorT(canvas, canvas.getClipBounds(), mPaint, data);
+                canvas.restore();
+            }
+            if (null != mDPDecor && info.isDecorTR) {
+                canvas.save();
+                canvas.clipRect(rect.left + sizeDecor2x, rect.top, rect.left + sizeDecor3x,
+                        rect.top + sizeDecor);
+                mDPDecor.drawDecorTR(canvas, canvas.getClipBounds(), mPaint, data);
+                canvas.restore();
+            }
+            if (null != mDPDecor && info.isDecorL) {
+                canvas.save();
+                canvas.clipRect(rect.left, rect.top + sizeDecor, rect.left + sizeDecor,
+                        rect.top + sizeDecor2x);
+                mDPDecor.drawDecorL(canvas, canvas.getClipBounds(), mPaint, data);
+                canvas.restore();
+            }
+            if (null != mDPDecor && info.isDecorR) {
+                canvas.save();
+                canvas.clipRect(rect.left + sizeDecor2x, rect.top + sizeDecor,
+                        rect.left + sizeDecor3x, rect.top + sizeDecor2x);
+                mDPDecor.drawDecorR(canvas, canvas.getClipBounds(), mPaint, data);
+                canvas.restore();
+            }
+        }
+    }
+
+    List<String> getDateSelected() {
+        return dateSelected;
+    }
+
+    void setOnDateChangeListener(OnDateChangeListener onDateChangeListener) {
+        this.onDateChangeListener = onDateChangeListener;
+    }
+
+    public void setOnDatePickedListener(DatePicker.OnDatePickedListener onDatePickedListener) {
+        this.onDatePickedListener = onDatePickedListener;
+    }
+
+    public void setOnDateScrollChangeListener(OnDateScrollChangeListener onDateScrollChangeListener) {
+        this.onDateScrollChangeListener = onDateScrollChangeListener;
+    }
+
+    void setDPMode(DPMode mode) {
+        this.mDPMode = mode;
+    }
+
+    void setDPDecor(DPDecor decor) {
+        this.mDPDecor = decor;
+    }
+
+    DPMode getDPMode() {
+        return mDPMode;
+    }
+
+    void setDate(int year, int month) {
+        centerYear = year;
+        centerMonth = month;
+        indexYear = 0;
+        indexMonth = 0;
+        buildRegion();
+        computeDate();
+        requestLayout();
+        invalidate();
+    }
+
+    void setFestivalDisplay(boolean isFestivalDisplay) {
+        this.isFestivalDisplay = isFestivalDisplay;
+    }
+
+    void setTodayDisplay(boolean isTodayDisplay) {
+        this.isTodayDisplay = isTodayDisplay;
+    }
+
+    void setHolidayDisplay(boolean isHolidayDisplay) {
+        this.isHolidayDisplay = isHolidayDisplay;
+    }
+
+    void setDeferredDisplay(boolean isDeferredDisplay) {
+        this.isDeferredDisplay = isDeferredDisplay;
+    }
+
+    void setIsScroll(boolean isScroll){
+        this.isScroll = isScroll;
+    }
+
+    public void setIsSelChangeColor(boolean isSelChangeColor,int selChangeTextColor) {
+        this.isSelChangeColor = isSelChangeColor;
+        this.selChangeTextColor = selChangeTextColor;
+    }
+
+    private void smoothScrollTo(int fx, int fy) {
+        int dx = fx - mScroller.getFinalX();
+        int dy = fy - mScroller.getFinalY();
+        smoothScrollBy(dx, dy);
+    }
+
+    private void smoothScrollBy(int dx, int dy) {
+        mScroller.startScroll(mScroller.getFinalX(), mScroller.getFinalY(), dx, dy, 500);
+        invalidate();
+    }
+
+    private BGCircle createCircle(float x, float y) {
+        OvalShape circle = new OvalShape();
+        circle.resize(0, 0);
+        ShapeDrawable drawable = new ShapeDrawable(circle);
+        BGCircle circle1 = new BGCircle(drawable);
+        circle1.setX(x);
+        circle1.setY(y);
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB) {
+            circle1.setRadius(circleRadius);
+        }
+        drawable.getPaint().setColor(mTManager.colorBGCircle());
+        return circle1;
+    }
+
+    private void buildRegion() {
+        String key = indexYear + ":" + indexMonth;
+        if (!REGION_SELECTED.containsKey(key)) {
+            REGION_SELECTED.put(key, new ArrayList<Region>());
+        }
+    }
+
+    private void arrayClear(DPInfo[][] info) {
+        for (DPInfo[] anInfo : info) {
+            Arrays.fill(anInfo, null);
+        }
+    }
+
+    private DPInfo[][] arrayCopy(DPInfo[][] src, DPInfo[][] dst) {
+        for (int i = 0; i < dst.length; i++) {
+            System.arraycopy(src[i], 0, dst[i], 0, dst[i].length);
+        }
+        return dst;
+    }
+
+    private void defineRegion(int x, int y) {
+        DPInfo[][] info = mCManager.obtainDPInfo(centerYear, centerMonth);
+        Region[][] tmp;
+        if (TextUtils.isEmpty(info[4][0].strG)) {
+            tmp = MONTH_REGIONS_4;
+        } else if (TextUtils.isEmpty(info[5][0].strG)) {
+            tmp = MONTH_REGIONS_5;
+        } else {
+            tmp = MONTH_REGIONS_6;
+        }
+        for (int i = 0; i < tmp.length; i++) {
+            for (int j = 0; j < tmp[i].length; j++) {
+                Region region = tmp[i][j];
+                if (TextUtils.isEmpty(mCManager.obtainDPInfo(centerYear, centerMonth)[i][j].strG)) {
+                    continue;
+                }
+                if (region.contains(x, y)) {
+                    List<Region> regions = REGION_SELECTED.get(indexYear + ":" + indexMonth);
+                    if (mDPMode == DPMode.SINGLE) {
+                        cirApr.clear();
+                        regions.add(region);
+                        final String date = centerYear + "-" + centerMonth + "-" +
+                                mCManager.obtainDPInfo(centerYear, centerMonth)[i][j].strG;
+                        BGCircle circle = createCircle(
+                                region.getBounds().centerX() + indexMonth * width,
+                                region.getBounds().centerY() + indexYear * height);
+                        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
+                            ValueAnimator animScale1 =
+                                    ObjectAnimator.ofInt(circle, "radius", 0, animZoomOut1);
+                            animScale1.setDuration(250);
+                            animScale1.setInterpolator(decelerateInterpolator);
+                            animScale1.addUpdateListener(scaleAnimationListener);
+
+                            ValueAnimator animScale2 =
+                                    ObjectAnimator.ofInt(circle, "radius", animZoomOut1, animZoomIn1);
+                            animScale2.setDuration(100);
+                            animScale2.setInterpolator(accelerateInterpolator);
+                            animScale2.addUpdateListener(scaleAnimationListener);
+
+                            ValueAnimator animScale3 =
+                                    ObjectAnimator.ofInt(circle, "radius", animZoomIn1, animZoomOut2);
+                            animScale3.setDuration(150);
+                            animScale3.setInterpolator(decelerateInterpolator);
+                            animScale3.addUpdateListener(scaleAnimationListener);
+
+                            ValueAnimator animScale4 =
+                                    ObjectAnimator.ofInt(circle, "radius", animZoomOut2, circleRadius);
+                            animScale4.setDuration(50);
+                            animScale4.setInterpolator(accelerateInterpolator);
+                            animScale4.addUpdateListener(scaleAnimationListener);
+
+                            AnimatorSet animSet = new AnimatorSet();
+                            animSet.playSequentially(animScale1, animScale2, animScale3, animScale4);
+                            animSet.addListener(new AnimatorListenerAdapter() {
+                                @Override
+                                public void onAnimationEnd(Animator animation) {
+                                    if (null != onDatePickedListener) {
+                                        onDatePickedListener.onDatePicked(date);
+                                    }
+                                }
+                            });
+                            animSet.start();
+                        }
+                        cirApr.put(date, circle);
+                        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB) {
+                            invalidate();
+                            if (null != onDatePickedListener) {
+                                onDatePickedListener.onDatePicked(date);
+                            }
+                        }
+                    } else if (mDPMode == DPMode.MULTIPLE) {
+                        if (regions.contains(region)) {
+                            regions.remove(region);
+                        } else {
+                            regions.add(region);
+                        }
+                        final String date = centerYear + "-" + centerMonth + "-" +
+                                mCManager.obtainDPInfo(centerYear, centerMonth)[i][j].strG;
+                        if (dateSelected.contains(date)) {
+                            dateSelected.remove(date);
+                            BGCircle circle = cirApr.get(date);
+                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
+                                ValueAnimator animScale = ObjectAnimator.ofInt(circle, "radius", circleRadius, 0);
+                                animScale.setDuration(250);
+                                animScale.setInterpolator(accelerateInterpolator);
+                                animScale.addUpdateListener(scaleAnimationListener);
+                                animScale.addListener(new AnimatorListenerAdapter() {
+                                    @Override
+                                    public void onAnimationEnd(Animator animation) {
+                                        cirDpr.remove(date);
+                                    }
+                                });
+                                animScale.start();
+                                cirDpr.put(date, circle);
+                            }
+                            cirApr.remove(date);
+                            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB) {
+                                invalidate();
+                            }
+                        } else {
+                            dateSelected.add(date);
+                            BGCircle circle = createCircle(
+                                    region.getBounds().centerX() + indexMonth * width,
+                                    region.getBounds().centerY() + indexYear * height);
+                            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB) {
+                                ValueAnimator animScale1 =
+                                        ObjectAnimator.ofInt(circle, "radius", 0, animZoomOut1);
+                                animScale1.setDuration(250);
+                                animScale1.setInterpolator(decelerateInterpolator);
+                                animScale1.addUpdateListener(scaleAnimationListener);
+
+                                ValueAnimator animScale2 =
+                                        ObjectAnimator.ofInt(circle, "radius", animZoomOut1, animZoomIn1);
+                                animScale2.setDuration(100);
+                                animScale2.setInterpolator(accelerateInterpolator);
+                                animScale2.addUpdateListener(scaleAnimationListener);
+
+                                ValueAnimator animScale3 =
+                                        ObjectAnimator.ofInt(circle, "radius", animZoomIn1, animZoomOut2);
+                                animScale3.setDuration(150);
+                                animScale3.setInterpolator(decelerateInterpolator);
+                                animScale3.addUpdateListener(scaleAnimationListener);
+
+                                ValueAnimator animScale4 =
+                                        ObjectAnimator.ofInt(circle, "radius", animZoomOut2, circleRadius);
+                                animScale4.setDuration(50);
+                                animScale4.setInterpolator(accelerateInterpolator);
+                                animScale4.addUpdateListener(scaleAnimationListener);
+
+                                AnimatorSet animSet = new AnimatorSet();
+                                animSet.playSequentially(animScale1, animScale2, animScale3, animScale4);
+                                animSet.start();
+                            }
+                            cirApr.put(date, circle);
+                            if (Build.VERSION.SDK_INT < Build.VERSION_CODES.HONEYCOMB) {
+                                invalidate();
+                            }
+                        }
+                    } else if (mDPMode == DPMode.NONE) {
+                        if (regions.contains(region)) {
+                            regions.remove(region);
+                        } else {
+                            regions.add(region);
+                        }
+                        final String date = centerYear + "-" + centerMonth + "-" +
+                                mCManager.obtainDPInfo(centerYear, centerMonth)[i][j].strG;
+                        if (dateSelected.contains(date)) {
+                            dateSelected.remove(date);
+                        } else {
+                            dateSelected.add(date);
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    private void computeDate() {
+        rightYear = leftYear = centerYear;
+        topYear = centerYear - 1;
+        bottomYear = centerYear + 1;
+
+        topMonth = centerMonth;
+        bottomMonth = centerMonth;
+
+        rightMonth = centerMonth + 1;
+        leftMonth = centerMonth - 1;
+
+        if (centerMonth == 12) {
+            rightYear++;
+            rightMonth = 1;
+        }
+        if (centerMonth == 1) {
+            leftYear--;
+            leftMonth = 12;
+        }
+        if (null != onDateChangeListener) {
+            onDateChangeListener.onYearChange(centerYear);
+            onDateChangeListener.onMonthChange(centerMonth);
+            onDateChangeListener.onAllChange(centerYear,centerMonth);
+        }
+    }
+
+    interface OnDateChangeListener {
+        void onMonthChange(int month);
+
+        void onYearChange(int year);
+
+        void onAllChange(int year, int month);
+    }
+
+    interface OnDateScrollChangeListener{
+        void scrollLeft(int year, int month); //往左边滑动 月份加一
+        void scrollRight(int year, int month); //往右边滑动 月份减一
+        void scrollTop(int year, int month); //往上边滑动 年份加一
+        void scrollBottom(int year, int month); //往下边滑动 年份加一
+
+    }
+
+    private enum SlideMode {
+        VER,
+        HOR
+    }
+
+    private class BGCircle {
+        private float x, y;
+        private int radius;
+
+        private ShapeDrawable shape;
+
+        public BGCircle(ShapeDrawable shape) {
+            this.shape = shape;
+        }
+
+        public float getX() {
+            return x;
+        }
+
+        public void setX(float x) {
+            this.x = x;
+        }
+
+        public float getY() {
+            return y;
+        }
+
+        public void setY(float y) {
+            this.y = y;
+        }
+
+        public int getRadius() {
+            return radius;
+        }
+
+        public void setRadius(int radius) {
+            this.radius = radius;
+        }
+
+        public ShapeDrawable getShape() {
+            return shape;
+        }
+
+        public void setShape(ShapeDrawable shape) {
+            this.shape = shape;
+        }
+    }
+
+    @TargetApi(Build.VERSION_CODES.HONEYCOMB)
+    private class ScaleAnimationListener implements ValueAnimator.AnimatorUpdateListener {
+        @Override
+        public void onAnimationUpdate(ValueAnimator animation) {
+            MonthView.this.invalidate();
+        }
+    }
+
+
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/SpanUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/SpanUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/SpanUtils.java	(revision )
@@ -0,0 +1,1570 @@
+package com.baselib.utilcode.util;
+
+import android.annotation.SuppressLint;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.BlurMaskFilter;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.graphics.Path;
+import android.graphics.PixelFormat;
+import android.graphics.Rect;
+import android.graphics.Shader;
+import android.graphics.Typeface;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+import android.net.Uri;
+import android.provider.MediaStore;
+import android.support.annotation.ColorInt;
+import android.support.annotation.DrawableRes;
+import android.support.annotation.FloatRange;
+import android.support.annotation.IntDef;
+import android.support.annotation.IntRange;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v4.content.ContextCompat;
+import android.text.Layout;
+import android.text.Layout.Alignment;
+import android.text.SpannableStringBuilder;
+import android.text.Spanned;
+import android.text.TextPaint;
+import android.text.style.AbsoluteSizeSpan;
+import android.text.style.AlignmentSpan;
+import android.text.style.BackgroundColorSpan;
+import android.text.style.CharacterStyle;
+import android.text.style.ClickableSpan;
+import android.text.style.ForegroundColorSpan;
+import android.text.style.LeadingMarginSpan;
+import android.text.style.MaskFilterSpan;
+import android.text.style.RelativeSizeSpan;
+import android.text.style.ReplacementSpan;
+import android.text.style.ScaleXSpan;
+import android.text.style.StrikethroughSpan;
+import android.text.style.StyleSpan;
+import android.text.style.SubscriptSpan;
+import android.text.style.SuperscriptSpan;
+import android.text.style.TypefaceSpan;
+import android.text.style.URLSpan;
+import android.text.style.UnderlineSpan;
+import android.text.style.UpdateAppearance;
+import android.util.Log;
+
+import java.io.IOException;
+import java.io.InputStream;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.ref.WeakReference;
+
+import static android.graphics.BlurMaskFilter.Blur;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 16/12/13
+ *     desc  : SpannableString相关工具类
+ * </pre>
+ */
+public final class SpanUtils {
+
+    private static final int COLOR_DEFAULT = 0xFEFFFFFF;
+
+    public static final int ALIGN_BOTTOM   = 0;
+    public static final int ALIGN_BASELINE = 1;
+    public static final int ALIGN_CENTER   = 2;
+    public static final int ALIGN_TOP      = 3;
+
+    @IntDef({ALIGN_BOTTOM, ALIGN_BASELINE, ALIGN_CENTER, ALIGN_TOP})
+    @Retention(RetentionPolicy.SOURCE)
+    public @interface Align {
+    }
+
+    private static final String LINE_SEPARATOR = System.getProperty("line.separator");
+
+    private CharSequence  mText;
+    private int           flag;
+    private int           foregroundColor;
+    private int           backgroundColor;
+    private int           lineHeight;
+    private int           alignLine;
+    private int           quoteColor;
+    private int           stripeWidth;
+    private int           quoteGapWidth;
+    private int           first;
+    private int           rest;
+    private int           bulletColor;
+    private int           bulletRadius;
+    private int           bulletGapWidth;
+    private Bitmap        iconMarginBitmap;
+    private Drawable      iconMarginDrawable;
+    private Uri           iconMarginUri;
+    private int           iconMarginResourceId;
+    private int           iconMarginGapWidth;
+    private int           alignIconMargin;
+    private int           fontSize;
+    private boolean       fontSizeIsDp;
+    private float         proportion;
+    private float         xProportion;
+    private boolean       isStrikethrough;
+    private boolean       isUnderline;
+    private boolean       isSuperscript;
+    private boolean       isSubscript;
+    private boolean       isBold;
+    private boolean       isItalic;
+    private boolean       isBoldItalic;
+    private String        fontFamily;
+    private Typeface      typeface;
+    private Alignment     alignment;
+    private ClickableSpan clickSpan;
+    private String        url;
+    private float         blurRadius;
+    private Blur          style;
+    private Shader        shader;
+    private float         shadowRadius;
+    private float         shadowDx;
+    private float         shadowDy;
+    private int           shadowColor;
+    private Object[]      spans;
+
+    private Bitmap   imageBitmap;
+    private Drawable imageDrawable;
+    private Uri      imageUri;
+    private int      imageResourceId;
+    private int      alignImage;
+
+    private int spaceSize;
+    private int spaceColor;
+
+    private SpannableStringBuilder mBuilder;
+
+    private int mType;
+    private final int mTypeCharSequence = 0;
+    private final int mTypeImage        = 1;
+    private final int mTypeSpace        = 2;
+
+
+    public SpanUtils() {
+        mBuilder = new SpannableStringBuilder();
+        mText = "";
+        setDefault();
+    }
+
+    private void setDefault() {
+        flag = Spanned.SPAN_EXCLUSIVE_EXCLUSIVE;
+        foregroundColor = COLOR_DEFAULT;
+        backgroundColor = COLOR_DEFAULT;
+        lineHeight = -1;
+        quoteColor = COLOR_DEFAULT;
+        first = -1;
+        bulletColor = COLOR_DEFAULT;
+        iconMarginBitmap = null;
+        iconMarginDrawable = null;
+        iconMarginUri = null;
+        iconMarginResourceId = -1;
+        iconMarginGapWidth = -1;
+        fontSize = -1;
+        proportion = -1;
+        xProportion = -1;
+        isStrikethrough = false;
+        isUnderline = false;
+        isSuperscript = false;
+        isSubscript = false;
+        isBold = false;
+        isItalic = false;
+        isBoldItalic = false;
+        fontFamily = null;
+        typeface = null;
+        alignment = null;
+        clickSpan = null;
+        url = null;
+        blurRadius = -1;
+        shader = null;
+        shadowRadius = -1;
+        spans = null;
+
+        imageBitmap = null;
+        imageDrawable = null;
+        imageUri = null;
+        imageResourceId = -1;
+
+        spaceSize = -1;
+    }
+
+    /**
+     * 设置标识
+     *
+     * @param flag <ul>
+     *             <li>{@link Spanned#SPAN_INCLUSIVE_EXCLUSIVE}</li>
+     *             <li>{@link Spanned#SPAN_INCLUSIVE_INCLUSIVE}</li>
+     *             <li>{@link Spanned#SPAN_EXCLUSIVE_EXCLUSIVE}</li>
+     *             <li>{@link Spanned#SPAN_EXCLUSIVE_INCLUSIVE}</li>
+     *             </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setFlag(final int flag) {
+        this.flag = flag;
+        return this;
+    }
+
+    /**
+     * 设置前景色
+     *
+     * @param color 前景色
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setForegroundColor(@ColorInt final int color) {
+        this.foregroundColor = color;
+        return this;
+    }
+
+    /**
+     * 设置背景色
+     *
+     * @param color 背景色
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setBackgroundColor(@ColorInt final int color) {
+        this.backgroundColor = color;
+        return this;
+    }
+
+    /**
+     * 设置行高
+     * <p>当行高大于字体高度时，字体在行中的位置默认居中</p>
+     *
+     * @param lineHeight 行高
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setLineHeight(@IntRange(from = 0) final int lineHeight) {
+        return setLineHeight(lineHeight, ALIGN_CENTER);
+    }
+
+    /**
+     * 设置行高
+     * <p>当行高大于字体高度时，字体在行中的位置由{@code align}决定</p>
+     *
+     * @param lineHeight 行高
+     * @param align      对齐
+     *                   <ul>
+     *                   <li>{@link Align#ALIGN_TOP}顶部对齐</li>
+     *                   <li>{@link Align#ALIGN_CENTER}居中对齐</li>
+     *                   <li>{@link Align#ALIGN_BOTTOM}底部对齐</li>
+     *                   </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setLineHeight(@IntRange(from = 0) final int lineHeight, @Align final int align) {
+        this.lineHeight = lineHeight;
+        this.alignLine = align;
+        return this;
+    }
+
+    /**
+     * 设置引用线的颜色
+     *
+     * @param color 引用线的颜色
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setQuoteColor(@ColorInt final int color) {
+        return setQuoteColor(color, 2, 2);
+    }
+
+    /**
+     * 设置引用线的颜色
+     *
+     * @param color       引用线的颜色
+     * @param stripeWidth 引用线线宽
+     * @param gapWidth    引用线和文字间距
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setQuoteColor(@ColorInt final int color, @IntRange(from = 1) final int stripeWidth, @IntRange(from = 0) final int gapWidth) {
+        this.quoteColor = color;
+        this.stripeWidth = stripeWidth;
+        this.quoteGapWidth = gapWidth;
+        return this;
+    }
+
+    /**
+     * 设置缩进
+     *
+     * @param first 首行缩进
+     * @param rest  剩余行缩进
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setLeadingMargin(@IntRange(from = 0) final int first, @IntRange(from = 0) final int rest) {
+        this.first = first;
+        this.rest = rest;
+        return this;
+    }
+
+    /**
+     * 设置列表标记
+     *
+     * @param gapWidth 列表标记和文字间距离
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setBullet(@IntRange(from = 0) final int gapWidth) {
+        return setBullet(0, 3, gapWidth);
+    }
+
+    /**
+     * 设置列表标记
+     *
+     * @param color    列表标记的颜色
+     * @param radius   列表标记颜色
+     * @param gapWidth 列表标记和文字间距离
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setBullet(@ColorInt final int color, @IntRange(from = 0) final int radius, @IntRange(from = 0) final int gapWidth) {
+        this.bulletColor = color;
+        this.bulletRadius = radius;
+        this.bulletGapWidth = gapWidth;
+        return this;
+    }
+
+    /**
+     * 设置图标
+     * <p>默认0边距，居中对齐</p>
+     *
+     * @param bitmap 图标bitmap
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setIconMargin(final Bitmap bitmap) {
+        return setIconMargin(bitmap, 0, ALIGN_CENTER);
+    }
+
+    /**
+     * 设置图标
+     *
+     * @param bitmap   图标bitmap
+     * @param gapWidth 图标和文字间距离
+     * @param align    对齐
+     *                 <ul>
+     *                 <li>{@link Align#ALIGN_TOP}顶部对齐</li>
+     *                 <li>{@link Align#ALIGN_CENTER}居中对齐</li>
+     *                 <li>{@link Align#ALIGN_BOTTOM}底部对齐</li>
+     *                 </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setIconMargin(final Bitmap bitmap, final int gapWidth, @Align final int align) {
+        this.iconMarginBitmap = bitmap;
+        this.iconMarginGapWidth = gapWidth;
+        this.alignIconMargin = align;
+        return this;
+    }
+
+    /**
+     * 设置图标
+     * <p>默认0边距，居中对齐</p>
+     *
+     * @param drawable 图标drawable
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setIconMargin(final Drawable drawable) {
+        return setIconMargin(drawable, 0, ALIGN_CENTER);
+    }
+
+    /**
+     * 设置图标
+     *
+     * @param drawable 图标drawable
+     * @param gapWidth 图标和文字间距离
+     * @param align    对齐
+     *                 <ul>
+     *                 <li>{@link Align#ALIGN_TOP}顶部对齐</li>
+     *                 <li>{@link Align#ALIGN_CENTER}居中对齐</li>
+     *                 <li>{@link Align#ALIGN_BOTTOM}底部对齐</li>
+     *                 </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setIconMargin(final Drawable drawable, final int gapWidth, @Align final int align) {
+        this.iconMarginDrawable = drawable;
+        this.iconMarginGapWidth = gapWidth;
+        this.alignIconMargin = align;
+        return this;
+    }
+
+    /**
+     * 设置图标
+     * <p>默认0边距，居中对齐</p>
+     *
+     * @param uri 图标uri
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setIconMargin(final Uri uri) {
+        return setIconMargin(uri, 0, ALIGN_CENTER);
+    }
+
+    /**
+     * 设置图标
+     *
+     * @param uri      图标uri
+     * @param gapWidth 图标和文字间距离
+     * @param align    对齐
+     *                 <ul>
+     *                 <li>{@link Align#ALIGN_TOP}顶部对齐</li>
+     *                 <li>{@link Align#ALIGN_CENTER}居中对齐</li>
+     *                 <li>{@link Align#ALIGN_BOTTOM}底部对齐</li>
+     *                 </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setIconMargin(final Uri uri, final int gapWidth, @Align final int align) {
+        this.iconMarginUri = uri;
+        this.iconMarginGapWidth = gapWidth;
+        this.alignIconMargin = align;
+        return this;
+    }
+
+    /**
+     * 设置图标
+     * <p>默认0边距，居中对齐</p>
+     *
+     * @param resourceId 图标resourceId
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setIconMargin(@DrawableRes final int resourceId) {
+        return setIconMargin(resourceId, 0, ALIGN_CENTER);
+    }
+
+    /**
+     * 设置图标
+     *
+     * @param resourceId 图标resourceId
+     * @param gapWidth   图标和文字间距离
+     * @param align      对齐
+     *                   <ul>
+     *                   <li>{@link Align#ALIGN_TOP}顶部对齐</li>
+     *                   <li>{@link Align#ALIGN_CENTER}居中对齐</li>
+     *                   <li>{@link Align#ALIGN_BOTTOM}底部对齐</li>
+     *                   </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setIconMargin(@DrawableRes final int resourceId, final int gapWidth, @Align final int align) {
+        this.iconMarginResourceId = resourceId;
+        this.iconMarginGapWidth = gapWidth;
+        this.alignIconMargin = align;
+        return this;
+    }
+
+    /**
+     * 设置字体尺寸
+     *
+     * @param size 尺寸
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setFontSize(@IntRange(from = 0) final int size) {
+        return setFontSize(size, false);
+    }
+
+    /**
+     * 设置字体尺寸
+     *
+     * @param size 尺寸
+     * @param isDp 是否使用dip
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setFontSize(@IntRange(from = 0) final int size, final boolean isDp) {
+        this.fontSize = size;
+        this.fontSizeIsDp = isDp;
+        return this;
+    }
+
+    /**
+     * 设置字体比例
+     *
+     * @param proportion 比例
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setFontProportion(@FloatRange(from = 0, fromInclusive = false) final float proportion) {
+        this.proportion = proportion;
+        return this;
+    }
+
+    /**
+     * 设置字体横向比例
+     *
+     * @param proportion 比例
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setFontXProportion(@FloatRange(from = 0, fromInclusive = false) final float proportion) {
+        this.xProportion = proportion;
+        return this;
+    }
+
+    /**
+     * 设置删除线
+     *
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setStrikethrough() {
+        this.isStrikethrough = true;
+        return this;
+    }
+
+    /**
+     * 设置下划线
+     *
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setUnderline() {
+        this.isUnderline = true;
+        return this;
+    }
+
+    /**
+     * 设置上标
+     *
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setSuperscript() {
+        this.isSuperscript = true;
+        return this;
+    }
+
+    /**
+     * 设置下标
+     *
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setSubscript() {
+        this.isSubscript = true;
+        return this;
+    }
+
+    /**
+     * 设置粗体
+     *
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setBold() {
+        isBold = true;
+        return this;
+    }
+
+    /**
+     * 设置斜体
+     *
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setItalic() {
+        isItalic = true;
+        return this;
+    }
+
+    /**
+     * 设置粗斜体
+     *
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setBoldItalic() {
+        isBoldItalic = true;
+        return this;
+    }
+
+    /**
+     * 设置字体系列
+     *
+     * @param fontFamily 字体系列
+     *                   <ul>
+     *                   <li>monospace</li>
+     *                   <li>serif</li>
+     *                   <li>sans-serif</li>
+     *                   </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setFontFamily(@NonNull final String fontFamily) {
+        this.fontFamily = fontFamily;
+        return this;
+    }
+
+    /**
+     * 设置字体
+     *
+     * @param typeface 字体
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setTypeface(@NonNull final Typeface typeface) {
+        this.typeface = typeface;
+        return this;
+    }
+
+    /**
+     * 设置对齐
+     *
+     * @param alignment 对其方式
+     *                  <ul>
+     *                  <li>{@link Alignment#ALIGN_NORMAL}正常</li>
+     *                  <li>{@link Alignment#ALIGN_OPPOSITE}相反</li>
+     *                  <li>{@link Alignment#ALIGN_CENTER}居中</li>
+     *                  </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setAlign(@NonNull final Alignment alignment) {
+        this.alignment = alignment;
+        return this;
+    }
+
+    /**
+     * 设置点击事件
+     * <p>需添加view.setMovementMethod(LinkMovementMethod.getInstance())</p>
+     *
+     * @param clickSpan 点击事件
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setClickSpan(@NonNull final ClickableSpan clickSpan) {
+        this.clickSpan = clickSpan;
+        return this;
+    }
+
+    /**
+     * 设置超链接
+     * <p>需添加view.setMovementMethod(LinkMovementMethod.getInstance())</p>
+     *
+     * @param url 超链接
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setUrl(@NonNull final String url) {
+        this.url = url;
+        return this;
+    }
+
+    /**
+     * 设置模糊
+     * <p>尚存bug，其他地方存在相同的字体的话，相同字体出现在之前的话那么就不会模糊，出现在之后的话那会一起模糊</p>
+     * <p>以上bug关闭硬件加速即可</p>
+     *
+     * @param radius 模糊半径（需大于0）
+     * @param style  模糊样式<ul>
+     *               <li>{@link Blur#NORMAL}</li>
+     *               <li>{@link Blur#SOLID}</li>
+     *               <li>{@link Blur#OUTER}</li>
+     *               <li>{@link Blur#INNER}</li>
+     *               </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setBlur(@FloatRange(from = 0, fromInclusive = false) final float radius, final Blur style) {
+        this.blurRadius = radius;
+        this.style = style;
+        return this;
+    }
+
+    /**
+     * 设置着色器
+     *
+     * @param shader 着色器
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setShader(@NonNull final Shader shader) {
+        this.shader = shader;
+        return this;
+    }
+
+    /**
+     * 设置阴影
+     *
+     * @param radius      阴影半径
+     * @param dx          x轴偏移量
+     * @param dy          y轴偏移量
+     * @param shadowColor 阴影颜色
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setShadow(@FloatRange(from = 0, fromInclusive = false) final float radius,
+                               final float dx,
+                               final float dy,
+                               final int shadowColor) {
+        this.shadowRadius = radius;
+        this.shadowDx = dx;
+        this.shadowDy = dy;
+        this.shadowColor = shadowColor;
+        return this;
+    }
+
+
+    /**
+     * 设置样式
+     *
+     * @param spans 样式
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils setSpans(@NonNull final Object... spans) {
+        if (spans.length > 0) {
+            this.spans = spans;
+        }
+        return this;
+    }
+
+    /**
+     * 追加样式字符串
+     *
+     * @param text 样式字符串文本
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils append(@NonNull final CharSequence text) {
+        apply(mTypeCharSequence);
+        mText = text;
+        return this;
+    }
+
+    /**
+     * 追加一行
+     *
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendLine() {
+        apply(mTypeCharSequence);
+        mText = LINE_SEPARATOR;
+        return this;
+    }
+
+    /**
+     * 追加一行样式字符串
+     *
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendLine(@NonNull final CharSequence text) {
+        apply(mTypeCharSequence);
+        mText = text + LINE_SEPARATOR;
+        return this;
+    }
+
+    /**
+     * 追加图片
+     *
+     * @param bitmap 图片位图
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendImage(@NonNull final Bitmap bitmap) {
+        return appendImage(bitmap, ALIGN_BOTTOM);
+    }
+
+    /**
+     * 追加图片
+     *
+     * @param bitmap 图片位图
+     * @param align  对齐
+     *               <ul>
+     *               <li>{@link Align#ALIGN_TOP}顶部对齐</li>
+     *               <li>{@link Align#ALIGN_CENTER}居中对齐</li>
+     *               <li>{@link Align#ALIGN_BASELINE}基线对齐</li>
+     *               <li>{@link Align#ALIGN_BOTTOM}底部对齐</li>
+     *               </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendImage(@NonNull final Bitmap bitmap, @Align final int align) {
+        apply(mTypeImage);
+        this.imageBitmap = bitmap;
+        this.alignImage = align;
+        return this;
+    }
+
+    /**
+     * 追加图片
+     *
+     * @param drawable 图片资源
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendImage(@NonNull final Drawable drawable) {
+        return appendImage(drawable, ALIGN_BOTTOM);
+    }
+
+    /**
+     * 追加图片
+     *
+     * @param drawable 图片资源
+     * @param align    对齐
+     *                 <ul>
+     *                 <li>{@link Align#ALIGN_TOP}顶部对齐</li>
+     *                 <li>{@link Align#ALIGN_CENTER}居中对齐</li>
+     *                 <li>{@link Align#ALIGN_BASELINE}基线对齐</li>
+     *                 <li>{@link Align#ALIGN_BOTTOM}底部对齐</li>
+     *                 </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendImage(@NonNull final Drawable drawable, @Align final int align) {
+        apply(mTypeImage);
+        this.imageDrawable = drawable;
+        this.alignImage = align;
+        return this;
+    }
+
+    /**
+     * 追加图片
+     *
+     * @param uri 图片uri
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendImage(@NonNull final Uri uri) {
+        return appendImage(uri, ALIGN_BOTTOM);
+    }
+
+    /**
+     * 追加图片
+     *
+     * @param uri   图片uri
+     * @param align 对齐
+     *              <ul>
+     *              <li>{@link Align#ALIGN_TOP}顶部对齐</li>
+     *              <li>{@link Align#ALIGN_CENTER}居中对齐</li>
+     *              <li>{@link Align#ALIGN_BASELINE}基线对齐</li>
+     *              <li>{@link Align#ALIGN_BOTTOM}底部对齐</li>
+     *              </ul>
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendImage(@NonNull final Uri uri, @Align final int align) {
+        apply(mTypeImage);
+        this.imageUri = uri;
+        this.alignImage = align;
+        return this;
+    }
+
+    /**
+     * 追加图片
+     *
+     * @param resourceId 图片资源id
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendImage(@DrawableRes final int resourceId) {
+        return appendImage(resourceId, ALIGN_BOTTOM);
+    }
+
+    /**
+     * 追加图片
+     *
+     * @param resourceId 图片资源id
+     * @param align      对齐
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendImage(@DrawableRes final int resourceId, @Align final int align) {
+        apply(mTypeImage);
+        this.imageResourceId = resourceId;
+        this.alignImage = align;
+        return this;
+    }
+
+    /**
+     * 追加空白
+     *
+     * @param size 间距
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendSpace(@IntRange(from = 0) final int size) {
+        return appendSpace(size, Color.TRANSPARENT);
+    }
+
+    /**
+     * 追加空白
+     *
+     * @param size  间距
+     * @param color 颜色
+     * @return {@link SpanUtils}
+     */
+    public SpanUtils appendSpace(@IntRange(from = 0) final int size, @ColorInt final int color) {
+        apply(mTypeSpace);
+        spaceSize = size;
+        spaceColor = color;
+        return this;
+    }
+
+    private void apply(final int type) {
+        applyLast();
+        mType = type;
+    }
+
+    /**
+     * 创建样式字符串
+     *
+     * @return 样式字符串
+     */
+    public SpannableStringBuilder create() {
+        applyLast();
+        return mBuilder;
+    }
+
+    /**
+     * 设置上一次的样式
+     */
+    private void applyLast() {
+        if (mType == mTypeCharSequence) {
+            updateCharCharSequence();
+        } else if (mType == mTypeImage) {
+            updateImage();
+        } else if (mType == mTypeSpace) {
+            updateSpace();
+        }
+        setDefault();
+    }
+
+    private void updateCharCharSequence() {
+        if (mText.length() == 0) return;
+        int start = mBuilder.length();
+        mBuilder.append(mText);
+        int end = mBuilder.length();
+        if (foregroundColor != COLOR_DEFAULT) {
+            mBuilder.setSpan(new ForegroundColorSpan(foregroundColor), start, end, flag);
+        }
+        if (backgroundColor != COLOR_DEFAULT) {
+            mBuilder.setSpan(new BackgroundColorSpan(backgroundColor), start, end, flag);
+        }
+        if (first != -1) {
+            mBuilder.setSpan(new LeadingMarginSpan.Standard(first, rest), start, end, flag);
+        }
+        if (quoteColor != COLOR_DEFAULT) {
+            mBuilder.setSpan(new CustomQuoteSpan(quoteColor, stripeWidth, quoteGapWidth), start, end, flag);
+        }
+        if (bulletColor != COLOR_DEFAULT) {
+            mBuilder.setSpan(new CustomBulletSpan(bulletColor, bulletRadius, bulletGapWidth), start, end, flag);
+        }
+        if (iconMarginGapWidth != -1) {
+            if (iconMarginBitmap != null) {
+                mBuilder.setSpan(new CustomIconMarginSpan(iconMarginBitmap, iconMarginGapWidth, alignIconMargin), start, end, flag);
+            } else if (iconMarginDrawable != null) {
+                mBuilder.setSpan(new CustomIconMarginSpan(iconMarginDrawable, iconMarginGapWidth, alignIconMargin), start, end, flag);
+            } else if (iconMarginUri != null) {
+                mBuilder.setSpan(new CustomIconMarginSpan(iconMarginUri, iconMarginGapWidth, alignIconMargin), start, end, flag);
+            } else if (iconMarginResourceId != -1) {
+                mBuilder.setSpan(new CustomIconMarginSpan(iconMarginResourceId, iconMarginGapWidth, alignIconMargin), start, end, flag);
+            }
+        }
+        if (fontSize != -1) {
+            mBuilder.setSpan(new AbsoluteSizeSpan(fontSize, fontSizeIsDp), start, end, flag);
+        }
+        if (proportion != -1) {
+            mBuilder.setSpan(new RelativeSizeSpan(proportion), start, end, flag);
+        }
+        if (xProportion != -1) {
+            mBuilder.setSpan(new ScaleXSpan(xProportion), start, end, flag);
+        }
+        if (lineHeight != -1) {
+            mBuilder.setSpan(new CustomLineHeightSpan(lineHeight, alignLine), start, end, flag);
+        }
+        if (isStrikethrough) {
+            mBuilder.setSpan(new StrikethroughSpan(), start, end, flag);
+        }
+        if (isUnderline) {
+            mBuilder.setSpan(new UnderlineSpan(), start, end, flag);
+        }
+        if (isSuperscript) {
+            mBuilder.setSpan(new SuperscriptSpan(), start, end, flag);
+        }
+        if (isSubscript) {
+            mBuilder.setSpan(new SubscriptSpan(), start, end, flag);
+        }
+        if (isBold) {
+            mBuilder.setSpan(new StyleSpan(Typeface.BOLD), start, end, flag);
+        }
+        if (isItalic) {
+            mBuilder.setSpan(new StyleSpan(Typeface.ITALIC), start, end, flag);
+        }
+        if (isBoldItalic) {
+            mBuilder.setSpan(new StyleSpan(Typeface.BOLD_ITALIC), start, end, flag);
+        }
+        if (fontFamily != null) {
+            mBuilder.setSpan(new TypefaceSpan(fontFamily), start, end, flag);
+        }
+        if (typeface != null) {
+            mBuilder.setSpan(new CustomTypefaceSpan(typeface), start, end, flag);
+        }
+        if (alignment != null) {
+            mBuilder.setSpan(new AlignmentSpan.Standard(alignment), start, end, flag);
+        }
+        if (clickSpan != null) {
+            mBuilder.setSpan(clickSpan, start, end, flag);
+        }
+        if (url != null) {
+            mBuilder.setSpan(new URLSpan(url), start, end, flag);
+        }
+        if (blurRadius != -1) {
+            mBuilder.setSpan(new MaskFilterSpan(new BlurMaskFilter(blurRadius, style)), start, end, flag);
+        }
+        if (shader != null) {
+            mBuilder.setSpan(new ShaderSpan(shader), start, end, flag);
+        }
+        if (shadowRadius != -1) {
+            mBuilder.setSpan(new ShadowSpan(shadowRadius, shadowDx, shadowDy, shadowColor), start, end, flag);
+        }
+        if (spans != null) {
+            for (Object span : spans) {
+                mBuilder.setSpan(span, start, end, flag);
+            }
+        }
+    }
+
+    private void updateImage() {
+        int start = mBuilder.length();
+        mBuilder.append("<img>");
+        int end = start + 5;
+        if (imageBitmap != null) {
+            mBuilder.setSpan(new CustomImageSpan(imageBitmap, alignImage), start, end, flag);
+        } else if (imageDrawable != null) {
+            mBuilder.setSpan(new CustomImageSpan(imageDrawable, alignImage), start, end, flag);
+        } else if (imageUri != null) {
+            mBuilder.setSpan(new CustomImageSpan(imageUri, alignImage), start, end, flag);
+        } else if (imageResourceId != -1) {
+            mBuilder.setSpan(new CustomImageSpan(imageResourceId, alignImage), start, end, flag);
+        }
+    }
+
+    private void updateSpace() {
+        int start = mBuilder.length();
+        mBuilder.append("< >");
+        int end = start + 3;
+        mBuilder.setSpan(new SpaceSpan(spaceSize, spaceColor), start, end, flag);
+    }
+
+    /**
+     * 行高
+     */
+    class CustomLineHeightSpan extends CharacterStyle
+            implements android.text.style.LineHeightSpan {
+
+        private final int height;
+
+        static final int ALIGN_CENTER = 2;
+
+        static final int ALIGN_TOP = 3;
+
+        final int mVerticalAlignment;
+
+        CustomLineHeightSpan(int height, int verticalAlignment) {
+            this.height = height;
+            mVerticalAlignment = verticalAlignment;
+        }
+
+        @Override
+        public void chooseHeight(final CharSequence text, final int start, final int end, final int spanstartv, final int v, final Paint.FontMetricsInt fm) {
+            int need = height - (v + fm.descent - fm.ascent - spanstartv);
+            if (need > 0) {
+                if (mVerticalAlignment == ALIGN_TOP) {
+                    fm.descent += need;
+                } else if (mVerticalAlignment == ALIGN_CENTER) {
+                    fm.descent += need / 2;
+                    fm.ascent -= need / 2;
+                } else {
+                    fm.ascent -= need;
+                }
+            }
+            need = height - (v + fm.bottom - fm.top - spanstartv);
+            if (need > 0) {
+                if (mVerticalAlignment == ALIGN_TOP) {
+                    fm.top += need;
+                } else if (mVerticalAlignment == ALIGN_CENTER) {
+                    fm.bottom += need / 2;
+                    fm.top -= need / 2;
+                } else {
+                    fm.top -= need;
+                }
+            }
+        }
+
+        @Override
+        public void updateDrawState(final TextPaint tp) {
+
+        }
+    }
+
+    /**
+     * 空格
+     */
+    class SpaceSpan extends ReplacementSpan {
+
+        private final int width;
+        private final int color;
+
+        private SpaceSpan(final int width) {
+            this(width, Color.TRANSPARENT);
+        }
+
+        private SpaceSpan(final int width, final int color) {
+            super();
+            this.width = width;
+            this.color = color;
+        }
+
+        @Override
+        public int getSize(@NonNull final Paint paint, final CharSequence text,
+                           @IntRange(from = 0) final int start,
+                           @IntRange(from = 0) final int end,
+                           @Nullable final Paint.FontMetricsInt fm) {
+            return width;
+        }
+
+        @Override
+        public void draw(@NonNull final Canvas canvas, final CharSequence text,
+                         @IntRange(from = 0) final int start,
+                         @IntRange(from = 0) final int end,
+                         final float x, final int top, final int y, final int bottom,
+                         @NonNull final Paint paint) {
+            Paint.Style style = paint.getStyle();
+            int color = paint.getColor();
+
+            paint.setStyle(Paint.Style.FILL);
+            paint.setColor(this.color);
+
+            canvas.drawRect(x, top, x + width, bottom, paint);
+
+            paint.setStyle(style);
+            paint.setColor(color);
+        }
+    }
+
+    /**
+     * 引用
+     */
+    class CustomQuoteSpan implements LeadingMarginSpan {
+
+        private final int color;
+        private final int stripeWidth;
+        private final int gapWidth;
+
+        private CustomQuoteSpan(final int color, final int stripeWidth, final int gapWidth) {
+            super();
+            this.color = color;
+            this.stripeWidth = stripeWidth;
+            this.gapWidth = gapWidth;
+        }
+
+        public int getLeadingMargin(final boolean first) {
+            return stripeWidth + gapWidth;
+        }
+
+        public void drawLeadingMargin(final Canvas c, final Paint p, final int x, final int dir,
+                                      final int top, final int baseline, final int bottom,
+                                      final CharSequence text, final int start, final int end,
+                                      final boolean first, final Layout layout) {
+            Paint.Style style = p.getStyle();
+            int color = p.getColor();
+
+            p.setStyle(Paint.Style.FILL);
+            p.setColor(this.color);
+
+            c.drawRect(x, top, x + dir * stripeWidth, bottom, p);
+
+            p.setStyle(style);
+            p.setColor(color);
+        }
+    }
+
+    /**
+     * 列表项
+     */
+    class CustomBulletSpan implements LeadingMarginSpan {
+
+        private final int color;
+        private final int radius;
+        private final int gapWidth;
+
+        private Path sBulletPath = null;
+
+        private CustomBulletSpan(final int color, final int radius, final int gapWidth) {
+            this.color = color;
+            this.radius = radius;
+            this.gapWidth = gapWidth;
+        }
+
+        public int getLeadingMargin(final boolean first) {
+            return 2 * radius + gapWidth;
+        }
+
+        public void drawLeadingMargin(final Canvas c, final Paint p, final int x, final int dir,
+                                      final int top, final int baseline, final int bottom,
+                                      final CharSequence text, final int start, final int end,
+                                      final boolean first, final Layout l) {
+            if (((Spanned) text).getSpanStart(this) == start) {
+                Paint.Style style = p.getStyle();
+                int oldColor = 0;
+                oldColor = p.getColor();
+                p.setColor(color);
+                p.setStyle(Paint.Style.FILL);
+                if (c.isHardwareAccelerated()) {
+                    if (sBulletPath == null) {
+                        sBulletPath = new Path();
+                        // Bullet is slightly better to avoid aliasing artifacts on mdpi devices.
+                        sBulletPath.addCircle(0.0f, 0.0f, radius, Path.Direction.CW);
+                    }
+                    c.save();
+                    c.translate(x + dir * radius, (top + bottom) / 2.0f);
+                    c.drawPath(sBulletPath, p);
+                    c.restore();
+                } else {
+                    c.drawCircle(x + dir * radius, (top + bottom) / 2.0f, radius, p);
+                }
+                p.setColor(oldColor);
+                p.setStyle(style);
+            }
+        }
+    }
+
+    class CustomIconMarginSpan implements LeadingMarginSpan, android.text.style.LineHeightSpan {
+        Bitmap mBitmap;
+
+        static final int ALIGN_CENTER = 2;
+
+        static final int ALIGN_TOP = 3;
+
+        final int mVerticalAlignment;
+
+        private int     mPad;
+        private int     totalHeight;
+        private int     lineHeight;
+        private int     need0;
+        private int     need1;
+        private boolean flag;
+
+        private CustomIconMarginSpan(final Bitmap b, final int pad, final int verticalAlignment) {
+            mBitmap = b;
+            mPad = pad;
+            mVerticalAlignment = verticalAlignment;
+        }
+
+        private CustomIconMarginSpan(final Drawable drawable, final int pad, final int verticalAlignment) {
+            mBitmap = drawable2Bitmap(drawable);
+            mPad = pad;
+            mVerticalAlignment = verticalAlignment;
+        }
+
+        private CustomIconMarginSpan(final Uri uri, final int pad, final int verticalAlignment) {
+            mBitmap = uri2Bitmap(uri);
+            mPad = pad;
+            mVerticalAlignment = verticalAlignment;
+        }
+
+        private CustomIconMarginSpan(final int resourceId, final int pad, final int verticalAlignment) {
+            mBitmap = resource2Bitmap(resourceId);
+            mPad = pad;
+            mVerticalAlignment = verticalAlignment;
+        }
+
+        private Bitmap drawable2Bitmap(final Drawable drawable) {
+            if (drawable instanceof BitmapDrawable) {
+                BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;
+                if (bitmapDrawable.getBitmap() != null) {
+                    return bitmapDrawable.getBitmap();
+                }
+            }
+            Bitmap bitmap;
+            if (drawable.getIntrinsicWidth() <= 0 || drawable.getIntrinsicHeight() <= 0) {
+                bitmap = Bitmap.createBitmap(1, 1,
+                        drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565);
+            } else {
+                bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(),
+                        drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565);
+            }
+            Canvas canvas = new Canvas(bitmap);
+            drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
+            drawable.draw(canvas);
+            return bitmap;
+        }
+
+        private Bitmap uri2Bitmap(final Uri uri) {
+            try {
+                return MediaStore.Images.Media.getBitmap(Utils.getApp().getContentResolver(), uri);
+            } catch (IOException e) {
+                e.printStackTrace();
+                return Bitmap.createBitmap(1, 1, Bitmap.Config.ARGB_8888);
+            }
+        }
+
+        private Bitmap resource2Bitmap(final int resourceId) {
+            Drawable drawable = ContextCompat.getDrawable(Utils.getApp(), resourceId);
+            Canvas canvas = new Canvas();
+            Bitmap bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);
+            canvas.setBitmap(bitmap);
+            drawable.setBounds(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());
+            drawable.draw(canvas);
+            return bitmap;
+        }
+
+        public int getLeadingMargin(final boolean first) {
+            return mBitmap.getWidth() + mPad;
+        }
+
+        public void drawLeadingMargin(Canvas c, Paint p, int x, int dir,
+                                      int top, int baseline, int bottom,
+                                      CharSequence text, int start, int end,
+                                      boolean first, Layout layout) {
+            int st = ((Spanned) text).getSpanStart(this);
+            int itop = layout.getLineTop(layout.getLineForOffset(st));
+
+            if (dir < 0)
+                x -= mBitmap.getWidth();
+
+            int delta = totalHeight - mBitmap.getHeight();
+
+            if (delta > 0) {
+                if (mVerticalAlignment == ALIGN_TOP) {
+                    c.drawBitmap(mBitmap, x, itop, p);
+                } else if (mVerticalAlignment == ALIGN_CENTER) {
+                    c.drawBitmap(mBitmap, x, itop + delta / 2, p);
+                } else {
+                    c.drawBitmap(mBitmap, x, itop + delta, p);
+                }
+            } else {
+                c.drawBitmap(mBitmap, x, itop, p);
+            }
+        }
+
+        public void chooseHeight(CharSequence text, int start, int end,
+                                 int istartv, int v, Paint.FontMetricsInt fm) {
+            if (lineHeight == 0) {
+                lineHeight = v - istartv;
+            }
+            if (need0 == 0 && end == ((Spanned) text).getSpanEnd(this)) {
+                int ht = mBitmap.getHeight();
+                need0 = ht - (v + fm.descent - fm.ascent - istartv);
+                need1 = ht - (v + fm.bottom - fm.top - istartv);
+                totalHeight = v - istartv + lineHeight;
+                return;
+            }
+            if (need0 > 0 || need1 > 0) {
+                if (mVerticalAlignment == ALIGN_TOP) {
+                    // the rest space should be filled with the end of line
+                    if (end == ((Spanned) text).getSpanEnd(this)) {
+                        if (need0 > 0) fm.descent += need0;
+                        if (need1 > 0) fm.bottom += need1;
+                    }
+                } else if (mVerticalAlignment == ALIGN_CENTER) {
+                    if (start == ((Spanned) text).getSpanStart(this)) {
+                        if (need0 > 0) fm.ascent -= need0 / 2;
+                        if (need1 > 0) fm.top -= need1 / 2;
+                    } else {
+                        if (!flag) {
+                            if (need0 > 0) fm.ascent += need0 / 2;
+                            if (need1 > 0) fm.top += need1 / 2;
+                            flag = true;
+                        }
+                    }
+                    if (end == ((Spanned) text).getSpanEnd(this)) {
+                        if (need0 > 0) fm.descent += need0 / 2;
+                        if (need1 > 0) fm.bottom += need1 / 2;
+                    }
+                } else {
+                    // the top space should be filled with the first of line
+                    if (start == ((Spanned) text).getSpanStart(this)) {
+                        if (need0 > 0) fm.ascent -= need0;
+                        if (need1 > 0) fm.top -= need1;
+                    } else {
+                        if (!flag) {
+                            if (need0 > 0) fm.ascent += need0;
+                            if (need1 > 0) fm.top += need1;
+                            flag = true;
+                        }
+                    }
+                }
+            }
+        }
+    }
+
+    @SuppressLint("ParcelCreator")
+    class CustomTypefaceSpan extends TypefaceSpan {
+
+        private final Typeface newType;
+
+        private CustomTypefaceSpan(final Typeface type) {
+            super("");
+            newType = type;
+        }
+
+        @Override
+        public void updateDrawState(final TextPaint textPaint) {
+            apply(textPaint, newType);
+        }
+
+        @Override
+        public void updateMeasureState(final TextPaint paint) {
+            apply(paint, newType);
+        }
+
+        private void apply(final Paint paint, final Typeface tf) {
+            int oldStyle;
+            Typeface old = paint.getTypeface();
+            if (old == null) {
+                oldStyle = 0;
+            } else {
+                oldStyle = old.getStyle();
+            }
+
+            int fake = oldStyle & ~tf.getStyle();
+            if ((fake & Typeface.BOLD) != 0) {
+                paint.setFakeBoldText(true);
+            }
+
+            if ((fake & Typeface.ITALIC) != 0) {
+                paint.setTextSkewX(-0.25f);
+            }
+
+            paint.getShader();
+
+            paint.setTypeface(tf);
+        }
+    }
+
+    class CustomImageSpan extends CustomDynamicDrawableSpan {
+        private Drawable mDrawable;
+        private Uri      mContentUri;
+        private int      mResourceId;
+
+        private CustomImageSpan(final Bitmap b, final int verticalAlignment) {
+            super(verticalAlignment);
+            mDrawable = new BitmapDrawable(Utils.getApp().getResources(), b);
+            mDrawable.setBounds(0, 0, mDrawable.getIntrinsicWidth(), mDrawable.getIntrinsicHeight());
+        }
+
+        private CustomImageSpan(final Drawable d, final int verticalAlignment) {
+            super(verticalAlignment);
+            mDrawable = d;
+            mDrawable.setBounds(0, 0, mDrawable.getIntrinsicWidth(), mDrawable.getIntrinsicHeight());
+        }
+
+        private CustomImageSpan(final Uri uri, final int verticalAlignment) {
+            super(verticalAlignment);
+            mContentUri = uri;
+        }
+
+        private CustomImageSpan(@DrawableRes final int resourceId, final int verticalAlignment) {
+            super(verticalAlignment);
+            mResourceId = resourceId;
+        }
+
+        @Override
+        public Drawable getDrawable() {
+            Drawable drawable = null;
+            if (mDrawable != null) {
+                drawable = mDrawable;
+            } else if (mContentUri != null) {
+                Bitmap bitmap;
+                try {
+                    InputStream is = Utils.getApp().getContentResolver().openInputStream(mContentUri);
+                    bitmap = BitmapFactory.decodeStream(is);
+                    drawable = new BitmapDrawable(Utils.getApp().getResources(), bitmap);
+                    drawable.setBounds(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());
+                    if (is != null) {
+                        is.close();
+                    }
+                } catch (Exception e) {
+                    Log.e("sms", "Failed to loaded content " + mContentUri, e);
+                }
+            } else {
+                try {
+                    drawable = ContextCompat.getDrawable(Utils.getApp(), mResourceId);
+                    drawable.setBounds(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());
+                } catch (Exception e) {
+                    Log.e("sms", "Unable to find resource: " + mResourceId);
+                }
+            }
+            return drawable;
+        }
+    }
+
+    abstract class CustomDynamicDrawableSpan extends ReplacementSpan {
+
+        static final int ALIGN_BOTTOM = 0;
+
+        static final int ALIGN_BASELINE = 1;
+
+        static final int ALIGN_CENTER = 2;
+
+        static final int ALIGN_TOP = 3;
+
+        final int mVerticalAlignment;
+
+        private CustomDynamicDrawableSpan() {
+            mVerticalAlignment = ALIGN_BOTTOM;
+        }
+
+        private CustomDynamicDrawableSpan(final int verticalAlignment) {
+            mVerticalAlignment = verticalAlignment;
+        }
+
+        public abstract Drawable getDrawable();
+
+        @Override
+        public int getSize(@NonNull final Paint paint, final CharSequence text,
+                           final int start, final int end,
+                           final Paint.FontMetricsInt fm) {
+            Drawable d = getCachedDrawable();
+            Rect rect = d.getBounds();
+            final int fontHeight = (int) (paint.getFontMetrics().descent - paint.getFontMetrics().ascent);
+            if (fm != null) { // this is the fucking code which I waste 3 days
+                if (rect.height() > fontHeight) {
+                    if (mVerticalAlignment == ALIGN_TOP) {
+                        fm.descent += rect.height() - fontHeight;
+                    } else if (mVerticalAlignment == ALIGN_CENTER) {
+                        fm.ascent -= (rect.height() - fontHeight) / 2;
+                        fm.descent += (rect.height() - fontHeight) / 2;
+                    } else {
+                        fm.ascent -= rect.height() - fontHeight;
+                    }
+                }
+            }
+            return rect.right;
+        }
+
+        @Override
+        public void draw(@NonNull final Canvas canvas, final CharSequence text,
+                         final int start, final int end, final float x,
+                         final int top, final int y, final int bottom, @NonNull final Paint paint) {
+            Drawable d = getCachedDrawable();
+            Rect rect = d.getBounds();
+            canvas.save();
+            final float fontHeight = paint.getFontMetrics().descent - paint.getFontMetrics().ascent;
+            int transY = bottom - rect.bottom;
+            if (rect.height() < fontHeight) { // this is the fucking code which I waste 3 days
+                if (mVerticalAlignment == ALIGN_BASELINE) {
+                    transY -= paint.getFontMetricsInt().descent;
+                } else if (mVerticalAlignment == ALIGN_CENTER) {
+                    transY -= (fontHeight - rect.height()) / 2;
+                } else if (mVerticalAlignment == ALIGN_TOP) {
+                    transY -= fontHeight - rect.height();
+                }
+            }
+            canvas.translate(x, transY);
+            d.draw(canvas);
+            canvas.restore();
+        }
+
+        private Drawable getCachedDrawable() {
+            WeakReference<Drawable> wr = mDrawableRef;
+            Drawable d = null;
+            if (wr != null)
+                d = wr.get();
+            if (d == null) {
+                d = getDrawable();
+                mDrawableRef = new WeakReference<>(d);
+            }
+            return getDrawable();
+        }
+
+        private WeakReference<Drawable> mDrawableRef;
+    }
+
+    class ShaderSpan extends CharacterStyle implements UpdateAppearance {
+        private Shader mShader;
+
+        private ShaderSpan(final Shader shader) {
+            this.mShader = shader;
+        }
+
+        @Override
+        public void updateDrawState(final TextPaint tp) {
+            tp.setShader(mShader);
+        }
+    }
+
+    class ShadowSpan extends CharacterStyle implements UpdateAppearance {
+        private float radius;
+        private float dx, dy;
+        private int shadowColor;
+
+        private ShadowSpan(final float radius, final float dx, final float dy, final int shadowColor) {
+            this.radius = radius;
+            this.dx = dx;
+            this.dy = dy;
+            this.shadowColor = shadowColor;
+        }
+
+        @Override
+        public void updateDrawState(final TextPaint tp) {
+            tp.setShadowLayer(radius, dx, dy, shadowColor);
+        }
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/constant/RegexConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/constant/RegexConstants.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/constant/RegexConstants.java	(revision )
@@ -0,0 +1,122 @@
+package com.baselib.utilcode.constant;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2017/03/13
+ *     desc  : 正则相关常量
+ * </pre>
+ */
+public final class RegexConstants {
+    /**
+     * 正则:密码(字母数字下划线)
+     */
+    public static final String REGEX_PASSWORD = "^\\w{6,16}$";
+    /**
+     * 正则:车牌号
+     */
+    public static final String REGEX_PLATE_NUMBER = "^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$";
+    /**
+     * 正则：手机号（简单）
+     */
+    public static final String REGEX_MOBILE_SIMPLE = "^[1]\\d{10}$";
+    /**
+     * 正则：手机号（精确）
+     * <p>移动：134(0-8)、135、136、137、138、139、147、150、151、152、157、158、159、178、182、183、184、187、188</p>
+     * <p>联通：130、131、132、145、155、156、171、175、176、185、186</p>
+     * <p>电信：133、153、173、177、180、181、189</p>
+     * <p>全球星：1349</p>
+     * <p>虚拟运营商：170</p>
+     */
+    public static final String REGEX_MOBILE_EXACT = "^((13[0-9])|(14[5,7])|(15[0-3,5-9])|(17[0,1,3,5-8])|(18[0-9])|(147))\\d{8}$";
+    /**
+     * 正则：电话号码
+     */
+    public static final String REGEX_TEL = "^0\\d{2,3}[- ]?\\d{7,8}";
+    /**
+     * 正则：身份证号码15位
+     */
+    public static final String REGEX_ID_CARD15 = "^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$";
+    /**
+     * 正则：身份证号码18位
+     */
+    public static final String REGEX_ID_CARD18 = "^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}([0-9Xx])$";
+    /**
+     * 正则：邮箱
+     */
+    public static final String REGEX_EMAIL = "^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$";
+    /**
+     * 正则：URL
+     */
+    public static final String REGEX_URL = "[a-zA-z]+://[^\\s]*";
+    /**
+     * 正则：汉字
+     */
+    public static final String REGEX_ZH = "^[\\u4e00-\\u9fa5]+$";
+    /**
+     * 正则：用户名，取值范围为a-z,A-Z,0-9,"_",汉字，不能以"_"结尾,用户名必须是6-20位
+     */
+    public static final String REGEX_USERNAME = "^[\\w\\u4e00-\\u9fa5]{6,20}(?<!_)$";
+    /**
+     * 正则：yyyy-MM-dd格式的日期校验，已考虑平闰年
+     */
+    public static final String REGEX_DATE = "^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$";
+    /**
+     * 正则：IP地址
+     */
+    public static final String REGEX_IP = "((2[0-4]\\d|25[0-5]|[01]?\\d\\d?)\\.){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)";
+
+    ///////////////////////////////////////////////////////////////////////////
+    // 以下摘自http://tool.oschina.net/regex
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 正则：双字节字符(包括汉字在内)
+     */
+    public static final String REGEX_DOUBLE_BYTE_CHAR = "[^\\x00-\\xff]";
+    /**
+     * 正则：空白行
+     */
+    public static final String REGEX_BLANK_LINE = "\\n\\s*\\r";
+    /**
+     * 正则：QQ号
+     */
+    public static final String REGEX_TENCENT_NUM = "[1-9][0-9]{4,}";
+    /**
+     * 正则：中国邮政编码
+     */
+    public static final String REGEX_ZIP_CODE = "[1-9]\\d{5}(?!\\d)";
+    /**
+     * 正则：正整数
+     */
+    public static final String REGEX_POSITIVE_INTEGER = "^[1-9]\\d*$";
+    /**
+     * 正则：负整数
+     */
+    public static final String REGEX_NEGATIVE_INTEGER = "^-[1-9]\\d*$";
+    /**
+     * 正则：整数
+     */
+    public static final String REGEX_INTEGER = "^-?[1-9]\\d*$";
+    /**
+     * 正则：非负整数(正整数 + 0)
+     */
+    public static final String REGEX_NOT_NEGATIVE_INTEGER = "^[1-9]\\d*|0$";
+    /**
+     * 正则：非正整数（负整数 + 0）
+     */
+    public static final String REGEX_NOT_POSITIVE_INTEGER = "^-[1-9]\\d*|0$";
+    /**
+     * 正则：正浮点数
+     */
+    public static final String REGEX_POSITIVE_FLOAT = "^[1-9]\\d*\\.\\d*|0\\.\\d*[1-9]\\d*$";
+    /**
+     * 正则：负浮点数
+     */
+    public static final String REGEX_NEGATIVE_FLOAT = "^-[1-9]\\d*\\.\\d*|-0\\.\\d*[1-9]\\d*$";
+
+    ///////////////////////////////////////////////////////////////////////////
+    // If u want more please visit http://toutiao.com/i6231678548520731137
+    ///////////////////////////////////////////////////////////////////////////
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/FragmentUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/FragmentUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/FragmentUtils.java	(revision )
@@ -0,0 +1,1150 @@
+package com.baselib.utilcode.util;
+
+import android.graphics.drawable.Drawable;
+import android.os.Build;
+import android.os.Bundle;
+import android.support.annotation.AnimRes;
+import android.support.annotation.ColorInt;
+import android.support.annotation.DrawableRes;
+import android.support.annotation.IdRes;
+import android.support.annotation.NonNull;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentTransaction;
+import android.support.v4.view.ViewCompat;
+import android.util.Log;
+import android.view.View;
+
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2017/01/17
+ *     desc  : Fragment相关工具类
+ * </pre>
+ */
+public final class FragmentUtils {
+
+    private static final int TYPE_ADD_FRAGMENT       = 0x01;
+    private static final int TYPE_SHOW_FRAGMENT      = 0x01 << 1;
+    private static final int TYPE_HIDE_FRAGMENT      = 0x01 << 2;
+    private static final int TYPE_SHOW_HIDE_FRAGMENT = 0x01 << 3;
+    private static final int TYPE_REPLACE_FRAGMENT   = 0x01 << 4;
+    private static final int TYPE_REMOVE_FRAGMENT    = 0x01 << 5;
+    private static final int TYPE_REMOVE_TO_FRAGMENT = 0x01 << 6;
+
+    private static final String ARGS_ID           = "args_id";
+    private static final String ARGS_IS_HIDE      = "args_is_hide";
+    private static final String ARGS_IS_ADD_STACK = "args_is_add_stack";
+
+    private FragmentUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 新增fragment
+     *
+     * @param fm          fragment管理器
+     * @param containerId 布局Id
+     * @param add         要新增的fragment
+     */
+    public static void add(@NonNull final FragmentManager fm,
+                           @NonNull final Fragment add,
+                           @IdRes final int containerId) {
+        add(fm, add, containerId, false, false);
+    }
+
+    /**
+     * 新增fragment
+     *
+     * @param fm          fragment管理器
+     * @param containerId 布局Id
+     * @param add         要新增的fragment
+     * @param isHide      是否隐藏
+     */
+    public static void add(@NonNull final FragmentManager fm,
+                           @NonNull final Fragment add,
+                           @IdRes final int containerId,
+                           final boolean isHide) {
+        add(fm, add, containerId, isHide, false);
+    }
+
+    /**
+     * 新增fragment
+     *
+     * @param fm          fragment管理器
+     * @param containerId 布局Id
+     * @param add         要新增的fragment
+     * @param isHide      是否隐藏
+     * @param isAddStack  是否入回退栈
+     */
+    public static void add(@NonNull final FragmentManager fm,
+                           @NonNull final Fragment add,
+                           @IdRes final int containerId,
+                           final boolean isHide,
+                           final boolean isAddStack) {
+        putArgs(add, new Args(containerId, isHide, isAddStack));
+        operateNoAnim(fm, TYPE_ADD_FRAGMENT, null, add);
+    }
+
+    /**
+     * 新增fragment
+     *
+     * @param fm          fragment管理器
+     * @param containerId 布局Id
+     * @param add         要新增的fragment
+     * @param enterAnim   入场动画
+     * @param exitAnim    出场动画
+     */
+    public static void add(@NonNull final FragmentManager fm,
+                           @NonNull final Fragment add,
+                           @IdRes final int containerId,
+                           @AnimRes final int enterAnim,
+                           @AnimRes final int exitAnim) {
+        add(fm, add, containerId, false, enterAnim, exitAnim, 0, 0);
+    }
+
+    /**
+     * 新增fragment
+     *
+     * @param fm          fragment管理器
+     * @param containerId 布局Id
+     * @param add         要新增的fragment
+     * @param isAddStack  是否入回退栈
+     * @param enterAnim   入场动画
+     * @param exitAnim    出场动画
+     */
+    public static void add(@NonNull final FragmentManager fm,
+                           @NonNull final Fragment add,
+                           @IdRes final int containerId,
+                           final boolean isAddStack,
+                           @AnimRes final int enterAnim,
+                           @AnimRes final int exitAnim) {
+        add(fm, add, containerId, isAddStack, enterAnim, exitAnim, 0, 0);
+    }
+
+    /**
+     * 新增fragment
+     *
+     * @param fm           fragment管理器
+     * @param containerId  布局Id
+     * @param add          要新增的fragment
+     * @param enterAnim    入场动画
+     * @param exitAnim     出场动画
+     * @param popEnterAnim 入栈动画
+     * @param popExitAnim  出栈动画
+     */
+    public static void add(@NonNull final FragmentManager fm,
+                           @NonNull final Fragment add,
+                           @IdRes final int containerId,
+                           @AnimRes final int enterAnim,
+                           @AnimRes final int exitAnim,
+                           @AnimRes final int popEnterAnim,
+                           @AnimRes final int popExitAnim) {
+        add(fm, add, containerId, false, enterAnim, exitAnim, popEnterAnim, popExitAnim);
+    }
+
+    /**
+     * 新增fragment
+     *
+     * @param fm           fragment管理器
+     * @param containerId  布局Id
+     * @param add          要新增的fragment
+     * @param isAddStack   是否入回退栈
+     * @param enterAnim    入场动画
+     * @param exitAnim     出场动画
+     * @param popEnterAnim 入栈动画
+     * @param popExitAnim  出栈动画
+     */
+    public static void add(@NonNull final FragmentManager fm,
+                           @NonNull final Fragment add,
+                           @IdRes final int containerId,
+                           final boolean isAddStack,
+                           @AnimRes final int enterAnim,
+                           @AnimRes final int exitAnim,
+                           @AnimRes final int popEnterAnim,
+                           @AnimRes final int popExitAnim) {
+        FragmentTransaction ft = fm.beginTransaction();
+        putArgs(add, new Args(containerId, false, isAddStack));
+        addAnim(ft, enterAnim, exitAnim, popEnterAnim, popExitAnim);
+        operate(TYPE_ADD_FRAGMENT, fm, ft, null, add);
+    }
+
+    /**
+     * 新增fragment
+     *
+     * @param fm             fragment管理器
+     * @param add            新增的fragment
+     * @param containerId    布局Id
+     * @param sharedElements 共享元素
+     */
+    public static void add(@NonNull final FragmentManager fm,
+                           @NonNull final Fragment add,
+                           @IdRes final int containerId,
+                           @NonNull final View... sharedElements) {
+        add(fm, add, containerId, false, sharedElements);
+    }
+
+    /**
+     * 新增fragment
+     *
+     * @param fm             fragment管理器
+     * @param add            新增的fragment
+     * @param containerId    布局Id
+     * @param isAddStack     是否入回退栈
+     * @param sharedElements 共享元素
+     */
+    public static void add(@NonNull final FragmentManager fm,
+                           @NonNull final Fragment add,
+                           @IdRes final int containerId,
+                           final boolean isAddStack,
+                           @NonNull final View... sharedElements) {
+        FragmentTransaction ft = fm.beginTransaction();
+        putArgs(add, new Args(containerId, false, isAddStack));
+        addSharedElement(ft, sharedElements);
+        operate(TYPE_ADD_FRAGMENT, fm, ft, null, add);
+    }
+
+    /**
+     * 新增fragment
+     *
+     * @param fm          fragment管理器
+     * @param add         新增的fragment
+     * @param containerId 布局Id
+     * @param showIndex   要显示的fragment索引
+     */
+    public static void add(@NonNull final FragmentManager fm,
+                           @NonNull final List<Fragment> add,
+                           @IdRes final int containerId,
+                           final int showIndex) {
+        add(fm, add.toArray(new Fragment[add.size()]), containerId, showIndex);
+    }
+
+    /**
+     * 新增fragment
+     *
+     * @param fm          fragment管理器
+     * @param add         新增的fragment
+     * @param containerId 布局Id
+     * @param showIndex   要显示的fragment索引
+     */
+    public static void add(@NonNull final FragmentManager fm,
+                           @NonNull final Fragment[] add,
+                           @IdRes final int containerId,
+                           final int showIndex) {
+        for (int i = 0, len = add.length; i < len; ++i) {
+            putArgs(add[i], new Args(containerId, showIndex != i, false));
+        }
+        operateNoAnim(fm, TYPE_ADD_FRAGMENT, null, add);
+    }
+
+    /**
+     * 显示fragment
+     *
+     * @param show 要显示的fragment
+     */
+    public static void show(@NonNull final Fragment show) {
+        putArgs(show, false);
+        operateNoAnim(show.getFragmentManager(), TYPE_SHOW_FRAGMENT, null, show);
+    }
+
+    /**
+     * 显示fragment
+     *
+     * @param fm fragment管理器
+     */
+    public static void show(@NonNull final FragmentManager fm) {
+        List<Fragment> fragments = getFragments(fm);
+        for (Fragment show : fragments) {
+            putArgs(show, false);
+        }
+        operateNoAnim(fm, TYPE_SHOW_FRAGMENT, null, fragments.toArray(new Fragment[fragments.size()]));
+    }
+
+    /**
+     * 隐藏fragment
+     *
+     * @param hide 要隐藏的fragment
+     */
+    public static void hide(@NonNull final Fragment hide) {
+        putArgs(hide, true);
+        operateNoAnim(hide.getFragmentManager(), TYPE_HIDE_FRAGMENT, null, hide);
+    }
+
+    /**
+     * 隐藏fragment
+     *
+     * @param fm fragment管理器
+     */
+    public static void hide(@NonNull final FragmentManager fm) {
+        List<Fragment> fragments = getFragments(fm);
+        for (Fragment hide : fragments) {
+            putArgs(hide, true);
+        }
+        operateNoAnim(fm, TYPE_HIDE_FRAGMENT, null, fragments.toArray(new Fragment[fragments.size()]));
+    }
+
+    /**
+     * 先显示后隐藏fragment
+     *
+     * @param showIndex 要显示的fragment索引
+     * @param fragments 要隐藏的fragments
+     */
+    public static void showHide(final int showIndex, @NonNull final List<Fragment> fragments) {
+        showHide(fragments.get(showIndex), fragments);
+    }
+
+    /**
+     * 先显示后隐藏fragment
+     *
+     * @param show 要显示的fragment
+     * @param hide 要隐藏的fragment
+     */
+    public static void showHide(@NonNull final Fragment show, @NonNull final List<Fragment> hide) {
+        for (Fragment fragment : hide) {
+            putArgs(fragment, fragment != show);
+        }
+        operateNoAnim(show.getFragmentManager(), TYPE_SHOW_HIDE_FRAGMENT, show,
+                hide.toArray(new Fragment[hide.size()]));
+    }
+
+    /**
+     * 先显示后隐藏fragment
+     *
+     * @param showIndex 要显示的fragment索引
+     * @param fragments 要隐藏的fragments
+     */
+    public static void showHide(final int showIndex, @NonNull final Fragment... fragments) {
+        showHide(fragments[showIndex], fragments);
+    }
+
+    /**
+     * 先显示后隐藏fragment
+     *
+     * @param show 要显示的fragment
+     * @param hide 要隐藏的fragment
+     */
+    public static void showHide(@NonNull final Fragment show, @NonNull final Fragment... hide) {
+        for (Fragment fragment : hide) {
+            putArgs(fragment, fragment != show);
+        }
+        operateNoAnim(show.getFragmentManager(), TYPE_SHOW_HIDE_FRAGMENT, show, hide);
+    }
+
+    /**
+     * 先显示后隐藏fragment
+     *
+     * @param show 要显示的fragment
+     * @param hide 要隐藏的fragment
+     */
+    public static void showHide(@NonNull final Fragment show,
+                                @NonNull final Fragment hide) {
+        putArgs(show, false);
+        putArgs(hide, true);
+        operateNoAnim(show.getFragmentManager(), TYPE_SHOW_HIDE_FRAGMENT, show, hide);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param srcFragment  源fragment
+     * @param destFragment 目标fragment
+     */
+    public static void replace(@NonNull final Fragment srcFragment,
+                               @NonNull final Fragment destFragment) {
+        replace(srcFragment, destFragment, false);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param srcFragment  源fragment
+     * @param destFragment 目标fragment
+     * @param isAddStack   是否入回退栈
+     */
+    public static void replace(@NonNull final Fragment srcFragment,
+                               @NonNull final Fragment destFragment,
+                               final boolean isAddStack) {
+        Args args = getArgs(srcFragment);
+        replace(srcFragment.getFragmentManager(), destFragment, args.id, isAddStack);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param srcFragment  源fragment
+     * @param destFragment 目标fragment
+     * @param enterAnim    入场动画
+     * @param exitAnim     出场动画
+     */
+    public static void replace(@NonNull final Fragment srcFragment,
+                               @NonNull final Fragment destFragment,
+                               @AnimRes final int enterAnim,
+                               @AnimRes final int exitAnim) {
+        replace(srcFragment, destFragment, false, enterAnim, exitAnim, 0, 0);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param srcFragment  源fragment
+     * @param destFragment 目标fragment
+     * @param isAddStack   是否入回退栈
+     * @param enterAnim    入场动画
+     * @param exitAnim     出场动画
+     */
+    public static void replace(@NonNull final Fragment srcFragment,
+                               @NonNull final Fragment destFragment,
+                               final boolean isAddStack,
+                               @AnimRes final int enterAnim,
+                               @AnimRes final int exitAnim) {
+        replace(srcFragment, destFragment, isAddStack, enterAnim, exitAnim, 0, 0);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param srcFragment  源fragment
+     * @param destFragment 目标fragment
+     * @param enterAnim    入场动画
+     * @param exitAnim     出场动画
+     * @param popEnterAnim 入栈动画
+     * @param popExitAnim  出栈动画
+     */
+    public static void replace(@NonNull final Fragment srcFragment,
+                               @NonNull final Fragment destFragment,
+                               @AnimRes final int enterAnim,
+                               @AnimRes final int exitAnim,
+                               @AnimRes final int popEnterAnim,
+                               @AnimRes final int popExitAnim) {
+        replace(srcFragment, destFragment, false, enterAnim, exitAnim, popEnterAnim, popExitAnim);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param srcFragment  源fragment
+     * @param destFragment 目标fragment
+     * @param isAddStack   是否入回退栈
+     * @param enterAnim    入场动画
+     * @param exitAnim     出场动画
+     * @param popEnterAnim 入栈动画
+     * @param popExitAnim  出栈动画
+     */
+    public static void replace(@NonNull final Fragment srcFragment,
+                               @NonNull final Fragment destFragment,
+                               final boolean isAddStack,
+                               @AnimRes final int enterAnim,
+                               @AnimRes final int exitAnim,
+                               @AnimRes final int popEnterAnim,
+                               @AnimRes final int popExitAnim) {
+        Args args = getArgs(srcFragment);
+        replace(srcFragment.getFragmentManager(), destFragment, args.id, isAddStack,
+                enterAnim, exitAnim, popEnterAnim, popExitAnim);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param srcFragment    源fragment
+     * @param destFragment   目标fragment
+     * @param sharedElements 共享元素
+     */
+    public static void replace(@NonNull final Fragment srcFragment,
+                               @NonNull final Fragment destFragment,
+                               final View... sharedElements) {
+        replace(srcFragment, destFragment, false, sharedElements);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param srcFragment    源fragment
+     * @param destFragment   目标fragment
+     * @param isAddStack     是否入回退栈
+     * @param sharedElements 共享元素
+     */
+    public static void replace(@NonNull final Fragment srcFragment,
+                               @NonNull final Fragment destFragment,
+                               final boolean isAddStack,
+                               final View... sharedElements) {
+        Args args = getArgs(srcFragment);
+        replace(srcFragment.getFragmentManager(), destFragment, args.id, isAddStack, sharedElements);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param fm          fragment管理器
+     * @param containerId 布局Id
+     * @param fragment    fragment
+     */
+    public static void replace(@NonNull final FragmentManager fm,
+                               @NonNull final Fragment fragment,
+                               @IdRes final int containerId) {
+        replace(fm, fragment, containerId, false);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param fm          fragment管理器
+     * @param containerId 布局Id
+     * @param fragment    fragment
+     * @param isAddStack  是否入回退栈
+     */
+    public static void replace(@NonNull final FragmentManager fm,
+                               @NonNull final Fragment fragment,
+                               @IdRes final int containerId,
+                               final boolean isAddStack) {
+        FragmentTransaction ft = fm.beginTransaction();
+        putArgs(fragment, new Args(containerId, false, isAddStack));
+        operate(TYPE_REPLACE_FRAGMENT, fm, ft, null, fragment);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param fm          fragment管理器
+     * @param containerId 布局Id
+     * @param fragment    fragment
+     * @param enterAnim   入场动画
+     * @param exitAnim    出场动画
+     */
+    public static void replace(@NonNull final FragmentManager fm,
+                               @NonNull final Fragment fragment,
+                               @IdRes final int containerId,
+                               @AnimRes final int enterAnim,
+                               @AnimRes final int exitAnim) {
+        replace(fm, fragment, containerId, false, enterAnim, exitAnim, 0, 0);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param fm          fragment管理器
+     * @param containerId 布局Id
+     * @param fragment    fragment
+     * @param isAddStack  是否入回退栈
+     * @param enterAnim   入场动画
+     * @param exitAnim    出场动画
+     */
+    public static void replace(@NonNull final FragmentManager fm,
+                               @NonNull final Fragment fragment,
+                               @IdRes final int containerId,
+                               final boolean isAddStack,
+                               @AnimRes final int enterAnim,
+                               @AnimRes final int exitAnim) {
+        replace(fm, fragment, containerId, isAddStack, enterAnim, exitAnim, 0, 0);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param fm           fragment管理器
+     * @param containerId  布局Id
+     * @param fragment     fragment
+     * @param enterAnim    入场动画
+     * @param exitAnim     出场动画
+     * @param popEnterAnim 入栈动画
+     * @param popExitAnim  出栈动画
+     */
+    public static void replace(@NonNull final FragmentManager fm,
+                               @NonNull final Fragment fragment,
+                               @IdRes final int containerId,
+                               @AnimRes final int enterAnim,
+                               @AnimRes final int exitAnim,
+                               @AnimRes final int popEnterAnim,
+                               @AnimRes final int popExitAnim) {
+        replace(fm, fragment, containerId, false, enterAnim, exitAnim, popEnterAnim, popExitAnim);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param fm           fragment管理器
+     * @param containerId  布局Id
+     * @param fragment     fragment
+     * @param isAddStack   是否入回退栈
+     * @param enterAnim    入场动画
+     * @param exitAnim     出场动画
+     * @param popEnterAnim 入栈动画
+     * @param popExitAnim  出栈动画
+     */
+    public static void replace(@NonNull final FragmentManager fm,
+                               @NonNull final Fragment fragment,
+                               @IdRes final int containerId,
+                               final boolean isAddStack,
+                               @AnimRes final int enterAnim,
+                               @AnimRes final int exitAnim,
+                               @AnimRes final int popEnterAnim,
+                               @AnimRes final int popExitAnim) {
+        FragmentTransaction ft = fm.beginTransaction();
+        putArgs(fragment, new Args(containerId, false, isAddStack));
+        addAnim(ft, enterAnim, exitAnim, popEnterAnim, popExitAnim);
+        operate(TYPE_REPLACE_FRAGMENT, fm, ft, null, fragment);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param fm             fragment管理器
+     * @param containerId    布局Id
+     * @param fragment       fragment
+     * @param sharedElements 共享元素
+     */
+    public static void replace(@NonNull final FragmentManager fm,
+                               @NonNull final Fragment fragment,
+                               @IdRes final int containerId,
+                               final View... sharedElements) {
+        replace(fm, fragment, containerId, false, sharedElements);
+    }
+
+    /**
+     * 替换fragment
+     *
+     * @param fm             fragment管理器
+     * @param containerId    布局Id
+     * @param fragment       fragment
+     * @param isAddStack     是否入回退栈
+     * @param sharedElements 共享元素
+     */
+    public static void replace(@NonNull final FragmentManager fm,
+                               @NonNull final Fragment fragment,
+                               @IdRes final int containerId,
+                               final boolean isAddStack,
+                               final View... sharedElements) {
+        FragmentTransaction ft = fm.beginTransaction();
+        putArgs(fragment, new Args(containerId, false, isAddStack));
+        addSharedElement(ft, sharedElements);
+        operate(TYPE_REPLACE_FRAGMENT, fm, ft, null, fragment);
+    }
+
+    /**
+     * 出栈fragment
+     *
+     * @param fm fragment管理器
+     */
+    public static void pop(@NonNull final FragmentManager fm) {
+        pop(fm, true);
+    }
+
+    /**
+     * 出栈fragment
+     *
+     * @param fm fragment管理器
+     */
+    public static void pop(@NonNull final FragmentManager fm,
+                           final boolean isImmediate) {
+        if (isImmediate) {
+            fm.popBackStackImmediate();
+        } else {
+            fm.popBackStack();
+        }
+    }
+
+    /**
+     * 出栈到指定fragment
+     *
+     * @param fm          fragment管理器
+     * @param popClz      出栈fragment的类型
+     * @param isInclusive 是否出栈popClz的fragment
+     */
+    public static void popTo(@NonNull final FragmentManager fm,
+                             final Class<? extends Fragment> popClz,
+                             final boolean isInclusive) {
+        popTo(fm, popClz, isInclusive, true);
+    }
+
+    /**
+     * 出栈到指定fragment
+     *
+     * @param fm          fragment管理器
+     * @param popClz      出栈fragment的类型
+     * @param isInclusive 是否出栈popClz的fragment
+     * @param isImmediate 是否立即出栈
+     */
+    public static void popTo(@NonNull final FragmentManager fm,
+                             final Class<? extends Fragment> popClz,
+                             final boolean isInclusive,
+                             final boolean isImmediate) {
+        if (isImmediate) {
+            fm.popBackStackImmediate(popClz.getName(),
+                    isInclusive ? FragmentManager.POP_BACK_STACK_INCLUSIVE : 0);
+        } else {
+            fm.popBackStack(popClz.getName(),
+                    isInclusive ? FragmentManager.POP_BACK_STACK_INCLUSIVE : 0);
+        }
+    }
+
+    /**
+     * 出栈所有fragment
+     *
+     * @param fm fragment管理器
+     */
+    public static void popAll(@NonNull final FragmentManager fm) {
+        popAll(fm, true);
+    }
+
+    /**
+     * 出栈所有fragment
+     *
+     * @param fm fragment管理器
+     */
+    public static void popAll(@NonNull final FragmentManager fm, final boolean isImmediate) {
+        while (fm.getBackStackEntryCount() > 0) {
+            if (isImmediate) {
+                fm.popBackStackImmediate();
+            } else {
+                fm.popBackStack();
+            }
+        }
+    }
+
+    /**
+     * 移除fragment
+     *
+     * @param remove 要移除的fragment
+     */
+    public static void remove(@NonNull final Fragment remove) {
+        operateNoAnim(remove.getFragmentManager(), TYPE_REMOVE_FRAGMENT, null, remove);
+    }
+
+    /**
+     * 移除到指定fragment
+     *
+     * @param removeTo    要移除到的fragment
+     * @param isInclusive 是否移除removeTo
+     */
+    public static void removeTo(@NonNull final Fragment removeTo, final boolean isInclusive) {
+        operateNoAnim(removeTo.getFragmentManager(), TYPE_REMOVE_TO_FRAGMENT,
+                isInclusive ? removeTo : null, removeTo);
+    }
+
+    /**
+     * 移除所有fragment
+     *
+     * @param fm fragment管理器
+     */
+    public static void removeAll(@NonNull final FragmentManager fm) {
+        List<Fragment> fragments = getFragments(fm);
+        operateNoAnim(fm, TYPE_REMOVE_FRAGMENT, null, fragments.toArray(new Fragment[fragments.size()]));
+    }
+
+    private static void putArgs(final Fragment fragment, final Args args) {
+        Bundle bundle = fragment.getArguments();
+        if (bundle == null) {
+            bundle = new Bundle();
+            fragment.setArguments(bundle);
+        }
+        bundle.putInt(ARGS_ID, args.id);
+        bundle.putBoolean(ARGS_IS_HIDE, args.isHide);
+        bundle.putBoolean(ARGS_IS_ADD_STACK, args.isAddStack);
+    }
+
+    private static void putArgs(final Fragment fragment, final boolean isHide) {
+        Bundle bundle = fragment.getArguments();
+        if (bundle == null) {
+            bundle = new Bundle();
+            fragment.setArguments(bundle);
+        }
+        bundle.putBoolean(ARGS_IS_HIDE, isHide);
+    }
+
+    private static Args getArgs(final Fragment fragment) {
+        Bundle bundle = fragment.getArguments();
+        return new Args(bundle.getInt(ARGS_ID, fragment.getId()),
+                bundle.getBoolean(ARGS_IS_HIDE),
+                bundle.getBoolean(ARGS_IS_ADD_STACK));
+    }
+
+    private static void operateNoAnim(final FragmentManager fm,
+                                      final int type,
+                                      final Fragment src,
+                                      Fragment... dest) {
+        FragmentTransaction ft = fm.beginTransaction();
+        operate(type, fm, ft, src, dest);
+    }
+
+    private static void operate(final int type,
+                                final FragmentManager fm,
+                                final FragmentTransaction ft,
+                                final Fragment src,
+                                final Fragment... dest) {
+        if (src != null && src.isRemoving()) {
+            Log.e("FragmentUtils", src.getClass().getName() + " is isRemoving");
+            return;
+        }
+        String name;
+        Bundle args;
+        switch (type) {
+            case TYPE_ADD_FRAGMENT:
+                for (Fragment fragment : dest) {
+                    name = fragment.getClass().getName();
+                    args = fragment.getArguments();
+                    Fragment fragmentByTag = fm.findFragmentByTag(name);
+                    if (fragmentByTag != null) {
+                        if (fragmentByTag.isAdded()) {
+                            ft.remove(fragmentByTag);
+                        }
+                    }
+                    ft.add(args.getInt(ARGS_ID), fragment, name);
+                    if (args.getBoolean(ARGS_IS_HIDE)) ft.hide(fragment);
+                    if (args.getBoolean(ARGS_IS_ADD_STACK)) ft.addToBackStack(name);
+                }
+                break;
+            case TYPE_HIDE_FRAGMENT:
+                for (Fragment fragment : dest) {
+                    ft.hide(fragment);
+                }
+                break;
+            case TYPE_SHOW_FRAGMENT:
+                for (Fragment fragment : dest) {
+                    ft.show(fragment);
+                }
+                break;
+            case TYPE_SHOW_HIDE_FRAGMENT:
+                ft.show(src);
+                for (Fragment fragment : dest) {
+                    if (fragment != src) {
+                        ft.hide(fragment);
+                    }
+                }
+                break;
+            case TYPE_REPLACE_FRAGMENT:
+                name = dest[0].getClass().getName();
+                args = dest[0].getArguments();
+                ft.replace(args.getInt(ARGS_ID), dest[0], name);
+                if (args.getBoolean(ARGS_IS_ADD_STACK)) ft.addToBackStack(name);
+                break;
+            case TYPE_REMOVE_FRAGMENT:
+                for (Fragment fragment : dest) {
+                    if (fragment != src) {
+                        ft.remove(fragment);
+                    }
+                }
+                break;
+            case TYPE_REMOVE_TO_FRAGMENT:
+                for (int i = dest.length - 1; i >= 0; --i) {
+                    Fragment fragment = dest[i];
+                    if (fragment == dest[0]) {
+                        if (src != null) ft.remove(fragment);
+                        break;
+                    }
+                    ft.remove(fragment);
+                }
+                break;
+        }
+        ft.commitAllowingStateLoss();
+    }
+
+    private static void addAnim(final FragmentTransaction ft,
+                                final int enter,
+                                final int exit,
+                                final int popEnter,
+                                final int popExit) {
+        ft.setCustomAnimations(enter, exit, popEnter, popExit);
+    }
+
+    private static void addSharedElement(final FragmentTransaction ft,
+                                         final View... views) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            for (View view : views) {
+                ft.addSharedElement(view, view.getTransitionName());
+            }
+        }
+    }
+
+    /**
+     * 获取顶部fragment
+     *
+     * @param fm fragment管理器
+     * @return 最后加入的fragment
+     */
+    public static Fragment getTop(@NonNull final FragmentManager fm) {
+        return getTopIsInStack(fm, false);
+    }
+
+    /**
+     * 获取栈中顶部fragment
+     *
+     * @param fm fragment管理器
+     * @return 最后加入的fragment
+     */
+    public static Fragment getTopInStack(@NonNull final FragmentManager fm) {
+        return getTopIsInStack(fm, true);
+    }
+
+    private static Fragment getTopIsInStack(@NonNull final FragmentManager fm,
+                                            final boolean isInStack) {
+        List<Fragment> fragments = getFragments(fm);
+        for (int i = fragments.size() - 1; i >= 0; --i) {
+            Fragment fragment = fragments.get(i);
+            if (fragment != null) {
+                if (isInStack) {
+                    if (fragment.getArguments().getBoolean(ARGS_IS_ADD_STACK)) {
+                        return fragment;
+                    }
+                } else {
+                    return fragment;
+                }
+            }
+        }
+        return null;
+    }
+
+    /**
+     * 获取顶部可见fragment
+     *
+     * @param fm fragment管理器
+     * @return 顶层可见fragment
+     */
+    public static Fragment getTopShow(@NonNull final FragmentManager fm) {
+        return getTopShowIsInStack(fm, false);
+    }
+
+    /**
+     * 获取栈中顶部可见fragment
+     *
+     * @param fm fragment管理器
+     * @return 栈中顶层可见fragment
+     */
+    public static Fragment getTopShowInStack(@NonNull final FragmentManager fm) {
+        return getTopShowIsInStack(fm, true);
+    }
+
+    private static Fragment getTopShowIsInStack(@NonNull final FragmentManager fm,
+                                                final boolean isInStack) {
+        List<Fragment> fragments = getFragments(fm);
+        for (int i = fragments.size() - 1; i >= 0; --i) {
+            Fragment fragment = fragments.get(i);
+            if (fragment != null
+                    && fragment.isResumed()
+                    && fragment.isVisible()
+                    && fragment.getUserVisibleHint()) {
+                if (isInStack) {
+                    if (fragment.getArguments().getBoolean(ARGS_IS_ADD_STACK)) {
+                        return fragment;
+                    }
+                } else {
+                    return fragment;
+                }
+            }
+        }
+        return null;
+    }
+
+    /**
+     * 获取同级别的fragment
+     *
+     * @param fm fragment管理器
+     * @return fragment管理器中的fragment
+     */
+    public static List<Fragment> getFragments(@NonNull final FragmentManager fm) {
+        @SuppressWarnings("RestrictedApi")
+        List<Fragment> fragments = fm.getFragments();
+        if (fragments == null || fragments.isEmpty()) return Collections.emptyList();
+        return fragments;
+    }
+
+    /**
+     * 获取同级别栈中的fragment
+     *
+     * @param fm fragment管理器
+     * @return fragment管理器栈中的fragment
+     */
+    public static List<Fragment> getFragmentsInStack(@NonNull final FragmentManager fm) {
+        List<Fragment> fragments = getFragments(fm);
+        List<Fragment> result = new ArrayList<>();
+        for (Fragment fragment : fragments) {
+            if (fragment != null && fragment.getArguments().getBoolean(ARGS_IS_ADD_STACK)) {
+                result.add(fragment);
+            }
+        }
+        return result;
+    }
+
+    /**
+     * 获取所有fragment
+     *
+     * @param fm fragment管理器
+     * @return 所有fragment
+     */
+    public static List<FragmentNode> getAllFragments(@NonNull final FragmentManager fm) {
+        return getAllFragments(fm, new ArrayList<FragmentNode>());
+    }
+
+    private static List<FragmentNode> getAllFragments(@NonNull final FragmentManager fm,
+                                                      final List<FragmentNode> result) {
+        List<Fragment> fragments = getFragments(fm);
+        for (int i = fragments.size() - 1; i >= 0; --i) {
+            Fragment fragment = fragments.get(i);
+            if (fragment != null) {
+                result.add(new FragmentNode(fragment,
+                        getAllFragments(fragment.getChildFragmentManager(),
+                                new ArrayList<FragmentNode>())));
+            }
+        }
+        return result;
+    }
+
+    /**
+     * 获取栈中所有fragment
+     *
+     * @param fm fragment管理器
+     * @return 所有fragment
+     */
+    public static List<FragmentNode> getAllFragmentsInStack(@NonNull final FragmentManager fm) {
+        return getAllFragmentsInStack(fm, new ArrayList<FragmentNode>());
+    }
+
+    private static List<FragmentNode> getAllFragmentsInStack(@NonNull final FragmentManager fm,
+                                                             final List<FragmentNode> result) {
+        List<Fragment> fragments = getFragments(fm);
+        for (int i = fragments.size() - 1; i >= 0; --i) {
+            Fragment fragment = fragments.get(i);
+            if (fragment != null && fragment.getArguments().getBoolean(ARGS_IS_ADD_STACK)) {
+                result.add(new FragmentNode(fragment,
+                        getAllFragmentsInStack(fragment.getChildFragmentManager(),
+                                new ArrayList<FragmentNode>())));
+            }
+        }
+        return result;
+    }
+
+    /**
+     * 查找fragment
+     *
+     * @param fm      fragment管理器
+     * @param findClz 要查找的fragment类型
+     * @return 查找到的fragment
+     */
+    public static Fragment findFragment(@NonNull final FragmentManager fm,
+                                        final Class<? extends Fragment> findClz) {
+        return fm.findFragmentByTag(findClz.getName());
+    }
+
+    /**
+     * 处理fragment回退键
+     * <p>如果fragment实现了OnBackClickListener接口，返回{@code true}: 表示已消费回退键事件，反之则没消费</p>
+     * <p>具体示例见FragmentActivity</p>
+     *
+     * @param fragment fragment
+     * @return 是否消费回退事件
+     */
+    public static boolean dispatchBackPress(@NonNull final Fragment fragment) {
+        return fragment.isResumed()
+                && fragment.isVisible()
+                && fragment.getUserVisibleHint()
+                && fragment instanceof OnBackClickListener
+                && ((OnBackClickListener) fragment).onBackClick();
+    }
+
+    /**
+     * 处理fragment回退键
+     * <p>如果fragment实现了OnBackClickListener接口，返回{@code true}: 表示已消费回退键事件，反之则没消费</p>
+     * <p>具体示例见FragmentActivity</p>
+     *
+     * @param fm fragment管理器
+     * @return 是否消费回退事件
+     */
+    public static boolean dispatchBackPress(@NonNull final FragmentManager fm) {
+        List<Fragment> fragments = getFragments(fm);
+        if (fragments == null || fragments.isEmpty()) return false;
+        for (int i = fragments.size() - 1; i >= 0; --i) {
+            Fragment fragment = fragments.get(i);
+            if (fragment != null
+                    && fragment.isResumed()
+                    && fragment.isVisible()
+                    && fragment.getUserVisibleHint()
+                    && fragment instanceof OnBackClickListener
+                    && ((OnBackClickListener) fragment).onBackClick()) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 设置背景色
+     *
+     * @param fragment fragment
+     * @param color    背景色
+     */
+    public static void setBackgroundColor(@NonNull final Fragment fragment, @ColorInt final int color) {
+        View view = fragment.getView();
+        if (view != null) {
+            view.setBackgroundColor(color);
+        }
+    }
+
+    /**
+     * 设置背景资源
+     *
+     * @param fragment fragment
+     * @param resId    资源Id
+     */
+    public static void setBackgroundResource(@NonNull final Fragment fragment, @DrawableRes final int resId) {
+        View view = fragment.getView();
+        if (view != null) {
+            view.setBackgroundResource(resId);
+        }
+    }
+
+    /**
+     * 设置背景
+     *
+     * @param fragment   fragment
+     * @param background 背景
+     */
+    public static void setBackground(@NonNull final Fragment fragment, final Drawable background) {
+        ViewCompat.setBackground(fragment.getView(), background);
+    }
+
+    /**
+     * 获取类名
+     *
+     * @param fragment fragment
+     * @return 类名
+     */
+    public static String getSimpleName(final Fragment fragment) {
+        return fragment == null ? "null" : fragment.getClass().getSimpleName();
+    }
+
+    private static class Args {
+        int     id;
+        boolean isHide;
+        boolean isAddStack;
+
+        private Args(final int id, final boolean isHide, final boolean isAddStack) {
+            this.id = id;
+            this.isHide = isHide;
+            this.isAddStack = isAddStack;
+        }
+    }
+
+    public static class FragmentNode {
+        Fragment           fragment;
+        List<FragmentNode> next;
+
+        public FragmentNode(final Fragment fragment, final List<FragmentNode> next) {
+            this.fragment = fragment;
+            this.next = next;
+        }
+
+        @Override
+        public String toString() {
+            return fragment.getClass().getSimpleName()
+                    + "->"
+                    + ((next == null || next.isEmpty()) ? "no child" : next.toString());
+        }
+    }
+
+    public interface OnBackClickListener {
+        boolean onBackClick();
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPBaseTheme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPBaseTheme.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPBaseTheme.java	(revision )
@@ -0,0 +1,54 @@
+package com.baselib.ui.widget.mydatepicker;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 主题的默认实现类
+ */
+
+public class DPBaseTheme extends DPTheme {
+    @Override
+    public int colorBG() {
+        return 0xFF2D2D2D;
+    }
+
+    @Override
+    public int colorBGCircle() {
+        return 0xFF2D2D2D;
+    }
+
+    @Override
+    public int colorTitleBG() {
+        return 0xFF2D2D2D;
+    }
+
+    @Override
+    public int colorTitle() {
+        return 0xFFFFFFFF;
+    }
+    //当天的背景
+    @Override
+    public int colorToday() {
+        return 0xFFF86E0C;
+    }
+
+    @Override
+    public int colorG() {
+        return 0xFFFFFFFF;
+    }
+
+    @Override
+    public int colorF() {
+        return 0xFFF86E0C;
+    }
+
+    @Override
+    public int colorWeekend() {
+        return 0xFFFFFFFF;
+    }
+
+    @Override
+    public int colorHoliday() {
+        return 0xFFF86E0C;
+    }
+}
+
Index: baselib/src/main/res/drawable/shape_loading_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/drawable/shape_loading_dialog.xml	(revision )
+++ baselib/src/main/res/drawable/shape_loading_dialog.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+    <corners android:radius="10dp"/>
+    <solid android:color="@color/white"/>
+</shape>
Index: app/src/main/java/com/b3ad/yuxie/myapplication/activity/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/activity/MainActivity.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/activity/MainActivity.java	(revision )
@@ -0,0 +1,265 @@
+package com.b3ad.yuxie.myapplication.activity;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.Intent;
+import android.content.res.Configuration;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.ListView;
+import android.widget.SimpleAdapter;
+
+import com.b3ad.yuxie.myapplication.Login.view.LoginActivity;
+import com.b3ad.yuxie.myapplication.R;
+import com.b3ad.yuxie.myapplication.controlpc.RemoteControlActivity;
+import com.b3ad.yuxie.myapplication.utils.db.EntityManager;
+import com.b3ad.yuxie.myapplication.entity.User;
+import com.b3ad.yuxie.myapplication.listandrecycler.ListAndRecyclerActivity;
+import com.b3ad.yuxie.myapplication.music.MusicActivity;
+import com.b3ad.yuxie.myapplication.mvp.view.UserActivity;
+import com.b3ad.yuxie.myapplication.mvvp.MvvpActivity;
+import com.b3ad.yuxie.myapplication.txt.TxtActivity;
+import com.b3ad.yuxie.myapplication.video.VideoListActivity;
+import com.example.anonymous.greendao.UserDao;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+public class MainActivity extends AppCompatActivity implements AdapterView.OnItemClickListener {
+
+    ListView lv_test;
+    Context mContext;
+//    private Handler mHandler=new InnerHandler(this);
+
+    private List<Class<? extends Activity>> alist;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+
+//        long maxMemory=Runtime.getRuntime().maxMemory();
+//        LruCache<String,Bitmap> mLruCache=new LruCache<String,Bitmap>((int)maxMemory){
+//            @Override
+//            protected int sizeOf(String key, Bitmap value) {
+//                int size=value.getByteCount()*value.getHeight();
+//                return super.sizeOf(key, value);
+//            }
+//        };
+        init();
+    }
+
+//    private static class InnerHandler extends Handler{
+//        WeakReference<MainActivity> weakReference=null;
+//        //非静态内部类隐式,持有外部类的引用
+//        //使用弱引用持有activity对象的引用,避免handler引起的内存泄露
+//        public InnerHandler( MainActivity activity) {
+//            weakReference=new WeakReference<MainActivity>(activity);
+//        }
+//        @Override
+//        public void handleMessage(Message msg) {
+//            MainActivity activity=weakReference.get();
+//            if (activity!=null){
+//                if (msg.what==0){
+//                    activity.mContext.getApplicationContext();
+//                }
+//            }
+//        }
+//    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        Log.i("TAG", "onDestroy()---");
+        //释放handler,避免内存泄露
+//        mHandler.removeCallbacksAndMessages(null);
+    }
+
+    @Override
+    public void onConfigurationChanged(Configuration newConfig) {
+        super.onConfigurationChanged(newConfig);
+        Log.i("TAG", "onConfigurationChanged()---");
+    }
+
+    private void init() {
+        mContext = this;
+        lv_test = (ListView) findViewById(R.id.lv_test);
+        final List<Map<String, Object>> data = getMovieList();
+        SimpleAdapter adp = new SimpleAdapter(this, data, R.layout.item_test, new String[]{"testName"},
+                new int[]{R.id.tv_test_name});
+        lv_test.setAdapter(adp);
+        lv_test.setOnItemClickListener(this);
+    }
+
+
+    //测试方法
+    private void test() {
+
+//        NdkJniUtils NdkJniUtils=new NdkJniUtils();
+//        NdkJniUtils.getCLanguageString();
+
+//        Utils.getInstance().getSignature();
+//
+//        String packageName="com.b3ad.marketing";
+//
+//        String md5=Utils.signatureMD5(Utils.getSignature(packageName));
+//        Log.i("TAG","md5:"+md5);
+//
+//        String sha1=Utils.signatureSHA1(Utils.getSignature(packageName));
+//        Log.i("TAG","sha1:"+sha1);
+//
+//        String sha256=Utils.signatureSHA256(Utils.getSignature(packageName));
+//        Log.i("TAG","sha256:"+sha256);
+
+//        List<String> list=new ArrayList<String>();
+//        list.add("123");
+//        list.add("789");
+//        list.add("456");
+//        list.add("000");
+//        Log.i("TAG","---list:"+list.toString());
+//
+////        Collections.sort(list);
+//
+//        Log.i("TAG","---list---:"+list.toString());
+//
+//        Collections.reverse(list);
+//
+//        Log.i("TAG","reverse---list---:"+list.toString());
+
+//        BaseDao baseDao= BaseDaoFactory.getInstall().getDataHelper(UserDao.class, User.class);
+//        User user=new User("admin","123456");
+//        baseDao.insert(user);
+
+//        BaseDao baseDao= BaseDaoFactory.getInstall().getDataHelper(FileDao.class, FileBean.class);
+//
+//        FileBean fileBean=new FileBean();
+//        fileBean.setTime("2017-09-11");
+//        fileBean.setPath("cd:");
+//        fileBean.setDecripte("今天天气真好!");
+//
+//        baseDao.insert(fileBean);
+
+//        String url = "http://v.juhe.cn/toutiao/index?type=top&key=29da5e8be9ba88b932394b7261092f71";
+//
+//        for (int i = 0; i < 10; i++) {
+//            News news = new News();
+//            Volley.sendRequest(null, url, News.class, new IDataListener<News>() {
+//                @Override
+//                public void onSuccess(News news) {
+//                    Log.i("TAG", news.toString());
+//                }
+//
+//                @Override
+//                public void onFail() {
+//
+//                }
+//            });
+//        }
+
+        UserDao userDao = EntityManager.getInstance().getUserDao();
+        userDao.insertOrReplace(new User(1l, "小明","123","北京"));
+
+        List<User> list = userDao.loadAll();
+
+        Log.d("TAG", "list:" + list.toString());
+        Log.d("TAG", "list:" + list.toString());
+
+    }
+
+    // 返回电影列表信息
+    private List<Map<String, Object>> getMovieList() {
+        List<Map<String, Object>> data = new ArrayList<Map<String, Object>>();
+        alist = new ArrayList<Class<? extends Activity>>();
+
+        Map<String, Object> map100 = new HashMap<String, Object>();
+        map100.put("testName", "------test方法------");
+        alist.add(MvvpActivity.class);
+        data.add(map100);
+
+        Map<String, Object> map10 = new HashMap<String, Object>();
+        map10.put("testName", "Txt阅读");
+        alist.add(TxtActivity.class);
+        data.add(map10);
+
+        Map<String, Object> map0 = new HashMap<String, Object>();
+        map0.put("testName", "Vip视频播放");
+        alist.add(VideoListActivity.class);
+        data.add(map0);
+
+        Map<String, Object> map1 = new HashMap<String, Object>();
+        map1.put("testName", "网易音乐");
+        alist.add(MusicActivity.class);
+        data.add(map1);
+
+//        Map<String, Object> map2 = new HashMap<String, Object>();
+//        map2.put("testName", "WebView基本使用和与js交互");
+//        alist.add(WebViewJsActivity.class);
+//        data.add(map2);
+
+//        Map<String, Object> map3 = new HashMap<String, Object>();
+//        map3.put("testName", "okhttp3的简单使用和封装工具类的使用");
+//        alist.add(Okhttp3Activity.class);
+//        data.add(map3);
+
+//        Map<String, Object> map4 = new HashMap<String, Object>();
+//        map4.put("testName", "glide和picasso加载图片框架的使用");
+//        alist.add(GlideAndPicassoActivity.class);
+//        data.add(map4);
+
+//        Map<String, Object> map5 = new HashMap<String, Object>();
+//        map5.put("testName", "自定义view画圆和雷达页面");
+//        alist.add(ViewActivity.class);
+//        data.add(map5);
+
+//        Map<String, Object> map6 = new HashMap<String, Object>();
+//        map6.put("testName", "mvp简单使用");
+//        alist.add(UserActivity.class);
+//        data.add(map6);
+
+//        Map<String, Object> map7 = new HashMap<String, Object>();
+//        map7.put("testName", "mvp登录,用MVPHelper创建");
+//        alist.add(LoginActivity.class);
+//        data.add(map7);
+
+//        Map<String, Object> map8 = new HashMap<String, Object>();
+//        map8.put("testName", "Rxjava(观察者模式)");
+//        alist.add(RxjavaActivity.class);
+//        data.add(map8);
+
+//        Map<String, Object> map9 = new HashMap<String, Object>();
+//        map9.put("testName", "mvvp简单使用");
+//        alist.add(MvvpActivity.class);
+//        data.add(map9);
+//        Map<String, Object> map11 = new HashMap<String, Object>();
+//        map11.put("testName", "listview和recyclerview使用");
+//        alist.add(ListAndRecyclerActivity.class);
+//        data.add(map11);
+        Map<String, Object> map12 = new HashMap<String, Object>();
+        map12.put("testName", "手机控制pc");
+        alist.add(RemoteControlActivity.class);
+        data.add(map12);
+        Map<String, Object> map13 = new HashMap<String, Object>();
+        map13.put("testName", "短信轰炸");
+        alist.add(SmsApiActivity.class);
+        data.add(map13);
+
+        return data;
+    }
+
+    @Override
+    public void onItemClick(AdapterView<?> adapterView, View view, int i, long l) {
+        //执行测试方法
+        if (i == 0) {
+            test();
+            return;
+        }
+        //跳转需要测试的页面
+        Intent intent = new Intent(this, alist.get(i));
+        startActivity(intent);
+    }
+}
Index: baselib/src/main/java/com/baselib/baserx/RxSchedulers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baserx/RxSchedulers.java	(revision )
+++ baselib/src/main/java/com/baselib/baserx/RxSchedulers.java	(revision )
@@ -0,0 +1,20 @@
+package com.baselib.baserx;
+import rx.Observable;
+import rx.android.schedulers.AndroidSchedulers;
+import rx.schedulers.Schedulers;
+/**
+ * 作者: liuhuaqian on 2017/9/8.
+ * RxJava调度管理
+ */
+
+public class RxSchedulers {
+    public static <T> Observable.Transformer<T, T> io_main() {
+        return new Observable.Transformer<T, T>() {
+            @Override
+            public Observable<T> call(Observable<T> observable) {
+                return observable.subscribeOn(Schedulers.io())
+                        .observeOn(AndroidSchedulers.mainThread());
+            }
+        };
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/CrashUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/CrashUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/CrashUtils.java	(revision )
@@ -0,0 +1,180 @@
+package com.baselib.utilcode.util;
+
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.os.Build;
+import android.os.Environment;
+import android.support.annotation.NonNull;
+
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.PrintWriter;
+import java.lang.Thread.UncaughtExceptionHandler;
+import java.text.Format;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Locale;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/09/27
+ *     desc  : 崩溃相关工具类
+ * </pre>
+ */
+public final class CrashUtils {
+
+    private static String defaultDir;
+    private static String dir;
+    private static String versionName;
+    private static int    versionCode;
+
+    private static ExecutorService sExecutor;
+
+    private static final String FILE_SEP = System.getProperty("file.separator");
+    private static final Format FORMAT   = new SimpleDateFormat("MM-dd HH-mm-ss", Locale.getDefault());
+
+    private static final String CRASH_HEAD;
+
+    private static final UncaughtExceptionHandler DEFAULT_UNCAUGHT_EXCEPTION_HANDLER;
+    private static final UncaughtExceptionHandler UNCAUGHT_EXCEPTION_HANDLER;
+
+    static {
+        try {
+            PackageInfo pi = Utils.getApp().getPackageManager().getPackageInfo(Utils.getApp().getPackageName(), 0);
+            if (pi != null) {
+                versionName = pi.versionName;
+                versionCode = pi.versionCode;
+            }
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+        }
+
+        CRASH_HEAD = "\n************* Crash Log Head ****************" +
+                "\nDevice Manufacturer: " + Build.MANUFACTURER +// 设备厂商
+                "\nDevice Model       : " + Build.MODEL +// 设备型号
+                "\nAndroid Version    : " + Build.VERSION.RELEASE +// 系统版本
+                "\nAndroid SDK        : " + Build.VERSION.SDK_INT +// SDK版本
+                "\nApp VersionName    : " + versionName +
+                "\nApp VersionCode    : " + versionCode +
+                "\n************* Crash Log Head ****************\n\n";
+
+        DEFAULT_UNCAUGHT_EXCEPTION_HANDLER = Thread.getDefaultUncaughtExceptionHandler();
+
+        UNCAUGHT_EXCEPTION_HANDLER = new UncaughtExceptionHandler() {
+            @Override
+            public void uncaughtException(final Thread t, final Throwable e) {
+                if (e == null) {
+                    android.os.Process.killProcess(android.os.Process.myPid());
+                    System.exit(0);
+                    return;
+                }
+                Date now = new Date(System.currentTimeMillis());
+                String fileName = FORMAT.format(now) + ".txt";
+                final String fullPath = (dir == null ? defaultDir : dir) + fileName;
+                if (!createOrExistsFile(fullPath)) return;
+                if (sExecutor == null) {
+                    sExecutor = Executors.newSingleThreadExecutor();
+                }
+                sExecutor.execute(new Runnable() {
+                    @Override
+                    public void run() {
+                        PrintWriter pw = null;
+                        try {
+                            pw = new PrintWriter(new FileWriter(fullPath, false));
+                            pw.write(CRASH_HEAD);
+                            e.printStackTrace(pw);
+                            Throwable cause = e.getCause();
+                            while (cause != null) {
+                                cause.printStackTrace(pw);
+                                cause = cause.getCause();
+                            }
+                        } catch (IOException e) {
+                            e.printStackTrace();
+                        } finally {
+                            if (pw != null) {
+                                pw.close();
+                            }
+                        }
+                    }
+                });
+                if (DEFAULT_UNCAUGHT_EXCEPTION_HANDLER != null) {
+                    DEFAULT_UNCAUGHT_EXCEPTION_HANDLER.uncaughtException(t, e);
+                }
+            }
+        };
+    }
+
+    private CrashUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 初始化
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>}</p>
+     */
+    public static void init() {
+        init("");
+    }
+
+    /**
+     * 初始化
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>}</p>
+     *
+     * @param crashDir 崩溃文件存储目录
+     */
+    public static void init(@NonNull final File crashDir) {
+        init(crashDir.getAbsolutePath());
+    }
+
+    /**
+     * 初始化
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>}</p>
+     *
+     * @param crashDir 崩溃文件存储目录
+     */
+    public static void init(final String crashDir) {
+        if (isSpace(crashDir)) {
+            dir = null;
+        } else {
+            dir = crashDir.endsWith(FILE_SEP) ? crashDir : crashDir + FILE_SEP;
+        }
+        if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())
+                && Utils.getApp().getExternalCacheDir() != null)
+            defaultDir = Utils.getApp().getExternalCacheDir() + FILE_SEP + "crash" + FILE_SEP;
+        else {
+            defaultDir = Utils.getApp().getCacheDir() + FILE_SEP + "crash" + FILE_SEP;
+        }
+        Thread.setDefaultUncaughtExceptionHandler(UNCAUGHT_EXCEPTION_HANDLER);
+    }
+
+    private static boolean createOrExistsFile(final String filePath) {
+        File file = new File(filePath);
+        if (file.exists()) return file.isFile();
+        if (!createOrExistsDir(file.getParentFile())) return false;
+        try {
+            return file.createNewFile();
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    private static boolean createOrExistsDir(final File file) {
+        return file != null && (file.exists() ? file.isDirectory() : file.mkdirs());
+    }
+
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+}
Index: baselib/src/main/res/drawable/color_today_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/drawable/color_today_bg.xml	(revision )
+++ baselib/src/main/res/drawable/color_today_bg.xml	(revision )
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <!-- 圆角 -->
+    <corners
+        android:bottomLeftRadius="5dp"
+        android:bottomRightRadius="5dp"
+        android:topLeftRadius="5dp"
+        android:topRightRadius="5dp" />
+    <!-- 实心 -->
+    <solid android:color="#CCFFFFFF" />
+    <stroke android:width="4dp"
+	     android:color="#ffffff"/>
+
+    <solid android:color="#F86E0C" />
+
+    <corners
+        android:bottomLeftRadius="10dp"
+        android:bottomRightRadius="10dp"
+        android:topLeftRadius="10dp"
+        android:topRightRadius="10dp"/>
+
+</shape>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/takephoto/model/TIntentWap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/model/TIntentWap.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/model/TIntentWap.java	(revision )
@@ -0,0 +1,36 @@
+package com.baselib.takephoto.model;
+
+import android.content.Intent;
+
+/**
+ * Author: JPH
+ * Date: 2016/7/26 14:23
+ */
+public class TIntentWap {
+    private Intent intent;
+    private int requestCode;
+
+    public TIntentWap() {
+    }
+
+    public TIntentWap(Intent intent, int requestCode) {
+        this.intent = intent;
+        this.requestCode = requestCode;
+    }
+
+    public Intent getIntent() {
+        return intent;
+    }
+
+    public void setIntent(Intent intent) {
+        this.intent = intent;
+    }
+
+    public int getRequestCode() {
+        return requestCode;
+    }
+
+    public void setRequestCode(int requestCode) {
+        this.requestCode = requestCode;
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/RegexUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/RegexUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/RegexUtils.java	(revision )
@@ -0,0 +1,225 @@
+package com.baselib.utilcode.util;
+
+import com.baselib.utilcode.constant.RegexConstants;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/02
+ *     desc  : 正则相关工具类
+ * </pre>
+ */
+public final class RegexUtils {
+
+    private RegexUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // If u want more please visit http://toutiao.com/i6231678548520731137
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 车牌号（简单）
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isPlateNumber(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_PLATE_NUMBER, input);
+    }
+
+    /**
+     * 密码(6-16,数字,字母,下划线)
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isPassword(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_PASSWORD, input);
+    }
+
+    /**
+     * 验证手机号（简单）
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isMobileSimple(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_MOBILE_SIMPLE, input);
+    }
+
+    /**
+     * 验证手机号（精确）
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isMobileExact(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_MOBILE_EXACT, input);
+    }
+
+    /**
+     * 验证电话号码
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isTel(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_TEL, input);
+    }
+
+    /**
+     * 验证身份证号码15位
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isIDCard15(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_ID_CARD15, input);
+    }
+
+    /**
+     * 验证身份证号码18位
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isIDCard18(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_ID_CARD18, input);
+    }
+
+    /**
+     * 验证邮箱
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isEmail(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_EMAIL, input);
+    }
+
+    /**
+     * 验证URL
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isURL(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_URL, input);
+    }
+
+    /**
+     * 验证汉字
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isZh(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_ZH, input);
+    }
+
+    /**
+     * 验证用户名
+     * <p>取值范围为a-z,A-Z,0-9,"_",汉字，不能以"_"结尾,用户名必须是6-20位</p>
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isUsername(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_USERNAME, input);
+    }
+
+    /**
+     * 验证yyyy-MM-dd格式的日期校验，已考虑平闰年
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isDate(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_DATE, input);
+    }
+
+    /**
+     * 验证IP地址
+     *
+     * @param input 待验证文本
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isIP(final CharSequence input) {
+        return isMatch(RegexConstants.REGEX_IP, input);
+    }
+
+    /**
+     * 判断是否匹配正则
+     *
+     * @param regex 正则表达式
+     * @param input 要匹配的字符串
+     * @return {@code true}: 匹配<br>{@code false}: 不匹配
+     */
+    public static boolean isMatch(final String regex, final CharSequence input) {
+        return input != null && input.length() > 0 && Pattern.matches(regex, input);
+    }
+
+    /**
+     * 获取正则匹配的部分
+     *
+     * @param regex 正则表达式
+     * @param input 要匹配的字符串
+     * @return 正则匹配的部分
+     */
+    public static List<String> getMatches(final String regex, final CharSequence input) {
+        if (input == null) return null;
+        List<String> matches = new ArrayList<>();
+        Pattern pattern = Pattern.compile(regex);
+        Matcher matcher = pattern.matcher(input);
+        while (matcher.find()) {
+            matches.add(matcher.group());
+        }
+        return matches;
+    }
+
+    /**
+     * 获取正则匹配分组
+     *
+     * @param input 要分组的字符串
+     * @param regex 正则表达式
+     * @return 正则匹配分组
+     */
+    public static String[] getSplits(final String input, final String regex) {
+        if (input == null) return null;
+        return input.split(regex);
+    }
+
+    /**
+     * 替换正则匹配的第一部分
+     *
+     * @param input       要替换的字符串
+     * @param regex       正则表达式
+     * @param replacement 代替者
+     * @return 替换正则匹配的第一部分
+     */
+    public static String getReplaceFirst(final String input, final String regex, final String replacement) {
+        if (input == null) return null;
+        return Pattern.compile(regex).matcher(input).replaceFirst(replacement);
+    }
+
+    /**
+     * 替换所有正则匹配的部分
+     *
+     * @param input       要替换的字符串
+     * @param regex       正则表达式
+     * @param replacement 代替者
+     * @return 替换所有正则匹配的部分
+     */
+    public static String getReplaceAll(final String input, final String regex, final String replacement) {
+        if (input == null) return null;
+        return Pattern.compile(regex).matcher(input).replaceAll(replacement);
+    }
+}
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/strings.xml	(revision )
+++ app/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,37 @@
+<resources>
+
+    <string name="hello_world">Hello world!</string>
+    <string name="action_settings">Settings</string>
+    <string name="app_name">My Application</string>
+    <string name="title_activity_main2">Main2Activity</string>
+    <string name="save">存</string>
+
+    <string name="load">读</string>
+
+    <string name="id">ID:</string>
+
+    <string name="firstname">FirstName:</string>
+
+    <string name="lastname">LastName:</string>
+
+    <string name="but1">公告</string>
+    <string name="but2">观影</string>
+    <string name="but3">个人</string>
+    <string name="tongzhi">通知内容</string>
+    <string name="title_activity_two">VIP天数查询与充值</string>
+    <string name="chognzhi">充值</string>
+    <string name="tishi">请输入激活码</string>
+    <string name="exit">退出</string>
+    <string name="title_activity_three">用户登录、注册</string>
+    <string name="username">用户名</string>
+    <string name="passwd">密码</string>
+    <string name="reg">注册</string>
+    <string name="logon">登录</string>
+    <string name="title_activity_play">PlayActivity</string>
+    <string name="play">播放</string>
+    <string name="back">后退</string>
+    <string name="forwk">前进</string>
+    <string name="close">关闭</string>
+    <string name="flush">刷新</string>
+    <string name="genghuan">换线</string>
+</resources>
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_main.xml	(revision )
+++ app/src/main/res/layout/activity_main.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.b3ad.yuxie.myapplication.activity.MainActivity">
+
+    <ListView
+        android:id="@+id/lv_test"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"></ListView>
+
+</RelativeLayout>
Index: baselib/src/main/java/com/baselib/takephoto/uitl/ImageRotateUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/uitl/ImageRotateUtil.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/uitl/ImageRotateUtil.java	(revision )
@@ -0,0 +1,113 @@
+package com.baselib.takephoto.uitl;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Matrix;
+import android.media.ExifInterface;
+import android.net.Uri;
+
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+import java.io.IOException;
+
+/**
+ * 图片旋转角度修正工具类
+ * Author: crazycodeboy
+ * Date: 2016/9/21 0007 20:10
+ * Version:3.0.0
+ * 技术博文：http://www.cboy.me
+ * GitHub:https://github.com/crazycodeboy
+ * Eamil:crazycodeboy@gmail.com
+ */
+public class ImageRotateUtil {
+
+    public static ImageRotateUtil of(){
+        return new ImageRotateUtil();
+    }
+
+    private ImageRotateUtil() {
+    }
+
+    /**
+     * 纠正照片的旋转角度
+     * @param path
+     */
+    public void correctImage(Context context,Uri path){
+
+        String imagePath=TUriParse.parseOwnUri(context,path);
+        int degree;
+        if((degree=getBitmapDegree(imagePath))!=0){
+            Bitmap bitmap= BitmapFactory.decodeFile(imagePath);
+            if(bitmap==null)return;
+            Bitmap resultBitmap=rotateBitmapByDegree(bitmap,degree);
+            if(resultBitmap==null)return;
+            try {
+                resultBitmap.compress(Bitmap.CompressFormat.JPEG,100,new FileOutputStream(new File(imagePath)));
+            } catch (FileNotFoundException e) {
+                e.printStackTrace();
+            }catch (OutOfMemoryError e){
+                e.printStackTrace();
+            }
+        }
+    }
+
+    /**
+     * 读取图片的旋转的角度
+     *
+     * @param path 图片绝对路径
+     * @return 图片的旋转角度
+     */
+    private int getBitmapDegree(String path) {
+        int degree = 0;
+        try {
+            // 从指定路径下读取图片，并获取其EXIF信息
+            ExifInterface exifInterface = new ExifInterface(path);
+            // 获取图片的旋转信息
+            int orientation = exifInterface.getAttributeInt(ExifInterface.TAG_ORIENTATION,
+                    ExifInterface.ORIENTATION_NORMAL);
+            switch (orientation) {
+                case ExifInterface.ORIENTATION_ROTATE_90:
+                    degree = 90;
+                    break;
+                case ExifInterface.ORIENTATION_ROTATE_180:
+                    degree = 180;
+                    break;
+                case ExifInterface.ORIENTATION_ROTATE_270:
+                    degree = 270;
+                    break;
+            }
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return degree;
+    }
+
+    /**
+     * 将图片按照某个角度进行旋转
+     *
+     * @param bm     需要旋转的图片
+     * @param degree 旋转角度
+     * @return 旋转后的图片
+     */
+    private Bitmap rotateBitmapByDegree(Bitmap bm, int degree) {
+        Bitmap returnBm = null;
+
+        // 根据旋转角度，生成旋转矩阵
+        Matrix matrix = new Matrix();
+        matrix.postRotate(degree);
+        try {
+            // 将原始图片按照旋转矩阵进行旋转，并得到新的图片
+            returnBm = Bitmap.createBitmap(bm, 0, 0, bm.getWidth(), bm.getHeight(), matrix, true);
+        } catch (OutOfMemoryError e) {
+        }
+        if (returnBm == null) {
+            returnBm = bm;
+        }
+        if (bm != returnBm) {
+            bm.recycle();
+        }
+        return returnBm;
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/uitl/TUriParse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/uitl/TUriParse.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/uitl/TUriParse.java	(revision )
@@ -0,0 +1,178 @@
+package com.baselib.takephoto.uitl;
+
+import android.app.Activity;
+import android.content.ContentResolver;
+import android.content.Context;
+import android.database.Cursor;
+import android.net.Uri;
+import android.os.Environment;
+import android.provider.MediaStore;
+import android.support.v4.content.FileProvider;
+import android.text.TextUtils;
+import android.util.Log;
+
+import com.baselib.takephoto.model.TException;
+import com.baselib.takephoto.model.TExceptionType;
+
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Locale;
+
+
+/**
+ * Uri解析工具类
+ * Author: JPH
+ * Date: 2015/8/26 0026 16:23
+ */
+public class TUriParse {
+    private static final String TAG = IntentUtils.class.getName();
+
+    /**
+     * 将scheme为file的uri转成FileProvider 提供的content uri
+     * @param context
+     * @param uri
+     * @return
+     */
+    public static Uri convertFileUriToFileProviderUri(Context context,Uri uri){
+        if(uri==null)return null;
+        if(ContentResolver.SCHEME_FILE.equals(uri.getScheme())){
+            return getUriForFile(context,new File(uri.getPath()));
+        }
+        return uri;
+
+    }
+
+    /**
+     * 获取一个临时的Uri, 文件名随机生成
+     * @param context
+     * @return
+     */
+    public static Uri getTempUri(Context context){
+        String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss", Locale.getDefault()).format(new Date());
+        File file=new File(Environment.getExternalStorageDirectory(), "/images/"+timeStamp + ".jpg");
+        if (!file.getParentFile().exists())file.getParentFile().mkdirs();
+        return getUriForFile(context,file);
+    }
+
+    /**
+     * 获取一个临时的Uri, 通过传入字符串路径
+     *
+     * @param context
+     * @param path
+     * @return
+     */
+    public static Uri getTempUri(Context context, String path) {
+        File file = new File(path);
+        return getTempUri(context, file);
+    }
+
+    /**
+     * 获取一个临时的Uri, 通过传入File对象
+     * @param context
+     * @return
+     */
+    public static Uri getTempUri(Context context, File file){
+        if (!file.getParentFile().exists())file.getParentFile().mkdirs();
+        return getUriForFile(context,file);
+    }
+
+    /**
+     * 创建一个用于拍照图片输出路径的Uri (FileProvider)
+     * @param context
+     * @return
+     */
+    public static Uri getUriForFile(Context context, File file) {
+        return FileProvider.getUriForFile(context,TConstant.getFileProviderName(context), file);
+    }
+
+    /**
+     * 将TakePhoto 提供的Uri 解析出文件绝对路径
+     * @param uri
+     * @return
+     */
+    public static String parseOwnUri(Context context,Uri uri){
+        if(uri==null)return null;
+        String path;
+        if(TextUtils.equals(uri.getAuthority(),TConstant.getFileProviderName(context))){
+            path=new File(uri.getPath().replace("camera_photos/","")).getAbsolutePath();
+        }else {
+            path=uri.getPath();
+        }
+        return path;
+    }
+    /**
+     * 通过URI获取文件的路径
+     * @param uri
+     * @param activity
+     * @return
+     * Author JPH
+     * Date 2016/6/6 0006 20:01
+     */
+    public static String getFilePathWithUri(Uri uri, Activity activity)throws TException {
+        if(uri==null){
+            Log.w(TAG,"uri is null,activity may have been recovered?");
+            throw new TException(TExceptionType.TYPE_URI_NULL);
+        }
+        File picture=getFileWithUri(uri,activity);
+        String picturePath=picture==null? null:picture.getPath();
+        if (TextUtils.isEmpty(picturePath))throw new TException(TExceptionType.TYPE_URI_PARSE_FAIL);
+        if (!TImageFiles.checkMimeType(activity,TImageFiles.getMimeType(activity,uri)))throw new TException(TExceptionType.TYPE_NOT_IMAGE);
+        return picturePath;
+    }
+    /**
+     * 通过URI获取文件
+     * @param uri
+     * @param activity
+     * @return
+     * Author JPH
+     * Date 2016/10/25
+     */
+    public static File getFileWithUri(Uri uri, Activity activity) {
+        String picturePath = null;
+        String scheme=uri.getScheme();
+        if (ContentResolver.SCHEME_CONTENT.equals(scheme)){
+            String[] filePathColumn = {MediaStore.Images.Media.DATA};
+            Cursor cursor = activity.getContentResolver().query(uri,
+                    filePathColumn, null, null, null);//从系统表中查询指定Uri对应的照片
+            cursor.moveToFirst();
+            int columnIndex = cursor.getColumnIndex(filePathColumn[0]);
+            if(columnIndex>=0){
+                picturePath = cursor.getString(columnIndex);  //获取照片路径
+            }else if(TextUtils.equals(uri.getAuthority(),TConstant.getFileProviderName(activity))){
+                picturePath=parseOwnUri(activity,uri);
+            }
+            cursor.close();
+        }else if (ContentResolver.SCHEME_FILE.equals(scheme)){
+            picturePath=uri.getPath();
+        }
+        return TextUtils.isEmpty(picturePath)? null:new File(picturePath);
+    }
+    /**
+     * 通过从文件中得到的URI获取文件的路径
+     * @param uri
+     * @param activity
+     * @return
+     * Author JPH
+     * Date 2016/6/6 0006 20:01
+     */
+    public static String getFilePathWithDocumentsUri(Uri uri,Activity activity) throws TException {
+        if(uri==null){
+            Log.e(TAG,"uri is null,activity may have been recovered?");
+            return null;
+        }
+        if (ContentResolver.SCHEME_CONTENT.equals(uri.getScheme())&&uri.getPath().contains("document")){
+            File tempFile = TImageFiles.getTempFile(activity,uri);
+            try {
+                TImageFiles.inputStreamToFile(activity.getContentResolver().openInputStream(uri),tempFile);
+                return tempFile.getPath();
+            } catch (FileNotFoundException e) {
+                e.printStackTrace();
+                throw new TException(TExceptionType.TYPE_NO_FIND);
+            }
+        }else {
+            return getFilePathWithUri(uri,activity);
+        }
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/commonadapter/listview/ItemViewDelegate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/commonadapter/listview/ItemViewDelegate.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/commonadapter/listview/ItemViewDelegate.java	(revision )
@@ -0,0 +1,14 @@
+package com.b3ad.yuxie.myapplication.commonadapter.listview;
+
+public interface ItemViewDelegate<T>
+{
+
+    public abstract int getItemViewLayoutId();
+
+    public abstract boolean isForViewType(T item, int position);
+
+    public abstract void convert(ViewHolder holder, T t, int position);
+
+
+
+}
Index: baselib/src/main/java/com/baselib/basebean/BaseRespose.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/basebean/BaseRespose.java	(revision )
+++ baselib/src/main/java/com/baselib/basebean/BaseRespose.java	(revision )
@@ -0,0 +1,79 @@
+package com.baselib.basebean;
+
+import java.io.Serializable;
+
+/**
+ * 作者: liuhuaqian on 2017/9/8.
+ * 封装服务器返回数据 单个对象
+ */
+
+public class BaseRespose<T> implements Serializable {
+    //    字段说明：
+//    code：返回状态码。999999:错误，000000：正常返回
+//    errorMsg： 错误处理结果消息。
+//    total：返回记录条目
+//    rows：返回列表数据，JSON数组
+
+    /**
+     * 返回状态码
+     */
+    private String code;
+    /**
+     * errorMsg
+     */
+    private String errorMsg;
+    /**
+     * 返回记录条目
+     */
+    private String total;
+    /**
+     * 返回列表数据，JSON数组
+     */
+    private T rows;
+
+    public String getCode() {
+        return code;
+    }
+
+    public void setCode(String code) {
+        this.code = code;
+    }
+
+    public String getErrorMsg() {
+        return errorMsg;
+    }
+
+    public void setErrorMsg(String errorMsg) {
+        this.errorMsg = errorMsg;
+    }
+
+    public String getTotal() {
+        return total;
+    }
+
+    public void setTotal(String total) {
+        this.total = total;
+    }
+
+    public T getRows() {
+        return rows;
+    }
+
+    public void setRows(T rows) {
+        this.rows = rows;
+    }
+
+    public boolean success() {
+        return "000000".equals(code);
+    }
+
+    @Override
+    public String toString() {
+        return "BaseRespose{" +
+                "code='" + code + '\'' +
+                ", errorMsg='" + errorMsg + '\'' +
+                ", total='" + total + '\'' +
+                ", rows=" + rows +
+                '}';
+    }
+}
Index: baselib/src/main/java/com/baselib/baserx/GsonDConverterFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baserx/GsonDConverterFactory.java	(revision )
+++ baselib/src/main/java/com/baselib/baserx/GsonDConverterFactory.java	(revision )
@@ -0,0 +1,50 @@
+package com.baselib.baserx;
+
+import com.baselib.basebean.BaseListRespose;
+import com.baselib.basebean.BaseRespose;
+import com.google.gson.Gson;
+import com.google.gson.TypeAdapter;
+import com.google.gson.reflect.TypeToken;
+
+import java.lang.annotation.Annotation;
+import java.lang.reflect.Type;
+
+import okhttp3.RequestBody;
+import okhttp3.ResponseBody;
+import retrofit2.Converter;
+import retrofit2.Retrofit;
+
+/**
+ * 作者: liuhuaqian on 2017/10/8.
+ */
+
+public class GsonDConverterFactory extends Converter.Factory {
+
+    public static GsonDConverterFactory create() {
+        return create(new Gson());
+    }
+
+    public static GsonDConverterFactory create(Gson gson) {
+        return new GsonDConverterFactory(gson);
+    }
+
+    private final Gson gson;
+
+    private GsonDConverterFactory(Gson gson) {
+        if (gson == null) throw new NullPointerException("gson == null");
+        this.gson = gson;
+    }
+
+    @Override
+    public Converter<ResponseBody, ?> responseBodyConverter(Type type, Annotation[] annotations,
+                                                            Retrofit retrofit) {
+        return new GsonResponseBodyConverter<>(gson, type);
+    }
+
+    @Override
+    public Converter<?, RequestBody> requestBodyConverter(Type type,
+                                                          Annotation[] parameterAnnotations, Annotation[] methodAnnotations, Retrofit retrofit) {
+        TypeAdapter<?> adapter = gson.getAdapter(TypeToken.get(type));
+        return new GsonRequestBodyConverter<>(gson, adapter);
+    }
+}
Index: baselib/src/main/java/com/baselib/recycleview/DividerGridItemDecoration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/DividerGridItemDecoration.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/DividerGridItemDecoration.java	(revision )
@@ -0,0 +1,84 @@
+package com.baselib.recycleview;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.content.res.TypedArray;
+import android.graphics.Canvas;
+import android.graphics.drawable.Drawable;
+import android.support.v4.content.ContextCompat;
+import android.support.v7.widget.GridLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.RecyclerView.LayoutManager;
+import android.support.v7.widget.RecyclerView.State;
+import android.support.v7.widget.StaggeredGridLayoutManager;
+import android.view.View;
+
+public class DividerGridItemDecoration extends RecyclerView.ItemDecoration {
+
+    private static final int[] ATTRS = new int[]{android.R.attr.listDivider};
+    private Drawable mDivider;
+    private int mDividerHeight = 2;
+
+    public DividerGridItemDecoration(Context context, int drawableId) {
+        final TypedArray a = context.obtainStyledAttributes(ATTRS);
+        //旧的getDrawable方法弃用了，这个是新的
+        mDivider = ContextCompat.getDrawable(context, drawableId);
+        mDividerHeight = mDivider.getMinimumHeight();
+        a.recycle();
+    }
+
+    @Override
+    public void onDraw(Canvas c, RecyclerView parent, State state) {
+        drawVertical(c, parent);
+    }
+
+    /**
+     * 获取列数
+     *
+     * @param parent
+     * @return
+     */
+    private int getSpanCount(RecyclerView parent) {
+        // 列数
+        int spanCount = -1;
+        LayoutManager layoutManager = parent.getLayoutManager();
+        if (layoutManager instanceof GridLayoutManager) {
+
+            spanCount = ((GridLayoutManager) layoutManager).getSpanCount();
+        } else if (layoutManager instanceof StaggeredGridLayoutManager) {
+            spanCount = ((StaggeredGridLayoutManager) layoutManager)
+                    .getSpanCount();
+        }
+        return spanCount;
+    }
+
+    /**
+     * 行与行直接画间隔线
+     *
+     * @param c
+     * @param parent
+     */
+    public void drawVertical(Canvas c, RecyclerView parent) {
+        final int childCount = parent.getChildCount();
+        final int spanCount = getSpanCount(parent);
+        //最后一项后面不画
+        for (int i = 0; i < childCount - 1; i++) {
+            //每列的后面不画
+            if ((i + 1) % spanCount == 0) {
+                continue;
+            }
+
+            final View child = parent.getChildAt(i);
+            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child
+                    .getLayoutParams();
+            final int left = child.getRight() + params.rightMargin / 2;
+            final int top = child.getTop() - params.topMargin + 50;
+            final int right = left + mDivider.getIntrinsicWidth();
+            final int bottom = child.getBottom() + params.bottomMargin - 50;
+            mDivider.setBounds(left, top, right, bottom);
+            mDivider.draw(c);
+        }
+    }
+
+
+}
Index: baselib/src/main/java/com/baselib/takephoto/uitl/TConstant.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/uitl/TConstant.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/uitl/TConstant.java	(revision )
@@ -0,0 +1,55 @@
+package com.baselib.takephoto.uitl;
+
+import android.content.Context;
+
+/**
+ * 常量类
+ * @author JPH
+ * Date 2016/6/7 0007 9:39
+ */
+public class TConstant {
+
+
+    /**
+     * request Code 裁剪照片
+     **/
+    public final static int RC_CROP = 1001;
+    /**
+     * request Code 从相机获取照片并裁剪
+     **/
+    public final static int RC_PICK_PICTURE_FROM_CAPTURE_CROP = 1002;
+    /**
+     * request Code 从相机获取照片不裁剪
+     **/
+    public final static int RC_PICK_PICTURE_FROM_CAPTURE = 1003;
+    /**
+     * request Code 从文件中选择照片
+     **/
+    public final static int RC_PICK_PICTURE_FROM_DOCUMENTS_ORIGINAL = 1004;
+    /**
+     * request Code 从文件中选择照片并裁剪
+     **/
+    public final static int RC_PICK_PICTURE_FROM_DOCUMENTS_CROP = 1005;
+    /**
+     * request Code 从相册选择照
+     **/
+    public final static int RC_PICK_PICTURE_FROM_GALLERY_ORIGINAL = 1006;
+    /**
+     * request Code 从相册选择照片并裁剪
+     **/
+    public final static int RC_PICK_PICTURE_FROM_GALLERY_CROP = 1007;
+    /**
+     * request Code 选择多张照片
+     **/
+    public final static int RC_PICK_MULTIPLE = 1008;
+
+
+    /**
+     * requestCode 请求权限
+     **/
+    public final static int PERMISSION_REQUEST_TAKE_PHOTO = 2000;
+
+    public final static String getFileProviderName(Context context){
+        return context.getPackageName()+".fileprovider";
+    }
+ }
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/commonutils/SPUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/commonutils/SPUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/commonutils/SPUtils.java	(revision )
@@ -0,0 +1,97 @@
+package com.baselib.commonutils;
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.preference.PreferenceManager;
+
+import com.baselib.baseapp.BaseApplication;
+
+/**
+ * 作者: liuhuaqian on 2017/9/8.
+ * 对SharedPreference文件中的各种类型的数据进行存取操作
+ */
+
+public class SPUtils {
+
+    public final static String IS_FIRST = "is_first";
+
+    private static SharedPreferences sp;
+
+    private static void init(Context context) {
+        if (sp == null) {
+            sp = PreferenceManager.getDefaultSharedPreferences(BaseApplication.getAppContext());
+        }
+    }
+
+    public static void setSharedIntData(Context context, String key, int value) {
+        if (sp == null) {
+            init(context);
+        }
+        sp.edit().putInt(key, value).commit();
+    }
+
+    public static int getSharedIntData(Context context, String key) {
+        if (sp == null) {
+            init(context);
+        }
+        return sp.getInt(key, 0);
+    }
+
+    public static void setSharedlongData(Context context, String key, long value) {
+        if (sp == null) {
+            init(context);
+        }
+        sp.edit().putLong(key, value).commit();
+    }
+
+    public static long getSharedlongData(Context context, String key) {
+        if (sp == null) {
+            init(context);
+        }
+        return sp.getLong(key, 0l);
+    }
+
+    public static void setSharedFloatData(Context context, String key,
+                                          float value) {
+        if (sp == null) {
+            init(context);
+        }
+        sp.edit().putFloat(key, value).commit();
+    }
+
+    public static Float getSharedFloatData(Context context, String key) {
+        if (sp == null) {
+            init(context);
+        }
+        return sp.getFloat(key, 0f);
+    }
+
+    public static void setSharedBooleanData(Context context, String key,
+                                            boolean value) {
+        if (sp == null) {
+            init(context);
+        }
+        sp.edit().putBoolean(key, value).commit();
+    }
+
+    public static Boolean getSharedBooleanData(Context context, String key) {
+        if (sp == null) {
+            init(context);
+        }
+        return sp.getBoolean(key, false);
+    }
+
+    public static void setSharedStringData(Context context, String key, String value) {
+        if (sp == null) {
+            init(context);
+        }
+        sp.edit().putString(key, value).commit();
+    }
+
+    public static String getSharedStringData(Context context, String key) {
+        if (sp == null) {
+            init(context);
+        }
+        return sp.getString(key, "");
+    }
+
+}
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(revision )
+++ .gitignore	(revision )
@@ -0,0 +1,60 @@
+# Built application files
+*.apk
+*.ap_
+
+# Files for the ART/Dalvik VM
+*.dex
+
+# Java class files
+*.class
+
+# Generated files
+bin/
+gen/
+out/
+
+# Gradle files
+/.gradle
+/gradle
+.gradle/
+build/
+
+# Local configuration file (sdk path, etc)
+local.properties
+
+# Proguard folder generated by Eclipse
+proguard/
+
+# Log Files
+*.log
+
+# Android Studio Navigation editor temp files
+.navigation/
+
+# Android Studio captures folder
+captures/
+
+# IntelliJ
+*.iml
+/.idea
+.idea/
+.idea/workspace.xml
+.idea/tasks.xml
+.idea/gradle.xml
+.idea/dictionaries
+.idea/libraries
+
+# Keystore files
+# Uncomment the following line if you do not want to check your keystore files in.
+#*.jks
+
+# External native build folder generated in Android Studio 2.2 and later
+.externalNativeBuild
+
+# Google Services (e.g. APIs or Firebase)
+google-services.json
+
+# Freeline
+freeline.py
+freeline/
+freeline_project_description.json
Index: baselib/src/main/res/layout/default_loading.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/layout/default_loading.xml	(revision )
+++ baselib/src/main/res/layout/default_loading.xml	(revision )
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="100px"
+    android:layout_marginLeft="30px"
+    android:layout_marginRight="30px">
+
+    <RelativeLayout
+        android:id="@+id/rl_content"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:gravity="center"
+        android:padding="8dp">
+
+        <ProgressBar
+            android:id="@+id/pb_loading"
+            android:layout_width="32dp"
+            android:layout_height="32dp"
+            android:layout_centerVertical="true" />
+
+        <TextView
+            android:id="@+id/tv_loading_text"
+            android:layout_width="wrap_content"
+            android:layout_height="100px"
+            android:layout_centerVertical="true"
+            android:layout_marginLeft="8dp"
+            android:layout_toRightOf="@id/pb_loading"
+            android:gravity="center"
+            android:text="正在加载..."
+            android:textSize="14sp" />
+
+    </RelativeLayout>
+
+    <View
+        android:layout_width="match_parent"
+        android:layout_height="1px"
+        android:layout_alignParentBottom="true"
+        android:background="#dddddd" />
+</RelativeLayout>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/utilcode/util/CleanUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/CleanUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/CleanUtils.java	(revision )
@@ -0,0 +1,159 @@
+package com.baselib.utilcode.util;
+
+import android.os.Environment;
+
+import java.io.File;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/09/27
+ *     desc  : 清除相关工具类
+ * </pre>
+ */
+public final class CleanUtils {
+
+    private CleanUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 清除内部缓存
+     * <p>/data/data/com.xxx.xxx/cache</p>
+     *
+     * @return {@code true}: 清除成功<br>{@code false}: 清除失败
+     */
+    public static boolean cleanInternalCache() {
+        return deleteFilesInDir(Utils.getApp().getCacheDir());
+    }
+
+    /**
+     * 清除内部文件
+     * <p>/data/data/com.xxx.xxx/files</p>
+     *
+     * @return {@code true}: 清除成功<br>{@code false}: 清除失败
+     */
+    public static boolean cleanInternalFiles() {
+        return deleteFilesInDir(Utils.getApp().getFilesDir());
+    }
+
+    /**
+     * 清除内部数据库
+     * <p>/data/data/com.xxx.xxx/databases</p>
+     *
+     * @return {@code true}: 清除成功<br>{@code false}: 清除失败
+     */
+    public static boolean cleanInternalDbs() {
+        return deleteFilesInDir(Utils.getApp().getFilesDir().getParent() + File.separator + "databases");
+    }
+
+    /**
+     * 根据名称清除数据库
+     * <p>/data/data/com.xxx.xxx/databases/dbName</p>
+     *
+     * @param dbName 数据库名称
+     * @return {@code true}: 清除成功<br>{@code false}: 清除失败
+     */
+    public static boolean cleanInternalDbByName(final String dbName) {
+        return Utils.getApp().deleteDatabase(dbName);
+    }
+
+    /**
+     * 清除内部SP
+     * <p>/data/data/com.xxx.xxx/shared_prefs</p>
+     *
+     * @return {@code true}: 清除成功<br>{@code false}: 清除失败
+     */
+    public static boolean cleanInternalSP() {
+        return deleteFilesInDir(Utils.getApp().getFilesDir().getParent() + File.separator + "shared_prefs");
+    }
+
+    /**
+     * 清除外部缓存
+     * <p>/storage/emulated/0/android/data/com.xxx.xxx/cache</p>
+     *
+     * @return {@code true}: 清除成功<br>{@code false}: 清除失败
+     */
+    public static boolean cleanExternalCache() {
+        return Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState()) && deleteFilesInDir(Utils.getApp().getExternalCacheDir());
+    }
+
+    /**
+     * 清除自定义目录下的文件
+     *
+     * @param dirPath 目录路径
+     * @return {@code true}: 清除成功<br>{@code false}: 清除失败
+     */
+    public static boolean cleanCustomCache(final String dirPath) {
+        return deleteFilesInDir(dirPath);
+    }
+
+    /**
+     * 清除自定义目录下的文件
+     *
+     * @param dir 目录
+     * @return {@code true}: 清除成功<br>{@code false}: 清除失败
+     */
+    public static boolean cleanCustomCache(final File dir) {
+        return deleteFilesInDir(dir);
+    }
+
+    public static boolean deleteFilesInDir(final String dirPath) {
+        return deleteFilesInDir(getFileByPath(dirPath));
+    }
+
+    private static boolean deleteFilesInDir(final File dir) {
+        if (dir == null) return false;
+        // 目录不存在返回true
+        if (!dir.exists()) return true;
+        // 不是目录返回false
+        if (!dir.isDirectory()) return false;
+        // 现在文件存在且是文件夹
+        File[] files = dir.listFiles();
+        if (files != null && files.length != 0) {
+            for (File file : files) {
+                if (file.isFile()) {
+                    if (!file.delete()) return false;
+                } else if (file.isDirectory()) {
+                    if (!deleteDir(file)) return false;
+                }
+            }
+        }
+        return true;
+    }
+
+    private static boolean deleteDir(final File dir) {
+        if (dir == null) return false;
+        // 目录不存在返回true
+        if (!dir.exists()) return true;
+        // 不是目录返回false
+        if (!dir.isDirectory()) return false;
+        // 现在文件存在且是文件夹
+        File[] files = dir.listFiles();
+        if (files != null && files.length != 0) {
+            for (File file : files) {
+                if (file.isFile()) {
+                    if (!file.delete()) return false;
+                } else if (file.isDirectory()) {
+                    if (!deleteDir(file)) return false;
+                }
+            }
+        }
+        return dir.delete();
+    }
+
+    private static File getFileByPath(final String filePath) {
+        return isSpace(filePath) ? null : new File(filePath);
+    }
+
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/commonadapter/listview/ItemViewDelegateManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/commonadapter/listview/ItemViewDelegateManager.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/commonadapter/listview/ItemViewDelegateManager.java	(revision )
@@ -0,0 +1,131 @@
+package com.b3ad.yuxie.myapplication.commonadapter.listview;
+
+import android.support.v4.util.SparseArrayCompat;
+
+public class ItemViewDelegateManager<T>
+{
+    SparseArrayCompat<ItemViewDelegate<T>> delegates = new SparseArrayCompat();
+
+    public int getItemViewDelegateCount()
+    {
+        return delegates.size();
+    }
+
+    public ItemViewDelegateManager<T> addDelegate(ItemViewDelegate<T> delegate)
+    {
+        int viewType = delegates.size();
+        if (delegate != null)
+        {
+            delegates.put(viewType, delegate);
+            viewType++;
+        }
+        return this;
+    }
+
+    public ItemViewDelegateManager<T> addDelegate(int viewType, ItemViewDelegate<T> delegate)
+    {
+        if (delegates.get(viewType) != null)
+        {
+            throw new IllegalArgumentException(
+                    "An ItemViewDelegate is already registered for the viewType = "
+                            + viewType
+                            + ". Already registered ItemViewDelegate is "
+                            + delegates.get(viewType));
+        }
+        delegates.put(viewType, delegate);
+        return this;
+    }
+
+    public ItemViewDelegateManager<T> removeDelegate(ItemViewDelegate<T> delegate)
+    {
+        if (delegate == null)
+        {
+            throw new NullPointerException("ItemViewDelegate is null");
+        }
+        int indexToRemove = delegates.indexOfValue(delegate);
+
+        if (indexToRemove >= 0)
+        {
+            delegates.removeAt(indexToRemove);
+        }
+        return this;
+    }
+
+    public ItemViewDelegateManager<T> removeDelegate(int itemType)
+    {
+        int indexToRemove = delegates.indexOfKey(itemType);
+
+        if (indexToRemove >= 0)
+        {
+            delegates.removeAt(indexToRemove);
+        }
+        return this;
+    }
+
+    public int getItemViewType(T item, int position)
+    {
+        int delegatesCount = delegates.size();
+        for (int i = delegatesCount - 1; i >= 0; i--)
+        {
+            ItemViewDelegate<T> delegate = delegates.valueAt(i);
+            if (delegate.isForViewType(item, position))
+            {
+                return delegates.keyAt(i);
+            }
+        }
+        throw new IllegalArgumentException(
+                "No ItemViewDelegate added that matches position=" + position + " in data source");
+    }
+
+    public void convert(ViewHolder holder, T item, int position)
+    {
+        int delegatesCount = delegates.size();
+        for (int i = 0; i < delegatesCount; i++)
+        {
+            ItemViewDelegate<T> delegate = delegates.valueAt(i);
+
+            if (delegate.isForViewType(item, position))
+            {
+                delegate.convert(holder, item, position);
+                return;
+            }
+        }
+        throw new IllegalArgumentException(
+                "No ItemViewDelegateManager added that matches position=" + position + " in data source");
+    }
+
+    public int getItemViewLayoutId(int viewType)
+    {
+        return delegates.get(viewType).getItemViewLayoutId();
+    }
+
+    public int getItemViewType(ItemViewDelegate itemViewDelegate)
+    {
+        return delegates.indexOfValue(itemViewDelegate);
+    }
+
+    public ItemViewDelegate getItemViewDelegate(T item, int position)
+    {
+        int delegatesCount = delegates.size();
+        for (int i = delegatesCount - 1; i >= 0; i--)
+        {
+            ItemViewDelegate<T> delegate = delegates.valueAt(i);
+            if (delegate.isForViewType(item, position))
+            {
+                return delegate;
+            }
+        }
+        throw new IllegalArgumentException(
+                "No ItemViewDelegate added that matches position=" + position + " in data source");
+    }
+
+    public int getItemViewLayoutId(T item, int position)
+    {
+        return getItemViewDelegate(item,position).getItemViewLayoutId();
+    }
+
+    public ItemViewDelegate getItemViewDelegate(int viewType)
+    {
+        return delegates.get(viewType);
+    }
+}
Index: baselib/src/main/res/values/ids.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/values/ids.xml	(revision )
+++ baselib/src/main/res/values/ids.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <item type="id" name="statusbarutil_fake_status_bar_view" />
+    <item type="id" name="statusbarutil_translucent_view" />
+</resources>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/daynightmodeutils/grant/Permissions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/daynightmodeutils/grant/Permissions.java	(revision )
+++ baselib/src/main/java/com/baselib/daynightmodeutils/grant/Permissions.java	(revision )
@@ -0,0 +1,12 @@
+package com.baselib.daynightmodeutils.grant;
+
+/**
+ * Enum class to handle the different states
+ * of permissions since the PackageManager only
+ * has a granted and denied state.
+ */
+enum Permissions {
+    GRANTED,
+    DENIED,
+    NOT_FOUND
+}
Index: baselib/src/main/java/com/baselib/ui/popwindow/WheelPopWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/popwindow/WheelPopWindow.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/popwindow/WheelPopWindow.java	(revision )
@@ -0,0 +1,111 @@
+package com.baselib.ui.popwindow;
+
+import android.app.Activity;
+import android.graphics.Color;
+import android.graphics.drawable.BitmapDrawable;
+import android.view.Gravity;
+import android.view.KeyEvent;
+import android.view.View;
+import android.view.WindowManager;
+import android.widget.FrameLayout;
+import android.widget.PopupWindow;
+import android.widget.TextView;
+
+import com.baselib.R;
+import com.baselib.basebean.StudentEvent;
+import com.baselib.baserx.RxBus;
+import com.baselib.enums.StudentEnum;
+import com.baselib.ui.adapter.WheelAdapter;
+import com.wx.wheelview.util.WheelUtils;
+import com.wx.wheelview.widget.WheelView;
+
+import java.util.ArrayList;
+
+/**
+ * 作者: liuhuaqian on 2017/9/9.
+ */
+
+public class WheelPopWindow implements View.OnClickListener{
+
+    private View parentview;
+    private Activity m_activity;
+    private FrameLayout m_share_popup;
+    private PopupWindow m_share_pop;
+    private StudentEnum type;
+    private int positions;
+    public WheelPopWindow(Activity contex, View parentview){
+        m_activity = contex;
+        this.parentview = parentview;
+    }
+    /**
+     * 显示popupWindow
+     *
+     * @param
+     */
+    public void showPopupWindow(ArrayList<String> create,int size,int selection,StudentEnum type){
+      //  positions=selection;
+        this.type=type;
+        m_share_pop = new android.widget.PopupWindow(m_activity);
+        View view = m_activity.getLayoutInflater().inflate(R.layout.pop_bottom, null);
+        m_share_popup = (FrameLayout) view.findViewById(R.id.share_layout_id);
+        TextView cancel= (TextView) view.findViewById(R.id.cancel);
+        TextView determine= (TextView) view.findViewById(R.id.determine);
+
+        WheelView  myWheelView = (WheelView) view.findViewById(R.id.wheelview);
+        myWheelView.setWheelAdapter(new WheelAdapter(m_activity));
+        myWheelView.setWheelSize(size);
+        myWheelView.setSkin(WheelView.Skin.Holo);
+        myWheelView.setWheelData(create);
+        myWheelView.setSelection(selection);
+        WheelView.WheelViewStyle style = new WheelView.WheelViewStyle();
+        style.backgroundColor = Color.parseColor("#353535");
+        style.textColor =Color.parseColor("#F86E0C");
+        style.selectedTextSize = 20;
+        style.holoBorderColor=Color.parseColor("#2C2C2C");
+        style.selectedTextColor = Color.parseColor("#F86E0C");
+        myWheelView.setStyle(style);
+        myWheelView.setOnWheelItemSelectedListener(new WheelView.OnWheelItemSelectedListener<Object>() {
+            @Override
+            public void onItemSelected(int position, Object data) {
+                positions=position;
+                WheelUtils.log("selected:" + position);
+            }
+        });
+        cancel.setOnClickListener(this);
+        determine.setOnClickListener(this);
+        view.setFocusable(true); // 这个很重要
+        view.setFocusableInTouchMode(true);
+        m_share_pop.setFocusable(true);
+        m_share_pop.setWidth(WindowManager.LayoutParams.MATCH_PARENT);
+        m_share_pop.setHeight(WindowManager.LayoutParams.MATCH_PARENT);
+        m_share_pop.setBackgroundDrawable(new BitmapDrawable());
+        m_share_pop.setContentView(view);
+        m_share_pop.showAtLocation(parentview, Gravity.BOTTOM, 0, 0);
+        // 重写onKeyListener
+        view.setOnKeyListener(new View.OnKeyListener() {
+            @Override
+            public boolean onKey(View v, int keyCode, KeyEvent event) {
+                if (keyCode == KeyEvent.KEYCODE_BACK) {
+                    //取消订阅
+
+                    m_share_pop.dismiss();
+                    m_share_pop = null;
+                    return true;
+                }
+                return false;
+            }
+        });
+    }
+    @Override
+    public void onClick(View view) {
+        if (view.getId() == R.id.determine) {
+
+
+            RxBus.getInstance().post(new StudentEvent(type, positions));
+        }
+        m_share_pop.dismiss();
+        m_share_pop = null;
+    }
+
+
+}
Index: baselib/src/main/res/layout/dialog_loading.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/layout/dialog_loading.xml	(revision )
+++ baselib/src/main/res/layout/dialog_loading.xml	(revision )
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:background="@drawable/shape_loading_dialog"
+    android:gravity="center"
+    android:minHeight="60dp"
+    android:minWidth="140dp"
+    android:orientation="vertical"
+    android:padding="10dp">
+
+    <ProgressBar
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:indeterminateDrawable="@drawable/loading_dialog_progressbar" />
+
+    <TextView
+        android:id="@+id/id_tv_loading_dialog_text"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="8dp"
+        android:text="加载中..."
+        android:textColor="@color/black"
+        android:textSize="16sp" />
+
+</LinearLayout>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/commonutils/DataCleanManagerUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/commonutils/DataCleanManagerUtil.java	(revision )
+++ baselib/src/main/java/com/baselib/commonutils/DataCleanManagerUtil.java	(revision )
@@ -0,0 +1,114 @@
+package com.baselib.commonutils;
+
+import android.content.Context;
+import android.os.Environment;
+
+import java.io.File;
+import java.math.BigDecimal;
+
+/**
+ * 作者: liuhuaqian on 2017/9/15.
+ * 缓存处理
+ */
+
+public class DataCleanManagerUtil {
+    /**
+     * 获取缓存大小
+     *
+     * @param context
+     * @return
+     * @throws Exception
+     */
+    public static String getTotalCacheSize(Context context) throws Exception {
+        long cacheSize = getFolderSize(context.getCacheDir());
+        if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
+            cacheSize += getFolderSize(context.getExternalCacheDir());
+        }
+        return getFormatSize(cacheSize);
+    }
+
+    /**
+     * 清除缓存
+     *
+     * @param context
+     */
+    public static void clearAllCache(Context context) {
+        deleteDir(context.getCacheDir());
+        if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)) {
+            deleteDir(context.getExternalCacheDir());
+        }
+    }
+
+    private static boolean deleteDir(File dir) {
+        if (dir != null && dir.isDirectory()) {
+            String[] children = dir.list();
+            for (int i = 0; i < children.length; i++) {
+                boolean success = deleteDir(new File(dir, children[i]));
+                if (!success) {
+                    return false;
+                }
+            }
+        }
+        return dir.delete();
+    }
+
+    // 获取文件大小
+    //Context.getExternalFilesDir() --> SDCard/Android/data/你的应用的包名/files/ 目录，一般放一些长时间保存的数据
+    //Context.getExternalCacheDir() --> SDCard/Android/data/你的应用包名/cache/目录，一般存放临时缓存数据
+    public static long getFolderSize(File file) throws Exception {
+        long size = 0;
+        try {
+            File[] fileList = file.listFiles();
+            for (int i = 0; i < fileList.length; i++) {
+                // 如果下面还有文件
+                if (fileList[i].isDirectory()) {
+                    size = size + getFolderSize(fileList[i]);
+                } else {
+                    size = size + fileList[i].length();
+                }
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return size;
+    }
+
+    /**
+     * 格式化单位
+     *
+     * @param size
+     * @return
+     */
+    public static String getFormatSize(double size) {
+        double kiloByte = size / 1024;
+        if (kiloByte < 1) {
+//            return size + "Byte";
+            return size + "B";
+        }
+
+        double megaByte = kiloByte / 1024;
+        if (megaByte < 1) {
+            BigDecimal result1 = new BigDecimal(Double.toString(kiloByte));
+            return result1.setScale(2, BigDecimal.ROUND_HALF_UP)
+                    .toPlainString() + "KB";
+        }
+
+        double gigaByte = megaByte / 1024;
+        if (gigaByte < 1) {
+            BigDecimal result2 = new BigDecimal(Double.toString(megaByte));
+            return result2.setScale(2, BigDecimal.ROUND_HALF_UP)
+                    .toPlainString() + "MB";
+        }
+
+        double teraBytes = gigaByte / 1024;
+        if (teraBytes < 1) {
+            BigDecimal result3 = new BigDecimal(Double.toString(gigaByte));
+            return result3.setScale(2, BigDecimal.ROUND_HALF_UP)
+                    .toPlainString() + "GB";
+        }
+        BigDecimal result4 = new BigDecimal(teraBytes);
+        return result4.setScale(2, BigDecimal.ROUND_HALF_UP).toPlainString()
+                + "TB";
+    }
+}
+
Index: baselib/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/.gitignore	(revision )
+++ baselib/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: baselib/src/main/java/com/baselib/base/BaseModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/base/BaseModel.java	(revision )
+++ baselib/src/main/java/com/baselib/base/BaseModel.java	(revision )
@@ -0,0 +1,8 @@
+package com.baselib.base;
+
+/**
+ * Created by liuhuaqian on 2017/9/5.
+ */
+
+public interface BaseModel {
+}
Index: baselib/src/main/java/com/baselib/ui/widget/LoadingAnimatorView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/LoadingAnimatorView.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/LoadingAnimatorView.java	(revision )
@@ -0,0 +1,108 @@
+package com.baselib.ui.widget;
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.view.SurfaceHolder;
+import android.view.SurfaceView;
+/**
+ * 作者: liuhuaqian on 2017/9/20.
+ */
+
+public class LoadingAnimatorView extends SurfaceView implements
+        SurfaceHolder.Callback, Runnable {
+    private SurfaceHolder holder;
+    private Bitmap bitmap;
+    private Paint paint1;
+    private Paint paint2;
+    public boolean flag = true;
+    private int y = 100;
+
+    public LoadingAnimatorView(Context context,int imgId ) {
+        super(context);
+        this.setFocusable(true);
+        this.setFocusableInTouchMode(true);
+        holder = this.getHolder();
+        holder.addCallback(this);
+        paint1 = new Paint();
+        paint1.setColor(Color.RED);
+        paint2 = new Paint();
+        paint2.setColor(Color.GRAY);
+        Bitmap bitmap1 = BitmapFactory.decodeStream(context.getResources()
+                .openRawResource(imgId));
+        bitmap = bitmap1.extractAlpha();// 获取一个透明图片
+        y = bitmap.getWidth();//初始化y轴坐标
+    }
+    //改变裁剪区域
+    private void playAnimator() {
+        if (y > 0) {
+            y-=3;
+        }
+    }
+
+    public void drawLoadingAnimator() {
+        Canvas canvas = null;
+        try {
+            canvas = holder.lockCanvas();
+            if(canvas != null){
+                canvas.drawBitmap(bitmap, 100, 100,null);
+                canvas.drawColor(Color.GREEN);
+                canvas.drawBitmap(bitmap, 100, 100, paint2);
+                canvas.save();
+                //裁剪
+                canvas.clipRect(100, y+100, bitmap.getWidth()+100,
+                        bitmap.getHeight()+100);
+                canvas.drawBitmap(bitmap, 100, 100, paint1);
+                canvas.restore();
+            }
+            /*
+             * Rect src = new Rect(0, 0, bitmap.getWidth(), bitmap.getHeight());
+             * Rect dst = new Rect(100, 100, bitmap.getWidth()+100, y+100);
+             * canvas.drawBitmap(bitmap, src, dst, paint2);
+             */
+        } catch (Exception e) {
+            e.printStackTrace();
+        } finally {
+            try{
+                if (holder != null) {
+                    holder.unlockCanvasAndPost(canvas);
+                }
+            }catch(Exception e){
+                e.printStackTrace();
+            }
+
+        }
+    }
+
+    @Override
+    public void surfaceChanged(SurfaceHolder holder, int format, int width,
+                               int height) {
+
+    }
+
+    @Override
+    public void surfaceCreated(SurfaceHolder holder) {
+//        new Thread(this).start();//开启绘制线程
+    }
+
+    @Override
+    public void surfaceDestroyed(SurfaceHolder holder) {
+
+    }
+    //绘制动画线程
+    @Override
+    public void run() {
+        while (flag) {
+            drawLoadingAnimator();
+            playAnimator();
+            try {
+                Thread.sleep(200);
+            } catch (Exception e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/anonymous/greendao/DaoMaster.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/anonymous/greendao/DaoMaster.java	(revision )
+++ app/src/main/java/com/example/anonymous/greendao/DaoMaster.java	(revision )
@@ -0,0 +1,99 @@
+package com.example.anonymous.greendao;
+
+import android.content.Context;
+import android.database.sqlite.SQLiteDatabase;
+import android.database.sqlite.SQLiteDatabase.CursorFactory;
+import android.util.Log;
+
+import org.greenrobot.greendao.AbstractDaoMaster;
+import org.greenrobot.greendao.database.StandardDatabase;
+import org.greenrobot.greendao.database.Database;
+import org.greenrobot.greendao.database.DatabaseOpenHelper;
+import org.greenrobot.greendao.identityscope.IdentityScopeType;
+
+
+// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
+/**
+ * Master of DAO (schema version 2): knows all DAOs.
+ */
+public class DaoMaster extends AbstractDaoMaster {
+    public static final int SCHEMA_VERSION = 2;
+
+    /** Creates underlying database table using DAOs. */
+    public static void createAllTables(Database db, boolean ifNotExists) {
+        SmsApiDao.createTable(db, ifNotExists);
+        UserDao.createTable(db, ifNotExists);
+    }
+
+    /** Drops underlying database table using DAOs. */
+    public static void dropAllTables(Database db, boolean ifExists) {
+        SmsApiDao.dropTable(db, ifExists);
+        UserDao.dropTable(db, ifExists);
+    }
+
+    /**
+     * WARNING: Drops all table on Upgrade! Use only during development.
+     * Convenience method using a {@link DevOpenHelper}.
+     */
+    public static DaoSession newDevSession(Context context, String name) {
+        Database db = new DevOpenHelper(context, name).getWritableDb();
+        DaoMaster daoMaster = new DaoMaster(db);
+        return daoMaster.newSession();
+    }
+
+    public DaoMaster(SQLiteDatabase db) {
+        this(new StandardDatabase(db));
+    }
+
+    public DaoMaster(Database db) {
+        super(db, SCHEMA_VERSION);
+        registerDaoClass(SmsApiDao.class);
+        registerDaoClass(UserDao.class);
+    }
+
+    public DaoSession newSession() {
+        return new DaoSession(db, IdentityScopeType.Session, daoConfigMap);
+    }
+
+    public DaoSession newSession(IdentityScopeType type) {
+        return new DaoSession(db, type, daoConfigMap);
+    }
+
+    /**
+     * Calls {@link #createAllTables(Database, boolean)} in {@link #onCreate(Database)} -
+     */
+    public static abstract class OpenHelper extends DatabaseOpenHelper {
+        public OpenHelper(Context context, String name) {
+            super(context, name, SCHEMA_VERSION);
+        }
+
+        public OpenHelper(Context context, String name, CursorFactory factory) {
+            super(context, name, factory, SCHEMA_VERSION);
+        }
+
+        @Override
+        public void onCreate(Database db) {
+            Log.i("greenDAO", "Creating tables for schema version " + SCHEMA_VERSION);
+            createAllTables(db, false);
+        }
+    }
+
+    /** WARNING: Drops all table on Upgrade! Use only during development. */
+    public static class DevOpenHelper extends OpenHelper {
+        public DevOpenHelper(Context context, String name) {
+            super(context, name);
+        }
+
+        public DevOpenHelper(Context context, String name, CursorFactory factory) {
+            super(context, name, factory);
+        }
+
+        @Override
+        public void onUpgrade(Database db, int oldVersion, int newVersion) {
+            Log.i("greenDAO", "Upgrading schema from version " + oldVersion + " to " + newVersion + " by dropping all tables");
+            dropAllTables(db, true);
+            onCreate(db);
+        }
+    }
+
+}
Index: baselib/src/main/java/com/baselib/ui/adapter/WheelAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/adapter/WheelAdapter.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/adapter/WheelAdapter.java	(revision )
@@ -0,0 +1,43 @@
+package com.baselib.ui.adapter;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.baselib.R;
+import com.wx.wheelview.adapter.BaseWheelAdapter;
+
+/**
+ * 作者: liuhuaqian on 2017/9/9.
+ */
+
+public class WheelAdapter extends BaseWheelAdapter<String> {
+
+    private Context mContext;
+
+    public WheelAdapter(Context context) {
+        mContext = context;
+    }
+
+    @Override
+    protected View bindView(int position, View convertView, ViewGroup parent) {
+        ViewHolder viewHolder;
+        if (convertView == null) {
+            viewHolder = new ViewHolder();
+            convertView = LayoutInflater.from(mContext).inflate(R.layout.item_list, null);
+            viewHolder.textView = (TextView) convertView.findViewById(R.id.item_name);
+            convertView.setTag(viewHolder);
+        } else {
+            viewHolder = (ViewHolder) convertView.getTag();
+        }
+        viewHolder.textView.setText(mList.get(position));
+        return convertView;
+    }
+
+    static class ViewHolder {
+        TextView textView;
+    }
+
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/enums/StudentEnum.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/enums/StudentEnum.java	(revision )
+++ baselib/src/main/java/com/baselib/enums/StudentEnum.java	(revision )
@@ -0,0 +1,29 @@
+package com.baselib.enums;
+
+/**
+ * 作者: liuhuaqian on 2017/9/9.
+ */
+
+public enum StudentEnum {
+    CALL,//服务电话
+    PICTURES,//拍照
+    PHOTO,//相册
+    PORTRAIT,//头像
+    UPDATE_EQUIPMENT,
+    WAYZHANG,
+    ALIPAYPAY,//支付宝支付
+    WXPAY,//微信支付
+    SCENICSPORS,//景区信息
+    OPEN_LOCK,//开锁
+    COUPON,//优惠券
+    TOKEN,//token
+    PUSH,//极光推送
+    GET_USER_INFO,//获取用户信息
+    HOME,//刷新订单信息
+    ELECT_CAMERA,//选择拍照
+    SELECT_PHOTO,//选择相册
+    SELECT_M,//女
+    SELECT_F//男
+
+
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/PermissionUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/PermissionUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/PermissionUtils.java	(revision )
@@ -0,0 +1,138 @@
+package com.baselib.utilcode.util;
+
+import android.annotation.TargetApi;
+import android.app.Activity;
+import android.content.Context;
+import android.content.pm.PackageManager;
+import android.os.Build;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.content.ContextCompat;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2017/04/16
+ *     desc  : 权限相关工具类
+ * </pre>
+ */
+public final class PermissionUtils {
+
+    private static int mRequestCode = -1;
+
+    private static OnPermissionListener mOnPermissionListener;
+
+    public interface OnPermissionListener {
+
+        void onPermissionGranted();
+
+        void onPermissionDenied(String[] deniedPermissions);
+    }
+
+    public abstract static class RationaleHandler {
+        private Context context;
+        private int requestCode;
+        private String[] permissions;
+
+        protected abstract void showRationale();
+
+        void showRationale(Context context, int requestCode, String[] permissions) {
+            this.context = context;
+            this.requestCode = requestCode;
+            this.permissions = permissions;
+            showRationale();
+        }
+
+        @TargetApi(Build.VERSION_CODES.M)
+        public void requestPermissionsAgain() {
+            ((Activity) context).requestPermissions(permissions, requestCode);
+        }
+    }
+
+    @TargetApi(Build.VERSION_CODES.M)
+    public static void requestPermissions(Context context, int requestCode
+            , String[] permissions, OnPermissionListener listener) {
+        requestPermissions(context, requestCode, permissions, listener, null);
+    }
+
+    @TargetApi(Build.VERSION_CODES.M)
+    public static void requestPermissions(Context context, int requestCode
+            , String[] permissions, OnPermissionListener listener, RationaleHandler handler) {
+        if (context instanceof Activity) {
+            mRequestCode = requestCode;
+            mOnPermissionListener = listener;
+            String[] deniedPermissions = getDeniedPermissions(context, permissions);
+            if (deniedPermissions.length > 0) {
+                boolean rationale = shouldShowRequestPermissionRationale(context, deniedPermissions);
+                if (rationale && handler != null) {
+                    handler.showRationale(context, requestCode, deniedPermissions);
+                } else {
+                    ((Activity) context).requestPermissions(deniedPermissions, requestCode);
+                }
+            } else {
+                if (mOnPermissionListener != null)
+                    mOnPermissionListener.onPermissionGranted();
+            }
+        } else {
+            throw new RuntimeException("Context must be an Activity");
+        }
+    }
+
+    /**
+     * 请求权限结果，对应Activity中onRequestPermissionsResult()方法。
+     */
+    public static void onRequestPermissionsResult(Activity context, int requestCode, String[] permissions, int[]
+            grantResults) {
+        if (mRequestCode != -1 && requestCode == mRequestCode) {
+            if (mOnPermissionListener != null) {
+                String[] deniedPermissions = getDeniedPermissions(context, permissions);
+                if (deniedPermissions.length > 0) {
+                    mOnPermissionListener.onPermissionDenied(deniedPermissions);
+                } else {
+                    mOnPermissionListener.onPermissionGranted();
+                }
+            }
+        }
+    }
+
+    /**
+     * 获取请求权限中需要授权的权限
+     */
+    private static String[] getDeniedPermissions(final Context context, final String[] permissions) {
+        List<String> deniedPermissions = new ArrayList<>();
+        for (String permission : permissions) {
+            if (ContextCompat.checkSelfPermission(context, permission) == PackageManager.PERMISSION_DENIED) {
+                deniedPermissions.add(permission);
+            }
+        }
+        return deniedPermissions.toArray(new String[deniedPermissions.size()]);
+    }
+
+    /**
+     * 是否彻底拒绝了某项权限
+     */
+    public static boolean hasAlwaysDeniedPermission(final Context context, final String... deniedPermissions) {
+        for (String deniedPermission : deniedPermissions) {
+            if (!shouldShowRequestPermissionRationale(context, deniedPermission)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 是否有权限需要说明提示
+     */
+    private static boolean shouldShowRequestPermissionRationale(final Context context, final String... deniedPermissions) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M) return false;
+        boolean rationale;
+        for (String permission : deniedPermissions) {
+            rationale = ActivityCompat.shouldShowRequestPermissionRationale((Activity) context, permission);
+            if (rationale) return true;
+        }
+        return false;
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/uitl/TFileUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/uitl/TFileUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/uitl/TFileUtils.java	(revision )
@@ -0,0 +1,48 @@
+package com.baselib.takephoto.uitl;
+
+import android.content.Context;
+import android.util.Log;
+
+import java.io.File;
+
+/**
+ * Author: crazycodeboy
+ * Date: 2016/11/5 0007 20:10
+ * Version:4.0.0
+ * 技术博文：http://www.devio.org/
+ * GitHub:https://github.com/crazycodeboy
+ * Eamil:crazycodeboy@gmail.com
+ */
+public class TFileUtils {
+    private static final String TAG="TFileUtils";
+    private static String DEFAULT_DISK_CACHE_DIR = "takephoto_cache";
+    public static File getPhotoCacheDir(Context context, File file) {
+        File cacheDir = context.getCacheDir();
+        if (cacheDir != null) {
+            File mCacheDir = new File(cacheDir,DEFAULT_DISK_CACHE_DIR);
+            if (!mCacheDir.mkdirs() && (!mCacheDir.exists() || !mCacheDir.isDirectory())) {
+                return file;
+            }else {
+                return new File(mCacheDir, file.getName());
+            }
+        }
+        if (Log.isLoggable(TAG, Log.ERROR)) {
+            Log.e(TAG, "default disk cache dir is null");
+        }
+        return file;
+    }
+
+    public static void delete(String path) {
+        try {
+            if(path == null) {
+                return ;
+            }
+            File file = new File(path);
+            if(!file.delete()) {
+                file.deleteOnExit();
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+}
Index: baselib/src/main/java/com/baselib/base/BasePresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/base/BasePresenter.java	(revision )
+++ baselib/src/main/java/com/baselib/base/BasePresenter.java	(revision )
@@ -0,0 +1,53 @@
+package com.baselib.base;
+
+import android.content.Context;
+
+import com.baselib.baserx.RxManager;
+
+/**
+ * Created by liuhuaqian on 2017/9/5.
+ */
+
+public abstract class BasePresenter<T, E> {
+    private Context mContext;
+    private E mModel;
+    private T mView;
+    private RxManager mRxManage = new RxManager();
+
+
+    public void inject(Context context, T view, E model) {
+        mContext = context;
+        mView = view;
+        mModel = model;
+        onStart();
+    }
+
+    public void inject(T view, E model) {
+        mView = view;
+        mModel = model;
+        onStart();
+    }
+
+    public Context getContext() {
+        return mContext;
+    }
+
+    public E getModel() {
+        return mModel;
+    }
+
+    public T getView() {
+        return mView;
+    }
+
+    public RxManager getRxManage() {
+        return mRxManage;
+    }
+
+    public void onStart() {
+    }
+
+    public void onDestroy() {
+        mRxManage.clear();
+    }
+}
Index: baselib/src/test/java/com/baselib/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/test/java/com/baselib/ExampleUnitTest.java	(revision )
+++ baselib/src/test/java/com/baselib/ExampleUnitTest.java	(revision )
@@ -0,0 +1,17 @@
+package com.baselib;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/b3ad/yuxie/myapplication/mvvp/MvvpActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/mvvp/MvvpActivity.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/mvvp/MvvpActivity.java	(revision )
@@ -0,0 +1,22 @@
+package com.b3ad.yuxie.myapplication.mvvp;
+
+
+import android.app.Activity;
+import android.databinding.DataBindingUtil;
+import android.os.Bundle;
+
+import com.b3ad.yuxie.myapplication.R;
+import com.b3ad.yuxie.myapplication.databinding.ActivityMvvpBinding;
+
+public class MvvpActivity extends Activity {
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+//        setContentView(R.layout.activity_mvvp);mvvp中有下面的方法取代它
+
+        //每个activity都有一个对应的activity类名(ActivityMvvp)+Binding(如:ActivityMvvpBinding)
+        ActivityMvvpBinding binding = DataBindingUtil.setContentView(this, R.layout.activity_mvvp);
+        binding.setUser(new User(666, "一口仨馍", "走在勇往直前的路上"));
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/compress/CompressImageUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/compress/CompressImageUtil.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/compress/CompressImageUtil.java	(revision )
@@ -0,0 +1,166 @@
+package com.baselib.takephoto.compress;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.Bitmap.Config;
+import android.graphics.BitmapFactory;
+import android.os.Handler;
+
+import com.baselib.takephoto.uitl.TFileUtils;
+
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileNotFoundException;
+import java.io.FileOutputStream;
+
+/**
+ * 压缩照片
+ * @author JPH
+ * Date 2015-08-26 下午1:44:26
+ * Version:1.0.3
+ */
+public class CompressImageUtil{
+	private CompressConfig config;
+	private Context context;
+	Handler mhHandler = new Handler();
+	public CompressImageUtil(Context context,CompressConfig config) {
+		this.context=context;
+		this.config=config==null?CompressConfig.ofDefaultConfig():config;
+	}
+	public void compress(String imagePath, CompressListener listener) {
+		if (config.isEnablePixelCompress()){
+			try {
+				compressImageByPixel(imagePath,listener);
+			} catch (FileNotFoundException e) {
+				listener.onCompressFailed(imagePath,String.format("图片压缩失败,%s",e.toString()));
+				e.printStackTrace();
+			}
+		}else {
+			compressImageByQuality(BitmapFactory.decodeFile(imagePath),imagePath,listener);
+		}
+	}
+	/**
+	 * 多线程压缩图片的质量
+	 * @author JPH
+	 * @param bitmap 内存中的图片
+	 * @param imgPath 图片的保存路径
+	 * @date 2014-12-5下午11:30:43
+	 */
+	private void compressImageByQuality(final Bitmap bitmap, final String imgPath, final CompressListener listener){
+		if(bitmap==null){
+			sendMsg(false,imgPath,"像素压缩失败,bitmap is null",listener);
+			return;
+		}
+		new Thread(new Runnable() {//开启多线程进行压缩处理
+			@Override
+			public void run() {
+				// TODO Auto-generated method stub
+				ByteArrayOutputStream baos = new ByteArrayOutputStream();
+				int options = 100;
+				bitmap.compress(Bitmap.CompressFormat.JPEG, options, baos);//质量压缩方法，把压缩后的数据存放到baos中 (100表示不压缩，0表示压缩到最小)
+				while (baos.toByteArray().length >config.getMaxSize()) {//循环判断如果压缩后图片是否大于指定大小,大于继续压缩
+					baos.reset();//重置baos即让下一次的写入覆盖之前的内容 
+					options -= 5;//图片质量每次减少5
+					if(options<=5)options=5;//如果图片质量小于5，为保证压缩后的图片质量，图片最底压缩质量为5
+					bitmap.compress(Bitmap.CompressFormat.JPEG, options, baos);//将压缩后的图片保存到baos中
+					if(options==5)break;//如果图片的质量已降到最低则，不再进行压缩
+				}
+//				if(bitmap!=null&&!bitmap.isRecycled()){
+//					bitmap.recycle();//回收内存中的图片
+//				}
+				try {
+					File thumbnailFile=getThumbnailFile(new File(imgPath));
+					FileOutputStream fos = new FileOutputStream(thumbnailFile);//将压缩后的图片保存的本地上指定路径中
+					fos.write(baos.toByteArray());
+					fos.flush();
+					fos.close();
+					sendMsg(true, thumbnailFile.getPath(),null,listener);
+				} catch (Exception e) {
+					sendMsg(false,imgPath,"质量压缩失败",listener);
+					e.printStackTrace();
+				}
+			}
+		}).start();
+	}
+	/**
+	 * 按比例缩小图片的像素以达到压缩的目的
+	 * @author JPH
+	 * @param imgPath
+	 * @return 
+	 * @date 2014-12-5下午11:30:59
+	 */
+	private void compressImageByPixel(String imgPath,CompressListener listener) throws FileNotFoundException {
+		if(imgPath==null){
+			sendMsg(false,imgPath,"要压缩的文件不存在",listener);
+			return;
+		}
+		BitmapFactory.Options newOpts = new BitmapFactory.Options();
+		newOpts.inJustDecodeBounds = true;//只读边,不读内容
+		BitmapFactory.decodeFile(imgPath, newOpts);
+		newOpts.inJustDecodeBounds = false;
+		int width = newOpts.outWidth;
+		int height = newOpts.outHeight;
+		float maxSize =config.getMaxPixel();
+		int be = 1;
+		if (width >= height && width > maxSize) {//缩放比,用高或者宽其中较大的一个数据进行计算
+			be = (int) (newOpts.outWidth / maxSize);
+			be++;
+		} else if (width < height && height > maxSize) {
+			be = (int) (newOpts.outHeight / maxSize);
+			be++;
+		}
+		newOpts.inSampleSize =be;//设置采样率
+		newOpts.inPreferredConfig = Config.ARGB_8888;//该模式是默认的,可不设
+		newOpts.inPurgeable = true;// 同时设置才会有效
+		newOpts.inInputShareable = true;//。当系统内存不够时候图片自动被回收
+		Bitmap bitmap = BitmapFactory.decodeFile(imgPath, newOpts);
+		if (config.isEnableQualityCompress()){
+			compressImageByQuality(bitmap,imgPath,listener);//压缩好比例大小后再进行质量压缩
+		}else {
+			File thumbnailFile=getThumbnailFile(new File(imgPath));
+			bitmap.compress(Bitmap.CompressFormat.JPEG,100,new FileOutputStream(thumbnailFile));
+
+			listener.onCompressSuccess(thumbnailFile.getPath());
+		}
+	}
+	/**
+	 * 发送压缩结果的消息
+	 * @param isSuccess 压缩是否成功
+	 * @param imagePath
+	 * @param message
+	 */
+	private void sendMsg(final boolean isSuccess, final String imagePath,final String message, final CompressListener listener){
+		mhHandler.post(new Runnable() {
+			@Override
+			public void run() {
+				if (isSuccess){
+					listener.onCompressSuccess(imagePath);
+				}else{
+					listener.onCompressFailed(imagePath,message);
+				}
+			}
+		});
+	}
+	private File getThumbnailFile(File file){
+		if (file==null||!file.exists())return file;
+		return TFileUtils.getPhotoCacheDir(context,file);
+	}
+	/**
+	 * 压缩结果监听器
+	 */
+	public interface CompressListener {
+		/**
+		 * 压缩成功
+		 *
+		 * @param imgPath 压缩图片的路径
+		 */
+		void onCompressSuccess(String imgPath);
+
+		/**
+		 * 压缩失败
+		 * @param imgPath 压缩失败的图片
+		 * @param msg 失败的原因
+		 */
+		void onCompressFailed(String imgPath,String msg);
+	}
+}
Index: baselib/src/main/java/com/baselib/takephoto/app/TakePhotoFragmentActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/app/TakePhotoFragmentActivity.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/app/TakePhotoFragmentActivity.java	(revision )
@@ -0,0 +1,80 @@
+package com.baselib.takephoto.app;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.v4.app.FragmentActivity;
+import android.util.Log;
+
+import com.baselib.R;
+import com.baselib.takephoto.model.InvokeParam;
+import com.baselib.takephoto.model.TContextWrap;
+import com.baselib.takephoto.model.TResult;
+import com.baselib.takephoto.permission.InvokeListener;
+import com.baselib.takephoto.permission.PermissionManager;
+import com.baselib.takephoto.permission.TakePhotoInvocationHandler;
+
+/**
+ * 继承这个类来让Activity获取拍照的能力<br>
+ * Author: crazycodeboy
+ * Date: 2016/9/21 0007 20:10
+ * Version:3.0.0
+ * 技术博文：http://www.cboy.me
+ * GitHub:https://github.com/crazycodeboy
+ * Eamil:crazycodeboy@gmail.com
+ */
+public class TakePhotoFragmentActivity extends FragmentActivity implements TakePhoto.TakeResultListener,InvokeListener {
+    private static final String TAG = TakePhotoFragmentActivity.class.getName();
+    private TakePhoto takePhoto;
+    private InvokeParam invokeParam;
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        getTakePhoto().onCreate(savedInstanceState);
+        super.onCreate(savedInstanceState);
+    }
+    @Override
+    protected void onSaveInstanceState(Bundle outState) {
+        getTakePhoto().onSaveInstanceState(outState);
+        super.onSaveInstanceState(outState);
+    }
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        getTakePhoto().onActivityResult(requestCode, resultCode, data);
+        super.onActivityResult(requestCode, resultCode, data);
+    }
+    @Override
+    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+        PermissionManager.TPermissionType type=PermissionManager.onRequestPermissionsResult(requestCode,permissions,grantResults);
+        PermissionManager.handlePermissionsResult(this,type,invokeParam,this);
+    }
+    /**
+     *  获取TakePhoto实例
+     * @return
+     */
+    public TakePhoto getTakePhoto(){
+        if (takePhoto==null){
+            takePhoto= (TakePhoto) TakePhotoInvocationHandler.of(this).bind(new TakePhotoImpl(this,this));
+        }
+        return takePhoto;
+    }
+    @Override
+    public void takeSuccess(TResult result) {
+        Log.i(TAG,"takeSuccess：" + result.getImage().getCompressPath());
+    }
+    @Override
+    public void takeFail(TResult result,String msg) {
+        Log.i(TAG, "takeFail:" + msg);
+    }
+    @Override
+    public void takeCancel() {
+        Log.i(TAG, getResources().getString(R.string.msg_operation_canceled));
+    }
+    @Override
+    public PermissionManager.TPermissionType invoke(InvokeParam invokeParam) {
+        PermissionManager.TPermissionType type=PermissionManager.checkPermission(TContextWrap.of(this),invokeParam.getMethod());
+        if(PermissionManager.TPermissionType.WAIT.equals(type)){
+            this.invokeParam=invokeParam;
+        }
+        return type;
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPLManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPLManager.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPLManager.java	(revision )
@@ -0,0 +1,71 @@
+package com.baselib.ui.widget.mydatepicker;
+
+import java.util.Locale;
+
+/**
+ * 语言对象抽象父类
+ * DatePicker暂且支持中文和英文两种显示语言
+ * 如果你需要定义更多的语言可以新建自己的语言类并继承Language重写其方法即可
+ * 同时你需要在Language的单例方法{@link #getInstance()}的分支语句中添加自己的语言类判断
+ *
+ * 作者: liuhuaqian on 2017/9/23.
+ */
+
+public abstract class DPLManager {
+    private static DPLManager sLanguage;
+
+    /**
+     * 获取日历语言管理器
+     *
+     * Get DatePicker language manager
+     *
+     * @return 日历语言管理器 DatePicker language manager
+     */
+    public static DPLManager getInstance() {
+        if (null == sLanguage) {
+            String locale = Locale.getDefault().getLanguage().toLowerCase();
+            if (locale.equals("zh")) {
+                sLanguage = new CN();
+            } else {
+                sLanguage = new EN();
+            }
+        }
+        return sLanguage;
+    }
+
+    /**
+     * 月份标题显示
+     *
+     * Titles of month
+     *
+     * @return 长度为12的月份标题数组 Array in 12 length of month titles
+     */
+    public abstract String[] titleMonth();
+
+    /**
+     * 确定按钮文本
+     *
+     * Text of ensure button
+     *
+     * @return Text of ensure button
+     */
+    public abstract String titleEnsure();
+
+    /**
+     * 公元前文本
+     *
+     * Text of B.C.
+     *
+     * @return Text of B.C.
+     */
+    public abstract String titleBC();
+
+    /**
+     * 星期标题显示
+     *
+     * Titles of week
+     *
+     * @return 长度为7的星期标题数组 Array in 7 length of week titles
+     */
+    public abstract String[] titleWeek();
+}
Index: baselib/src/main/res/values/attr.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/values/attr.xml	(revision )
+++ baselib/src/main/res/values/attr.xml	(revision )
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <declare-styleable name="NumberButton">
+        <attr name="editable" format="boolean"/>
+        <attr name="buttonWidth" format="dimension" />
+        <attr name="textWidth" format="dimension" />
+        <attr name="textSize" format="dimension"/>
+        <attr name="textColor" format="color"/>
+    </declare-styleable>
+</resources>
\ No newline at end of file
Index: app/src/main/java/com/b3ad/yuxie/myapplication/Login/view/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/Login/view/LoginActivity.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/Login/view/LoginActivity.java	(revision )
@@ -0,0 +1,54 @@
+package com.b3ad.yuxie.myapplication.Login.view;
+
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import com.b3ad.yuxie.myapplication.Login.contract.LoginContract;
+import com.b3ad.yuxie.myapplication.Login.presenter.LoginPresenter;
+import com.b3ad.yuxie.myapplication.R;
+
+public class LoginActivity extends AppCompatActivity implements LoginContract.View {
+
+    private EditText etUsername;//用户名
+    private EditText etPassword;//密码
+
+    private LoginPresenter mloginPresenter;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_login);
+
+        mloginPresenter = new LoginPresenter(this);
+
+        etUsername = (EditText) findViewById(R.id.et_username);
+        etPassword = (EditText) findViewById(R.id.et_password);
+    }
+
+    public void btn_login(View view) {
+        mloginPresenter.login();
+    }
+
+    @Override
+    public void showToast(String msg) {
+        Toast.makeText(this, msg, Toast.LENGTH_SHORT).show();
+    }
+
+    @Override
+    public void onSuccess() {
+        Toast.makeText(this, "登录成功!", Toast.LENGTH_SHORT).show();
+    }
+
+    @Override
+    public String getName() {
+        return etUsername.getText().toString();
+    }
+
+    @Override
+    public String getPassWord() {
+        return etPassword.getText().toString();
+    }
+}
Index: baselib/src/main/java/com/baselib/base/BaseView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/base/BaseView.java	(revision )
+++ baselib/src/main/java/com/baselib/base/BaseView.java	(revision )
@@ -0,0 +1,8 @@
+package com.baselib.base;
+
+/**
+ * 作者: liuhuaqian on 2017/9/8.
+ */
+
+public interface BaseView {
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/LogUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/LogUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/LogUtils.java	(revision )
@@ -0,0 +1,558 @@
+package com.baselib.utilcode.util;
+
+import android.os.Environment;
+import android.support.annotation.IntDef;
+import android.support.annotation.IntRange;
+import android.util.Log;
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.StringReader;
+import java.io.StringWriter;
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.text.Format;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Formatter;
+import java.util.Locale;
+import java.util.concurrent.ExecutorService;
+import java.util.concurrent.Executors;
+
+import javax.xml.transform.OutputKeys;
+import javax.xml.transform.Source;
+import javax.xml.transform.Transformer;
+import javax.xml.transform.TransformerFactory;
+import javax.xml.transform.stream.StreamResult;
+import javax.xml.transform.stream.StreamSource;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/09/21
+ *     desc  : Log相关工具类
+ * </pre>
+ */
+public final class LogUtils {
+
+    public static final int V = Log.VERBOSE;
+    public static final int D = Log.DEBUG;
+    public static final int I = Log.INFO;
+    public static final int W = Log.WARN;
+    public static final int E = Log.ERROR;
+    public static final int A = Log.ASSERT;
+
+    @IntDef({V, D, I, W, E, A})
+    @Retention(RetentionPolicy.SOURCE)
+    private @interface TYPE {
+    }
+
+    private static final char[] T = new char[]{'V', 'D', 'I', 'W', 'E', 'A'};
+
+    private static final int FILE = 0x10;
+    private static final int JSON = 0x20;
+    private static final int XML  = 0x30;
+
+    private static ExecutorService sExecutor;
+    private static String          sDefaultDir;// log默认存储目录
+    private static String          sDir;       // log存储目录
+    private static String  sFilePrefix        = "util";// log文件前缀
+    private static boolean sLogSwitch         = true;  // log总开关，默认开
+    private static boolean sLog2ConsoleSwitch = true;  // logcat是否打印，默认打印
+    private static String  sGlobalTag         = null;  // log标签
+    private static boolean sTagIsSpace        = true;  // log标签是否为空白
+    private static boolean sLogHeadSwitch     = true;  // log头部开关，默认开
+    private static boolean sLog2FileSwitch    = false; // log写入文件开关，默认关
+    private static boolean sLogBorderSwitch   = true;  // log边框开关，默认开
+    private static int     sConsoleFilter     = V;     // log控制台过滤器
+    private static int     sFileFilter        = V;     // log文件过滤器
+    private static int     sStackDeep         = 1;     // log栈深度
+
+    private static final String FILE_SEP      = System.getProperty("file.separator");
+    private static final String LINE_SEP      = System.getProperty("line.separator");
+    private static final String TOP_BORDER    = "╔═══════════════════════════════════════════════════════════════════════════════════════════════════";
+    private static final String SPLIT_BORDER  = "╟───────────────────────────────────────────────────────────────────────────────────────────────────";
+    private static final String LEFT_BORDER   = "║ ";
+    private static final String BOTTOM_BORDER = "╚═══════════════════════════════════════════════════════════════════════════════════════════════════";
+    private static final int    MAX_LEN       = 4000;
+    private static final Format FORMAT        = new SimpleDateFormat("MM-dd HH:mm:ss.SSS ", Locale.getDefault());
+    private static final String NULL_TIPS     = "Log with null object.";
+    private static final String NULL          = "null";
+    private static final String ARGS          = "args";
+    private static final Config CONFIG        = new Config();
+
+    private LogUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    public static Config getConfig() {
+        return CONFIG;
+    }
+
+    public static void v(final Object contents) {
+        log(V, sGlobalTag, contents);
+    }
+
+    public static void v(final String tag, final Object... contents) {
+        log(V, tag, contents);
+    }
+
+    public static void d(final Object contents) {
+        log(D, sGlobalTag, contents);
+    }
+
+    public static void d(final String tag, final Object... contents) {
+        log(D, tag, contents);
+    }
+
+    public static void i(final Object contents) {
+        log(I, sGlobalTag, contents);
+    }
+
+    public static void i(final String tag, final Object... contents) {
+        log(I, tag, contents);
+    }
+
+    public static void w(final Object contents) {
+        log(W, sGlobalTag, contents);
+    }
+
+    public static void w(final String tag, final Object... contents) {
+        log(W, tag, contents);
+    }
+
+    public static void e(final Object contents) {
+        log(E, sGlobalTag, contents);
+    }
+
+    public static void e(final String tag, final Object... contents) {
+        log(E, tag, contents);
+    }
+
+    public static void a(final Object contents) {
+        log(A, sGlobalTag, contents);
+    }
+
+    public static void a(final String tag, final Object... contents) {
+        log(A, tag, contents);
+    }
+
+    public static void file(final Object contents) {
+        log(FILE | D, sGlobalTag, contents);
+    }
+
+    public static void file(@TYPE final int type, final Object contents) {
+        log(FILE | type, sGlobalTag, contents);
+    }
+
+    public static void file(final String tag, final Object contents) {
+        log(FILE | D, tag, contents);
+    }
+
+    public static void file(@TYPE final int type, final String tag, final Object contents) {
+        log(FILE | type, tag, contents);
+    }
+
+    public static void json(final String contents) {
+        log(JSON | D, sGlobalTag, contents);
+    }
+
+    public static void json(@TYPE final int type, final String contents) {
+        log(JSON | type, sGlobalTag, contents);
+    }
+
+    public static void json(final String tag, final String contents) {
+        log(JSON | D, tag, contents);
+    }
+
+    public static void json(@TYPE final int type, final String tag, final String contents) {
+        log(JSON | type, tag, contents);
+    }
+
+    public static void xml(final String contents) {
+        log(XML | D, sGlobalTag, contents);
+    }
+
+    public static void xml(@TYPE final int type, final String contents) {
+        log(XML | type, sGlobalTag, contents);
+    }
+
+    public static void xml(final String tag, final String contents) {
+        log(XML | D, tag, contents);
+    }
+
+    public static void xml(@TYPE final int type, final String tag, final String contents) {
+        log(XML | type, tag, contents);
+    }
+
+    private static void log(final int type, final String tag, final Object... contents) {
+        if (!sLogSwitch || (!sLog2ConsoleSwitch && !sLog2FileSwitch)) return;
+        int type_low = type & 0x0f, type_high = type & 0xf0;
+        if (type_low < sConsoleFilter && type_low < sFileFilter) return;
+        final TagHead tagHead = processTagAndHead(tag);
+        String body = processBody(type_high, contents);
+        if (sLog2ConsoleSwitch && type_low >= sConsoleFilter && type_high != FILE) {
+            print2Console(type_low, tagHead.tag, tagHead.consoleHead, body);
+        }
+        if ((sLog2FileSwitch || type_high == FILE) && type_low >= sFileFilter) {
+            print2File(type_low, tagHead.tag, tagHead.fileHead + body);
+        }
+    }
+
+    private static TagHead processTagAndHead(String tag) {
+        if (!sTagIsSpace && !sLogHeadSwitch) {
+            tag = sGlobalTag;
+        } else {
+            final StackTraceElement[] stackTrace = new Throwable().getStackTrace();
+            StackTraceElement targetElement = stackTrace[3];
+            String fileName = targetElement.getFileName();
+            String className;
+            if (fileName == null) {// 混淆可能会导致获取为空 加-keepattributes SourceFile,LineNumberTable
+                className = targetElement.getClassName();
+                String[] classNameInfo = className.split("\\.");
+                if (classNameInfo.length > 0) {
+                    className = classNameInfo[classNameInfo.length - 1];
+                }
+                int index = className.indexOf('$');
+                if (index != -1) {
+                    className = className.substring(0, index);
+                }
+                fileName = className + ".java";
+            } else {
+                int index = fileName.indexOf('.');// 混淆可能导致文件名被改变从而找不到"."
+                className = index == -1 ? fileName : fileName.substring(0, index);
+            }
+            if (sTagIsSpace) tag = isSpace(tag) ? className : tag;
+            if (sLogHeadSwitch) {
+                String tName = Thread.currentThread().getName();
+                final String head = new Formatter()
+                        .format("%s, %s(%s:%d)",
+                                tName,
+                                targetElement.getMethodName(),
+                                fileName,
+                                targetElement.getLineNumber())
+                        .toString();
+                final String fileHead = " [" + head + "]: ";
+                if (sStackDeep <= 1) {
+                    return new TagHead(tag, new String[]{head}, fileHead);
+                } else {
+                    final String[] consoleHead = new String[Math.min(sStackDeep, stackTrace.length - 3)];
+                    consoleHead[0] = head;
+                    int spaceLen = tName.length() + 2;
+                    String space = new Formatter().format("%" + spaceLen + "s", "").toString();
+                    for (int i = 1, len = consoleHead.length; i < len; ++i) {
+                        targetElement = stackTrace[i + 3];
+                        consoleHead[i] = new Formatter()
+                                .format("%s%s(%s:%d)",
+                                        space,
+                                        targetElement.getMethodName(),
+                                        targetElement.getFileName(),
+                                        targetElement.getLineNumber())
+                                .toString();
+                    }
+                    return new TagHead(tag, consoleHead, fileHead);
+                }
+            }
+        }
+        return new TagHead(tag, null, ": ");
+    }
+
+    private static String processBody(final int type, final Object... contents) {
+        String body = NULL_TIPS;
+        if (contents != null) {
+            if (contents.length == 1) {
+                Object object = contents[0];
+                body = object == null ? NULL : object.toString();
+                if (type == JSON) {
+                    body = formatJson(body);
+                } else if (type == XML) {
+                    body = formatXml(body);
+                }
+            } else {
+                StringBuilder sb = new StringBuilder();
+                for (int i = 0, len = contents.length; i < len; ++i) {
+                    Object content = contents[i];
+                    sb.append(ARGS)
+                            .append("[")
+                            .append(i)
+                            .append("]")
+                            .append(" = ")
+                            .append(content == null ? NULL : content.toString())
+                            .append(LINE_SEP);
+                }
+                body = sb.toString();
+            }
+        }
+        return body;
+    }
+
+    private static String formatJson(String json) {
+        try {
+            if (json.startsWith("{")) {
+                json = new JSONObject(json).toString(4);
+            } else if (json.startsWith("[")) {
+                json = new JSONArray(json).toString(4);
+            }
+        } catch (JSONException e) {
+            e.printStackTrace();
+        }
+        return json;
+    }
+
+    private static String formatXml(String xml) {
+        try {
+            Source xmlInput = new StreamSource(new StringReader(xml));
+            StreamResult xmlOutput = new StreamResult(new StringWriter());
+            Transformer transformer = TransformerFactory.newInstance().newTransformer();
+            transformer.setOutputProperty(OutputKeys.INDENT, "yes");
+            transformer.setOutputProperty("{http://xml.apache.org/xslt}indent-amount", "4");
+            transformer.transform(xmlInput, xmlOutput);
+            xml = xmlOutput.getWriter().toString().replaceFirst(">", ">" + LINE_SEP);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return xml;
+    }
+
+    private static void print2Console(final int type, final String tag, final String[] head, String msg) {
+        printBorder(type, tag, true);
+        printHead(type, tag, head);
+        printMsg(type, tag, msg);
+        printBorder(type, tag, false);
+    }
+
+    private static void printBorder(final int type, final String tag, boolean isTop) {
+        if (sLogBorderSwitch) {
+            Log.println(type, tag, isTop ? TOP_BORDER : BOTTOM_BORDER);
+        }
+    }
+
+    private static void printHead(final int type, final String tag, final String[] head) {
+        if (head != null) {
+            for (String aHead : head) {
+                Log.println(type, tag, sLogBorderSwitch ? LEFT_BORDER + aHead : aHead);
+            }
+            Log.println(type, tag, SPLIT_BORDER);
+        }
+    }
+
+    private static void printMsg(final int type, final String tag, final String msg) {
+        int len = msg.length();
+        int countOfSub = len / MAX_LEN;
+        if (countOfSub > 0) {
+            int index = 0;
+            for (int i = 0; i < countOfSub; i++) {
+                printSubMsg(type, tag, msg.substring(index, index + MAX_LEN));
+                index += MAX_LEN;
+            }
+            if (index != len) {
+                printSubMsg(type, tag, msg.substring(index, len));
+            }
+        } else {
+            printSubMsg(type, tag, msg);
+        }
+    }
+
+    private static void printSubMsg(final int type, final String tag, final String msg) {
+        if (!sLogBorderSwitch) {
+            Log.println(type, tag, msg);
+            return;
+        }
+        StringBuilder sb = new StringBuilder();
+        String[] lines = msg.split(LINE_SEP);
+        for (String line : lines) {
+            Log.println(type, tag, LEFT_BORDER + line);
+        }
+    }
+
+    private static void print2File(final int type, final String tag, final String msg) {
+        Date now = new Date(System.currentTimeMillis());
+        String format = FORMAT.format(now);
+        String date = format.substring(0, 5);
+        String time = format.substring(6);
+        final String fullPath = (sDir == null ? sDefaultDir : sDir) + sFilePrefix + "-" + date + ".txt";
+        if (!createOrExistsFile(fullPath)) {
+            Log.e(tag, "log to " + fullPath + " failed!");
+            return;
+        }
+        StringBuilder sb = new StringBuilder();
+        sb.append(time)
+                .append(T[type - V])
+                .append("/")
+                .append(tag)
+                .append(msg)
+                .append(LINE_SEP);
+        final String content = sb.toString();
+        if (sExecutor == null) {
+            sExecutor = Executors.newSingleThreadExecutor();
+        }
+        sExecutor.execute(new Runnable() {
+            @Override
+            public void run() {
+                BufferedWriter bw = null;
+                try {
+                    bw = new BufferedWriter(new FileWriter(fullPath, true));
+                    bw.write(content);
+                    Log.d(tag, "log to " + fullPath + " success!");
+                } catch (IOException e) {
+                    e.printStackTrace();
+                    Log.e(tag, "log to " + fullPath + " failed!");
+                } finally {
+                    try {
+                        if (bw != null) {
+                            bw.close();
+                        }
+                    } catch (IOException e) {
+                        e.printStackTrace();
+                    }
+                }
+            }
+        });
+    }
+
+    private static boolean createOrExistsFile(final String filePath) {
+        File file = new File(filePath);
+        if (file.exists()) return file.isFile();
+        if (!createOrExistsDir(file.getParentFile())) return false;
+        try {
+            return file.createNewFile();
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    private static boolean createOrExistsDir(final File file) {
+        return file != null && (file.exists() ? file.isDirectory() : file.mkdirs());
+    }
+
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    public static class Config {
+        private Config() {
+            if (sDefaultDir != null) return;
+            if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())
+                    && Utils.getApp().getExternalCacheDir() != null)
+                sDefaultDir = Utils.getApp().getExternalCacheDir() + FILE_SEP + "log" + FILE_SEP;
+            else {
+                sDefaultDir = Utils.getApp().getCacheDir() + FILE_SEP + "log" + FILE_SEP;
+            }
+        }
+
+        public Config setLogSwitch(final boolean logSwitch) {
+            sLogSwitch = logSwitch;
+            return this;
+        }
+
+        public Config setConsoleSwitch(final boolean consoleSwitch) {
+            sLog2ConsoleSwitch = consoleSwitch;
+            return this;
+        }
+
+        public Config setGlobalTag(final String tag) {
+            if (isSpace(tag)) {
+                sGlobalTag = "";
+                sTagIsSpace = true;
+            } else {
+                sGlobalTag = tag;
+                sTagIsSpace = false;
+            }
+            return this;
+        }
+
+        public Config setLogHeadSwitch(final boolean logHeadSwitch) {
+            sLogHeadSwitch = logHeadSwitch;
+            return this;
+        }
+
+        public Config setLog2FileSwitch(final boolean log2FileSwitch) {
+            sLog2FileSwitch = log2FileSwitch;
+            return this;
+        }
+
+        public Config setDir(final String dir) {
+            if (isSpace(dir)) {
+                sDir = null;
+            } else {
+                sDir = dir.endsWith(FILE_SEP) ? dir : dir + FILE_SEP;
+            }
+            return this;
+        }
+
+        public Config setDir(final File dir) {
+            sDir = dir == null ? null : dir.getAbsolutePath() + FILE_SEP;
+            return this;
+        }
+
+        public Config setFilePrefix(final String filePrefix) {
+            if (isSpace(filePrefix)) {
+                sFilePrefix = "util";
+            } else {
+                sFilePrefix = filePrefix;
+            }
+            return this;
+        }
+
+        public Config setBorderSwitch(final boolean borderSwitch) {
+            sLogBorderSwitch = borderSwitch;
+            return this;
+        }
+
+        public Config setConsoleFilter(@TYPE final int consoleFilter) {
+            sConsoleFilter = consoleFilter;
+            return this;
+        }
+
+        public Config setFileFilter(@TYPE final int fileFilter) {
+            sFileFilter = fileFilter;
+            return this;
+        }
+
+        public Config setStackDeep(@IntRange(from = 1) final int stackDeep) {
+            sStackDeep = stackDeep;
+            return this;
+        }
+
+        @Override
+        public String toString() {
+            return "switch: " + sLogSwitch
+                    + LINE_SEP + "console: " + sLog2ConsoleSwitch
+                    + LINE_SEP + "tag: " + (sTagIsSpace ? "null" : sGlobalTag)
+                    + LINE_SEP + "head: " + sLogHeadSwitch
+                    + LINE_SEP + "file: " + sLog2FileSwitch
+                    + LINE_SEP + "dir: " + (sDir == null ? sDefaultDir : sDir)
+                    + LINE_SEP + "filePrefix" + sFilePrefix
+                    + LINE_SEP + "border: " + sLogBorderSwitch
+                    + LINE_SEP + "consoleFilter: " + T[sConsoleFilter - V]
+                    + LINE_SEP + "fileFilter: " + T[sFileFilter - V]
+                    + LINE_SEP + "stackDeep: " + sStackDeep;
+        }
+    }
+
+    private static class TagHead {
+        String   tag;
+        String[] consoleHead;
+        String   fileHead;
+
+        TagHead(String tag, String[] consoleHead, String fileHead) {
+            this.tag = tag;
+            this.consoleHead = consoleHead;
+            this.fileHead = fileHead;
+        }
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/app/TakePhotoFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/app/TakePhotoFragment.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/app/TakePhotoFragment.java	(revision )
@@ -0,0 +1,81 @@
+package com.baselib.takephoto.app;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+
+import com.baselib.R;
+import com.baselib.takephoto.model.InvokeParam;
+import com.baselib.takephoto.model.TContextWrap;
+import com.baselib.takephoto.model.TResult;
+import com.baselib.takephoto.permission.InvokeListener;
+import com.baselib.takephoto.permission.PermissionManager;
+import com.baselib.takephoto.permission.TakePhotoInvocationHandler;
+
+/**
+ * 继承这个类来让Fragment获取拍照的能力<br>
+ * Author: crazycodeboy
+ * Date: 2016/9/21 0007 20:10
+ * Version:3.0.0
+ * 技术博文：http://www.cboy.me
+ * GitHub:https://github.com/crazycodeboy
+ * Eamil:crazycodeboy@gmail.com
+ */
+public class TakePhotoFragment extends Fragment implements TakePhoto.TakeResultListener,InvokeListener {
+    private static final String TAG = TakePhotoFragment.class.getName();
+    private InvokeParam invokeParam;
+    private TakePhoto takePhoto;
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        getTakePhoto().onCreate(savedInstanceState);
+        super.onCreate(savedInstanceState);
+    }
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        getTakePhoto().onSaveInstanceState(outState);
+        super.onSaveInstanceState(outState);
+    }
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        getTakePhoto().onActivityResult(requestCode, resultCode, data);
+        super.onActivityResult(requestCode, resultCode, data);
+    }
+    @Override
+    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+        PermissionManager.TPermissionType type=PermissionManager.onRequestPermissionsResult(requestCode,permissions,grantResults);
+        PermissionManager.handlePermissionsResult(getActivity(),type,invokeParam,this);
+    }
+    /**
+     *  获取TakePhoto实例
+     * @return
+     */
+    public TakePhoto getTakePhoto(){
+        if (takePhoto==null){
+            takePhoto= (TakePhoto) TakePhotoInvocationHandler.of(this).bind(new TakePhotoImpl(this,this));
+        }
+        return takePhoto;
+    }
+    @Override
+    public void takeSuccess(TResult result) {
+        Log.i(TAG,"takeSuccess：" + result.getImage().getCompressPath());
+    }
+    @Override
+    public void takeFail(TResult result,String msg) {
+        Log.i(TAG, "takeFail:" + msg);
+    }
+    @Override
+    public void takeCancel() {
+        Log.i(TAG, getResources().getString(R.string.msg_operation_canceled));
+    }
+    @Override
+    public PermissionManager.TPermissionType invoke(InvokeParam invokeParam) {
+        PermissionManager.TPermissionType type=PermissionManager.checkPermission(TContextWrap.of(this),invokeParam.getMethod());
+        if(PermissionManager.TPermissionType.WAIT.equals(type)){
+            this.invokeParam=invokeParam;
+        }
+        return type;
+    }
+}
Index: baselib/src/main/java/com/baselib/daynightmodeutils/ChangeModeController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/daynightmodeutils/ChangeModeController.java	(revision )
+++ baselib/src/main/java/com/baselib/daynightmodeutils/ChangeModeController.java	(revision )
@@ -0,0 +1,400 @@
+package com.baselib.daynightmodeutils;
+import android.app.Activity;
+import android.content.Context;
+import android.content.res.Resources;
+import android.util.TypedValue;
+import android.view.View;
+import android.widget.TextView;
+
+//import com.baselibrar.R;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * 夜间模式控制器
+ * Created by liuhuaqian on 2017/9/6.
+
+ */
+
+public class ChangeModeController {
+    /**
+     * 属性背景
+     */
+    private static final String ATTR_BACKGROUND = "dayNightBackgroundAttr";
+    /**
+     * 属性背景图片
+     */
+    private static final String ATTR_BACKGROUND_DRAWABLE = "dayNightBackgroundDrawableAttr";
+    /**
+     * 属性一级字体颜色
+     */
+    private static final String ATTR_TEXTCOLOR = "dayNightOneTextColorAttr";
+    /**
+     * 属性二级字体颜色
+     */
+    private static final String ATTR_TWO_TEXTCOLOR = "dayNightTwoTextColorAttr";
+    /**
+     * 属性三级字体颜色
+     */
+    private static final String ATTR_THREE_TEXTCOLOR = "dayNightThreeTextColorAttr";
+
+    private static List<AttrEntity<View>> mBackGroundViews;
+    private static List<AttrEntity<View>> mBackGroundDrawableViews;
+    private static List<AttrEntity<TextView>> mOneTextColorViews;
+    private static List<AttrEntity<TextView>> mTwoTextColorViews;
+    private static List<AttrEntity<TextView>> mThreeTextColorViews;
+
+    private static ChangeModeController mChangeModeController;
+
+    private ChangeModeController(){}
+    public static ChangeModeController getInstance(){
+        if(mChangeModeController == null){
+            mChangeModeController = new ChangeModeController();
+        }
+        return mChangeModeController;
+    }
+
+    /**
+     * 初始化保存集合
+     */
+    private void init(){
+        mBackGroundViews = new ArrayList<>();
+        mOneTextColorViews = new ArrayList<>();
+        mTwoTextColorViews=new ArrayList<>();
+        mThreeTextColorViews=new ArrayList<>();
+        mBackGroundDrawableViews = new ArrayList<>();
+    }
+
+    /**
+     * 初始化夜间控制器
+     * @param activity 上下文
+     * @return
+     */
+//    public ChangeModeController init(final Activity activity,final Class mClass){
+//        init();
+//        LayoutInflaterCompat.setFactory(LayoutInflater.from(activity), new LayoutInflaterFactory() {
+//            @Override
+//            public View onCreateView(View parent, String name, Context context, AttributeSet attrs) {
+//                View view = null;
+//                try {
+//                    if(name.indexOf('.') == -1){
+//                        if ("View".equals(name)) {
+//                            view = LayoutInflater.from(context).createView(name, "android.view.", attrs);
+//                        }
+//                        if (view == null) {
+//                            view = LayoutInflater.from(context).createView(name, "android.widget.", attrs);
+//                        }
+//                        if (view == null) {
+//                            view = LayoutInflater.from(context).createView(name, "android.webkit.", attrs);
+//                        }
+//
+//                    }else{
+//                        if (view == null){
+//                            view = LayoutInflater.from(context).createView(name, null, attrs);
+//                        }
+//                    }
+//                    if(view != null){
+//                        // Log.e("TAG", "name = " + name);
+//                        for (int i = 0; i < attrs.getAttributeCount(); i++) {
+////                            Log.e("TAG", attrs.getAttributeName(i) + " , " + attrs.getAttributeValue(i));
+//                            if (attrs.getAttributeName(i).equals(ATTR_BACKGROUND)) {
+//                                mBackGroundViews.add(new AttrEntity<View>(view,getAttr(mClass,attrs.getAttributeValue(i))));
+//                            }
+//                            if (attrs.getAttributeName(i).equals(ATTR_TEXTCOLOR)) {
+//                                mOneTextColorViews.add(new AttrEntity<TextView>((TextView)view,getAttr(mClass,attrs.getAttributeValue(i))));
+//                            }
+//                            if (attrs.getAttributeName(i).equals(ATTR_TWO_TEXTCOLOR)) {
+//                                mOneTextColorViews.add(new AttrEntity<TextView>((TextView)view,getAttr(mClass,attrs.getAttributeValue(i))));
+//                            }
+//                            if (attrs.getAttributeName(i).equals(ATTR_THREE_TEXTCOLOR)) {
+//                                mOneTextColorViews.add(new AttrEntity<TextView>((TextView)view,getAttr(mClass,attrs.getAttributeValue(i))));
+//                            }
+//                            if (attrs.getAttributeName(i).equals(ATTR_BACKGROUND_DRAWABLE)) {
+//                                mBackGroundDrawableViews.add(new AttrEntity<View>(view,getAttr(mClass,attrs.getAttributeValue(i))));
+//                            }
+//
+//                        }
+//                    }
+//                }catch (Exception e){
+//                    e.printStackTrace();
+//                }
+//                return view;
+//            }
+//        });
+//        return this;
+//    }
+
+    /**
+     * 反射获取文件id
+     * @param attrName 属性名称
+     * @return  属性id
+     */
+//    public static int getAttr(Class draw,String attrName) {
+//        if (attrName == null || attrName.trim().equals("") || draw == null) {
+//            return R.attr.colorPrimary;
+//        }
+//        try {
+//            Field field = draw.getDeclaredField(attrName);
+//            field.setAccessible(true);
+//            return field.getInt(attrName);
+//        } catch (Exception e) {
+//            return R.attr.colorPrimary;
+//        }
+//    }
+
+    /**
+     * 设置当前主题
+     * @param ctx  上下文
+     * @param Style_Day  白天
+     * @param Style_Night 夜间
+     */
+    public static void setTheme(Context ctx,int Style_Day,int Style_Night){
+//        if(ChangeModeHelper.getChangeMode(ctx) == ChangeModeHelper.MODE_DAY){
+//            ctx.setTheme(Style_Day);
+//        }else if(ChangeModeHelper.getChangeMode(ctx) == ChangeModeHelper.MODE_NIGHT){
+//            ctx.setTheme(Style_Night);
+//        }
+    }
+
+
+    /**
+     * 动态切换主题
+     */
+    public static void toggleThemeSetting(Activity ctx) {
+//        if(ChangeModeHelper.getChangeMode(ctx) == ChangeModeHelper.MODE_DAY){
+//            changeNight(ctx,R.style.NightTheme);
+//        }else if(ChangeModeHelper.getChangeMode(ctx) == ChangeModeHelper.MODE_NIGHT){
+//            changeDay(ctx, R.style.DayTheme);
+//        }
+    }
+
+    /**
+     *
+     * @param ctx 上下文
+     * @param style 切换style
+     */
+    public static void changeNight(Activity ctx,int style) {
+        if(mBackGroundDrawableViews == null || mOneTextColorViews == null || mBackGroundViews == null){
+            throw new RuntimeException("请先调用init()初始化方法!");
+        }
+        ChangeModeHelper.setChangeMode(ctx, ChangeModeHelper.MODE_NIGHT);
+        ctx.setTheme(style);
+//        showAnimation(ctx);
+//        refreshUI(ctx);
+    }
+
+    /**
+     *
+     * @param ctx 上下文
+     * @param style 切换style
+     */
+    public static void changeDay(Activity ctx,int style) {
+        if(mBackGroundDrawableViews == null || mOneTextColorViews == null || mTwoTextColorViews == null ||mThreeTextColorViews == null ||mBackGroundViews == null){
+            throw new RuntimeException("请先调用init()初始化方法!");
+        }
+        ChangeModeHelper.setChangeMode(ctx, ChangeModeHelper.MODE_DAY);
+        ctx.setTheme(style);
+//        showAnimation(ctx);
+//        refreshUI(ctx);
+    }
+
+
+
+    /**
+     * 刷新UI界面
+     * @param ctx  上下文
+     */
+//    private static void refreshUI(Activity ctx) {
+//
+//        TypedValue typedValue = new TypedValue();
+//        Resources.Theme theme = ctx.getTheme();
+//
+//        theme.resolveAttribute(R.attr.colorPrimary, typedValue, true);
+//        View view = ctx.findViewById(R.id.action_bar);
+//        if(view!=null){
+//            view.setBackgroundResource(typedValue.resourceId);
+//        }
+//        for(AttrEntity<View> entity:mBackGroundViews){
+//            theme.resolveAttribute(entity.colorId, typedValue, true);
+//            entity.v.setBackgroundResource(typedValue.resourceId);
+//        }
+//
+//        for(AttrEntity<View> entity:mBackGroundDrawableViews){
+//            theme.resolveAttribute(entity.colorId, typedValue, true);
+//            entity.v.setBackgroundResource(typedValue.resourceId);
+//        }
+//
+//        for (AttrEntity<TextView> entity: mOneTextColorViews){
+//            theme.resolveAttribute(entity.colorId, typedValue, true);
+//            entity.v.setTextColor(ctx.getResources().getColor(typedValue.resourceId));
+//        }
+//        for (AttrEntity<TextView> entity: mOneTextColorViews){
+//            theme.resolveAttribute(entity.colorId, typedValue, true);
+//            entity.v.setTextColor(ctx.getResources().getColor(typedValue.resourceId));
+//        }
+//        //refreshStatusBar(ctx);
+//    }
+
+
+    /**
+     * 获取某个属性的TypedValue
+     * @param ctx 上下文
+     * @param attr  属性id
+     * @return
+     */
+    public static TypedValue getAttrTypedValue(Activity ctx,int attr){
+        TypedValue typedValue = new TypedValue();
+        Resources.Theme theme = ctx.getTheme();
+        theme.resolveAttribute(attr, typedValue, true);
+        return typedValue;
+    }
+
+
+    /**
+     * 刷新 StatusBar
+     * @param ctx  上下文
+     */
+//    private static void refreshStatusBar(Activity ctx) {
+//        if (Build.VERSION.SDK_INT >= 21) {
+//            TypedValue typedValue = new TypedValue();
+//            Resources.Theme theme = ctx.getTheme();
+//            theme.resolveAttribute(R.attr.colorPrimaryDark, typedValue, true);
+//            ctx.getWindow().setStatusBarColor(ctx.getResources().getColor(typedValue.resourceId));
+//        }
+//    }
+    /**
+     * 展示切换动画
+     */
+//    private static void showAnimation(Activity ctx) {
+//        final View decorView = ctx.getWindow().getDecorView();
+//        Bitmap cacheBitmap = getCacheBitmapFromView(decorView);
+//        if (decorView instanceof ViewGroup && cacheBitmap != null) {
+//            final View view = new View(ctx);
+//            view.setBackgroundDrawable(new BitmapDrawable(ctx.getResources(), cacheBitmap));
+//
+//            ViewGroup.LayoutParams layoutParam = new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,
+//                    ViewGroup.LayoutParams.MATCH_PARENT);
+//            ((ViewGroup) decorView).addView(view, layoutParam);
+//
+//            ValueAnimator objectAnimator = ValueAnimator.ofFloat(1f, 0f);//view, "alpha",
+//            objectAnimator.setDuration(500);
+//            objectAnimator.addListener(new AnimatorListenerAdapter() {
+//                @Override
+//                public void onAnimationEnd(Animator animation) {
+//                    super.onAnimationEnd(animation);
+//                    ((ViewGroup) decorView).removeView(view);
+//
+//                }
+//            });
+//            objectAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
+//                @Override
+//                public void onAnimationUpdate(ValueAnimator animation) {
+//                    float alpha = (Float) animation.getAnimatedValue();
+//                    view.setAlpha(alpha);
+//                }
+//            });
+//            objectAnimator.start();
+//        }
+//    }
+    /**
+     * 获取一个 View 的缓存视图
+     *
+     * @param view
+     * @return
+     */
+//    private static Bitmap getCacheBitmapFromView(View view) {
+//        final boolean drawingCacheEnabled = true;
+//        view.setDrawingCacheEnabled(drawingCacheEnabled);
+//        view.buildDrawingCache(drawingCacheEnabled);
+//        final Bitmap drawingCache = view.getDrawingCache();
+//        Bitmap bitmap;
+//        if (drawingCache != null) {
+//            bitmap = Bitmap.createBitmap(drawingCache);
+//            view.setDrawingCacheEnabled(false);
+//        } else {
+//            bitmap = null;
+//        }
+//        return bitmap;
+//    }
+
+    /**
+     * 视图销毁时调用
+     */
+    public static void onDestory(){
+        mBackGroundViews.clear();
+        mOneTextColorViews.clear();
+        mTwoTextColorViews.clear();
+        mThreeTextColorViews.clear();
+        mBackGroundDrawableViews.clear();
+        mBackGroundViews = null;
+        mOneTextColorViews = null;
+        mTwoTextColorViews=null;
+        mThreeTextColorViews=null;
+        mBackGroundDrawableViews = null;
+        mChangeModeController = null;
+    }
+
+    /**
+     * 添加背景颜色属性
+     * @param view
+     * @param colorId
+     * @return
+     */
+    public ChangeModeController addBackgroundColor(View view, int colorId) {
+        mBackGroundViews.add(new AttrEntity(view,colorId));
+        return this;
+    }
+
+    /**
+     *添加背景图片属性
+     * @param view
+     * @param drawableId  属性id
+     * @return
+     */
+    public ChangeModeController addBackgroundDrawable(View view, int drawableId) {
+        mBackGroundDrawableViews.add(new AttrEntity(view,drawableId));
+        return this;
+    }
+
+    /**
+     * 添加一级字体颜色属性
+     * @param view
+     * @param colorId 属性id
+     * @return
+     */
+    public ChangeModeController addTextColor(View view, int colorId) {
+        mOneTextColorViews.add(new AttrEntity<TextView>((TextView) view,colorId));
+        return this;
+    }
+    /**
+     * 添加二级字体颜色属性
+     * @param view
+     * @param colorId 属性id
+     * @return
+     */
+    public ChangeModeController addTwoTextColor(View view, int colorId) {
+        mTwoTextColorViews.add(new AttrEntity<TextView>((TextView) view,colorId));
+        return this;
+    }
+    /**
+     * 添加三级字体颜色属性
+     * @param view
+     * @param colorId 属性id
+     * @return
+     */
+    public ChangeModeController addThreeTextColor(View view, int colorId) {
+        mThreeTextColorViews.add(new AttrEntity<TextView>((TextView) view,colorId));
+        return this;
+    }
+
+    class AttrEntity<T>{
+        T v;//控件
+        int colorId;//属性id
+        public AttrEntity(T v, int colorId) {
+            this.v = v;
+            this.colorId = colorId;
+        }
+    }
+}
+
Index: app/src/main/java/com/b3ad/yuxie/myapplication/retrofit/Contributor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/retrofit/Contributor.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/retrofit/Contributor.java	(revision )
@@ -0,0 +1,187 @@
+package com.b3ad.yuxie.myapplication.retrofit;
+
+/**
+ * Created by Administrator on 2017/7/26.
+ */
+
+public class Contributor {
+    private String login;
+
+    private int id;
+
+    private String avatar_url;
+
+    private String gravatar_id;
+
+    private String url;
+
+    private String html_url;
+
+    private String followers_url;
+
+    private String following_url;
+
+    private String gists_url;
+
+    private String starred_url;
+
+    private String subscriptions_url;
+
+    private String organizations_url;
+
+    private String repos_url;
+
+    private String events_url;
+
+    private String received_events_url;
+
+    private String type;
+
+    private boolean site_admin;
+
+    private int contributions;
+
+    public void setLogin(String login) {
+        this.login = login;
+    }
+
+    public String getLogin() {
+        return this.login;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    public int getId() {
+        return this.id;
+    }
+
+    public void setAvatar_url(String avatar_url) {
+        this.avatar_url = avatar_url;
+    }
+
+    public String getAvatar_url() {
+        return this.avatar_url;
+    }
+
+    public void setGravatar_id(String gravatar_id) {
+        this.gravatar_id = gravatar_id;
+    }
+
+    public String getGravatar_id() {
+        return this.gravatar_id;
+    }
+
+    public void setUrl(String url) {
+        this.url = url;
+    }
+
+    public String getUrl() {
+        return this.url;
+    }
+
+    public void setHtml_url(String html_url) {
+        this.html_url = html_url;
+    }
+
+    public String getHtml_url() {
+        return this.html_url;
+    }
+
+    public void setFollowers_url(String followers_url) {
+        this.followers_url = followers_url;
+    }
+
+    public String getFollowers_url() {
+        return this.followers_url;
+    }
+
+    public void setFollowing_url(String following_url) {
+        this.following_url = following_url;
+    }
+
+    public String getFollowing_url() {
+        return this.following_url;
+    }
+
+    public void setGists_url(String gists_url) {
+        this.gists_url = gists_url;
+    }
+
+    public String getGists_url() {
+        return this.gists_url;
+    }
+
+    public void setStarred_url(String starred_url) {
+        this.starred_url = starred_url;
+    }
+
+    public String getStarred_url() {
+        return this.starred_url;
+    }
+
+    public void setSubscriptions_url(String subscriptions_url) {
+        this.subscriptions_url = subscriptions_url;
+    }
+
+    public String getSubscriptions_url() {
+        return this.subscriptions_url;
+    }
+
+    public void setOrganizations_url(String organizations_url) {
+        this.organizations_url = organizations_url;
+    }
+
+    public String getOrganizations_url() {
+        return this.organizations_url;
+    }
+
+    public void setRepos_url(String repos_url) {
+        this.repos_url = repos_url;
+    }
+
+    public String getRepos_url() {
+        return this.repos_url;
+    }
+
+    public void setEvents_url(String events_url) {
+        this.events_url = events_url;
+    }
+
+    public String getEvents_url() {
+        return this.events_url;
+    }
+
+    public void setReceived_events_url(String received_events_url) {
+        this.received_events_url = received_events_url;
+    }
+
+    public String getReceived_events_url() {
+        return this.received_events_url;
+    }
+
+    public void setType(String type) {
+        this.type = type;
+    }
+
+    public String getType() {
+        return this.type;
+    }
+
+    public void setSite_admin(boolean site_admin) {
+        this.site_admin = site_admin;
+    }
+
+    public boolean getSite_admin() {
+        return this.site_admin;
+    }
+
+    public void setContributions(int contributions) {
+        this.contributions = contributions;
+    }
+
+    public int getContributions() {
+        return this.contributions;
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/permission/TakePhotoInvocationHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/permission/TakePhotoInvocationHandler.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/permission/TakePhotoInvocationHandler.java	(revision )
@@ -0,0 +1,41 @@
+package com.baselib.takephoto.permission;
+
+import com.baselib.takephoto.app.TakePhoto;
+import com.baselib.takephoto.model.InvokeParam;
+
+import java.lang.reflect.InvocationHandler;
+import java.lang.reflect.Method;
+import java.lang.reflect.Proxy;
+
+public class TakePhotoInvocationHandler implements InvocationHandler{
+    private TakePhoto delegate;
+    private InvokeListener listener;
+    public static TakePhotoInvocationHandler of(InvokeListener listener){
+        return new TakePhotoInvocationHandler(listener);
+    }
+
+    private TakePhotoInvocationHandler(InvokeListener listener) {
+        this.listener=listener;
+    }
+
+    /**
+     * 绑定委托对象并返回一个代理类
+     * @param delegate
+     * @return
+     */
+    public Object bind(TakePhoto delegate) {
+        this.delegate = delegate;
+        return Proxy.newProxyInstance(delegate.getClass().getClassLoader(), delegate.getClass().getInterfaces(), this);
+    }
+    @Override
+    public Object invoke(Object proxy, Method method, Object[] args)
+            throws Throwable {
+        PermissionManager.TPermissionType type=listener.invoke(new InvokeParam(proxy,method,args));
+        if(proxy instanceof TakePhoto){
+            if(!PermissionManager.TPermissionType.NOT_NEED.equals(type)){
+                ((TakePhoto)proxy).permissionNotify(type);
+            }
+        }
+        return method.invoke(delegate, args);
+    }
+}
\ No newline at end of file
Index: baselib/src/main/res/layout/pop_bottom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/layout/pop_bottom.xml	(revision )
+++ baselib/src/main/res/layout/pop_bottom.xml	(revision )
@@ -0,0 +1,59 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+              android:orientation="vertical" android:layout_width="match_parent"
+              android:layout_height="match_parent">
+    <FrameLayout
+        android:id="@+id/share_layout_id"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+        <LinearLayout
+            android:background="#353535"
+            android:alpha="0.2"
+            android:layout_width="match_parent"
+            android:orientation="vertical"
+            android:layout_height="match_parent"></LinearLayout>
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_gravity="bottom"
+            android:background="#353535"
+            android:orientation="vertical"
+            android:layout_height="wrap_content">
+          <RelativeLayout android:layout_width="match_parent"
+                          android:layout_height="92px">
+              <TextView
+                  android:id="@+id/cancel"
+                  android:layout_marginLeft="30px"
+                  android:layout_width="100px"
+                  android:text="取消"
+                  android:textSize="16sp"
+                  android:textColor="@color/code_text"
+                  android:gravity="center"
+                  android:layout_height="match_parent"/>
+              <TextView
+                  android:id="@+id/determine"
+                  android:layout_marginRight="30px"
+                  android:layout_width="100px"
+                  android:layout_alignParentRight="true"
+                  android:text="确定"
+                  android:textSize="16sp"
+                  android:textColor="@color/code_text"
+                  android:gravity="center"
+                  android:layout_height="match_parent"/>
+          </RelativeLayout>
+            <com.wx.wheelview.widget.WheelView
+                android:id="@+id/wheelview"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:background="#353535"
+                android:layout_weight="1"/>
+        </LinearLayout>
+        <LinearLayout
+            android:id="@+id/add_task_layout"
+            android:background="@color/navigation_bar_bg"
+            android:alpha="0.2"
+            android:layout_width="match_parent"
+            android:orientation="vertical"
+            android:layout_height="match_parent"></LinearLayout>
+    </FrameLayout>
+</LinearLayout>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/adpater/BaseFragementPagerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/adpater/BaseFragementPagerAdapter.java	(revision )
+++ baselib/src/main/java/com/baselib/adpater/BaseFragementPagerAdapter.java	(revision )
@@ -0,0 +1,39 @@
+package com.baselib.adpater;
+
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentPagerAdapter;
+
+import java.util.ArrayList;
+
+/**
+ * Created by luo on 2018/2/25.
+ * FragementPager 基类adapter,配合tabLayout使用
+ */
+
+public class BaseFragementPagerAdapter extends FragmentPagerAdapter {
+
+    ArrayList<Fragment> mFragments;
+    String[] mTitles;
+
+    public BaseFragementPagerAdapter(FragmentManager fm, ArrayList<Fragment> fragments, String[] titles) {
+        super(fm);
+        mFragments = fragments;
+        mTitles = titles;
+    }
+
+    @Override
+    public Fragment getItem(int position) {
+        return mFragments.get(position);
+    }
+
+    @Override
+    public CharSequence getPageTitle(int position) {
+        return mTitles[position];
+    }
+
+    @Override
+    public int getCount() {
+        return mFragments.size();
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/constant/MemoryConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/constant/MemoryConstants.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/constant/MemoryConstants.java	(revision )
@@ -0,0 +1,39 @@
+package com.baselib.utilcode.constant;
+
+import android.support.annotation.IntDef;
+
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2017/03/13
+ *     desc  : 存储相关常量
+ * </pre>
+ */
+public final class MemoryConstants {
+
+    /**
+     * Byte与Byte的倍数
+     */
+    public static final int BYTE = 1;
+    /**
+     * KB与Byte的倍数
+     */
+    public static final int KB   = 1024;
+    /**
+     * MB与Byte的倍数
+     */
+    public static final int MB   = 1048576;
+    /**
+     * GB与Byte的倍数
+     */
+    public static final int GB   = 1073741824;
+
+    @IntDef({BYTE, KB, MB, GB})
+    @Retention(RetentionPolicy.SOURCE)
+    public @interface Unit {
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/LoadingLeftView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/LoadingLeftView.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/LoadingLeftView.java	(revision )
@@ -0,0 +1,97 @@
+package com.baselib.ui.widget;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.util.AttributeSet;
+import android.view.View;
+
+import com.baselib.R;
+
+/**
+ * 作者: liuhuaqian on 2017/10/7.
+ */
+
+public class LoadingLeftView extends View {
+    private Bitmap bitmap;
+    private Paint paint1;
+    private Paint paint2;
+    private Paint paint3;
+    private Canvas canvas;
+    private  int h;
+    public LoadingLeftView(Context context) {
+        this(context, null);
+    }
+
+    public LoadingLeftView(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public LoadingLeftView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        paint1 = new Paint();
+        // 设置paint为无锯齿
+        paint1.setAntiAlias(true);
+        paint1.setColor(Color.rgb(248, 110, 12));
+        paint2 = new Paint();
+        paint2.setAntiAlias(true);
+        paint2.setColor(Color.BLACK);
+        paint3 = new Paint();
+        paint3.setColor(Color.WHITE);
+        Bitmap bitmap1 = BitmapFactory.decodeResource(context.getResources(), R.drawable.history_foot_left_empty);
+        bitmap = bitmap1.extractAlpha();// 获取一个透明图片
+        h = bitmap.getHeight();//初始化y轴坐标
+    }
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
+    {
+        int widthMode = MeasureSpec.getMode(widthMeasureSpec);
+        int widthSize = MeasureSpec.getSize(widthMeasureSpec);
+        int heightMode = MeasureSpec.getMode(heightMeasureSpec);
+        int heightSize = MeasureSpec.getSize(heightMeasureSpec);
+        int width;
+        int height ;
+        if (widthMode == MeasureSpec.EXACTLY)
+        {
+            width = widthSize;
+        } else
+        {
+            float textWidth = bitmap.getWidth();
+            int desired = (int) (getPaddingLeft() + textWidth + getPaddingRight());
+            width = desired;
+        }
+
+        if (heightMode == MeasureSpec.EXACTLY)
+        {
+            height = heightSize;
+        } else
+        {
+            float textHeight = bitmap.getHeight();
+            int desired = (int) (getPaddingTop() + textHeight + getPaddingBottom());
+            height = desired;
+        }
+        setMeasuredDimension(width, height);
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas)
+    {
+        this.canvas = canvas;
+        canvas.drawColor(Color.WHITE); // 画布颜色
+        canvas.drawBitmap(bitmap, 0, 0, paint2); //画一个灰的图片
+        canvas.save();
+        //按y来裁剪区域
+        canvas.clipRect(0, h +0, bitmap.getWidth()+0,
+                bitmap.getHeight()+0);
+        canvas.drawBitmap(bitmap, 0, 0, paint1);
+        canvas.restore();
+    }
+    public void updateView(int i){
+        h =i;
+        postInvalidate();
+
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/Login/presenter/LoginPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/Login/presenter/LoginPresenter.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/Login/presenter/LoginPresenter.java	(revision )
@@ -0,0 +1,46 @@
+package com.b3ad.yuxie.myapplication.Login.presenter;
+
+import com.b3ad.yuxie.myapplication.Login.contract.LoginContract;
+import com.b3ad.yuxie.myapplication.Login.model.LoginModel;
+import com.b3ad.yuxie.myapplication.Login.view.LoginActivity;
+
+/**
+ * Created by Administrator on 2017/7/25.
+ */
+
+public class LoginPresenter implements LoginContract.Presenter {
+
+    LoginActivity mLoginActivity;
+    LoginModel mLoginModel;
+
+    public LoginPresenter(LoginActivity loginActivity) {
+        this.mLoginActivity = loginActivity;
+        mLoginModel = new LoginModel();
+    }
+
+    /**
+     * 在这定义一个登陆的方法
+     */
+    public void login() {
+        //将view中的参数获取出来。
+        String name = mLoginActivity.getName();
+        String psw = mLoginActivity.getPassWord();
+        /**
+         * 调用一下业务处理model层的登陆方法
+         * 参数一：账号
+         * 参数二：密码
+         * 参数三：登陆状态监听器
+         */
+        mLoginModel.login(name, psw, this);
+    }
+
+    @Override
+    public void onSuccess() {
+        mLoginActivity.onSuccess();
+    }
+
+    @Override
+    public void onfail(String msg) {
+        mLoginActivity.showToast(msg);
+    }
+}
Index: baselib/src/main/java/com/baselib/basebean/BaseListRespose.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/basebean/BaseListRespose.java	(revision )
+++ baselib/src/main/java/com/baselib/basebean/BaseListRespose.java	(revision )
@@ -0,0 +1,97 @@
+package com.baselib.basebean;
+
+import java.io.Serializable;
+import java.util.List;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 封装服务器返回数据 多个对象
+ */
+
+public class BaseListRespose<T> implements Serializable {
+    //    字段说明：
+//    code：返回状态码。999999:错误，000000：正常返回
+//    errorMsg： 错误处理结果消息。
+//    data：扩展数据
+//    total：返回记录条目
+//    rows：返回列表数据，JSON数组
+
+    /**
+     * 返回状态码
+     */
+    private String code;
+    /**
+     * errorMsg
+     */
+    private String errorMsg;
+    /**
+     * 返回记录条目
+     */
+    private String total;
+    /**
+     * 扩展数据
+     */
+    private String data;
+    /**
+     * 返回列表数据，JSON数组
+     */
+    private List<T> rows;
+
+    @Override
+    public String toString() {
+        return "BaseRespose{" +
+                "code='" + code + '\'' +
+                ", errorMsg='" + errorMsg + '\'' +
+                ", total='" + total + '\'' +
+                ", data='" + data + '\'' +
+                ", rows=" + rows +
+                '}';
+    }
+
+    public String getCode() {
+        return code;
+    }
+
+    public void setCode(String code) {
+        this.code = code;
+    }
+
+    public String getErrorMsg() {
+        return errorMsg;
+    }
+
+    public void setErrorMsg(String errorMsg) {
+        this.errorMsg = errorMsg;
+    }
+
+    public String getTotal() {
+        return total;
+    }
+
+    public void setTotal(String total) {
+        this.total = total;
+    }
+
+    public String getData() {
+        return data;
+    }
+
+    public void setData(String data) {
+        this.data = data;
+    }
+
+
+    public List<T> getRows() {
+        return rows;
+    }
+
+    public void setRows(List<T> rows) {
+        this.rows = rows;
+    }
+
+    public boolean success() {
+        return "000000".equals(code);
+    }
+
+
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/SPUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/SPUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/SPUtils.java	(revision )
@@ -0,0 +1,411 @@
+package com.baselib.utilcode.util;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.content.SharedPreferences;
+import android.support.annotation.NonNull;
+import android.support.v4.util.SimpleArrayMap;
+
+import java.util.Collections;
+import java.util.Map;
+import java.util.Set;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/02
+ *     desc  : SP相关工具类
+ * </pre>
+ */
+@SuppressLint("ApplySharedPref")
+public final class SPUtils {
+
+    private static SimpleArrayMap<String, SPUtils> SP_UTILS_MAP = new SimpleArrayMap<>();
+    private SharedPreferences sp;
+
+    /**
+     * 获取SP实例
+     *
+     * @return {@link SPUtils}
+     */
+    public static SPUtils getInstance() {
+        return getInstance("");
+    }
+
+    /**
+     * 获取SP实例
+     *
+     * @param spName sp名
+     * @return {@link SPUtils}
+     */
+    public static SPUtils getInstance(String spName) {
+        if (isSpace(spName)) spName = "spUtils";
+        SPUtils spUtils = SP_UTILS_MAP.get(spName);
+        if (spUtils == null) {
+            spUtils = new SPUtils(spName);
+            SP_UTILS_MAP.put(spName, spUtils);
+        }
+        return spUtils;
+    }
+
+    private SPUtils(final String spName) {
+        sp = Utils.getApp().getSharedPreferences(spName, Context.MODE_PRIVATE);
+    }
+
+    /**
+     * SP中写入String
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, @NonNull final String value) {
+        put(key, value, false);
+    }
+
+    /**
+     * SP中写入String
+     *
+     * @param key      键
+     * @param value    值
+     * @param isCommit {@code true}: {@link SharedPreferences.Editor#commit()}<br>
+     *                 {@code false}: {@link SharedPreferences.Editor#apply()}
+     */
+    public void put(@NonNull final String key, @NonNull final String value, final boolean isCommit) {
+        if (isCommit) {
+            sp.edit().putString(key, value).commit();
+        } else {
+            sp.edit().putString(key, value).apply();
+        }
+    }
+
+    /**
+     * SP中读取String
+     *
+     * @param key 键
+     * @return 存在返回对应值，不存在返回默认值{@code ""}
+     */
+    public String getString(@NonNull final String key) {
+        return getString(key, "");
+    }
+
+    /**
+     * SP中读取String
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在返回对应值，不存在返回默认值{@code defaultValue}
+     */
+    public String getString(@NonNull final String key, @NonNull final String defaultValue) {
+        return sp.getString(key, defaultValue);
+    }
+
+    /**
+     * SP中写入int
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, final int value) {
+        put(key, value, false);
+    }
+
+    /**
+     * SP中写入int
+     *
+     * @param key      键
+     * @param value    值
+     * @param isCommit {@code true}: {@link SharedPreferences.Editor#commit()}<br>
+     *                 {@code false}: {@link SharedPreferences.Editor#apply()}
+     */
+    public void put(@NonNull final String key, final int value, final boolean isCommit) {
+        if (isCommit) {
+            sp.edit().putInt(key, value).commit();
+        } else {
+            sp.edit().putInt(key, value).apply();
+        }
+    }
+
+    /**
+     * SP中读取int
+     *
+     * @param key 键
+     * @return 存在返回对应值，不存在返回默认值-1
+     */
+    public int getInt(@NonNull final String key) {
+        return getInt(key, -1);
+    }
+
+    /**
+     * SP中读取int
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在返回对应值，不存在返回默认值{@code defaultValue}
+     */
+    public int getInt(@NonNull final String key, final int defaultValue) {
+        return sp.getInt(key, defaultValue);
+    }
+
+    /**
+     * SP中写入long
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, final long value) {
+        put(key, value, false);
+    }
+
+    /**
+     * SP中写入long
+     *
+     * @param key      键
+     * @param value    值
+     * @param isCommit {@code true}: {@link SharedPreferences.Editor#commit()}<br>
+     *                 {@code false}: {@link SharedPreferences.Editor#apply()}
+     */
+    public void put(@NonNull final String key, final long value, final boolean isCommit) {
+        if (isCommit) {
+            sp.edit().putLong(key, value).commit();
+        } else {
+            sp.edit().putLong(key, value).apply();
+        }
+    }
+
+    /**
+     * SP中读取long
+     *
+     * @param key 键
+     * @return 存在返回对应值，不存在返回默认值-1
+     */
+    public long getLong(@NonNull final String key) {
+        return getLong(key, -1L);
+    }
+
+    /**
+     * SP中读取long
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在返回对应值，不存在返回默认值{@code defaultValue}
+     */
+    public long getLong(@NonNull final String key, final long defaultValue) {
+        return sp.getLong(key, defaultValue);
+    }
+
+    /**
+     * SP中写入float
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, final float value) {
+        put(key, value, false);
+    }
+
+    /**
+     * SP中写入float
+     *
+     * @param key      键
+     * @param value    值
+     * @param isCommit {@code true}: {@link SharedPreferences.Editor#commit()}<br>
+     *                 {@code false}: {@link SharedPreferences.Editor#apply()}
+     */
+    public void put(@NonNull final String key, final float value, final boolean isCommit) {
+        if (isCommit) {
+            sp.edit().putFloat(key, value).commit();
+        } else {
+            sp.edit().putFloat(key, value).apply();
+        }
+    }
+
+    /**
+     * SP中读取float
+     *
+     * @param key 键
+     * @return 存在返回对应值，不存在返回默认值-1
+     */
+    public float getFloat(@NonNull final String key) {
+        return getFloat(key, -1f);
+    }
+
+    /**
+     * SP中读取float
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在返回对应值，不存在返回默认值{@code defaultValue}
+     */
+    public float getFloat(@NonNull final String key, final float defaultValue) {
+        return sp.getFloat(key, defaultValue);
+    }
+
+    /**
+     * SP中写入boolean
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, final boolean value) {
+        put(key, value, false);
+    }
+
+    /**
+     * SP中写入boolean
+     *
+     * @param key      键
+     * @param value    值
+     * @param isCommit {@code true}: {@link SharedPreferences.Editor#commit()}<br>
+     *                 {@code false}: {@link SharedPreferences.Editor#apply()}
+     */
+    public void put(@NonNull final String key, final boolean value, final boolean isCommit) {
+        if (isCommit) {
+            sp.edit().putBoolean(key, value).commit();
+        } else {
+            sp.edit().putBoolean(key, value).apply();
+        }
+    }
+
+    /**
+     * SP中读取boolean
+     *
+     * @param key 键
+     * @return 存在返回对应值，不存在返回默认值{@code false}
+     */
+    public boolean getBoolean(@NonNull final String key) {
+        return getBoolean(key, false);
+    }
+
+    /**
+     * SP中读取boolean
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在返回对应值，不存在返回默认值{@code defaultValue}
+     */
+    public boolean getBoolean(@NonNull final String key, final boolean defaultValue) {
+        return sp.getBoolean(key, defaultValue);
+    }
+
+    /**
+     * SP中写入String集合
+     *
+     * @param key    键
+     * @param values 值
+     */
+    public void put(@NonNull final String key, @NonNull final Set<String> values) {
+        put(key, values, false);
+    }
+
+    /**
+     * SP中写入String集合
+     *
+     * @param key      键
+     * @param values   值
+     * @param isCommit {@code true}: {@link SharedPreferences.Editor#commit()}<br>
+     *                 {@code false}: {@link SharedPreferences.Editor#apply()}
+     */
+    public void put(@NonNull final String key, @NonNull final Set<String> values, final boolean isCommit) {
+        if (isCommit) {
+            sp.edit().putStringSet(key, values).commit();
+        } else {
+            sp.edit().putStringSet(key, values).apply();
+        }
+    }
+
+    /**
+     * SP中读取StringSet
+     *
+     * @param key 键
+     * @return 存在返回对应值，不存在返回默认值{@code Collections.<String>emptySet()}
+     */
+    public Set<String> getStringSet(@NonNull final String key) {
+        return getStringSet(key, Collections.<String>emptySet());
+    }
+
+    /**
+     * SP中读取StringSet
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在返回对应值，不存在返回默认值{@code defaultValue}
+     */
+    public Set<String> getStringSet(@NonNull final String key, @NonNull final Set<String> defaultValue) {
+        return sp.getStringSet(key, defaultValue);
+    }
+
+    /**
+     * SP中获取所有键值对
+     *
+     * @return Map对象
+     */
+    public Map<String, ?> getAll() {
+        return sp.getAll();
+    }
+
+    /**
+     * SP中是否存在该key
+     *
+     * @param key 键
+     * @return {@code true}: 存在<br>{@code false}: 不存在
+     */
+    public boolean contains(@NonNull final String key) {
+        return sp.contains(key);
+    }
+
+    /**
+     * SP中移除该key
+     *
+     * @param key 键
+     */
+    public void remove(@NonNull final String key) {
+        remove(key, false);
+    }
+
+    /**
+     * SP中移除该key
+     *
+     * @param key      键
+     * @param isCommit {@code true}: {@link SharedPreferences.Editor#commit()}<br>
+     *                 {@code false}: {@link SharedPreferences.Editor#apply()}
+     */
+    public void remove(@NonNull final String key, final boolean isCommit) {
+        if (isCommit) {
+            sp.edit().remove(key).commit();
+        } else {
+            sp.edit().remove(key).apply();
+        }
+    }
+
+    /**
+     * SP中清除所有数据
+     */
+    public void clear() {
+        clear(false);
+    }
+
+    /**
+     * SP中清除所有数据
+     *
+     * @param isCommit {@code true}: {@link SharedPreferences.Editor#commit()}<br>
+     *                 {@code false}: {@link SharedPreferences.Editor#apply()}
+     */
+    public void clear(final boolean isCommit) {
+        if (isCommit) {
+            sp.edit().clear().commit();
+        } else {
+            sp.edit().clear().apply();
+        }
+    }
+
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+}
Index: baselib/src/main/res/layout/toast_message.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/layout/toast_message.xml	(revision )
+++ baselib/src/main/res/layout/toast_message.xml	(revision )
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/rl_toast_message"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:layout_marginLeft="50dp"
+    android:layout_marginRight="50dp">
+
+    <TextView
+        android:id="@+id/tv_toast_message"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:background="@drawable/toast_message_refunds_bg"
+        android:gravity="center"
+        android:paddingBottom="5dp"
+        android:paddingTop="5dp"
+        android:textColor="@color/white"
+        android:textSize="14sp" />
+
+</RelativeLayout>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/utilcode/util/AppUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/AppUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/AppUtils.java	(revision )
@@ -0,0 +1,718 @@
+package com.baselib.utilcode.util;
+
+import android.annotation.SuppressLint;
+import android.app.Activity;
+import android.app.ActivityManager;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.ResolveInfo;
+import android.content.pm.Signature;
+import android.graphics.drawable.Drawable;
+import android.util.Log;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/02
+ *     desc  : App相关工具类
+ * </pre>
+ */
+public final class AppUtils {
+
+    private AppUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 判断App是否安装
+     *
+     * @param action   action
+     * @param category category
+     * @return {@code true}: 已安装<br>{@code false}: 未安装
+     */
+    public static boolean isInstallApp(final String action, final String category) {
+        Intent intent = new Intent(action);
+        intent.addCategory(category);
+        PackageManager pm = Utils.getApp().getPackageManager();
+        ResolveInfo info = pm.resolveActivity(intent, 0);
+        return info != null;
+    }
+
+    /**
+     * 判断App是否安装
+     *
+     * @param packageName 包名
+     * @return {@code true}: 已安装<br>{@code false}: 未安装
+     */
+    public static boolean isInstallApp(final String packageName) {
+        return !isSpace(packageName) && IntentUtils.getLaunchAppIntent(packageName) != null;
+    }
+
+    /**
+     * 安装App(支持7.0)
+     *
+     * @param filePath  文件路径
+     * @param authority 7.0及以上安装需要传入清单文件中的{@code <provider>}的authorities属性
+     *                  <br>参看https://developer.android.com/reference/android/support/v4/content/FileProvider.html
+     */
+    public static void installApp(final String filePath, final String authority) {
+        installApp(FileUtils.getFileByPath(filePath), authority);
+    }
+
+    /**
+     * 安装App（支持7.0）
+     *
+     * @param file      文件
+     * @param authority 7.0及以上安装需要传入清单文件中的{@code <provider>}的authorities属性
+     *                  <br>参看https://developer.android.com/reference/android/support/v4/content/FileProvider.html
+     */
+    public static void installApp(final File file, final String authority) {
+        if (!FileUtils.isFileExists(file)) return;
+        Utils.getApp().startActivity(IntentUtils.getInstallAppIntent(file, authority));
+    }
+
+    /**
+     * 安装App（支持6.0）
+     *
+     * @param activity    activity
+     * @param filePath    文件路径
+     * @param authority   7.0及以上安装需要传入清单文件中的{@code <provider>}的authorities属性
+     *                    <br>参看https://developer.android.com/reference/android/support/v4/content/FileProvider.html
+     * @param requestCode 请求值
+     */
+    public static void installApp(final Activity activity, final String filePath, final String authority, final int requestCode) {
+        installApp(activity, FileUtils.getFileByPath(filePath), authority, requestCode);
+    }
+
+    /**
+     * 安装App(支持6.0)
+     *
+     * @param activity    activity
+     * @param file        文件
+     * @param authority   7.0及以上安装需要传入清单文件中的{@code <provider>}的authorities属性
+     *                    <br>参看https://developer.android.com/reference/android/support/v4/content/FileProvider.html
+     * @param requestCode 请求值
+     */
+    public static void installApp(final Activity activity, final File file, final String authority, final int requestCode) {
+        if (!FileUtils.isFileExists(file)) return;
+        activity.startActivityForResult(IntentUtils.getInstallAppIntent(file, authority), requestCode);
+    }
+
+    /**
+     * 静默安装App
+     * <p>非root需添加权限 {@code <uses-permission android:name="android.permission.INSTALL_PACKAGES" />}</p>
+     *
+     * @param filePath 文件路径
+     * @return {@code true}: 安装成功<br>{@code false}: 安装失败
+     */
+    public static boolean installAppSilent(final String filePath) {
+        File file = FileUtils.getFileByPath(filePath);
+        if (!FileUtils.isFileExists(file)) return false;
+        String command = "LD_LIBRARY_PATH=/vendor/lib:/system/lib pm install " + filePath;
+        ShellUtils.CommandResult commandResult = ShellUtils.execCmd(command, !isSystemApp(), true);
+        return commandResult.successMsg != null && commandResult.successMsg.toLowerCase().contains("success");
+    }
+
+    /**
+     * 卸载App
+     *
+     * @param packageName 包名
+     */
+    public static void uninstallApp(final String packageName) {
+        if (isSpace(packageName)) return;
+        Utils.getApp().startActivity(IntentUtils.getUninstallAppIntent(packageName));
+    }
+
+    /**
+     * 卸载App
+     *
+     * @param activity    activity
+     * @param packageName 包名
+     * @param requestCode 请求值
+     */
+    public static void uninstallApp(final Activity activity, final String packageName, final int requestCode) {
+        if (isSpace(packageName)) return;
+        activity.startActivityForResult(IntentUtils.getUninstallAppIntent(packageName), requestCode);
+    }
+
+    /**
+     * 静默卸载App
+     * <p>非root需添加权限 {@code <uses-permission android:name="android.permission.DELETE_PACKAGES" />}</p>
+     *
+     * @param packageName 包名
+     * @param isKeepData  是否保留数据
+     * @return {@code true}: 卸载成功<br>{@code false}: 卸载失败
+     */
+    public static boolean uninstallAppSilent(final String packageName, final boolean isKeepData) {
+        if (isSpace(packageName)) return false;
+        String command = "LD_LIBRARY_PATH=/vendor/lib:/system/lib pm uninstall " + (isKeepData ? "-k " : "") + packageName;
+        ShellUtils.CommandResult commandResult = ShellUtils.execCmd(command, !isSystemApp(), true);
+        return commandResult.successMsg != null && commandResult.successMsg.toLowerCase().contains("success");
+    }
+
+
+    /**
+     * 判断App是否有root权限
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isAppRoot() {
+        ShellUtils.CommandResult result = ShellUtils.execCmd("echo root", true);
+        if (result.result == 0) {
+            return true;
+        }
+        if (result.errorMsg != null) {
+            Log.d("AppUtils", "isAppRoot() called" + result.errorMsg);
+        }
+        return false;
+    }
+
+    /**
+     * 打开App
+     *
+     * @param packageName 包名
+     */
+    public static void launchApp(final String packageName) {
+        if (isSpace(packageName)) return;
+        Utils.getApp().startActivity(IntentUtils.getLaunchAppIntent(packageName));
+    }
+
+    /**
+     * 打开App
+     *
+     * @param activity    activity
+     * @param packageName 包名
+     * @param requestCode 请求值
+     */
+    public static void launchApp(final Activity activity, final String packageName, final int requestCode) {
+        if (isSpace(packageName)) return;
+        activity.startActivityForResult(IntentUtils.getLaunchAppIntent(packageName), requestCode);
+    }
+
+    /**
+     * 关闭App
+     */
+    public static void exitApp() {
+        List<Activity> activityList = Utils.sActivityList;
+        for (int i = activityList.size() - 1; i >= 0; --i) {
+            activityList.get(i).finish();
+            activityList.remove(i);
+        }
+        System.exit(0);
+    }
+
+    /**
+     * 获取App包名
+     *
+     * @return App包名
+     */
+    public static String getAppPackageName() {
+        return Utils.getApp().getPackageName();
+    }
+
+    /**
+     * 获取App具体设置
+     */
+    public static void getAppDetailsSettings() {
+        getAppDetailsSettings(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 获取App具体设置
+     *
+     * @param packageName 包名
+     */
+    public static void getAppDetailsSettings(final String packageName) {
+        if (isSpace(packageName)) return;
+        Utils.getApp().startActivity(IntentUtils.getAppDetailsSettingsIntent(packageName));
+    }
+
+    /**
+     * 获取App名称
+     *
+     * @return App名称
+     */
+    public static String getAppName() {
+        return getAppName(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 获取App名称
+     *
+     * @param packageName 包名
+     * @return App名称
+     */
+    public static String getAppName(final String packageName) {
+        if (isSpace(packageName)) return null;
+        try {
+            PackageManager pm = Utils.getApp().getPackageManager();
+            PackageInfo pi = pm.getPackageInfo(packageName, 0);
+            return pi == null ? null : pi.applicationInfo.loadLabel(pm).toString();
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * 获取App图标
+     *
+     * @return App图标
+     */
+    public static Drawable getAppIcon() {
+        return getAppIcon(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 获取App图标
+     *
+     * @param packageName 包名
+     * @return App图标
+     */
+    public static Drawable getAppIcon(final String packageName) {
+        if (isSpace(packageName)) return null;
+        try {
+            PackageManager pm = Utils.getApp().getPackageManager();
+            PackageInfo pi = pm.getPackageInfo(packageName, 0);
+            return pi == null ? null : pi.applicationInfo.loadIcon(pm);
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * 获取App路径
+     *
+     * @return App路径
+     */
+    public static String getAppPath() {
+        return getAppPath(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 获取App路径
+     *
+     * @param packageName 包名
+     * @return App路径
+     */
+    public static String getAppPath(final String packageName) {
+        if (isSpace(packageName)) return null;
+        try {
+            PackageManager pm = Utils.getApp().getPackageManager();
+            PackageInfo pi = pm.getPackageInfo(packageName, 0);
+            return pi == null ? null : pi.applicationInfo.sourceDir;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * 获取App版本号
+     *
+     * @return App版本号
+     */
+    public static String getAppVersionName() {
+        return getAppVersionName(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 获取App版本号
+     *
+     * @param packageName 包名
+     * @return App版本号
+     */
+    public static String getAppVersionName(final String packageName) {
+        if (isSpace(packageName)) return null;
+        try {
+            PackageManager pm = Utils.getApp().getPackageManager();
+            PackageInfo pi = pm.getPackageInfo(packageName, 0);
+            return pi == null ? null : pi.versionName;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * 获取App版本码
+     *
+     * @return App版本码
+     */
+    public static int getAppVersionCode() {
+        return getAppVersionCode(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 获取App版本码
+     *
+     * @param packageName 包名
+     * @return App版本码
+     */
+    public static int getAppVersionCode(final String packageName) {
+        if (isSpace(packageName)) return -1;
+        try {
+            PackageManager pm = Utils.getApp().getPackageManager();
+            PackageInfo pi = pm.getPackageInfo(packageName, 0);
+            return pi == null ? -1 : pi.versionCode;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+            return -1;
+        }
+    }
+
+    /**
+     * 判断App是否是系统应用
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isSystemApp() {
+        return isSystemApp(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 判断App是否是系统应用
+     *
+     * @param packageName 包名
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isSystemApp(final String packageName) {
+        if (isSpace(packageName)) return false;
+        try {
+            PackageManager pm = Utils.getApp().getPackageManager();
+            ApplicationInfo ai = pm.getApplicationInfo(packageName, 0);
+            return ai != null && (ai.flags & ApplicationInfo.FLAG_SYSTEM) != 0;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    /**
+     * 判断App是否是Debug版本
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isAppDebug() {
+        return isAppDebug(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 判断App是否是Debug版本
+     *
+     * @param packageName 包名
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isAppDebug(final String packageName) {
+        if (isSpace(packageName)) return false;
+        try {
+            PackageManager pm = Utils.getApp().getPackageManager();
+            ApplicationInfo ai = pm.getApplicationInfo(packageName, 0);
+            return ai != null && (ai.flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    /**
+     * 获取App签名
+     *
+     * @return App签名
+     */
+    public static Signature[] getAppSignature() {
+        return getAppSignature(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 获取App签名
+     *
+     * @param packageName 包名
+     * @return App签名
+     */
+    public static Signature[] getAppSignature(final String packageName) {
+        if (isSpace(packageName)) return null;
+        try {
+            PackageManager pm = Utils.getApp().getPackageManager();
+            @SuppressLint("PackageManagerGetSignatures")
+            PackageInfo pi = pm.getPackageInfo(packageName, PackageManager.GET_SIGNATURES);
+            return pi == null ? null : pi.signatures;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * 获取应用签名的的SHA1值
+     * <p>可据此判断高德，百度地图key是否正确</p>
+     *
+     * @return 应用签名的SHA1字符串, 比如：53:FD:54:DC:19:0F:11:AC:B5:22:9E:F1:1A:68:88:1B:8B:E8:54:42
+     */
+    public static String getAppSignatureSHA1() {
+        return getAppSignatureSHA1(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 获取应用签名的的SHA1值
+     * <p>可据此判断高德，百度地图key是否正确</p>
+     *
+     * @param packageName 包名
+     * @return 应用签名的SHA1字符串, 比如：53:FD:54:DC:19:0F:11:AC:B5:22:9E:F1:1A:68:88:1B:8B:E8:54:42
+     */
+    public static String getAppSignatureSHA1(final String packageName) {
+        Signature[] signature = getAppSignature(packageName);
+        if (signature == null) return null;
+        return EncryptUtils.encryptSHA1ToString(signature[0].toByteArray()).
+                replaceAll("(?<=[0-9A-F]{2})[0-9A-F]{2}", ":$0");
+    }
+
+    /**
+     * 判断App是否处于前台
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isAppForeground() {
+        ActivityManager manager = (ActivityManager) Utils.getApp().getSystemService(Context.ACTIVITY_SERVICE);
+        List<ActivityManager.RunningAppProcessInfo> info = manager.getRunningAppProcesses();
+        if (info == null || info.size() == 0) return false;
+        for (ActivityManager.RunningAppProcessInfo aInfo : info) {
+            if (aInfo.importance == ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND) {
+                return aInfo.processName.equals(Utils.getApp().getPackageName());
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 判断App是否处于前台
+     * <p>当不是查看当前App，且SDK大于21时，
+     * 需添加权限 {@code <uses-permission android:name="android.permission.PACKAGE_USAGE_STATS"/>}</p>
+     *
+     * @param packageName 包名
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isAppForeground(final String packageName) {
+        return !isSpace(packageName) && packageName.equals(ProcessUtils.getForegroundProcessName());
+    }
+
+    /**
+     * 封装App信息的Bean类
+     */
+    public static class AppInfo {
+
+        private String   name;
+        private Drawable icon;
+        private String   packageName;
+        private String   packagePath;
+        private String   versionName;
+        private int      versionCode;
+        private boolean  isSystem;
+
+        public Drawable getIcon() {
+            return icon;
+        }
+
+        public void setIcon(final Drawable icon) {
+            this.icon = icon;
+        }
+
+        public boolean isSystem() {
+            return isSystem;
+        }
+
+        public void setSystem(final boolean isSystem) {
+            this.isSystem = isSystem;
+        }
+
+        public String getName() {
+            return name;
+        }
+
+        public void setName(final String name) {
+            this.name = name;
+        }
+
+        public String getPackageName() {
+            return packageName;
+        }
+
+        public void setPackageName(final String packageName) {
+            this.packageName = packageName;
+        }
+
+        public String getPackagePath() {
+            return packagePath;
+        }
+
+        public void setPackagePath(final String packagePath) {
+            this.packagePath = packagePath;
+        }
+
+        public int getVersionCode() {
+            return versionCode;
+        }
+
+        public void setVersionCode(final int versionCode) {
+            this.versionCode = versionCode;
+        }
+
+        public String getVersionName() {
+            return versionName;
+        }
+
+        public void setVersionName(final String versionName) {
+            this.versionName = versionName;
+        }
+
+        /**
+         * @param name        名称
+         * @param icon        图标
+         * @param packageName 包名
+         * @param packagePath 包路径
+         * @param versionName 版本号
+         * @param versionCode 版本码
+         * @param isSystem    是否系统应用
+         */
+        public AppInfo(String packageName, String name, Drawable icon, String packagePath,
+                       String versionName, int versionCode, boolean isSystem) {
+            this.setName(name);
+            this.setIcon(icon);
+            this.setPackageName(packageName);
+            this.setPackagePath(packagePath);
+            this.setVersionName(versionName);
+            this.setVersionCode(versionCode);
+            this.setSystem(isSystem);
+        }
+
+        @Override
+        public String toString() {
+            return "pkg name: " + getPackageName() +
+                    "\napp name: " + getName() +
+                    "\napp path: " + getPackagePath() +
+                    "\napp v name: " + getVersionName() +
+                    "\napp v code: " + getVersionCode() +
+                    "\nis system: " + isSystem();
+        }
+    }
+
+    /**
+     * 获取App信息
+     * <p>AppInfo（名称，图标，包名，版本号，版本Code，是否系统应用）</p>
+     *
+     * @return 当前应用的AppInfo
+     */
+    public static AppInfo getAppInfo() {
+        return getAppInfo(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 获取App信息
+     * <p>AppInfo（名称，图标，包名，版本号，版本Code，是否系统应用）</p>
+     *
+     * @param packageName 包名
+     * @return 当前应用的AppInfo
+     */
+    public static AppInfo getAppInfo(final String packageName) {
+        try {
+            PackageManager pm = Utils.getApp().getPackageManager();
+            PackageInfo pi = pm.getPackageInfo(packageName, 0);
+            return getBean(pm, pi);
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * 得到AppInfo的Bean
+     *
+     * @param pm 包的管理
+     * @param pi 包的信息
+     * @return AppInfo类
+     */
+    private static AppInfo getBean(final PackageManager pm, final PackageInfo pi) {
+        if (pm == null || pi == null) return null;
+        ApplicationInfo ai = pi.applicationInfo;
+        String packageName = pi.packageName;
+        String name = ai.loadLabel(pm).toString();
+        Drawable icon = ai.loadIcon(pm);
+        String packagePath = ai.sourceDir;
+        String versionName = pi.versionName;
+        int versionCode = pi.versionCode;
+        boolean isSystem = (ApplicationInfo.FLAG_SYSTEM & ai.flags) != 0;
+        return new AppInfo(packageName, name, icon, packagePath, versionName, versionCode, isSystem);
+    }
+
+    /**
+     * 获取所有已安装App信息
+     * <p>{@link #getBean(PackageManager, PackageInfo)}（名称，图标，包名，包路径，版本号，版本Code，是否系统应用）</p>
+     * <p>依赖上面的getBean方法</p>
+     *
+     * @return 所有已安装的AppInfo列表
+     */
+    public static List<AppInfo> getAppsInfo() {
+        List<AppInfo> list = new ArrayList<>();
+        PackageManager pm = Utils.getApp().getPackageManager();
+        // 获取系统中安装的所有软件信息
+        List<PackageInfo> installedPackages = pm.getInstalledPackages(0);
+        for (PackageInfo pi : installedPackages) {
+            AppInfo ai = getBean(pm, pi);
+            if (ai == null) continue;
+            list.add(ai);
+        }
+        return list;
+    }
+
+    /**
+     * 清除App所有数据
+     *
+     * @param dirPaths 目录路径
+     * @return {@code true}: 成功<br>{@code false}: 失败
+     */
+    public static boolean cleanAppData(final String... dirPaths) {
+        File[] dirs = new File[dirPaths.length];
+        int i = 0;
+        for (String dirPath : dirPaths) {
+            dirs[i++] = new File(dirPath);
+        }
+        return cleanAppData(dirs);
+    }
+
+    /**
+     * 清除App所有数据
+     *
+     * @param dirs 目录
+     * @return {@code true}: 成功<br>{@code false}: 失败
+     */
+    public static boolean cleanAppData(final File... dirs) {
+        boolean isSuccess = CleanUtils.cleanInternalCache();
+        isSuccess &= CleanUtils.cleanInternalDbs();
+        isSuccess &= CleanUtils.cleanInternalSP();
+        isSuccess &= CleanUtils.cleanInternalFiles();
+        isSuccess &= CleanUtils.cleanExternalCache();
+        for (File dir : dirs) {
+            isSuccess &= CleanUtils.cleanCustomCache(dir);
+        }
+        return isSuccess;
+    }
+
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPTManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPTManager.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPTManager.java	(revision )
@@ -0,0 +1,125 @@
+package com.baselib.ui.widget.mydatepicker;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 日历主题管理器
+ */
+
+public class DPTManager {
+    private static DPTManager sManager;
+
+    private DPTheme theme;// 主题对象
+
+    private DPTManager() {
+        initCalendar(new DPCNTheme());
+    }
+
+    /**
+     * 获取日历主题管理器
+     *
+     * Get DatePicker theme manager
+     *
+     * @return 日历主题管理器 DatePicker theme manager
+     */
+    public static DPTManager getInstance() {
+        if (null == sManager) {
+            sManager = new DPTManager();
+        }
+        return sManager;
+    }
+
+    /**
+     * 初始化主题对象
+     *
+     * Initialization Theme
+     *
+     * @param theme ...
+     */
+    public void initCalendar(DPTheme theme) {
+        this.theme = theme;
+    }
+
+    /**
+     * @see DPTheme#colorTitleBG()
+     */
+    public int colorTitleBG() {
+        return theme.colorTitleBG();
+    }
+
+    /**
+     * @see DPTheme#colorBG()
+     */
+    public int colorBG() {
+        return theme.colorBG();
+    }
+
+    /**
+     * @see DPTheme#colorBGCircle()
+     */
+    public int colorBGCircle() {
+        return theme.colorBGCircle();
+    }
+
+    /**
+     * @see DPTheme#colorTitle()
+     */
+    public int colorTitle() {
+        return theme.colorTitle();
+    }
+
+    /**
+     * @see DPTheme#colorToday()
+     */
+    public int colorToday() {
+        return theme.colorToday();
+    }
+
+    /**
+     * @see DPTheme#colorG()
+     */
+    public int colorG() {
+        return theme.colorG();
+    }
+
+    /**
+     * @see DPTheme#colorF()
+     */
+    public int colorF() {
+        return theme.colorF();
+    }
+
+    /**
+     * @see DPTheme#colorWeekend()
+     */
+    public int colorWeekend() {
+        return theme.colorWeekend();
+    }
+
+    /**
+     * @see DPTheme#colorHoliday()
+     */
+    public int colorHoliday() {
+        return theme.colorHoliday();
+    }
+
+    /**
+     * @see DPCNTheme#colorL()
+     */
+    public int colorL() {
+        if (theme instanceof DPCNTheme) {
+            return ((DPCNTheme) theme).colorL();
+        }
+        return 0;
+    }
+
+    /**
+     * @see DPCNTheme#colorDeferred()
+     */
+    public int colorDeferred() {
+        if (theme instanceof DPCNTheme) {
+            return ((DPCNTheme) theme).colorDeferred();
+        }
+        return 0;
+    }
+}
+
Index: baselib/src/main/java/com/baselib/takephoto/model/TContextWrap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/model/TContextWrap.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/model/TContextWrap.java	(revision )
@@ -0,0 +1,43 @@
+package com.baselib.takephoto.model;
+
+import android.app.Activity;
+import android.support.v4.app.Fragment;
+
+/**
+ * Author: JPH
+ * Date: 2016/8/11 17:01
+ */
+public class TContextWrap {
+    private Activity activity;
+    private Fragment fragment;
+    public static TContextWrap of(Activity activity){
+        return new TContextWrap(activity);
+    }
+    public static TContextWrap of(Fragment fragment){
+        return new TContextWrap(fragment);
+    }
+    private TContextWrap(Activity activity) {
+        this.activity = activity;
+    }
+
+    private TContextWrap(Fragment fragment) {
+        this.fragment = fragment;
+        this.activity=fragment.getActivity();
+    }
+
+    public Activity getActivity() {
+        return activity;
+    }
+
+    public void setActivity(Activity activity) {
+        this.activity = activity;
+    }
+
+    public Fragment getFragment() {
+        return fragment;
+    }
+
+    public void setFragment(Fragment fragment) {
+        this.fragment = fragment;
+    }
+}
Index: baselib/src/main/java/com/baselib/recycleview/ViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/ViewHolder.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/ViewHolder.java	(revision )
@@ -0,0 +1,271 @@
+package com.baselib.recycleview;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.Paint;
+import android.graphics.Typeface;
+import android.graphics.drawable.Drawable;
+import android.os.Build;
+import android.support.v7.widget.RecyclerView;
+import android.text.util.Linkify;
+import android.util.SparseArray;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.animation.AlphaAnimation;
+import android.widget.Checkable;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.RatingBar;
+import android.widget.TextView;
+
+public class ViewHolder extends RecyclerView.ViewHolder
+{
+    private SparseArray<View> mViews;
+    private View mConvertView;
+    private Context mContext;
+
+    public ViewHolder(Context context, View itemView)
+    {
+        super(itemView);
+        mContext = context;
+        mConvertView = itemView;
+        mViews = new SparseArray<View>();
+    }
+
+
+    public static ViewHolder createViewHolder(Context context, View itemView)
+    {
+        ViewHolder holder = new ViewHolder(context, itemView);
+        return holder;
+    }
+
+    public static ViewHolder createViewHolder(Context context,
+                                              ViewGroup parent, int layoutId)
+    {
+        View itemView = LayoutInflater.from(context).inflate(layoutId, parent,
+                false);
+        ViewHolder holder = new ViewHolder(context, itemView);
+        return holder;
+    }
+
+    /**
+     * 通过viewId获取控件
+     *
+     * @param viewId
+     * @return
+     */
+    public <T extends View> T getView(int viewId)
+    {
+        View view = mViews.get(viewId);
+        if (view == null)
+        {
+            view = mConvertView.findViewById(viewId);
+            mViews.put(viewId, view);
+        }
+        return (T) view;
+    }
+
+    public View getConvertView()
+    {
+        return mConvertView;
+    }
+
+
+
+
+    /****以下为辅助方法*****/
+
+    /**
+     * 设置TextView的值
+     *
+     * @param viewId
+     * @param text
+     * @return
+     */
+    public ViewHolder setText(int viewId, String text)
+    {
+        TextView tv = getView(viewId);
+        tv.setText(text);
+        return this;
+    }
+
+    public ViewHolder setImageResource(int viewId, int resId)
+    {
+        ImageView view = getView(viewId);
+        view.setImageResource(resId);
+        return this;
+    }
+
+    public ViewHolder setImageBitmap(int viewId, Bitmap bitmap)
+    {
+        ImageView view = getView(viewId);
+        view.setImageBitmap(bitmap);
+        return this;
+    }
+
+    public ViewHolder setImageDrawable(int viewId, Drawable drawable)
+    {
+        ImageView view = getView(viewId);
+        view.setImageDrawable(drawable);
+        return this;
+    }
+
+    public ViewHolder setBackgroundColor(int viewId, int color)
+    {
+        View view = getView(viewId);
+        view.setBackgroundColor(color);
+        return this;
+    }
+
+    public ViewHolder setBackgroundRes(int viewId, int backgroundRes)
+    {
+        View view = getView(viewId);
+        view.setBackgroundResource(backgroundRes);
+        return this;
+    }
+
+    public ViewHolder setTextColor(int viewId, int textColor)
+    {
+        TextView view = getView(viewId);
+        view.setTextColor(textColor);
+        return this;
+    }
+
+    public ViewHolder setTextColorRes(int viewId, int textColorRes)
+    {
+        TextView view = getView(viewId);
+        view.setTextColor(mContext.getResources().getColor(textColorRes));
+        return this;
+    }
+
+    @SuppressLint("NewApi")
+    public ViewHolder setAlpha(int viewId, float value)
+    {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB)
+        {
+            getView(viewId).setAlpha(value);
+        } else
+        {
+            // Pre-honeycomb hack to set Alpha value
+            AlphaAnimation alpha = new AlphaAnimation(value, value);
+            alpha.setDuration(0);
+            alpha.setFillAfter(true);
+            getView(viewId).startAnimation(alpha);
+        }
+        return this;
+    }
+
+    public ViewHolder setVisible(int viewId, boolean visible)
+    {
+        View view = getView(viewId);
+        view.setVisibility(visible ? View.VISIBLE : View.GONE);
+        return this;
+    }
+
+    public ViewHolder linkify(int viewId)
+    {
+        TextView view = getView(viewId);
+        Linkify.addLinks(view, Linkify.ALL);
+        return this;
+    }
+
+    public ViewHolder setTypeface(Typeface typeface, int... viewIds)
+    {
+        for (int viewId : viewIds)
+        {
+            TextView view = getView(viewId);
+            view.setTypeface(typeface);
+            view.setPaintFlags(view.getPaintFlags() | Paint.SUBPIXEL_TEXT_FLAG);
+        }
+        return this;
+    }
+
+    public ViewHolder setProgress(int viewId, int progress)
+    {
+        ProgressBar view = getView(viewId);
+        view.setProgress(progress);
+        return this;
+    }
+
+    public ViewHolder setProgress(int viewId, int progress, int max)
+    {
+        ProgressBar view = getView(viewId);
+        view.setMax(max);
+        view.setProgress(progress);
+        return this;
+    }
+
+    public ViewHolder setMax(int viewId, int max)
+    {
+        ProgressBar view = getView(viewId);
+        view.setMax(max);
+        return this;
+    }
+
+    public ViewHolder setRating(int viewId, float rating)
+    {
+        RatingBar view = getView(viewId);
+        view.setRating(rating);
+        return this;
+    }
+
+    public ViewHolder setRating(int viewId, float rating, int max)
+    {
+        RatingBar view = getView(viewId);
+        view.setMax(max);
+        view.setRating(rating);
+        return this;
+    }
+
+    public ViewHolder setTag(int viewId, Object tag)
+    {
+        View view = getView(viewId);
+        view.setTag(tag);
+        return this;
+    }
+
+    public ViewHolder setTag(int viewId, int key, Object tag)
+    {
+        View view = getView(viewId);
+        view.setTag(key, tag);
+        return this;
+    }
+
+    public ViewHolder setChecked(int viewId, boolean checked)
+    {
+        Checkable view = (Checkable) getView(viewId);
+        view.setChecked(checked);
+        return this;
+    }
+
+    /**
+     * 关于事件的
+     */
+    public ViewHolder setOnClickListener(int viewId,
+                                         View.OnClickListener listener)
+    {
+        View view = getView(viewId);
+        view.setOnClickListener(listener);
+        return this;
+    }
+
+    public ViewHolder setOnTouchListener(int viewId,
+                                         View.OnTouchListener listener)
+    {
+        View view = getView(viewId);
+        view.setOnTouchListener(listener);
+        return this;
+    }
+
+    public ViewHolder setOnLongClickListener(int viewId,
+                                             View.OnLongClickListener listener)
+    {
+        View view = getView(viewId);
+        view.setOnLongClickListener(listener);
+        return this;
+    }
+
+
+}
Index: baselib/src/main/java/com/baselib/takephoto/app/TakePhotoActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/app/TakePhotoActivity.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/app/TakePhotoActivity.java	(revision )
@@ -0,0 +1,84 @@
+package com.baselib.takephoto.app;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.util.Log;
+
+import com.baselib.R;
+import com.baselib.takephoto.model.InvokeParam;
+import com.baselib.takephoto.model.TContextWrap;
+import com.baselib.takephoto.model.TResult;
+import com.baselib.takephoto.permission.InvokeListener;
+import com.baselib.takephoto.permission.PermissionManager;
+import com.baselib.takephoto.permission.PermissionManager.TPermissionType;
+import com.baselib.takephoto.permission.TakePhotoInvocationHandler;
+
+/**
+ * 继承这个类来让Activity获取拍照的能力<br>
+ * Author: crazycodeboy
+ * Date: 2016/9/21 0007 20:10
+ * Version:3.0.0
+ * 技术博文：http://www.cboy.me
+ * GitHub:https://github.com/crazycodeboy
+ * Eamil:crazycodeboy@gmail.com
+ */
+public class TakePhotoActivity extends AppCompatActivity implements TakePhoto.TakeResultListener,InvokeListener{
+    private static final String TAG = TakePhotoActivity.class.getName();
+    private TakePhoto takePhoto;
+    private InvokeParam invokeParam;
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        getTakePhoto().onCreate(savedInstanceState);
+        super.onCreate(savedInstanceState);
+    }
+    @Override
+    protected void onSaveInstanceState(Bundle outState) {
+        getTakePhoto().onSaveInstanceState(outState);
+        super.onSaveInstanceState(outState);
+    }
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        getTakePhoto().onActivityResult(requestCode, resultCode, data);
+        super.onActivityResult(requestCode, resultCode, data);
+    }
+
+    @Override
+    public void onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
+        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
+        TPermissionType type=PermissionManager.onRequestPermissionsResult(requestCode,permissions,grantResults);
+        PermissionManager.handlePermissionsResult(this,type,invokeParam,this);
+    }
+
+    /**
+     *  获取TakePhoto实例
+     * @return
+     */
+    public TakePhoto getTakePhoto(){
+        if (takePhoto==null){
+            takePhoto= (TakePhoto) TakePhotoInvocationHandler.of(this).bind(new TakePhotoImpl(this,this));
+        }
+        return takePhoto;
+    }
+    @Override
+    public void takeSuccess(TResult result) {
+        Log.i(TAG,"takeSuccess：" + result.getImage().getCompressPath());
+    }
+    @Override
+    public void takeFail(TResult result,String msg) {
+        Log.i(TAG, "takeFail:" + msg);
+    }
+    @Override
+    public void takeCancel() {
+        Log.i(TAG, getResources().getString(R.string.msg_operation_canceled));
+    }
+
+    @Override
+    public TPermissionType invoke(InvokeParam invokeParam) {
+        TPermissionType type=PermissionManager.checkPermission(TContextWrap.of(this),invokeParam.getMethod());
+        if(TPermissionType.WAIT.equals(type)){
+            this.invokeParam=invokeParam;
+        }
+        return type;
+    }
+}
Index: baselib/src/main/res/values-en/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/values-en/strings.xml	(revision )
+++ baselib/src/main/res/values-en/strings.xml	(revision )
@@ -0,0 +1,16 @@
+<resources>
+    <!--TakePhoto-->
+    <!--<string name="tip_type_not_image">Choose not pictures</string>-->
+    <!--<string name="tip_no_camera">No camera</string>-->
+    <!--<string name="tip_tips">Tips</string>-->
+    <!--<string name="tip_compress">Being compressed...</string>-->
+    <!--<string name="tip_compress_failed">"%1$s Picture compression failure:%2$s picturePath:%3$s"</string>-->
+    <!--<string name="msg_crop_failed">"There are pictures of crop failures."</string>-->
+    <!--<string name="msg_compress_failed">"There are pictures of compress failures."</string>-->
+    <!--<string name="msg_crop_canceled">" canceled crop"</string>-->
+    <!--<string name="msg_operation_canceled">"Operation canceled."</string>-->
+    <!--<string name="tip_permission_camera">No permission to use the camera, open the rights management</string>-->
+    <!--<string name="tip_permission_storage">No permission to use the SD card, open the rights management</string>-->
+    <!--<string name="tip_permission_camera_storage">No permission to use the camera and SD card, open the rights management</string>-->
+
+</resources>
Index: baselib/src/main/java/com/baselib/utilcode/util/EncodeUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/EncodeUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/EncodeUtils.java	(revision )
@@ -0,0 +1,193 @@
+package com.baselib.utilcode.util;
+
+import android.os.Build;
+import android.text.Html;
+import android.util.Base64;
+
+import java.io.UnsupportedEncodingException;
+import java.net.URLDecoder;
+import java.net.URLEncoder;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/07
+ *     desc  : 编码解码相关工具类
+ * </pre>
+ */
+public final class EncodeUtils {
+
+    private EncodeUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * URL编码
+     * <p>若想自己指定字符集,可以使用{@link #urlEncode(String input, String charset)}方法</p>
+     *
+     * @param input 要编码的字符
+     * @return 编码为UTF-8的字符串
+     */
+    public static String urlEncode(final String input) {
+        return urlEncode(input, "UTF-8");
+    }
+
+    /**
+     * URL编码
+     * <p>若系统不支持指定的编码字符集,则直接将input原样返回</p>
+     *
+     * @param input   要编码的字符
+     * @param charset 字符集
+     * @return 编码为字符集的字符串
+     */
+    public static String urlEncode(final String input, final String charset) {
+        try {
+            return URLEncoder.encode(input, charset);
+        } catch (UnsupportedEncodingException e) {
+            return input;
+        }
+    }
+
+    /**
+     * URL解码
+     * <p>若想自己指定字符集,可以使用 {@link #urlDecode(String input, String charset)}方法</p>
+     *
+     * @param input 要解码的字符串
+     * @return URL解码后的字符串
+     */
+    public static String urlDecode(final String input) {
+        return urlDecode(input, "UTF-8");
+    }
+
+    /**
+     * URL解码
+     * <p>若系统不支持指定的解码字符集,则直接将input原样返回</p>
+     *
+     * @param input   要解码的字符串
+     * @param charset 字符集
+     * @return URL解码为指定字符集的字符串
+     */
+    public static String urlDecode(final String input, final String charset) {
+        try {
+            return URLDecoder.decode(input, charset);
+        } catch (UnsupportedEncodingException e) {
+            return input;
+        }
+    }
+
+    /**
+     * Base64编码
+     *
+     * @param input 要编码的字符串
+     * @return Base64编码后的字符串
+     */
+    public static byte[] base64Encode(final String input) {
+        return base64Encode(input.getBytes());
+    }
+
+    /**
+     * Base64编码
+     *
+     * @param input 要编码的字节数组
+     * @return Base64编码后的字符串
+     */
+    public static byte[] base64Encode(final byte[] input) {
+        return Base64.encode(input, Base64.NO_WRAP);
+    }
+
+    /**
+     * Base64编码
+     *
+     * @param input 要编码的字节数组
+     * @return Base64编码后的字符串
+     */
+    public static String base64Encode2String(final byte[] input) {
+        return Base64.encodeToString(input, Base64.NO_WRAP);
+    }
+
+    /**
+     * Base64解码
+     *
+     * @param input 要解码的字符串
+     * @return Base64解码后的字符串
+     */
+    public static byte[] base64Decode(final String input) {
+        return Base64.decode(input, Base64.NO_WRAP);
+    }
+
+    /**
+     * Base64解码
+     *
+     * @param input 要解码的字符串
+     * @return Base64解码后的字符串
+     */
+    public static byte[] base64Decode(final byte[] input) {
+        return Base64.decode(input, Base64.NO_WRAP);
+    }
+
+    /**
+     * Base64URL安全编码
+     * <p>将Base64中的URL非法字符�?,/=转为其他字符, 见RFC3548</p>
+     *
+     * @param input 要Base64URL安全编码的字符串
+     * @return Base64URL安全编码后的字符串
+     */
+    public static byte[] base64UrlSafeEncode(final String input) {
+        return Base64.encode(input.getBytes(), Base64.URL_SAFE);
+    }
+
+    /**
+     * Html编码
+     *
+     * @param input 要Html编码的字符串
+     * @return Html编码后的字符串
+     */
+    public static String htmlEncode(final CharSequence input) {
+        StringBuilder sb = new StringBuilder();
+        char c;
+        for (int i = 0, len = input.length(); i < len; i++) {
+            c = input.charAt(i);
+            switch (c) {
+                case '<':
+                    sb.append("&lt;"); //$NON-NLS-1$
+                    break;
+                case '>':
+                    sb.append("&gt;"); //$NON-NLS-1$
+                    break;
+                case '&':
+                    sb.append("&amp;"); //$NON-NLS-1$
+                    break;
+                case '\'':
+                    //http://www.w3.org/TR/xhtml1
+                    // The named character reference &apos; (the apostrophe, U+0027) was
+                    // introduced in XML 1.0 but does not appear in HTML. Authors should
+                    // therefore use &#39; instead of &apos; to work as expected in HTML 4
+                    // user agents.
+                    sb.append("&#39;"); //$NON-NLS-1$
+                    break;
+                case '"':
+                    sb.append("&quot;"); //$NON-NLS-1$
+                    break;
+                default:
+                    sb.append(c);
+            }
+        }
+        return sb.toString();
+    }
+
+    /**
+     * Html解码
+     *
+     * @param input 待解码的字符串
+     * @return Html解码后的字符串
+     */
+    @SuppressWarnings("deprecation")
+    public static CharSequence htmlDecode(final String input) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.N) {
+            return Html.fromHtml(input, Html.FROM_HTML_MODE_LEGACY);
+        } else {
+            return Html.fromHtml(input);
+        }
+    }
+}
Index: baselib/src/main/res/drawable/common_progressdialog_progressbar_background.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/drawable/common_progressdialog_progressbar_background.xml	(revision )
+++ baselib/src/main/res/drawable/common_progressdialog_progressbar_background.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <item
+        android:id="@android:id/background"
+        android:drawable="@drawable/common_progress_dialog_progressbar2"/>
+    <item
+        android:id="@android:id/progress"
+        android:drawable="@drawable/common_progress_dialog_progressbar3"/>
+
+</layer-list>
\ No newline at end of file
Index: settings.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- settings.gradle	(revision )
+++ settings.gradle	(revision )
@@ -0,0 +1,1 @@
+include ':app', ':baselib'
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision )
+++ app/src/main/res/values/colors.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="colorPrimary">#3F51B5</color>
+    <color name="colorPrimaryDark">#303F9F</color>
+    <color name="colorAccent">#FF4081</color>
+</resources>
Index: baselib/src/main/res/drawable/toast_message_refunds_bg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/drawable/toast_message_refunds_bg.xml	(revision )
+++ baselib/src/main/res/drawable/toast_message_refunds_bg.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <solid android:color="#111111" />
+
+    <stroke
+        android:width="1.5dp"
+        android:color="#111111" />
+
+    <corners android:radius="3dp" />
+
+</shape>
Index: baselib/src/main/java/com/baselib/utilcode/util/TimeUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/TimeUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/TimeUtils.java	(revision )
@@ -0,0 +1,1623 @@
+package com.baselib.utilcode.util;
+
+import com.baselib.utilcode.constant.TimeConstants;
+
+import java.text.DateFormat;
+import java.text.ParseException;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.Locale;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/02
+ *     desc  : 时间相关工具类
+ * </pre>
+ */
+public final class TimeUtils {
+
+    /**
+     * <p>在工具类中经常使用到工具类的格式化描述，这个主要是一个日期的操作类，所以日志格式主要使用 SimpleDateFormat的定义格式.</p>
+     * 格式的意义如下： 日期和时间模式 <br>
+     * <p>日期和时间格式由日期和时间模式字符串指定。在日期和时间模式字符串中，未加引号的字母 'A' 到 'Z' 和 'a' 到 'z'
+     * 被解释为模式字母，用来表示日期或时间字符串元素。文本可以使用单引号 (') 引起来，以免进行解释。"''"
+     * 表示单引号。所有其他字符均不解释；只是在格式化时将它们简单复制到输出字符串，或者在分析时与输入字符串进行匹配。
+     * </p>
+     * 定义了以下模式字母（所有其他字符 'A' 到 'Z' 和 'a' 到 'z' 都被保留）： <br>
+     * <table border="1" cellspacing="1" cellpadding="1" summary="Chart shows format letters, date/time component,
+     * presentation, and examples.">
+     * <tr>
+     * <th align="left">字母</th>
+     * <th align="left">日期或时间元素</th>
+     * <th align="left">表示</th>
+     * <th align="left">示例</th>
+     * </tr>
+     * <tr>
+     * <td><code>G</code></td>
+     * <td>Era 标志符</td>
+     * <td>Text</td>
+     * <td><code>AD</code></td>
+     * </tr>
+     * <tr>
+     * <td><code>y</code> </td>
+     * <td>年 </td>
+     * <td>Year </td>
+     * <td><code>1996</code>; <code>96</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>M</code> </td>
+     * <td>年中的月份 </td>
+     * <td>Month </td>
+     * <td><code>July</code>; <code>Jul</code>; <code>07</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>w</code> </td>
+     * <td>年中的周数 </td>
+     * <td>Number </td>
+     * <td><code>27</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>W</code> </td>
+     * <td>月份中的周数 </td>
+     * <td>Number </td>
+     * <td><code>2</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>D</code> </td>
+     * <td>年中的天数 </td>
+     * <td>Number </td>
+     * <td><code>189</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>d</code> </td>
+     * <td>月份中的天数 </td>
+     * <td>Number </td>
+     * <td><code>10</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>F</code> </td>
+     * <td>月份中的星期 </td>
+     * <td>Number </td>
+     * <td><code>2</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>E</code> </td>
+     * <td>星期中的天数 </td>
+     * <td>Text </td>
+     * <td><code>Tuesday</code>; <code>Tue</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>a</code> </td>
+     * <td>Am/pm 标记 </td>
+     * <td>Text </td>
+     * <td><code>PM</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>H</code> </td>
+     * <td>一天中的小时数（0-23） </td>
+     * <td>Number </td>
+     * <td><code>0</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>k</code> </td>
+     * <td>一天中的小时数（1-24） </td>
+     * <td>Number </td>
+     * <td><code>24</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>K</code> </td>
+     * <td>am/pm 中的小时数（0-11） </td>
+     * <td>Number </td>
+     * <td><code>0</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>h</code> </td>
+     * <td>am/pm 中的小时数（1-12） </td>
+     * <td>Number </td>
+     * <td><code>12</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>m</code> </td>
+     * <td>小时中的分钟数 </td>
+     * <td>Number </td>
+     * <td><code>30</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>s</code> </td>
+     * <td>分钟中的秒数 </td>
+     * <td>Number </td>
+     * <td><code>55</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>S</code> </td>
+     * <td>毫秒数 </td>
+     * <td>Number </td>
+     * <td><code>978</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>z</code> </td>
+     * <td>时区 </td>
+     * <td>General time zone </td>
+     * <td><code>Pacific Standard Time</code>; <code>PST</code>; <code>GMT-08:00</code> </td>
+     * </tr>
+     * <tr>
+     * <td><code>Z</code> </td>
+     * <td>时区 </td>
+     * <td>RFC 822 time zone </td>
+     * <td><code>-0800</code> </td>
+     * </tr>
+     * </table>
+     * <pre>
+     *                                             HH:mm    15:44
+     *                                            h:mm a    3:44 下午
+     *                                           HH:mm z    15:44 CST
+     *                                           HH:mm Z    15:44 +0800
+     *                                        HH:mm zzzz    15:44 中国标准时间
+     *                                          HH:mm:ss    15:44:40
+     *                                        yyyy-MM-dd    2016-08-12
+     *                                  yyyy-MM-dd HH:mm    2016-08-12 15:44
+     *                               yyyy-MM-dd HH:mm:ss    2016-08-12 15:44:40
+     *                          yyyy-MM-dd HH:mm:ss zzzz    2016-08-12 15:44:40 中国标准时间
+     *                     EEEE yyyy-MM-dd HH:mm:ss zzzz    星期五 2016-08-12 15:44:40 中国标准时间
+     *                          yyyy-MM-dd HH:mm:ss.SSSZ    2016-08-12 15:44:40.461+0800
+     *                        yyyy-MM-dd'T'HH:mm:ss.SSSZ    2016-08-12T15:44:40.461+0800
+     *                      yyyy.MM.dd G 'at' HH:mm:ss z    2016.08.12 公元 at 15:44:40 CST
+     *                                            K:mm a    3:44 下午
+     *                                  EEE, MMM d, ''yy    星期五, 八月 12, '16
+     *                             hh 'o''clock' a, zzzz    03 o'clock 下午, 中国标准时间
+     *                      yyyyy.MMMMM.dd GGG hh:mm aaa    02016.八月.12 公元 03:44 下午
+     *                        EEE, d MMM yyyy HH:mm:ss Z    星期五, 12 八月 2016 15:44:40 +0800
+     *                                     yyMMddHHmmssZ    160812154440+0800
+     *                        yyyy-MM-dd'T'HH:mm:ss.SSSZ    2016-08-12T15:44:40.461+0800
+     * EEEE 'DATE('yyyy-MM-dd')' 'TIME('HH:mm:ss')' zzzz    星期五 DATE(2016-08-12) TIME(15:44:40) 中国标准时间
+     * </pre>
+     * 注意：SimpleDateFormat不是线程安全的，线程安全需用{@code ThreadLocal<SimpleDateFormat>}
+     */
+
+    private static final DateFormat DEFAULT_FORMAT = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss", Locale.getDefault());
+
+    private TimeUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 将时间戳转为时间字符串
+     * <p>格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param millis 毫秒时间戳
+     * @return 时间字符串
+     */
+    public static String millis2String(final long millis) {
+        return millis2String(millis, DEFAULT_FORMAT);
+    }
+
+    /**
+     * 将时间戳转为时间字符串
+     * <p>格式为format</p>
+     *
+     * @param millis 毫秒时间戳
+     * @param format 时间格式
+     * @return 时间字符串
+     */
+    public static String millis2String(final long millis, final DateFormat format) {
+        return format.format(new Date(millis));
+    }
+
+    /**
+     * 将时间字符串转为时间戳
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return 毫秒时间戳
+     */
+    public static long string2Millis(final String time) {
+        return string2Millis(time, DEFAULT_FORMAT);
+    }
+
+    /**
+     * 将时间字符串转为时间戳
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return 毫秒时间戳
+     */
+    public static long string2Millis(final String time, final DateFormat format) {
+        try {
+            return format.parse(time).getTime();
+        } catch (ParseException e) {
+            e.printStackTrace();
+        }
+        return -1;
+    }
+
+    /**
+     * 将时间字符串转为Date类型
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return Date类型
+     */
+    public static Date string2Date(final String time) {
+        return string2Date(time, DEFAULT_FORMAT);
+    }
+
+    /**
+     * 将时间字符串转为Date类型
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return Date类型
+     */
+    public static Date string2Date(final String time, final DateFormat format) {
+        try {
+            return format.parse(time);
+        } catch (ParseException e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 将Date类型转为时间字符串
+     * <p>格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param date Date类型时间
+     * @return 时间字符串
+     */
+    public static String date2String(final Date date) {
+        return date2String(date, DEFAULT_FORMAT);
+    }
+
+    /**
+     * 将Date类型转为时间字符串
+     * <p>格式为format</p>
+     *
+     * @param date   Date类型时间
+     * @param format 时间格式
+     * @return 时间字符串
+     */
+    public static String date2String(final Date date, final DateFormat format) {
+        return format.format(date);
+    }
+
+    /**
+     * 将Date类型转为时间戳
+     *
+     * @param date Date类型时间
+     * @return 毫秒时间戳
+     */
+    public static long date2Millis(final Date date) {
+        return date.getTime();
+    }
+
+    /**
+     * 将时间戳转为Date类型
+     *
+     * @param millis 毫秒时间戳
+     * @return Date类型时间
+     */
+    public static Date millis2Date(final long millis) {
+        return new Date(millis);
+    }
+
+    /**
+     * 获取两个时间差（单位：unit）
+     * <p>time0和time1格式都为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time0 时间字符串0
+     * @param time1 时间字符串1
+     * @param unit  单位类型
+     *              <ul>
+     *              <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *              <li>{@link TimeConstants#SEC }: 秒</li>
+     *              <li>{@link TimeConstants#MIN }: 分</li>
+     *              <li>{@link TimeConstants#HOUR}: 小时</li>
+     *              <li>{@link TimeConstants#DAY }: 天</li>
+     *              </ul>
+     * @return unit时间戳
+     */
+    public static long getTimeSpan(final String time0, final String time1, @TimeConstants.Unit final int unit) {
+        return getTimeSpan(time0, time1, DEFAULT_FORMAT, unit);
+    }
+
+    /**
+     * 获取两个时间差（单位：unit）
+     * <p>time0和time1格式都为format</p>
+     *
+     * @param time0  时间字符串0
+     * @param time1  时间字符串1
+     * @param format 时间格式
+     * @param unit   单位类型
+     *               <ul>
+     *               <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *               <li>{@link TimeConstants#SEC }: 秒</li>
+     *               <li>{@link TimeConstants#MIN }: 分</li>
+     *               <li>{@link TimeConstants#HOUR}: 小时</li>
+     *               <li>{@link TimeConstants#DAY }: 天</li>
+     *               </ul>
+     * @return unit时间戳
+     */
+    public static long getTimeSpan(final String time0, final String time1, final DateFormat format, @TimeConstants.Unit final int unit) {
+        return millis2TimeSpan(Math.abs(string2Millis(time0, format) - string2Millis(time1, format)), unit);
+    }
+
+    /**
+     * 获取两个时间差（单位：unit）
+     *
+     * @param date0 Date类型时间0
+     * @param date1 Date类型时间1
+     * @param unit  单位类型
+     *              <ul>
+     *              <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *              <li>{@link TimeConstants#SEC }: 秒</li>
+     *              <li>{@link TimeConstants#MIN }: 分</li>
+     *              <li>{@link TimeConstants#HOUR}: 小时</li>
+     *              <li>{@link TimeConstants#DAY }: 天</li>
+     *              </ul>
+     * @return unit时间戳
+     */
+    public static long getTimeSpan(final Date date0, final Date date1, @TimeConstants.Unit final int unit) {
+        return millis2TimeSpan(Math.abs(date2Millis(date0) - date2Millis(date1)), unit);
+    }
+
+    /**
+     * 获取两个时间差（单位：unit）
+     *
+     * @param millis0 毫秒时间戳0
+     * @param millis1 毫秒时间戳1
+     * @param unit    单位类型
+     *                <ul>
+     *                <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                <li>{@link TimeConstants#SEC }: 秒</li>
+     *                <li>{@link TimeConstants#MIN }: 分</li>
+     *                <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                <li>{@link TimeConstants#DAY }: 天</li>
+     *                </ul>
+     * @return unit时间戳
+     */
+    public static long getTimeSpan(final long millis0, final long millis1, @TimeConstants.Unit final int unit) {
+        return millis2TimeSpan(Math.abs(millis0 - millis1), unit);
+    }
+
+    /**
+     * 获取合适型两个时间差
+     * <p>time0和time1格式都为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time0     时间字符串0
+     * @param time1     时间字符串1
+     * @param precision 精度
+     *                  <p>precision = 0，返回null</p>
+     *                  <p>precision = 1，返回天</p>
+     *                  <p>precision = 2，返回天和小时</p>
+     *                  <p>precision = 3，返回天、小时和分钟</p>
+     *                  <p>precision = 4，返回天、小时、分钟和秒</p>
+     *                  <p>precision &gt;= 5，返回天、小时、分钟、秒和毫秒</p>
+     * @return 合适型两个时间差
+     */
+    public static String getFitTimeSpan(final String time0, final String time1, final int precision) {
+        return millis2FitTimeSpan(Math.abs(string2Millis(time0, DEFAULT_FORMAT) - string2Millis(time1, DEFAULT_FORMAT)), precision);
+    }
+
+    /**
+     * 获取合适型两个时间差
+     * <p>time0和time1格式都为format</p>
+     *
+     * @param time0     时间字符串0
+     * @param time1     时间字符串1
+     * @param format    时间格式
+     * @param precision 精度
+     *                  <p>precision = 0，返回null</p>
+     *                  <p>precision = 1，返回天</p>
+     *                  <p>precision = 2，返回天和小时</p>
+     *                  <p>precision = 3，返回天、小时和分钟</p>
+     *                  <p>precision = 4，返回天、小时、分钟和秒</p>
+     *                  <p>precision &gt;= 5，返回天、小时、分钟、秒和毫秒</p>
+     * @return 合适型两个时间差
+     */
+    public static String getFitTimeSpan(final String time0, final String time1, final DateFormat format, final int precision) {
+        return millis2FitTimeSpan(Math.abs(string2Millis(time0, format) - string2Millis(time1, format)), precision);
+    }
+
+    /**
+     * 获取合适型两个时间差
+     *
+     * @param date0     Date类型时间0
+     * @param date1     Date类型时间1
+     * @param precision 精度
+     *                  <p>precision = 0，返回null</p>
+     *                  <p>precision = 1，返回天</p>
+     *                  <p>precision = 2，返回天和小时</p>
+     *                  <p>precision = 3，返回天、小时和分钟</p>
+     *                  <p>precision = 4，返回天、小时、分钟和秒</p>
+     *                  <p>precision &gt;= 5，返回天、小时、分钟、秒和毫秒</p>
+     * @return 合适型两个时间差
+     */
+    public static String getFitTimeSpan(final Date date0, final Date date1, final int precision) {
+        return millis2FitTimeSpan(Math.abs(date2Millis(date0) - date2Millis(date1)), precision);
+    }
+
+    /**
+     * 获取合适型两个时间差
+     *
+     * @param millis0   毫秒时间戳1
+     * @param millis1   毫秒时间戳2
+     * @param precision 精度
+     *                  <p>precision = 0，返回null</p>
+     *                  <p>precision = 1，返回天</p>
+     *                  <p>precision = 2，返回天和小时</p>
+     *                  <p>precision = 3，返回天、小时和分钟</p>
+     *                  <p>precision = 4，返回天、小时、分钟和秒</p>
+     *                  <p>precision &gt;= 5，返回天、小时、分钟、秒和毫秒</p>
+     * @return 合适型两个时间差
+     */
+    public static String getFitTimeSpan(final long millis0, final long millis1, final int precision) {
+        return millis2FitTimeSpan(Math.abs(millis0 - millis1), precision);
+    }
+
+    /**
+     * 获取当前毫秒时间戳
+     *
+     * @return 毫秒时间戳
+     */
+    public static long getNowMills() {
+        return System.currentTimeMillis();
+    }
+
+    /**
+     * 获取当前时间字符串
+     * <p>格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @return 时间字符串
+     */
+    public static String getNowString() {
+        return millis2String(System.currentTimeMillis(), DEFAULT_FORMAT);
+    }
+
+    /**
+     * 获取当前时间字符串
+     * <p>格式为format</p>
+     *
+     * @param format 时间格式
+     * @return 时间字符串
+     */
+    public static String getNowString(final DateFormat format) {
+        return millis2String(System.currentTimeMillis(), format);
+    }
+
+    /**
+     * 获取当前Date
+     *
+     * @return Date类型时间
+     */
+    public static Date getNowDate() {
+        return new Date();
+    }
+
+    /**
+     * 获取与当前时间的差（单位：unit）
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @param unit 单位类型
+     *             <ul>
+     *             <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *             <li>{@link TimeConstants#SEC }: 秒</li>
+     *             <li>{@link TimeConstants#MIN }: 分</li>
+     *             <li>{@link TimeConstants#HOUR}: 小时</li>
+     *             <li>{@link TimeConstants#DAY }: 天</li>
+     *             </ul>
+     * @return unit时间戳
+     */
+    public static long getTimeSpanByNow(final String time, @TimeConstants.Unit final int unit) {
+        return getTimeSpan(getNowString(), time, DEFAULT_FORMAT, unit);
+    }
+
+    /**
+     * 获取与当前时间的差（单位：unit）
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @param unit   单位类型
+     *               <ul>
+     *               <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *               <li>{@link TimeConstants#SEC }: 秒</li>
+     *               <li>{@link TimeConstants#MIN }: 分</li>
+     *               <li>{@link TimeConstants#HOUR}: 小时</li>
+     *               <li>{@link TimeConstants#DAY }: 天</li>
+     *               </ul>
+     * @return unit时间戳
+     */
+    public static long getTimeSpanByNow(final String time, final DateFormat format, @TimeConstants.Unit final int unit) {
+        return getTimeSpan(getNowString(format), time, format, unit);
+    }
+
+    /**
+     * 获取与当前时间的差（单位：unit）
+     *
+     * @param date Date类型时间
+     * @param unit 单位类型
+     *             <ul>
+     *             <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *             <li>{@link TimeConstants#SEC }: 秒</li>
+     *             <li>{@link TimeConstants#MIN }: 分</li>
+     *             <li>{@link TimeConstants#HOUR}: 小时</li>
+     *             <li>{@link TimeConstants#DAY }: 天</li>
+     *             </ul>
+     * @return unit时间戳
+     */
+    public static long getTimeSpanByNow(final Date date, @TimeConstants.Unit final int unit) {
+        return getTimeSpan(new Date(), date, unit);
+    }
+
+    /**
+     * 获取与当前时间的差（单位：unit）
+     *
+     * @param millis 毫秒时间戳
+     * @param unit   单位类型
+     *               <ul>
+     *               <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *               <li>{@link TimeConstants#SEC }: 秒</li>
+     *               <li>{@link TimeConstants#MIN }: 分</li>
+     *               <li>{@link TimeConstants#HOUR}: 小时</li>
+     *               <li>{@link TimeConstants#DAY }: 天</li>
+     *               </ul>
+     * @return unit时间戳
+     */
+    public static long getTimeSpanByNow(final long millis, @TimeConstants.Unit final int unit) {
+        return getTimeSpan(System.currentTimeMillis(), millis, unit);
+    }
+
+    /**
+     * 获取合适型与当前时间的差
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time      时间字符串
+     * @param precision 精度
+     *                  <ul>
+     *                  <li>precision = 0，返回null</li>
+     *                  <li>precision = 1，返回天</li>
+     *                  <li>precision = 2，返回天和小时</li>
+     *                  <li>precision = 3，返回天、小时和分钟</li>
+     *                  <li>precision = 4，返回天、小时、分钟和秒</li>
+     *                  <li>precision &gt;= 5，返回天、小时、分钟、秒和毫秒</li>
+     *                  </ul>
+     * @return 合适型与当前时间的差
+     */
+    public static String getFitTimeSpanByNow(final String time, final int precision) {
+        return getFitTimeSpan(getNowString(), time, DEFAULT_FORMAT, precision);
+    }
+
+    /**
+     * 获取合适型与当前时间的差
+     * <p>time格式为format</p>
+     *
+     * @param time      时间字符串
+     * @param format    时间格式
+     * @param precision 精度
+     *                  <ul>
+     *                  <li>precision = 0，返回null</li>
+     *                  <li>precision = 1，返回天</li>
+     *                  <li>precision = 2，返回天和小时</li>
+     *                  <li>precision = 3，返回天、小时和分钟</li>
+     *                  <li>precision = 4，返回天、小时、分钟和秒</li>
+     *                  <li>precision &gt;= 5，返回天、小时、分钟、秒和毫秒</li>
+     *                  </ul>
+     * @return 合适型与当前时间的差
+     */
+    public static String getFitTimeSpanByNow(final String time, final DateFormat format, final int precision) {
+        return getFitTimeSpan(getNowString(format), time, format, precision);
+    }
+
+    /**
+     * 获取合适型与当前时间的差
+     *
+     * @param date      Date类型时间
+     * @param precision 精度
+     *                  <ul>
+     *                  <li>precision = 0，返回null</li>
+     *                  <li>precision = 1，返回天</li>
+     *                  <li>precision = 2，返回天和小时</li>
+     *                  <li>precision = 3，返回天、小时和分钟</li>
+     *                  <li>precision = 4，返回天、小时、分钟和秒</li>
+     *                  <li>precision &gt;= 5，返回天、小时、分钟、秒和毫秒</li>
+     *                  </ul>
+     * @return 合适型与当前时间的差
+     */
+    public static String getFitTimeSpanByNow(final Date date, final int precision) {
+        return getFitTimeSpan(getNowDate(), date, precision);
+    }
+
+    /**
+     * 获取合适型与当前时间的差
+     *
+     * @param millis    毫秒时间戳
+     * @param precision 精度
+     *                  <ul>
+     *                  <li>precision = 0，返回null</li>
+     *                  <li>precision = 1，返回天</li>
+     *                  <li>precision = 2，返回天和小时</li>
+     *                  <li>precision = 3，返回天、小时和分钟</li>
+     *                  <li>precision = 4，返回天、小时、分钟和秒</li>
+     *                  <li>precision &gt;= 5，返回天、小时、分钟、秒和毫秒</li>
+     *                  </ul>
+     * @return 合适型与当前时间的差
+     */
+    public static String getFitTimeSpanByNow(final long millis, final int precision) {
+        return getFitTimeSpan(System.currentTimeMillis(), millis, precision);
+    }
+
+    /**
+     * 获取友好型与当前时间的差
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return 友好型与当前时间的差
+     * <ul>
+     * <li>如果小于1秒钟内，显示刚刚</li>
+     * <li>如果在1分钟内，显示XXX秒前</li>
+     * <li>如果在1小时内，显示XXX分钟前</li>
+     * <li>如果在1小时外的今天内，显示今天15:32</li>
+     * <li>如果是昨天的，显示昨天15:32</li>
+     * <li>其余显示，2016-10-15</li>
+     * <li>时间不合法的情况全部日期和时间信息，如星期六 十月 27 14:21:20 CST 2007</li>
+     * </ul>
+     */
+    public static String getFriendlyTimeSpanByNow(final String time) {
+        return getFriendlyTimeSpanByNow(time, DEFAULT_FORMAT);
+    }
+
+    /**
+     * 获取友好型与当前时间的差
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return 友好型与当前时间的差
+     * <ul>
+     * <li>如果小于1秒钟内，显示刚刚</li>
+     * <li>如果在1分钟内，显示XXX秒前</li>
+     * <li>如果在1小时内，显示XXX分钟前</li>
+     * <li>如果在1小时外的今天内，显示今天15:32</li>
+     * <li>如果是昨天的，显示昨天15:32</li>
+     * <li>其余显示，2016-10-15</li>
+     * <li>时间不合法的情况全部日期和时间信息，如星期六 十月 27 14:21:20 CST 2007</li>
+     * </ul>
+     */
+    public static String getFriendlyTimeSpanByNow(final String time, final DateFormat format) {
+        return getFriendlyTimeSpanByNow(string2Millis(time, format));
+    }
+
+    /**
+     * 获取友好型与当前时间的差
+     *
+     * @param date Date类型时间
+     * @return 友好型与当前时间的差
+     * <ul>
+     * <li>如果小于1秒钟内，显示刚刚</li>
+     * <li>如果在1分钟内，显示XXX秒前</li>
+     * <li>如果在1小时内，显示XXX分钟前</li>
+     * <li>如果在1小时外的今天内，显示今天15:32</li>
+     * <li>如果是昨天的，显示昨天15:32</li>
+     * <li>其余显示，2016-10-15</li>
+     * <li>时间不合法的情况全部日期和时间信息，如星期六 十月 27 14:21:20 CST 2007</li>
+     * </ul>
+     */
+    public static String getFriendlyTimeSpanByNow(final Date date) {
+        return getFriendlyTimeSpanByNow(date.getTime());
+    }
+
+    /**
+     * 获取友好型与当前时间的差
+     *
+     * @param millis 毫秒时间戳
+     * @return 友好型与当前时间的差
+     * <ul>
+     * <li>如果小于1秒钟内，显示刚刚</li>
+     * <li>如果在1分钟内，显示XXX秒前</li>
+     * <li>如果在1小时内，显示XXX分钟前</li>
+     * <li>如果在1小时外的今天内，显示今天15:32</li>
+     * <li>如果是昨天的，显示昨天15:32</li>
+     * <li>其余显示，2016-10-15</li>
+     * <li>时间不合法的情况全部日期和时间信息，如星期六 十月 27 14:21:20 CST 2007</li>
+     * </ul>
+     */
+    public static String getFriendlyTimeSpanByNow(final long millis) {
+        long now = System.currentTimeMillis();
+        long span = now - millis;
+        if (span < 0)
+            return String.format("%tc", millis);// U can read http://www.apihome.cn/api/java/Formatter.html to understand it.
+        if (span < 1000) {
+            return "刚刚";
+        } else if (span < TimeConstants.MIN) {
+            return String.format(Locale.getDefault(), "%d秒前", span / TimeConstants.SEC);
+        } else if (span < TimeConstants.HOUR) {
+            return String.format(Locale.getDefault(), "%d分钟前", span / TimeConstants.MIN);
+        }
+        // 获取当天00:00
+        long wee = getWeeOfToday();
+        if (millis >= wee) {
+            return String.format("今天%tR", millis);
+        } else if (millis >= wee - TimeConstants.DAY) {
+            return String.format("昨天%tR", millis);
+        } else {
+            return String.format("%tF", millis);
+        }
+    }
+
+    private static long getWeeOfToday() {
+        Calendar cal = Calendar.getInstance();
+        cal.set(Calendar.HOUR_OF_DAY, 0);
+        cal.set(Calendar.SECOND, 0);
+        cal.set(Calendar.MINUTE, 0);
+        cal.set(Calendar.MILLISECOND, 0);
+        return cal.getTimeInMillis();
+    }
+
+    /**
+     * 获取与给定时间等于时间差的时间戳
+     *
+     * @param millis   给定时间
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的时间戳
+     */
+    public static long getMillis(final long millis, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return millis + timeSpan2Millis(timeSpan, unit);
+    }
+
+    /**
+     * 获取与给定时间等于时间差的时间戳
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time     给定时间
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的时间戳
+     */
+    public static long getMillis(final String time, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return getMillis(time, DEFAULT_FORMAT, timeSpan, unit);
+    }
+
+    /**
+     * 获取与给定时间等于时间差的时间戳
+     * <p>time格式为format</p>
+     *
+     * @param time     给定时间
+     * @param format   时间格式
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的时间戳
+     */
+    public static long getMillis(final String time, final DateFormat format, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return string2Millis(time, format) + timeSpan2Millis(timeSpan, unit);
+    }
+
+    /**
+     * 获取与给定时间等于时间差的时间戳
+     *
+     * @param date     给定时间
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的时间戳
+     */
+    public static long getMillis(final Date date, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return date2Millis(date) + timeSpan2Millis(timeSpan, unit);
+    }
+
+    /**
+     * 获取与给定时间等于时间差的时间字符串
+     * <p>格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param millis   给定时间
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的时间字符串
+     */
+    public static String getString(final long millis, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return getString(millis, DEFAULT_FORMAT, timeSpan, unit);
+    }
+
+    /**
+     * 获取与给定时间等于时间差的时间字符串
+     * <p>格式为format</p>
+     *
+     * @param millis   给定时间
+     * @param format   时间格式
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的时间字符串
+     */
+    public static String getString(final long millis, final DateFormat format, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return millis2String(millis + timeSpan2Millis(timeSpan, unit), format);
+    }
+
+    /**
+     * 获取与给定时间等于时间差的时间字符串
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time     给定时间
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的时间字符串
+     */
+    public static String getString(final String time, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return getString(time, DEFAULT_FORMAT, timeSpan, unit);
+    }
+
+    /**
+     * 获取与给定时间等于时间差的时间字符串
+     * <p>格式为format</p>
+     *
+     * @param time     给定时间
+     * @param format   时间格式
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的时间字符串
+     */
+    public static String getString(final String time, final DateFormat format, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return millis2String(string2Millis(time, format) + timeSpan2Millis(timeSpan, unit), format);
+    }
+
+    /**
+     * 获取与给定时间等于时间差的时间字符串
+     * <p>格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param date     给定时间
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的时间字符串
+     */
+    public static String getString(final Date date, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return getString(date, DEFAULT_FORMAT, timeSpan, unit);
+    }
+
+    /**
+     * 获取与给定时间等于时间差的时间字符串
+     * <p>格式为format</p>
+     *
+     * @param date     给定时间
+     * @param format   时间格式
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的时间字符串
+     */
+    public static String getString(final Date date, final DateFormat format, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return millis2String(date2Millis(date) + timeSpan2Millis(timeSpan, unit), format);
+    }
+
+    /**
+     * 获取与给定时间等于时间差的Date
+     *
+     * @param millis   给定时间
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的Date
+     */
+    public static Date getDate(final long millis, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return millis2Date(millis + timeSpan2Millis(timeSpan, unit));
+    }
+
+    /**
+     * 获取与给定时间等于时间差的Date
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time     给定时间
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的Date
+     */
+    public static Date getDate(final String time, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return getDate(time, DEFAULT_FORMAT, timeSpan, unit);
+    }
+
+    /**
+     * 获取与给定时间等于时间差的Date
+     * <p>格式为format</p>
+     *
+     * @param time     给定时间
+     * @param format   时间格式
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的Date
+     */
+    public static Date getDate(final String time, final DateFormat format, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return millis2Date(string2Millis(time, format) + timeSpan2Millis(timeSpan, unit));
+    }
+
+    /**
+     * 获取与给定时间等于时间差的Date
+     *
+     * @param date     给定时间
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与给定时间等于时间差的Date
+     */
+    public static Date getDate(final Date date, final long timeSpan, @TimeConstants.Unit final int unit) {
+        return millis2Date(date2Millis(date) + timeSpan2Millis(timeSpan, unit));
+    }
+
+    /**
+     * 获取与当前时间等于时间差的时间戳
+     *
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与当前时间等于时间差的时间戳
+     */
+    public static long getMillisByNow(final long timeSpan, @TimeConstants.Unit final int unit) {
+        return getMillis(getNowMills(), timeSpan, unit);
+    }
+
+    /**
+     * 获取与当前时间等于时间差的时间字符串
+     * <p>格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与当前时间等于时间差的时间字符串
+     */
+    public static String getStringByNow(final long timeSpan, @TimeConstants.Unit final int unit) {
+        return getStringByNow(timeSpan, DEFAULT_FORMAT, unit);
+    }
+
+    /**
+     * 获取与当前时间等于时间差的时间字符串
+     * <p>格式为format</p>
+     *
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param format   时间格式
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与当前时间等于时间差的时间字符串
+     */
+    public static String getStringByNow(final long timeSpan, final DateFormat format, @TimeConstants.Unit final int unit) {
+        return getString(getNowMills(), format, timeSpan, unit);
+    }
+
+    /**
+     * 获取与当前时间等于时间差的Date
+     *
+     * @param timeSpan 时间差的毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 与当前时间等于时间差的Date
+     */
+    public static Date getDateByNow(final long timeSpan, @TimeConstants.Unit final int unit) {
+        return getDate(getNowMills(), timeSpan, unit);
+    }
+
+    /**
+     * 判断是否今天
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isToday(final String time) {
+        return isToday(string2Millis(time, DEFAULT_FORMAT));
+    }
+
+    /**
+     * 判断是否今天
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isToday(final String time, final DateFormat format) {
+        return isToday(string2Millis(time, format));
+    }
+
+    /**
+     * 判断是否今天
+     *
+     * @param date Date类型时间
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isToday(final Date date) {
+        return isToday(date.getTime());
+    }
+
+    /**
+     * 判断是否今天
+     *
+     * @param millis 毫秒时间戳
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isToday(final long millis) {
+        long wee = getWeeOfToday();
+        return millis >= wee && millis < wee + TimeConstants.DAY;
+    }
+
+    /**
+     * 判断是否闰年
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return {@code true}: 闰年<br>{@code false}: 平年
+     */
+    public static boolean isLeapYear(final String time) {
+        return isLeapYear(string2Date(time, DEFAULT_FORMAT));
+    }
+
+    /**
+     * 判断是否闰年
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return {@code true}: 闰年<br>{@code false}: 平年
+     */
+    public static boolean isLeapYear(final String time, final DateFormat format) {
+        return isLeapYear(string2Date(time, format));
+    }
+
+    /**
+     * 判断是否闰年
+     *
+     * @param date Date类型时间
+     * @return {@code true}: 闰年<br>{@code false}: 平年
+     */
+    public static boolean isLeapYear(final Date date) {
+        Calendar cal = Calendar.getInstance();
+        cal.setTime(date);
+        int year = cal.get(Calendar.YEAR);
+        return isLeapYear(year);
+    }
+
+    /**
+     * 判断是否闰年
+     *
+     * @param millis 毫秒时间戳
+     * @return {@code true}: 闰年<br>{@code false}: 平年
+     */
+    public static boolean isLeapYear(final long millis) {
+        return isLeapYear(millis2Date(millis));
+    }
+
+    /**
+     * 判断是否闰年
+     *
+     * @param year 年份
+     * @return {@code true}: 闰年<br>{@code false}: 平年
+     */
+    public static boolean isLeapYear(final int year) {
+        return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;
+    }
+
+    /**
+     * 获取中式星期
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return 中式星期
+     */
+    public static String getChineseWeek(final String time) {
+        return getChineseWeek(string2Date(time, DEFAULT_FORMAT));
+    }
+
+    /**
+     * 获取中式星期
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return 中式星期
+     */
+    public static String getChineseWeek(final String time, final DateFormat format) {
+        return getChineseWeek(string2Date(time, format));
+    }
+
+    /**
+     * 获取中式星期
+     *
+     * @param date Date类型时间
+     * @return 中式星期
+     */
+    public static String getChineseWeek(final Date date) {
+        return new SimpleDateFormat("E", Locale.CHINA).format(date);
+    }
+
+    /**
+     * 获取中式星期
+     *
+     * @param millis 毫秒时间戳
+     * @return 中式星期
+     */
+    public static String getChineseWeek(final long millis) {
+        return getChineseWeek(new Date(millis));
+    }
+
+    /**
+     * 获取美式星期
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return 美式星期
+     */
+    public static String getUSWeek(final String time) {
+        return getUSWeek(string2Date(time, DEFAULT_FORMAT));
+    }
+
+    /**
+     * 获取美式星期
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return 美式星期
+     */
+    public static String getUSWeek(final String time, final DateFormat format) {
+        return getUSWeek(string2Date(time, format));
+    }
+
+    /**
+     * 获取美式星期
+     *
+     * @param date Date类型时间
+     * @return 美式星期
+     */
+    public static String getUSWeek(final Date date) {
+        return new SimpleDateFormat("EEEE", Locale.US).format(date);
+    }
+
+    /**
+     * 获取美式星期
+     *
+     * @param millis 毫秒时间戳
+     * @return 美式星期
+     */
+    public static String getUSWeek(final long millis) {
+        return getUSWeek(new Date(millis));
+    }
+
+    /**
+     * 获取星期索引
+     * <p>注意：周日的Index才是1，周六为7</p>
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return 1...7
+     * @see Calendar#SUNDAY
+     * @see Calendar#MONDAY
+     * @see Calendar#TUESDAY
+     * @see Calendar#WEDNESDAY
+     * @see Calendar#THURSDAY
+     * @see Calendar#FRIDAY
+     * @see Calendar#SATURDAY
+     */
+    public static int getWeekIndex(final String time) {
+        return getWeekIndex(string2Date(time, DEFAULT_FORMAT));
+    }
+
+    /**
+     * 获取星期索引
+     * <p>注意：周日的Index才是1，周六为7</p>
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return 1...7
+     * @see Calendar#SUNDAY
+     * @see Calendar#MONDAY
+     * @see Calendar#TUESDAY
+     * @see Calendar#WEDNESDAY
+     * @see Calendar#THURSDAY
+     * @see Calendar#FRIDAY
+     * @see Calendar#SATURDAY
+     */
+    public static int getWeekIndex(final String time, final DateFormat format) {
+        return getWeekIndex(string2Date(time, format));
+    }
+
+    /**
+     * 获取星期索引
+     * <p>注意：周日的Index才是1，周六为7</p>
+     *
+     * @param date Date类型时间
+     * @return 1...7
+     * @see Calendar#SUNDAY
+     * @see Calendar#MONDAY
+     * @see Calendar#TUESDAY
+     * @see Calendar#WEDNESDAY
+     * @see Calendar#THURSDAY
+     * @see Calendar#FRIDAY
+     * @see Calendar#SATURDAY
+     */
+    public static int getWeekIndex(final Date date) {
+        Calendar cal = Calendar.getInstance();
+        cal.setTime(date);
+        return cal.get(Calendar.DAY_OF_WEEK);
+    }
+
+    /**
+     * 获取星期索引
+     * <p>注意：周日的Index才是1，周六为7</p>
+     *
+     * @param millis 毫秒时间戳
+     * @return 1...7
+     * @see Calendar#SUNDAY
+     * @see Calendar#MONDAY
+     * @see Calendar#TUESDAY
+     * @see Calendar#WEDNESDAY
+     * @see Calendar#THURSDAY
+     * @see Calendar#FRIDAY
+     * @see Calendar#SATURDAY
+     */
+    public static int getWeekIndex(final long millis) {
+        return getWeekIndex(millis2Date(millis));
+    }
+
+    /**
+     * 获取月份中的第几周
+     * <p>注意：国外周日才是新的一周的开始</p>
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return 1...5
+     */
+    public static int getWeekOfMonth(final String time) {
+        return getWeekOfMonth(string2Date(time, DEFAULT_FORMAT));
+    }
+
+    /**
+     * 获取月份中的第几周
+     * <p>注意：国外周日才是新的一周的开始</p>
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return 1...5
+     */
+    public static int getWeekOfMonth(final String time, final DateFormat format) {
+        return getWeekOfMonth(string2Date(time, format));
+    }
+
+    /**
+     * 获取月份中的第几周
+     * <p>注意：国外周日才是新的一周的开始</p>
+     *
+     * @param date Date类型时间
+     * @return 1...5
+     */
+    public static int getWeekOfMonth(final Date date) {
+        Calendar cal = Calendar.getInstance();
+        cal.setTime(date);
+        return cal.get(Calendar.WEEK_OF_MONTH);
+    }
+
+    /**
+     * 获取月份中的第几周
+     * <p>注意：国外周日才是新的一周的开始</p>
+     *
+     * @param millis 毫秒时间戳
+     * @return 1...5
+     */
+    public static int getWeekOfMonth(final long millis) {
+        return getWeekOfMonth(millis2Date(millis));
+    }
+
+    /**
+     * 获取年份中的第几周
+     * <p>注意：国外周日才是新的一周的开始</p>
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return 1...54
+     */
+    public static int getWeekOfYear(final String time) {
+        return getWeekOfYear(string2Date(time, DEFAULT_FORMAT));
+    }
+
+    /**
+     * 获取年份中的第几周
+     * <p>注意：国外周日才是新的一周的开始</p>
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return 1...54
+     */
+    public static int getWeekOfYear(final String time, final DateFormat format) {
+        return getWeekOfYear(string2Date(time, format));
+    }
+
+    /**
+     * 获取年份中的第几周
+     * <p>注意：国外周日才是新的一周的开始</p>
+     *
+     * @param date Date类型时间
+     * @return 1...54
+     */
+    public static int getWeekOfYear(final Date date) {
+        Calendar cal = Calendar.getInstance();
+        cal.setTime(date);
+        return cal.get(Calendar.WEEK_OF_YEAR);
+    }
+
+    /**
+     * 获取年份中的第几周
+     * <p>注意：国外周日才是新的一周的开始</p>
+     *
+     * @param millis 毫秒时间戳
+     * @return 1...54
+     */
+    public static int getWeekOfYear(final long millis) {
+        return getWeekOfYear(millis2Date(millis));
+    }
+
+    private static final String[] CHINESE_ZODIAC = {"猴", "鸡", "狗", "猪", "鼠", "牛", "虎", "兔", "龙", "蛇", "马", "羊"};
+
+    /**
+     * 获取生肖
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return 生肖
+     */
+    public static String getChineseZodiac(final String time) {
+        return getChineseZodiac(string2Date(time, DEFAULT_FORMAT));
+    }
+
+    /**
+     * 获取生肖
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return 生肖
+     */
+    public static String getChineseZodiac(final String time, final DateFormat format) {
+        return getChineseZodiac(string2Date(time, format));
+    }
+
+    /**
+     * 获取生肖
+     *
+     * @param date Date类型时间
+     * @return 生肖
+     */
+    public static String getChineseZodiac(final Date date) {
+        Calendar cal = Calendar.getInstance();
+        cal.setTime(date);
+        return CHINESE_ZODIAC[cal.get(Calendar.YEAR) % 12];
+    }
+
+    /**
+     * 获取生肖
+     *
+     * @param millis 毫秒时间戳
+     * @return 生肖
+     */
+    public static String getChineseZodiac(final long millis) {
+        return getChineseZodiac(millis2Date(millis));
+    }
+
+    /**
+     * 获取生肖
+     *
+     * @param year 年
+     * @return 生肖
+     */
+    public static String getChineseZodiac(final int year) {
+        return CHINESE_ZODIAC[year % 12];
+    }
+
+    private static final String[] ZODIAC = {"水瓶座", "双鱼座", "白羊座", "金牛座", "双子座", "巨蟹座", "狮子座", "处女座", "天秤座", "天蝎座", "射手座", "魔羯座"};
+    private static final int[] ZODIAC_FLAGS = {20, 19, 21, 21, 21, 22, 23, 23, 23, 24, 23, 22};
+
+    /**
+     * 获取星座
+     * <p>time格式为yyyy-MM-dd HH:mm:ss</p>
+     *
+     * @param time 时间字符串
+     * @return 生肖
+     */
+    public static String getZodiac(final String time) {
+        return getZodiac(string2Date(time, DEFAULT_FORMAT));
+    }
+
+    /**
+     * 获取星座
+     * <p>time格式为format</p>
+     *
+     * @param time   时间字符串
+     * @param format 时间格式
+     * @return 生肖
+     */
+    public static String getZodiac(final String time, final DateFormat format) {
+        return getZodiac(string2Date(time, format));
+    }
+
+    /**
+     * 获取星座
+     *
+     * @param date Date类型时间
+     * @return 星座
+     */
+    public static String getZodiac(final Date date) {
+        Calendar cal = Calendar.getInstance();
+        cal.setTime(date);
+        int month = cal.get(Calendar.MONTH) + 1;
+        int day = cal.get(Calendar.DAY_OF_MONTH);
+        return getZodiac(month, day);
+    }
+
+    /**
+     * 获取星座
+     *
+     * @param millis 毫秒时间戳
+     * @return 星座
+     */
+    public static String getZodiac(final long millis) {
+        return getZodiac(millis2Date(millis));
+    }
+
+    /**
+     * 获取星座
+     *
+     * @param month 月
+     * @param day   日
+     * @return 星座
+     */
+    public static String getZodiac(final int month, final int day) {
+        return ZODIAC[day >= ZODIAC_FLAGS[month - 1]
+                ? month - 1
+                : (month + 10) % 12];
+    }
+
+    private static long timeSpan2Millis(final long timeSpan, @TimeConstants.Unit final int unit) {
+        return timeSpan * unit;
+    }
+
+    private static long millis2TimeSpan(final long millis, @TimeConstants.Unit final int unit) {
+        return millis / unit;
+    }
+
+    private static String millis2FitTimeSpan(long millis, int precision) {
+        if (millis < 0 || precision <= 0) return null;
+        precision = Math.min(precision, 5);
+        String[] units = {"天", "小时", "分钟", "秒", "毫秒"};
+        if (millis == 0) return 0 + units[precision - 1];
+        StringBuilder sb = new StringBuilder();
+        int[] unitLen = {86400000, 3600000, 60000, 1000, 1};
+        for (int i = 0; i < precision; i++) {
+            if (millis >= unitLen[i]) {
+                long mode = millis / unitLen[i];
+                millis -= mode * unitLen[i];
+                sb.append(mode).append(units[i]);
+            }
+        }
+        return sb.toString();
+    }
+}
Index: baselib/src/main/res/layout/common_progress_dialog.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/layout/common_progress_dialog.xml	(revision )
+++ baselib/src/main/res/layout/common_progress_dialog.xml	(revision )
@@ -0,0 +1,61 @@
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:padding="10dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_gravity="center"
+        android:orientation="vertical">
+
+        <TextView
+            android:id="@+id/progress_message"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_gravity="center_horizontal"
+            android:layout_marginTop="20dp"
+            android:textColor="#000000"
+            android:textSize="20sp" />
+
+        <ProgressBar
+            android:id="@+id/progress"
+            style="?android:attr/progressBarStyleHorizontal"
+            android:layout_width="match_parent"
+            android:layout_height="30px"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:layout_marginTop="20dp"
+            android:progressDrawable="@drawable/common_progressdialog_progressbar_background" />
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginBottom="20dp"
+            android:layout_marginTop="10dp"
+            android:gravity="center"
+            android:orientation="horizontal">
+
+            <TextView
+                android:id="@+id/progress_percent"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:gravity="center"
+                android:text="4"
+                android:textColor="@color/red"
+                android:textSize="15sp" />
+
+            <TextView
+                android:id="@+id/progress_number"
+                android:layout_width="250px"
+                android:layout_height="wrap_content"
+                android:layout_marginLeft="120px"
+                android:gravity="center_horizontal"
+                android:textColor="@color/red"
+                android:textSize="30px"
+                android:visibility="gone" />
+        </LinearLayout>
+    </LinearLayout>
+
+</FrameLayout>
\ No newline at end of file
Index: baselib/src/main/res/layout/rl_clear.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/layout/rl_clear.xml	(revision )
+++ baselib/src/main/res/layout/rl_clear.xml	(revision )
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/rl_clear"
+    android:layout_width="match_parent"
+    android:layout_height="100px">
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="100px"
+        android:layout_centerHorizontal="true"
+        android:layout_centerVertical="true"
+        android:clickable="true"
+        android:foreground="?android:attr/selectableItemBackground"
+        android:gravity="center"
+        android:text="加载更多..." />
+
+</RelativeLayout>
Index: app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/.gitignore	(revision )
+++ app/.gitignore	(revision )
@@ -0,0 +1,1 @@
+/build
Index: baselib/src/main/java/com/baselib/utilcode/util/FileIOUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/FileIOUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/FileIOUtils.java	(revision )
@@ -0,0 +1,676 @@
+package com.baselib.utilcode.util;
+
+import java.io.BufferedOutputStream;
+import java.io.BufferedReader;
+import java.io.BufferedWriter;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.FileWriter;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.io.OutputStream;
+import java.io.RandomAccessFile;
+import java.nio.ByteBuffer;
+import java.nio.MappedByteBuffer;
+import java.nio.channels.FileChannel;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2017/06/22
+ *     desc  : 文件读写相关工具类
+ * </pre>
+ */
+public final class FileIOUtils {
+
+    private FileIOUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    private static final String LINE_SEP = System.getProperty("line.separator");
+
+    private static int sBufferSize = 8192;
+
+    /**
+     * 将输入流写入文件
+     *
+     * @param filePath 路径
+     * @param is       输入流
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromIS(final String filePath, final InputStream is) {
+        return writeFileFromIS(getFileByPath(filePath), is, false);
+    }
+
+    /**
+     * 将输入流写入文件
+     *
+     * @param filePath 路径
+     * @param is       输入流
+     * @param append   是否追加在文件末
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromIS(final String filePath, final InputStream is, final boolean append) {
+        return writeFileFromIS(getFileByPath(filePath), is, append);
+    }
+
+    /**
+     * 将输入流写入文件
+     *
+     * @param file 文件
+     * @param is   输入流
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromIS(final File file, final InputStream is) {
+        return writeFileFromIS(file, is, false);
+    }
+
+    /**
+     * 将输入流写入文件
+     *
+     * @param file   文件
+     * @param is     输入流
+     * @param append 是否追加在文件末
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromIS(final File file, final InputStream is, final boolean append) {
+        if (!createOrExistsFile(file) || is == null) return false;
+        OutputStream os = null;
+        try {
+            os = new BufferedOutputStream(new FileOutputStream(file, append));
+            byte data[] = new byte[sBufferSize];
+            int len;
+            while ((len = is.read(data, 0, sBufferSize)) != -1) {
+                os.write(data, 0, len);
+            }
+            return true;
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        } finally {
+            CloseUtils.closeIO(is, os);
+        }
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param filePath 文件路径
+     * @param bytes    字节数组
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByStream(final String filePath, final byte[] bytes) {
+        return writeFileFromBytesByStream(getFileByPath(filePath), bytes, false);
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param filePath 文件路径
+     * @param bytes    字节数组
+     * @param append   是否追加在文件末
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByStream(final String filePath, final byte[] bytes, final boolean append) {
+        return writeFileFromBytesByStream(getFileByPath(filePath), bytes, append);
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param file  文件
+     * @param bytes 字节数组
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByStream(final File file, final byte[] bytes) {
+        return writeFileFromBytesByStream(file, bytes, false);
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param file   文件
+     * @param bytes  字节数组
+     * @param append 是否追加在文件末
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByStream(final File file, final byte[] bytes, final boolean append) {
+        if (bytes == null || !createOrExistsFile(file)) return false;
+        BufferedOutputStream bos = null;
+        try {
+            bos = new BufferedOutputStream(new FileOutputStream(file, append));
+            bos.write(bytes);
+            return true;
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        } finally {
+            CloseUtils.closeIO(bos);
+        }
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param filePath 文件路径
+     * @param bytes    字节数组
+     * @param isForce  是否写入文件
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByChannel(final String filePath, final byte[] bytes, final boolean isForce) {
+        return writeFileFromBytesByChannel(getFileByPath(filePath), bytes, false, isForce);
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param filePath 文件路径
+     * @param bytes    字节数组
+     * @param append   是否追加在文件末
+     * @param isForce  是否写入文件
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByChannel(final String filePath, final byte[] bytes, final boolean append, final boolean isForce) {
+        return writeFileFromBytesByChannel(getFileByPath(filePath), bytes, append, isForce);
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param file    文件
+     * @param bytes   字节数组
+     * @param isForce 是否写入文件
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByChannel(final File file, final byte[] bytes, final boolean isForce) {
+        return writeFileFromBytesByChannel(file, bytes, false, isForce);
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param file    文件
+     * @param bytes   字节数组
+     * @param append  是否追加在文件末
+     * @param isForce 是否写入文件
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByChannel(final File file, final byte[] bytes, final boolean append, final boolean isForce) {
+        if (bytes == null) return false;
+        FileChannel fc = null;
+        try {
+            fc = new FileOutputStream(file, append).getChannel();
+            fc.position(fc.size());
+            fc.write(ByteBuffer.wrap(bytes));
+            if (isForce) fc.force(true);
+            return true;
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        } finally {
+            CloseUtils.closeIO(fc);
+        }
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param filePath 文件路径
+     * @param bytes    字节数组
+     * @param isForce  是否写入文件
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByMap(final String filePath, final byte[] bytes, final boolean isForce) {
+        return writeFileFromBytesByMap(filePath, bytes, false, isForce);
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param filePath 文件路径
+     * @param bytes    字节数组
+     * @param append   是否追加在文件末
+     * @param isForce  是否写入文件
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByMap(final String filePath, final byte[] bytes, final boolean append, final boolean isForce) {
+        return writeFileFromBytesByMap(getFileByPath(filePath), bytes, append, isForce);
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param file    文件
+     * @param bytes   字节数组
+     * @param isForce 是否写入文件
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByMap(final File file, final byte[] bytes, final boolean isForce) {
+        return writeFileFromBytesByMap(file, bytes, false, isForce);
+    }
+
+    /**
+     * 将字节数组写入文件
+     *
+     * @param file    文件
+     * @param bytes   字节数组
+     * @param append  是否追加在文件末
+     * @param isForce 是否写入文件
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromBytesByMap(final File file, final byte[] bytes, final boolean append, final boolean isForce) {
+        if (bytes == null || !createOrExistsFile(file)) return false;
+        FileChannel fc = null;
+        try {
+            fc = new FileOutputStream(file, append).getChannel();
+            MappedByteBuffer mbb = fc.map(FileChannel.MapMode.READ_WRITE, fc.size(), bytes.length);
+            mbb.put(bytes);
+            if (isForce) mbb.force();
+            return true;
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        } finally {
+            CloseUtils.closeIO(fc);
+        }
+    }
+
+    /**
+     * 将字符串写入文件
+     *
+     * @param filePath 文件路径
+     * @param content  写入内容
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromString(final String filePath, final String content) {
+        return writeFileFromString(getFileByPath(filePath), content, false);
+    }
+
+    /**
+     * 将字符串写入文件
+     *
+     * @param filePath 文件路径
+     * @param content  写入内容
+     * @param append   是否追加在文件末
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromString(final String filePath, final String content, final boolean append) {
+        return writeFileFromString(getFileByPath(filePath), content, append);
+    }
+
+    /**
+     * 将字符串写入文件
+     *
+     * @param file    文件
+     * @param content 写入内容
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromString(final File file, final String content) {
+        return writeFileFromString(file, content, false);
+    }
+
+    /**
+     * 将字符串写入文件
+     *
+     * @param file    文件
+     * @param content 写入内容
+     * @param append  是否追加在文件末
+     * @return {@code true}: 写入成功<br>{@code false}: 写入失败
+     */
+    public static boolean writeFileFromString(final File file, final String content, final boolean append) {
+        if (file == null || content == null) return false;
+        if (!createOrExistsFile(file)) return false;
+        BufferedWriter bw = null;
+        try {
+            bw = new BufferedWriter(new FileWriter(file, append));
+            bw.write(content);
+            return true;
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        } finally {
+            CloseUtils.closeIO(bw);
+        }
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // the divide line of write and read
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 读取文件到字符串链表中
+     *
+     * @param filePath 文件路径
+     * @return 字符串链表中
+     */
+    public static List<String> readFile2List(final String filePath) {
+        return readFile2List(getFileByPath(filePath), null);
+    }
+
+    /**
+     * 读取文件到字符串链表中
+     *
+     * @param filePath    文件路径
+     * @param charsetName 编码格式
+     * @return 字符串链表中
+     */
+    public static List<String> readFile2List(final String filePath, final String charsetName) {
+        return readFile2List(getFileByPath(filePath), charsetName);
+    }
+
+    /**
+     * 读取文件到字符串链表中
+     *
+     * @param file 文件
+     * @return 字符串链表中
+     */
+    public static List<String> readFile2List(final File file) {
+        return readFile2List(file, 0, 0x7FFFFFFF, null);
+    }
+
+    /**
+     * 读取文件到字符串链表中
+     *
+     * @param file        文件
+     * @param charsetName 编码格式
+     * @return 字符串链表中
+     */
+    public static List<String> readFile2List(final File file, final String charsetName) {
+        return readFile2List(file, 0, 0x7FFFFFFF, charsetName);
+    }
+
+    /**
+     * 读取文件到字符串链表中
+     *
+     * @param filePath 文件路径
+     * @param st       需要读取的开始行数
+     * @param end      需要读取的结束行数
+     * @return 字符串链表中
+     */
+    public static List<String> readFile2List(final String filePath, final int st, final int end) {
+        return readFile2List(getFileByPath(filePath), st, end, null);
+    }
+
+    /**
+     * 读取文件到字符串链表中
+     *
+     * @param filePath    文件路径
+     * @param st          需要读取的开始行数
+     * @param end         需要读取的结束行数
+     * @param charsetName 编码格式
+     * @return 字符串链表中
+     */
+    public static List<String> readFile2List(final String filePath, final int st, final int end, final String charsetName) {
+        return readFile2List(getFileByPath(filePath), st, end, charsetName);
+    }
+
+    /**
+     * 读取文件到字符串链表中
+     *
+     * @param file 文件
+     * @param st   需要读取的开始行数
+     * @param end  需要读取的结束行数
+     * @return 字符串链表中
+     */
+    public static List<String> readFile2List(final File file, final int st, final int end) {
+        return readFile2List(file, st, end, null);
+    }
+
+    /**
+     * 读取文件到字符串链表中
+     *
+     * @param file        文件
+     * @param st          需要读取的开始行数
+     * @param end         需要读取的结束行数
+     * @param charsetName 编码格式
+     * @return 字符串链表中
+     */
+    public static List<String> readFile2List(final File file, final int st, final int end, final String charsetName) {
+        if (!isFileExists(file)) return null;
+        if (st > end) return null;
+        BufferedReader reader = null;
+        try {
+            String line;
+            int curLine = 1;
+            List<String> list = new ArrayList<>();
+            if (isSpace(charsetName)) {
+                reader = new BufferedReader(new InputStreamReader(new FileInputStream(file)));
+            } else {
+                reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), charsetName));
+            }
+            while ((line = reader.readLine()) != null) {
+                if (curLine > end) break;
+                if (st <= curLine && curLine <= end) list.add(line);
+                ++curLine;
+            }
+            return list;
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        } finally {
+            CloseUtils.closeIO(reader);
+        }
+    }
+
+    /**
+     * 读取文件到字符串中
+     *
+     * @param filePath 文件路径
+     * @return 字符串
+     */
+    public static String readFile2String(final String filePath) {
+        return readFile2String(getFileByPath(filePath), null);
+    }
+
+    /**
+     * 读取文件到字符串中
+     *
+     * @param filePath    文件路径
+     * @param charsetName 编码格式
+     * @return 字符串
+     */
+    public static String readFile2String(final String filePath, final String charsetName) {
+        return readFile2String(getFileByPath(filePath), charsetName);
+    }
+
+    /**
+     * 读取文件到字符串中
+     *
+     * @param file 文件
+     * @return 字符串
+     */
+    public static String readFile2String(final File file) {
+        return readFile2String(file, null);
+    }
+
+    /**
+     * 读取文件到字符串中
+     *
+     * @param file        文件
+     * @param charsetName 编码格式
+     * @return 字符串
+     */
+    public static String readFile2String(final File file, final String charsetName) {
+        if (!isFileExists(file)) return null;
+        BufferedReader reader = null;
+        try {
+            StringBuilder sb = new StringBuilder();
+            if (isSpace(charsetName)) {
+                reader = new BufferedReader(new InputStreamReader(new FileInputStream(file)));
+            } else {
+                reader = new BufferedReader(new InputStreamReader(new FileInputStream(file), charsetName));
+            }
+            String line;
+            if ((line = reader.readLine()) != null) {
+                sb.append(line);
+                while ((line = reader.readLine()) != null) {
+                    sb.append(LINE_SEP).append(line);
+                }
+            }
+            return sb.toString();
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        } finally {
+            CloseUtils.closeIO(reader);
+        }
+    }
+
+    /**
+     * 读取文件到字节数组中
+     *
+     * @param filePath 文件路径
+     * @return 字符数组
+     */
+    public static byte[] readFile2BytesByStream(final String filePath) {
+        return readFile2BytesByStream(getFileByPath(filePath));
+    }
+
+    /**
+     * 读取文件到字节数组中
+     *
+     * @param file 文件
+     * @return 字符数组
+     */
+    public static byte[] readFile2BytesByStream(final File file) {
+        if (!isFileExists(file)) return null;
+        FileInputStream fis = null;
+        ByteArrayOutputStream os = null;
+        try {
+            fis = new FileInputStream(file);
+            os = new ByteArrayOutputStream();
+            byte[] b = new byte[sBufferSize];
+            int len;
+            while ((len = fis.read(b, 0, sBufferSize)) != -1) {
+                os.write(b, 0, len);
+            }
+            return os.toByteArray();
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        } finally {
+            CloseUtils.closeIO(fis, os);
+        }
+    }
+
+    /**
+     * 读取文件到字节数组中
+     *
+     * @param filePath 文件路径
+     * @return 字符数组
+     */
+    public static byte[] readFile2BytesByChannel(final String filePath) {
+        return readFile2BytesByChannel(getFileByPath(filePath));
+    }
+
+    /**
+     * 读取文件到字节数组中
+     *
+     * @param file 文件
+     * @return 字符数组
+     */
+    public static byte[] readFile2BytesByChannel(final File file) {
+        if (!isFileExists(file)) return null;
+        FileChannel fc = null;
+        try {
+            fc = new RandomAccessFile(file, "r").getChannel();
+            ByteBuffer byteBuffer = ByteBuffer.allocate((int) fc.size());
+            while (true) {
+                if (!((fc.read(byteBuffer)) > 0)) break;
+            }
+            return byteBuffer.array();
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        } finally {
+            CloseUtils.closeIO(fc);
+        }
+    }
+
+    /**
+     * 读取文件到字节数组中
+     *
+     * @param filePath 文件路径
+     * @return 字符数组
+     */
+    public static byte[] readFile2BytesByMap(final String filePath) {
+        return readFile2BytesByMap(getFileByPath(filePath));
+    }
+
+    /**
+     * 读取文件到字节数组中
+     *
+     * @param file 文件
+     * @return 字符数组
+     */
+    public static byte[] readFile2BytesByMap(final File file) {
+        if (!isFileExists(file)) return null;
+        FileChannel fc = null;
+        try {
+            fc = new RandomAccessFile(file, "r").getChannel();
+            int size = (int) fc.size();
+            MappedByteBuffer mbb = fc.map(FileChannel.MapMode.READ_ONLY, 0, size).load();
+            byte[] result = new byte[size];
+            mbb.get(result, 0, size);
+            return result;
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        } finally {
+            CloseUtils.closeIO(fc);
+        }
+    }
+
+    /**
+     * 设置缓冲区尺寸
+     *
+     * @param bufferSize 缓冲区大小
+     */
+    public static void setBufferSize(final int bufferSize) {
+        sBufferSize = bufferSize;
+    }
+
+    private static File getFileByPath(final String filePath) {
+        return isSpace(filePath) ? null : new File(filePath);
+    }
+
+    private static boolean createOrExistsFile(final String filePath) {
+        return createOrExistsFile(getFileByPath(filePath));
+    }
+
+    private static boolean createOrExistsFile(final File file) {
+        if (file == null) return false;
+        if (file.exists()) return file.isFile();
+        if (!createOrExistsDir(file.getParentFile())) return false;
+        try {
+            return file.createNewFile();
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    private static boolean createOrExistsDir(final File file) {
+        return file != null && (file.exists() ? file.isDirectory() : file.mkdirs());
+    }
+
+    private static boolean isFileExists(final File file) {
+        return file != null && file.exists();
+    }
+
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+}
Index: app/src/main/res/layout/activity_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_login.xml	(revision )
+++ app/src/main/res/layout/activity_login.xml	(revision )
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <EditText
+            android:id="@+id/et_username"
+            android:layout_marginTop="10dp"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:hint="请输入账号"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+
+        <EditText
+            android:id="@+id/et_password"
+            android:layout_marginTop="10dp"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:inputType="textPassword"
+            android:hint="请输入密码"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+
+
+        <Button
+            android:onClick="btn_login"
+            android:layout_marginTop="10dp"
+            android:layout_marginLeft="10dp"
+            android:layout_marginRight="10dp"
+            android:text="登陆"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content" />
+
+    </LinearLayout>
+
+</LinearLayout>
Index: baselib/src/main/java/com/baselib/takephoto/permission/InvokeListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/permission/InvokeListener.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/permission/InvokeListener.java	(revision )
@@ -0,0 +1,10 @@
+package com.baselib.takephoto.permission;
+
+import com.baselib.takephoto.model.InvokeParam;
+
+/**
+ * 授权管理回调
+ */
+public interface InvokeListener {
+    PermissionManager.TPermissionType invoke(InvokeParam invokeParam);
+}
Index: baselib/src/main/java/com/baselib/uitls/StatusBarUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/uitls/StatusBarUtil.java	(revision )
+++ baselib/src/main/java/com/baselib/uitls/StatusBarUtil.java	(revision )
@@ -0,0 +1,678 @@
+package com.baselib.uitls;
+
+import android.annotation.TargetApi;
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Color;
+import android.os.Build;
+import android.support.annotation.ColorInt;
+import android.support.annotation.IntRange;
+import android.support.design.widget.CoordinatorLayout;
+import android.support.v4.widget.DrawerLayout;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.LinearLayout;
+
+import com.baselib.R;
+
+
+/**
+ * Created by Jaeger on 16/2/14.
+ * <p>
+ * Email: chjie.jaeger@gmail.com
+ * GitHub: https://github.com/laobie
+ */
+public class StatusBarUtil {
+
+    public static final int DEFAULT_STATUS_BAR_ALPHA = 10;//原值为112
+    private static final int FAKE_STATUS_BAR_VIEW_ID = R.id.statusbarutil_fake_status_bar_view;
+    private static final int FAKE_TRANSLUCENT_VIEW_ID = R.id.statusbarutil_translucent_view;
+    private static final int TAG_KEY_HAVE_SET_OFFSET = -123;
+
+    /**
+     * 设置状态栏颜色
+     *
+     * @param activity 需要设置的 activity
+     * @param color    状态栏颜色值
+     */
+    public static void setColor(Activity activity, @ColorInt int color) {
+        setColor(activity, color, DEFAULT_STATUS_BAR_ALPHA);
+    }
+
+    /**
+     * 设置状态栏颜色
+     *
+     * @param activity       需要设置的activity
+     * @param color          状态栏颜色值
+     * @param statusBarAlpha 状态栏透明度
+     */
+
+    public static void setColor(Activity activity, @ColorInt int color, @IntRange(from = 0, to = 255) int statusBarAlpha) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
+            activity.getWindow().clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            activity.getWindow().setStatusBarColor(calculateStatusColor(color, statusBarAlpha));
+        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+
+            ViewGroup contentFrameLayout = (ViewGroup) activity.findViewById(Window.ID_ANDROID_CONTENT);
+            View parentView = contentFrameLayout.getChildAt(0);
+            if (parentView != null && Build.VERSION.SDK_INT >= 14) {
+                parentView.setFitsSystemWindows(true);
+            }
+
+            ViewGroup decorView = (ViewGroup) activity.getWindow().getDecorView();
+            View fakeStatusBarView = decorView.findViewById(FAKE_STATUS_BAR_VIEW_ID);
+            if (fakeStatusBarView != null) {
+                if (fakeStatusBarView.getVisibility() == View.GONE) {
+                    fakeStatusBarView.setVisibility(View.VISIBLE);
+                }
+                fakeStatusBarView.setBackgroundColor(calculateStatusColor(color, statusBarAlpha));
+            } else {
+                decorView.addView(createStatusBarView(activity, color, statusBarAlpha));
+            }
+            setRootView(activity);
+        }
+    }
+
+    /**
+     * 为滑动返回界面设置状态栏颜色
+     *
+     * @param activity 需要设置的activity
+     * @param color    状态栏颜色值
+     */
+    public static void setColorForSwipeBack(Activity activity, int color) {
+        setColorForSwipeBack(activity, color, DEFAULT_STATUS_BAR_ALPHA);
+    }
+
+    /**
+     * 为滑动返回界面设置状态栏颜色
+     *
+     * @param activity       需要设置的activity
+     * @param color          状态栏颜色值
+     * @param statusBarAlpha 状态栏透明度
+     */
+    public static void setColorForSwipeBack(Activity activity, @ColorInt int color,
+                                            @IntRange(from = 0, to = 255) int statusBarAlpha) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+
+            ViewGroup contentView = ((ViewGroup) activity.findViewById(android.R.id.content));
+            View rootView = contentView.getChildAt(0);
+            int statusBarHeight = getStatusBarHeight(activity);
+            if (rootView != null && rootView instanceof CoordinatorLayout) {
+                final CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;
+                if (Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
+                    coordinatorLayout.setFitsSystemWindows(false);
+                    contentView.setBackgroundColor(calculateStatusColor(color, statusBarAlpha));
+                    boolean isNeedRequestLayout = contentView.getPaddingTop() < statusBarHeight;
+                    if (isNeedRequestLayout) {
+                        contentView.setPadding(0, statusBarHeight, 0, 0);
+                        coordinatorLayout.post(new Runnable() {
+                            @Override
+                            public void run() {
+                                coordinatorLayout.requestLayout();
+                            }
+                        });
+                    }
+                } else {
+                    coordinatorLayout.setStatusBarBackgroundColor(calculateStatusColor(color, statusBarAlpha));
+                }
+            } else {
+                contentView.setPadding(0, statusBarHeight, 0, 0);
+                contentView.setBackgroundColor(calculateStatusColor(color, statusBarAlpha));
+            }
+            setTransparentForWindow(activity);
+        }
+    }
+
+    /**
+     * 设置状态栏纯色 不加半透明效果
+     *
+     * @param activity 需要设置的 activity
+     * @param color    状态栏颜色值
+     */
+    public static void setColorNoTranslucent(Activity activity, @ColorInt int color) {
+        setColor(activity, color, 0);
+    }
+
+    /**
+     * 设置状态栏颜色(5.0以下无半透明效果,不建议使用)
+     *
+     * @param activity 需要设置的 activity
+     * @param color    状态栏颜色值
+     */
+    @Deprecated
+    public static void setColorDiff(Activity activity, @ColorInt int color) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {
+            return;
+        }
+        transparentStatusBar(activity);
+        ViewGroup contentView = (ViewGroup) activity.findViewById(android.R.id.content);
+        // 移除半透明矩形,以免叠加
+        View fakeStatusBarView = contentView.findViewById(FAKE_STATUS_BAR_VIEW_ID);
+        if (fakeStatusBarView != null) {
+            if (fakeStatusBarView.getVisibility() == View.GONE) {
+                fakeStatusBarView.setVisibility(View.VISIBLE);
+            }
+            fakeStatusBarView.setBackgroundColor(color);
+        } else {
+            contentView.addView(createStatusBarView(activity, color));
+        }
+        setRootView(activity);
+    }
+
+    /**
+     * 使状态栏半透明
+     * <p>
+     * 适用于图片作为背景的界面,此时需要图片填充到状态栏
+     *
+     * @param activity 需要设置的activity
+     */
+    public static void setTranslucent(Activity activity) {
+        setTranslucent(activity, DEFAULT_STATUS_BAR_ALPHA);
+    }
+
+    /**
+     * 使状态栏半透明
+     * <p>
+     * 适用于图片作为背景的界面,此时需要图片填充到状态栏
+     *
+     * @param activity       需要设置的activity
+     * @param statusBarAlpha 状态栏透明度
+     */
+    public static void setTranslucent(Activity activity, @IntRange(from = 0, to = 255) int statusBarAlpha) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {
+            return;
+        }
+        setTransparent(activity);
+        addTranslucentView(activity, statusBarAlpha);
+    }
+
+    /**
+     * 针对根布局是 CoordinatorLayout, 使状态栏半透明
+     * <p>
+     * 适用于图片作为背景的界面,此时需要图片填充到状态栏
+     *
+     * @param activity       需要设置的activity
+     * @param statusBarAlpha 状态栏透明度
+     */
+    public static void setTranslucentForCoordinatorLayout(Activity activity, @IntRange(from = 0, to = 255) int statusBarAlpha) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {
+            return;
+        }
+        transparentStatusBar(activity);
+        addTranslucentView(activity, statusBarAlpha);
+    }
+
+    /**
+     * 设置状态栏全透明
+     *
+     * @param activity 需要设置的activity
+     */
+    public static void setTransparent(Activity activity) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {
+            return;
+        }
+        transparentStatusBar(activity);
+        setRootView(activity);
+    }
+
+    /**
+     * 使状态栏透明(5.0以上半透明效果,不建议使用)
+     * <p>
+     * 适用于图片作为背景的界面,此时需要图片填充到状态栏
+     *
+     * @param activity 需要设置的activity
+     */
+    @Deprecated
+    public static void setTranslucentDiff(Activity activity) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            // 设置状态栏透明
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            setRootView(activity);
+        }
+    }
+
+    /**
+     * 为DrawerLayout 布局设置状态栏变色
+     *
+     * @param activity     需要设置的activity
+     * @param drawerLayout DrawerLayout
+     * @param color        状态栏颜色值
+     */
+    public static void setColorForDrawerLayout(Activity activity, DrawerLayout drawerLayout, @ColorInt int color) {
+        setColorForDrawerLayout(activity, drawerLayout, color, DEFAULT_STATUS_BAR_ALPHA);
+    }
+
+    /**
+     * 为DrawerLayout 布局设置状态栏颜色,纯色
+     *
+     * @param activity     需要设置的activity
+     * @param drawerLayout DrawerLayout
+     * @param color        状态栏颜色值
+     */
+    public static void setColorNoTranslucentForDrawerLayout(Activity activity, DrawerLayout drawerLayout, @ColorInt int color) {
+        setColorForDrawerLayout(activity, drawerLayout, color, 0);
+    }
+
+    /**
+     * 为DrawerLayout 布局设置状态栏变色
+     *
+     * @param activity       需要设置的activity
+     * @param drawerLayout   DrawerLayout
+     * @param color          状态栏颜色值
+     * @param statusBarAlpha 状态栏透明度
+     */
+    public static void setColorForDrawerLayout(Activity activity, DrawerLayout drawerLayout, @ColorInt int color,
+                                               @IntRange(from = 0, to = 255) int statusBarAlpha) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {
+            return;
+        }
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
+            activity.getWindow().clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            activity.getWindow().setStatusBarColor(Color.TRANSPARENT);
+        } else {
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+        }
+        // 生成一个状态栏大小的矩形
+        // 添加 statusBarView 到布局中
+        ViewGroup contentLayout = (ViewGroup) drawerLayout.getChildAt(0);
+        View fakeStatusBarView = contentLayout.findViewById(FAKE_STATUS_BAR_VIEW_ID);
+        if (fakeStatusBarView != null) {
+            if (fakeStatusBarView.getVisibility() == View.GONE) {
+                fakeStatusBarView.setVisibility(View.VISIBLE);
+            }
+            fakeStatusBarView.setBackgroundColor(color);
+        } else {
+            contentLayout.addView(createStatusBarView(activity, color), 0);
+        }
+        // 内容布局不是 LinearLayout 时,设置padding top
+        if (!(contentLayout instanceof LinearLayout) && contentLayout.getChildAt(1) != null) {
+            contentLayout.getChildAt(1)
+                    .setPadding(contentLayout.getPaddingLeft(), getStatusBarHeight(activity) + contentLayout.getPaddingTop(),
+                            contentLayout.getPaddingRight(), contentLayout.getPaddingBottom());
+        }
+        // 设置属性
+        setDrawerLayoutProperty(drawerLayout, contentLayout);
+        addTranslucentView(activity, statusBarAlpha);
+    }
+
+    /**
+     * 设置 DrawerLayout 属性
+     *
+     * @param drawerLayout              DrawerLayout
+     * @param drawerLayoutContentLayout DrawerLayout 的内容布局
+     */
+    private static void setDrawerLayoutProperty(DrawerLayout drawerLayout, ViewGroup drawerLayoutContentLayout) {
+        ViewGroup drawer = (ViewGroup) drawerLayout.getChildAt(1);
+        drawerLayout.setFitsSystemWindows(false);
+        drawerLayoutContentLayout.setFitsSystemWindows(false);
+        drawerLayoutContentLayout.setClipToPadding(true);
+        drawer.setFitsSystemWindows(false);
+    }
+
+    /**
+     * 为DrawerLayout 布局设置状态栏变色(5.0以下无半透明效果,不建议使用)
+     *
+     * @param activity     需要设置的activity
+     * @param drawerLayout DrawerLayout
+     * @param color        状态栏颜色值
+     */
+    @Deprecated
+    public static void setColorForDrawerLayoutDiff(Activity activity, DrawerLayout drawerLayout, @ColorInt int color) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            // 生成一个状态栏大小的矩形
+            ViewGroup contentLayout = (ViewGroup) drawerLayout.getChildAt(0);
+            View fakeStatusBarView = contentLayout.findViewById(FAKE_STATUS_BAR_VIEW_ID);
+            if (fakeStatusBarView != null) {
+                if (fakeStatusBarView.getVisibility() == View.GONE) {
+                    fakeStatusBarView.setVisibility(View.VISIBLE);
+                }
+                fakeStatusBarView.setBackgroundColor(calculateStatusColor(color, DEFAULT_STATUS_BAR_ALPHA));
+            } else {
+                // 添加 statusBarView 到布局中
+                contentLayout.addView(createStatusBarView(activity, color), 0);
+            }
+            // 内容布局不是 LinearLayout 时,设置padding top
+            if (!(contentLayout instanceof LinearLayout) && contentLayout.getChildAt(1) != null) {
+                contentLayout.getChildAt(1).setPadding(0, getStatusBarHeight(activity), 0, 0);
+            }
+            // 设置属性
+            setDrawerLayoutProperty(drawerLayout, contentLayout);
+        }
+    }
+
+    /**
+     * 为 DrawerLayout 布局设置状态栏透明
+     *
+     * @param activity     需要设置的activity
+     * @param drawerLayout DrawerLayout
+     */
+    public static void setTranslucentForDrawerLayout(Activity activity, DrawerLayout drawerLayout) {
+        setTranslucentForDrawerLayout(activity, drawerLayout, DEFAULT_STATUS_BAR_ALPHA);
+    }
+
+    /**
+     * 为 DrawerLayout 布局设置状态栏透明
+     *
+     * @param activity     需要设置的activity
+     * @param drawerLayout DrawerLayout
+     */
+    public static void setTranslucentForDrawerLayout(Activity activity, DrawerLayout drawerLayout,
+                                                     @IntRange(from = 0, to = 255) int statusBarAlpha) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {
+            return;
+        }
+        setTransparentForDrawerLayout(activity, drawerLayout);
+        addTranslucentView(activity, statusBarAlpha);
+    }
+
+    /**
+     * 为 DrawerLayout 布局设置状态栏透明
+     *
+     * @param activity     需要设置的activity
+     * @param drawerLayout DrawerLayout
+     */
+    public static void setTransparentForDrawerLayout(Activity activity, DrawerLayout drawerLayout) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {
+            return;
+        }
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
+            activity.getWindow().clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            activity.getWindow().setStatusBarColor(Color.TRANSPARENT);
+        } else {
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+        }
+
+        ViewGroup contentLayout = (ViewGroup) drawerLayout.getChildAt(0);
+        // 内容布局不是 LinearLayout 时,设置padding top
+        if (!(contentLayout instanceof LinearLayout) && contentLayout.getChildAt(1) != null) {
+            contentLayout.getChildAt(1).setPadding(0, getStatusBarHeight(activity), 0, 0);
+        }
+
+        // 设置属性
+        setDrawerLayoutProperty(drawerLayout, contentLayout);
+    }
+
+    /**
+     * 为 DrawerLayout 布局设置状态栏透明(5.0以上半透明效果,不建议使用)
+     *
+     * @param activity     需要设置的activity
+     * @param drawerLayout DrawerLayout
+     */
+    @Deprecated
+    public static void setTranslucentForDrawerLayoutDiff(Activity activity, DrawerLayout drawerLayout) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            // 设置状态栏透明
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            // 设置内容布局属性
+            ViewGroup contentLayout = (ViewGroup) drawerLayout.getChildAt(0);
+            contentLayout.setFitsSystemWindows(true);
+            contentLayout.setClipToPadding(true);
+            // 设置抽屉布局属性
+            ViewGroup vg = (ViewGroup) drawerLayout.getChildAt(1);
+            vg.setFitsSystemWindows(false);
+            // 设置 DrawerLayout 属性
+            drawerLayout.setFitsSystemWindows(false);
+        }
+    }
+
+    /**
+     * 为头部是 ImageView 的界面设置状态栏全透明
+     *
+     * @param activity       需要设置的activity
+     * @param needOffsetView 需要向下偏移的 View
+     */
+    public static void setTransparentForImageView(Activity activity, View needOffsetView) {
+        setTranslucentForImageView(activity, 0, needOffsetView);
+    }
+
+    /**
+     * 为头部是 ImageView 的界面设置状态栏透明(使用默认透明度)
+     *
+     * @param activity       需要设置的activity
+     * @param needOffsetView 需要向下偏移的 View
+     */
+    public static void setTranslucentForImageView(Activity activity, View needOffsetView) {
+        setTranslucentForImageView(activity, DEFAULT_STATUS_BAR_ALPHA, needOffsetView);
+    }
+
+    /**
+     * 为头部是 ImageView 的界面设置状态栏透明
+     *
+     * @param activity       需要设置的activity
+     * @param statusBarAlpha 状态栏透明度
+     * @param needOffsetView 需要向下偏移的 View
+     */
+    public static void setTranslucentForImageView(Activity activity, @IntRange(from = 0, to = 255) int statusBarAlpha,
+                                                  View needOffsetView) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) {
+            return;
+        }
+        setTransparentForWindow(activity);
+        addTranslucentView(activity, statusBarAlpha);
+        if (needOffsetView != null) {
+            Object haveSetOffset = needOffsetView.getTag(TAG_KEY_HAVE_SET_OFFSET);
+            if (haveSetOffset != null && (Boolean) haveSetOffset) {
+                return;
+            }
+            ViewGroup.MarginLayoutParams layoutParams = (ViewGroup.MarginLayoutParams) needOffsetView.getLayoutParams();
+            layoutParams.setMargins(layoutParams.leftMargin, layoutParams.topMargin + getStatusBarHeight(activity),
+                    layoutParams.rightMargin, layoutParams.bottomMargin);
+            needOffsetView.setTag(TAG_KEY_HAVE_SET_OFFSET, true);
+        }
+    }
+
+    /**
+     * 为 fragment 头部是 ImageView 的设置状态栏透明
+     *
+     * @param activity       fragment 对应的 activity
+     * @param needOffsetView 需要向下偏移的 View
+     */
+    public static void setTranslucentForImageViewInFragment(Activity activity, View needOffsetView) {
+        setTranslucentForImageViewInFragment(activity, DEFAULT_STATUS_BAR_ALPHA, needOffsetView);
+    }
+
+    /**
+     * 为 fragment 头部是 ImageView 的设置状态栏透明
+     *
+     * @param activity       fragment 对应的 activity
+     * @param needOffsetView 需要向下偏移的 View
+     */
+    public static void setTransparentForImageViewInFragment(Activity activity, View needOffsetView) {
+        setTranslucentForImageViewInFragment(activity, 0, needOffsetView);
+    }
+
+    /**
+     * 为 fragment 头部是 ImageView 的设置状态栏透明
+     *
+     * @param activity       fragment 对应的 activity
+     * @param statusBarAlpha 状态栏透明度
+     * @param needOffsetView 需要向下偏移的 View
+     */
+    public static void setTranslucentForImageViewInFragment(Activity activity, @IntRange(from = 0, to = 255) int statusBarAlpha,
+                                                            View needOffsetView) {
+        setTranslucentForImageView(activity, statusBarAlpha, needOffsetView);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT && Build.VERSION.SDK_INT < Build.VERSION_CODES.LOLLIPOP) {
+            clearPreviousSetting(activity);
+        }
+    }
+
+    /**
+     * 隐藏伪状态栏 View
+     *
+     * @param activity 调用的 Activity
+     */
+    public static void hideFakeStatusBarView(Activity activity) {
+        ViewGroup decorView = (ViewGroup) activity.getWindow().getDecorView();
+        View fakeStatusBarView = decorView.findViewById(FAKE_STATUS_BAR_VIEW_ID);
+        if (fakeStatusBarView != null) {
+            fakeStatusBarView.setVisibility(View.GONE);
+        }
+        View fakeTranslucentView = decorView.findViewById(FAKE_TRANSLUCENT_VIEW_ID);
+        if (fakeTranslucentView != null) {
+            fakeTranslucentView.setVisibility(View.GONE);
+        }
+    }
+
+    ///////////////////////////////////////////////////////////////////////////////////
+
+    @TargetApi(Build.VERSION_CODES.KITKAT)
+    private static void clearPreviousSetting(Activity activity) {
+        ViewGroup decorView = (ViewGroup) activity.getWindow().getDecorView();
+        View fakeStatusBarView = decorView.findViewById(FAKE_STATUS_BAR_VIEW_ID);
+        if (fakeStatusBarView != null) {
+            decorView.removeView(fakeStatusBarView);
+            ViewGroup rootView = (ViewGroup) ((ViewGroup) activity.findViewById(android.R.id.content)).getChildAt(0);
+            rootView.setPadding(0, 0, 0, 0);
+        }
+    }
+
+    /**
+     * 添加半透明矩形条
+     *
+     * @param activity       需要设置的 activity
+     * @param statusBarAlpha 透明值
+     */
+    private static void addTranslucentView(Activity activity, @IntRange(from = 0, to = 255) int statusBarAlpha) {
+        ViewGroup contentView = (ViewGroup) activity.findViewById(android.R.id.content);
+        View fakeTranslucentView = contentView.findViewById(FAKE_TRANSLUCENT_VIEW_ID);
+        if (fakeTranslucentView != null) {
+            if (fakeTranslucentView.getVisibility() == View.GONE) {
+                fakeTranslucentView.setVisibility(View.VISIBLE);
+            }
+            fakeTranslucentView.setBackgroundColor(Color.argb(statusBarAlpha, 0, 0, 0));
+        } else {
+            contentView.addView(createTranslucentStatusBarView(activity, statusBarAlpha));
+        }
+    }
+
+    /**
+     * 生成一个和状态栏大小相同的彩色矩形条
+     *
+     * @param activity 需要设置的 activity
+     * @param color    状态栏颜色值
+     * @return 状态栏矩形条
+     */
+    private static View createStatusBarView(Activity activity, @ColorInt int color) {
+        return createStatusBarView(activity, color, 0);
+    }
+
+    /**
+     * 生成一个和状态栏大小相同的半透明矩形条
+     *
+     * @param activity 需要设置的activity
+     * @param color    状态栏颜色值
+     * @param alpha    透明值
+     * @return 状态栏矩形条
+     */
+    private static View createStatusBarView(Activity activity, @ColorInt int color, int alpha) {
+        // 绘制一个和状态栏一样高的矩形
+        View statusBarView = new View(activity);
+        LinearLayout.LayoutParams params =
+                new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, getStatusBarHeight(activity));
+        statusBarView.setLayoutParams(params);
+        statusBarView.setBackgroundColor(calculateStatusColor(color, alpha));
+        statusBarView.setId(FAKE_STATUS_BAR_VIEW_ID);
+        return statusBarView;
+    }
+
+    /**
+     * 设置根布局参数
+     */
+    private static void setRootView(Activity activity) {
+        ViewGroup parent = (ViewGroup) activity.findViewById(android.R.id.content);
+        for (int i = 0, count = parent.getChildCount(); i < count; i++) {
+            View childView = parent.getChildAt(i);
+            if (childView instanceof ViewGroup) {
+                childView.setFitsSystemWindows(true);
+                ((ViewGroup) childView).setClipToPadding(true);
+            }
+        }
+    }
+
+    /**
+     * 设置透明
+     */
+    private static void setTransparentForWindow(Activity activity) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            activity.getWindow().setStatusBarColor(Color.TRANSPARENT);
+            activity.getWindow()
+                    .getDecorView()
+                    .setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
+        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
+            activity.getWindow()
+                    .setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS, WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+        }
+    }
+
+    /**
+     * 使状态栏透明
+     */
+    @TargetApi(Build.VERSION_CODES.KITKAT)
+    private static void transparentStatusBar(Activity activity) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);
+            activity.getWindow().clearFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION);
+            activity.getWindow().setStatusBarColor(Color.TRANSPARENT);
+        } else {
+            activity.getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+        }
+    }
+
+    /**
+     * 创建半透明矩形 View
+     *
+     * @param alpha 透明值
+     * @return 半透明 View
+     */
+    private static View createTranslucentStatusBarView(Activity activity, int alpha) {
+        // 绘制一个和状态栏一样高的矩形
+        View statusBarView = new View(activity);
+        LinearLayout.LayoutParams params =
+                new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, getStatusBarHeight(activity));
+        statusBarView.setLayoutParams(params);
+        statusBarView.setBackgroundColor(Color.argb(alpha, 0, 0, 0));
+        statusBarView.setId(FAKE_TRANSLUCENT_VIEW_ID);
+        return statusBarView;
+    }
+
+    /**
+     * 获取状态栏高度
+     *
+     * @param context context
+     * @return 状态栏高度
+     */
+    private static int getStatusBarHeight(Context context) {
+        // 获得状态栏高度
+        int resourceId = context.getResources().getIdentifier("status_bar_height", "dimen", "android");
+        return context.getResources().getDimensionPixelSize(resourceId);
+    }
+
+    /**
+     * 计算状态栏颜色
+     *
+     * @param color color值
+     * @param alpha alpha值
+     * @return 最终的状态栏颜色
+     */
+    private static int calculateStatusColor(@ColorInt int color, int alpha) {
+        if (alpha == 0) {
+            return color;
+        }
+        float a = 1 - alpha / 255f;
+        int red = color >> 16 & 0xff;
+        int green = color >> 8 & 0xff;
+        int blue = color & 0xff;
+        red = (int) (red * a + 0.5);
+        green = (int) (green * a + 0.5);
+        blue = (int) (blue * a + 0.5);
+        return 0xff << 24 | red << 16 | green << 8 | blue;
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCalendar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCalendar.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCalendar.java	(revision )
@@ -0,0 +1,141 @@
+package com.baselib.ui.widget.mydatepicker;
+
+import java.util.Calendar;
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * 月历抽象父类
+ * 继承该类可以实现自己的日历对象
+ * 作者: liuhuaqian on 2017/9/23.
+ */
+
+public abstract class DPCalendar {
+    protected final Calendar c = Calendar.getInstance();
+
+    /**
+     * 获取某年某月的节日数组
+     * <p/>
+     * Build the festival date array of given year and month
+     *
+     * @param year  某年
+     * @param month 某月
+     * @return 该月节日数组
+     */
+    public abstract String[][] buildMonthFestival(int year, int month);
+
+    /**
+     * 获取某年某月的假期数组
+     * <p/>
+     * Build the holiday date array of given year and month
+     *
+     * @param year  某年
+     * @param month 某月
+     * @return 该月假期数组
+     */
+    public abstract Set<String> buildMonthHoliday(int year, int month);
+
+    /**
+     * 判断某年是否为闰年
+     *
+     * @param year ...
+     * @return true表示闰年
+     */
+    public boolean isLeapYear(int year) {
+        return (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0));
+    }
+
+    /**
+     * 判断给定日期是否为今天
+     *
+     * @param year  某年
+     * @param month 某月
+     * @param day   某天
+     * @return ...
+     */
+    public boolean isToday(int year, int month, int day) {
+        Calendar c1 = Calendar.getInstance();
+        Calendar c2 = Calendar.getInstance();
+        c1.set(year, month - 1, day);
+        return (c1.get(Calendar.YEAR) == c2.get(Calendar.YEAR)) &&
+                (c1.get(Calendar.MONTH) == (c2.get(Calendar.MONTH))) &&
+                (c1.get(Calendar.DAY_OF_MONTH) == c2.get(Calendar.DAY_OF_MONTH));
+    }
+
+    /**
+     * 生成某年某月的公历天数数组
+     * 数组为6x7的二维数组因为一个月的周数永远不会超过六周
+     * 天数填充对应相应的二维数组下标
+     * 如果某个数组下标中没有对应天数那么则填充一个空字符串
+     *
+     * @param year  某年
+     * @param month 某月
+     * @return 某年某月的公历天数数组
+     */
+    public String[][] buildMonthG(int year, int month) {
+        c.clear();
+        String tmp[][] = new String[6][7];
+        c.set(year, month - 1, 1);
+
+        int daysInMonth = 0;
+        if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 ||
+                month == 12) {
+            daysInMonth = 31;
+        } else if (month == 4 || month == 6 || month == 9 || month == 11) {
+            daysInMonth = 30;
+        } else if (month == 2) {
+            if (isLeapYear(year)) {
+                daysInMonth = 29;
+            } else {
+                daysInMonth = 28;
+            }
+        }
+        int dayOfWeek = c.get(Calendar.DAY_OF_WEEK) - Calendar.SUNDAY;
+        int day = 1;
+        for (int i = 0; i < 6; i++) {
+            for (int j = 0; j < 7; j++) {
+                tmp[i][j] = "";
+                if (i == 0 && j >= dayOfWeek) {
+                    tmp[i][j] = "" + day;
+                    day++;
+                } else if (i > 0 && day <= daysInMonth) {
+                    tmp[i][j] = "" + day;
+                    day++;
+                }
+            }
+        }
+        return tmp;
+    }
+
+    /**
+     * 生成某年某月的周末日期集合
+     *
+     * @param year  某年
+     * @param month 某月
+     * @return 某年某月的周末日期集合
+     */
+    public Set<String> buildMonthWeekend(int year, int month) {
+        Set<String> set = new HashSet<>();
+        c.clear();
+        c.set(year, month - 1, 1);
+        do {
+            int day = c.get(Calendar.DAY_OF_WEEK);
+            if (day == Calendar.SATURDAY || day == Calendar.SUNDAY) {
+                set.add(String.valueOf(c.get(Calendar.DAY_OF_MONTH)));
+            }
+            c.add(Calendar.DAY_OF_YEAR, 1);
+        } while (c.get(Calendar.MONTH) == month - 1);
+        return set;
+    }
+
+    protected long GToNum(int year, int month, int day) {
+        month = (month + 9) % 12;
+        year = year - month / 10;
+        return 365 * year + year / 4 - year / 100 + year / 400 + (month * 306 + 5) / 10 + (day - 1);
+    }
+
+    protected int getBitInt(int data, int length, int shift) {
+        return (data & (((1 << length) - 1) << shift)) >> shift;
+    }
+}
+
Index: app/src/main/res/layout/activity_glide_and_picasso.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_glide_and_picasso.xml	(revision )
+++ app/src/main/res/layout/activity_glide_and_picasso.xml	(revision )
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context="com.b3ad.yuxie.myapplication.activity.GlideAndPicassoActivity">
+
+    <ImageView
+        android:id="@+id/iv_glide"
+        android:layout_width="match_parent"
+        android:layout_height="200dp"
+        android:layout_marginLeft="5dp"
+        android:layout_marginRight="5dp"
+        android:src="@mipmap/ic_launcher" />
+
+    <ImageView
+        android:id="@+id/iv_picasso"
+        android:layout_width="match_parent"
+        android:layout_height="200dp"
+        android:layout_marginLeft="5dp"
+        android:layout_marginRight="5dp"
+        android:src="@mipmap/ic_launcher" />
+
+</LinearLayout>
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision )
+++ build.gradle	(revision )
@@ -0,0 +1,32 @@
+// Top-level build file where you can add configuration options common to all sub-projects/modules.
+
+// In your root build.gradle file:
+buildscript {
+
+    dependencies {
+        classpath 'com.android.tools.build:gradle:3.0.1'
+        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2' // add plugin
+    }
+    repositories {
+        google()
+        jcenter()
+        mavenCentral() // add repository
+    }
+
+    allprojects {
+        repositories {
+            maven { url "https://jitpack.io" }
+        }
+    }
+}
+
+allprojects {
+    repositories {
+        google()
+        jcenter()
+    }
+}
+
+task clean(type: Delete) {
+    delete rootProject.buildDir
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/Login/model/LoginModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/Login/model/LoginModel.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/Login/model/LoginModel.java	(revision )
@@ -0,0 +1,27 @@
+package com.b3ad.yuxie.myapplication.Login.model;
+
+import android.text.TextUtils;
+
+import com.b3ad.yuxie.myapplication.Login.contract.LoginContract;
+import com.b3ad.yuxie.myapplication.Login.presenter.LoginPresenter;
+
+/**
+ * Created by Administrator on 2017/7/25.
+ */
+
+public class LoginModel implements LoginContract.Model {
+    @Override
+    public void login(String name, String psw, LoginPresenter mLoginPresenter) {
+            if (TextUtils.isEmpty(name)){
+                mLoginPresenter.onfail("用户名不能为空!");
+                return;
+            }
+            if (TextUtils.isEmpty(psw)){
+                mLoginPresenter.onfail("密码不能为空!");
+                return;
+            }
+            if(name.equals("admin")&&psw.equals("admin")){
+                mLoginPresenter.onSuccess();
+            }
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/application/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/application/App.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/application/App.java	(revision )
@@ -0,0 +1,66 @@
+package com.b3ad.yuxie.myapplication.application;
+
+import android.app.Application;
+import android.content.Context;
+import android.os.Environment;
+
+import com.b3ad.yuxie.myapplication.utils.Utils;
+import com.baselib.baseapp.BaseApplication;
+
+import java.io.File;
+
+/**
+ * Created by Administrator on 2017/7/13.
+ */
+
+public class App extends BaseApplication {
+    private static Context mContext;
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        mContext = getApplicationContext();
+
+        //初始化工具类
+//        Utils utils=new Utils(getApplicationContext());
+
+        //配置okhttp3
+//        initOkhttp3();
+    }
+
+    public static Context getContext() {
+        return mContext;
+    }
+
+    /**
+     * 初始化okhttp3,工具类配置
+     */
+    public void initOkhttp3() {
+        String downloadFileDir = Environment.getExternalStorageDirectory().getPath() + "/okHttp_download/";
+        String cacheDir = Environment.getExternalStorageDirectory().getPath();
+        if (getExternalCacheDir() != null) {
+            //缓存目录，APP卸载后会自动删除缓存数据
+            cacheDir = getExternalCacheDir().getPath();
+        }
+//        OkHttpUtil.init(this)
+//                .setConnectTimeout(15)//连接超时时间
+//                .setWriteTimeout(15)//写超时时间
+//                .setReadTimeout(15)//读超时时间
+//                .setMaxCacheSize(10 * 1024 * 1024)//缓存空间大小
+//                .setCacheType(CacheType.FORCE_NETWORK)//缓存类型
+//                .setHttpLogTAG("HttpLog")//设置请求日志标识
+//                .setIsGzip(false)//Gzip压缩，需要服务端支持
+//                .setShowHttpLog(true)//显示请求日志
+//                .setShowLifecycleLog(false)//显示Activity销毁日志
+//                .setRetryOnConnectionFailure(false)//失败后不自动重连
+//                .setCachedDir(new File(cacheDir, "okHttp_cache"))//缓存目录
+//                .setDownloadFileDir(downloadFileDir)//文件下载保存目录
+//                .setResponseEncoding(Encoding.UTF_8)//设置全局的服务器响应编码
+//                .setRequestEncoding(Encoding.UTF_8)//设置全局的请求参数编码
+////                .addResultInterceptor(HttpInterceptor.ResultInterceptor)//请求结果拦截器
+////                .addExceptionInterceptor(HttpInterceptor.ExceptionInterceptor)//请求链路异常拦截器
+//                .setCookieJar(new PersistentCookieJar(new SetCookieCache(), new SharedPrefsCookiePersistor(this)))//持久化cookie
+//                .build();
+    }
+
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/activity/WebViewJsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/activity/WebViewJsActivity.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/activity/WebViewJsActivity.java	(revision )
@@ -0,0 +1,174 @@
+package com.b3ad.yuxie.myapplication.activity;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.net.Uri;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.KeyEvent;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.webkit.DownloadListener;
+import android.webkit.JsPromptResult;
+import android.webkit.JsResult;
+import android.webkit.WebChromeClient;
+import android.webkit.WebResourceRequest;
+import android.webkit.WebSettings;
+import android.webkit.WebView;
+import android.webkit.WebViewClient;
+import android.widget.EditText;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.b3ad.yuxie.myapplication.R;
+
+public class WebViewJsActivity extends AppCompatActivity {
+
+    WebView wvTestJs;
+    ProgressBar pbLoadUrl;
+    Context mContext = this;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_web_view_js);
+
+        wvTestJs = (WebView) findViewById(R.id.wv_test_js);
+        pbLoadUrl = (ProgressBar) findViewById(R.id.pb_load_url);
+
+        //获得WebSetting对象,支持js脚本,可访问文件,支持缩放,以及编码方式
+        WebSettings webSettings = wvTestJs.getSettings();
+        webSettings.setJavaScriptEnabled(true);//设置支持js脚本
+        webSettings.setAllowFileAccess(true);//设置允许访问文件数据库
+        webSettings.setBuiltInZoomControls(true);//设置支持缩放
+        webSettings.setDefaultTextEncodingName("UTF-8");//设置默认编码
+
+        wvTestJs.setWebViewClient(new WebViewClient());//处理网页加载
+        wvTestJs.setWebChromeClient(new MyWebChromeClient());//处理js
+        wvTestJs.setDownloadListener(new MyDowoloadListener());//处理下载监听
+        wvTestJs.loadUrl("file:///android_asset/jsdemo.html");
+
+    }
+
+    public class MyDowoloadListener implements DownloadListener {
+        @Override
+        public void onDownloadStart(String url, String userAgent, String contentDisposition,
+                                    String mimetype, long contentLength) {
+            //调用其它浏览器下载文件(如果没有设置默认浏览器,且安装了多个浏览器,会先弹出选择浏览器)
+            Uri uri = Uri.parse(url);
+            Intent intent = new Intent(Intent.ACTION_VIEW, uri);
+            startActivity(intent);
+        }
+    }
+
+    public class MyWebViewClient extends WebViewClient {
+        //设置在webView点击打开的新网页在当前界面显示,而不跳转到新的浏览器中
+        @Override
+        public boolean shouldOverrideUrlLoading(WebView view, String url) {
+            //覆写shouldOverrideUrlLoading实现内部显示网页
+            view.loadUrl(url);
+            return true;
+        }
+    }
+
+    //这里需要自定义一个类实现WebChromeClient类,并重写三种不同对话框的处理方法
+    //分别重写onJsAlert,onJsConfirm,onJsPrompt方法
+    public class MyWebChromeClient extends WebChromeClient {
+
+        @Override
+        public void onProgressChanged(WebView view, int newProgress) {//实现加载过程显示进度条
+            if (newProgress == 100) {
+                pbLoadUrl.setVisibility(View.GONE);
+            } else {
+                pbLoadUrl.setVisibility(View.VISIBLE);
+                pbLoadUrl.setProgress(newProgress);
+            }
+        }
+
+        @Override
+        public boolean onJsAlert(WebView view, String url, String message,
+                                 final JsResult result) {
+            // onJsAlert  :警告框(WebView上alert无效，需要定制WebChromeClient处理弹出)
+            //创建一个Builder来显示网页中的对话框(仅有确定)
+            new AlertDialog.Builder(mContext).setTitle("Alert对话框").setMessage(message)
+                    .setPositiveButton("确定", new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            result.confirm();
+                        }
+                    }).setCancelable(false).show();
+            return true;
+        }
+
+        @Override
+        public boolean onJsConfirm(WebView view, String url, String message,
+                                   final JsResult result) {
+            //onJsConfirm : 确定框.(有取消和确定)
+            new AlertDialog.Builder(mContext).setTitle("Confirm对话框").setMessage(message)
+                    .setPositiveButton("确定", new DialogInterface.OnClickListener() {
+
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            result.confirm();
+                        }
+                    })
+                    .setNegativeButton("取消", new DialogInterface.OnClickListener() {
+
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            result.cancel();
+                        }
+                    }).setCancelable(false).show();
+            return true;
+        }
+
+        @Override
+        public boolean onJsPrompt(WebView view, String url, String message,
+                                  String defaultValue, final JsPromptResult result) {
+            //可以把输入的文本传回,js脚本 result.confirm(value);
+            //onJsPrompt : 提示框.
+            //①获得一个LayoutInflater对象factory,加载指定布局成相应对象
+            final LayoutInflater inflater = LayoutInflater.from(mContext);
+            final View myview = inflater.inflate(R.layout.prompt_view, null);
+            //设置TextView对应网页中的提示信息,edit设置来自于网页的默认文字
+            ((TextView) myview.findViewById(R.id.text)).setText(message);
+            ((EditText) myview.findViewById(R.id.edit)).setText(defaultValue);
+            //定义对话框上的确定按钮
+            new AlertDialog.Builder(mContext).setTitle("Prompt对话框").setView(myview)
+                    .setPositiveButton("确定", new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            //单机确定后取得输入的值,传给网页处理
+                            String value = ((EditText) myview.findViewById(R.id.edit)).getText().toString();
+                            result.confirm(value);
+                        }
+                    })
+                    .setNegativeButton("取消", new DialogInterface.OnClickListener() {
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            result.cancel();
+                        }
+                    }).show();
+            return true;
+        }
+    }
+
+    //设置返回键动作（防止按返回键直接退出程序)
+    @Override
+    public boolean onKeyDown(int keyCode, KeyEvent event) {
+        if (keyCode == KeyEvent.KEYCODE_BACK) {
+            //当webview不是处于第一页面时，返回上一个页面
+            if (wvTestJs.canGoBack()) {
+                wvTestJs.goBack();
+                return true;
+            }
+//            else {
+//                System.exit(0);//退出应用
+//            }
+        }
+        return super.onKeyDown(keyCode, event);
+    }
+}
Index: baselib/src/main/res/drawable/shape_number_button_left.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/drawable/shape_number_button_left.xml	(revision )
+++ baselib/src/main/res/drawable/shape_number_button_left.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android" android:enterFadeDuration="200" android:exitFadeDuration="200">
+    <item android:state_pressed="true">
+        <shape>
+            <solid android:color="#ebedf0" />
+        </shape>
+    </item>
+
+</selector>
\ No newline at end of file
Index: app/src/main/res/layout/activity_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_view.xml	(revision )
+++ app/src/main/res/layout/activity_view.xml	(revision )
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.b3ad.yuxie.myapplication.activity.ViewActivity">
+
+    <!--<com.b3ad.yuxie.myapplication.view.MyView
+        android:id="@+id/my_view"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content" />-->
+
+    <com.b3ad.yuxie.myapplication.myview.RadarView
+        android:layout_width="300dp"
+        android:layout_height="300dp" />
+    
+</android.support.constraint.ConstraintLayout>
Index: baselib/src/main/java/com/baselib/commonutils/MeasureUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/commonutils/MeasureUtil.java	(revision )
+++ baselib/src/main/java/com/baselib/commonutils/MeasureUtil.java	(revision )
@@ -0,0 +1,20 @@
+package com.baselib.commonutils;
+
+import android.content.Context;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 测量工具类
+ */
+
+public class MeasureUtil {
+    public static int dp2px(Context context, float dp) {
+        float scale = context.getResources().getDisplayMetrics().density;
+        return (int) (dp * scale + 0.5f);
+    }
+
+    public static int px2dp(Context context, float px) {
+        float scale = context.getResources().getDisplayMetrics().density;
+        return (int) (px / scale + 0.5f);
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DatePicker.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DatePicker.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DatePicker.java	(revision )
@@ -0,0 +1,382 @@
+package com.baselib.ui.widget.mydatepicker;
+
+import android.content.Context;
+import android.util.AttributeSet;
+import android.util.TypedValue;
+import android.view.Gravity;
+import android.widget.LinearLayout;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
+import com.baselib.commonutils.MeasureUtil;
+
+import java.util.List;
+
+import static android.view.ViewGroup.LayoutParams.WRAP_CONTENT;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 签到的DatePicker
+ */
+
+public class DatePicker extends LinearLayout {
+    private DPTManager mTManager;// 主题管理器
+    private DPLManager mLManager;// 语言管理器
+
+    private Context mContext;
+
+    private MonthView monthView;// 月视图
+//    private TextView tvYear, tvMonth;// 年份 月份显示
+//    private TextView tvEnsure;// 确定按钮显示
+
+
+//    private TextView myMonth; //左边月份显示
+//    private TextView myTitle; //中间签到文字显示
+//    private RelativeLayout signIn; //右边签到布局
+//    private TextView mySignIn; //签到文字显示
+
+    private boolean isSignIn = false; //是否签到
+
+    private OnClickSignIn onClickSignIn;
+
+    private OnDateSelectedListener onDateSelectedListener;// 日期多选后监听
+
+    /**
+     * 点击签到触发
+     */
+    public interface OnClickSignIn{
+        void signIn();
+    }
+
+    /**
+     * 日期单选监听器
+     */
+    public interface OnDatePickedListener {
+        void onDatePicked(String date);
+    }
+
+    /**
+     * 日期多选监听器
+     */
+    public interface OnDateSelectedListener {
+        void onDateSelected(List<String> date);
+    }
+
+    public DatePicker(Context context) {
+        this(context, null);
+    }
+
+    public DatePicker(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        mTManager = DPTManager.getInstance();
+        mLManager = DPLManager.getInstance();
+
+        mContext = context;
+
+        // 设置排列方向为竖向
+        setOrientation(VERTICAL);
+
+        LayoutParams llParams =
+                new LayoutParams(LayoutParams.MATCH_PARENT, LayoutParams.WRAP_CONTENT);
+
+        // 标题栏根布局
+        RelativeLayout rlTitle = new RelativeLayout(context);
+        rlTitle.setBackgroundColor(mTManager.colorTitleBG());
+        int rlTitlePadding = MeasureUtil.dp2px(context, 10);
+        rlTitle.setPadding(rlTitlePadding, rlTitlePadding, rlTitlePadding, rlTitlePadding);
+
+        // 周视图根布局
+        LinearLayout llWeek = new LinearLayout(context);
+        llWeek.setBackgroundColor(mTManager.colorTitleBG());
+        llWeek.setOrientation(HORIZONTAL);
+        int llWeekPadding = MeasureUtil.dp2px(context, 5);
+        llWeek.setPadding(0, llWeekPadding, 0, llWeekPadding);
+        LayoutParams lpWeek = new LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+        lpWeek.weight = 1;
+
+        // 标题栏子元素布局参数
+//        RelativeLayout.LayoutParams lpYear =
+//                new RelativeLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+//        lpYear.addRule(RelativeLayout.CENTER_VERTICAL);
+//        RelativeLayout.LayoutParams lpMonth =
+//                new RelativeLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+//        lpMonth.addRule(RelativeLayout.CENTER_IN_PARENT);
+//        RelativeLayout.LayoutParams lpEnsure =
+//                new RelativeLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+//        lpEnsure.addRule(RelativeLayout.CENTER_VERTICAL);
+//        lpEnsure.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
+
+        // --------------------------------------------------------------------------------标题栏
+        // 年份显示
+//        tvYear = new TextView(context);
+//        tvYear.setText("2015");
+//        tvYear.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
+//        tvYear.setTextColor(mTManager.colorTitle());
+//
+//        // 月份显示
+//        tvMonth = new TextView(context);
+//        tvMonth.setText("六月");
+//        tvMonth.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 20);
+//        tvMonth.setTextColor(mTManager.colorTitle());
+//
+//        // 确定显示
+//        tvEnsure = new TextView(context);
+//        tvEnsure.setText(mLManager.titleEnsure());
+//        tvEnsure.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
+//        tvEnsure.setTextColor(mTManager.colorTitle());
+//        tvEnsure.setOnClickListener(new OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                if (null != onDateSelectedListener) {
+//                    onDateSelectedListener.onDateSelected(monthView.getDateSelected());
+//                }
+//            }
+//        });
+//
+//        rlTitle.addView(tvYear, lpYear);
+//        rlTitle.addView(tvMonth, lpMonth);
+//        rlTitle.addView(tvEnsure, lpEnsure);
+
+
+        RelativeLayout.LayoutParams lpMyMonth =
+                new RelativeLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+        lpMyMonth.addRule(RelativeLayout.CENTER_VERTICAL);
+        RelativeLayout.LayoutParams lpMyTitle =
+                new RelativeLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+        lpMyTitle.addRule(RelativeLayout.CENTER_IN_PARENT);
+        RelativeLayout.LayoutParams lpSignIn =
+                new RelativeLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+        lpSignIn.addRule(RelativeLayout.CENTER_VERTICAL);
+        lpSignIn.addRule(RelativeLayout.ALIGN_PARENT_RIGHT);
+        RelativeLayout.LayoutParams lpTvSignIn =
+                new RelativeLayout.LayoutParams(WRAP_CONTENT, WRAP_CONTENT);
+        lpTvSignIn.addRule(RelativeLayout.CENTER_VERTICAL);
+
+
+//        myMonth = new TextView(context);
+//        myMonth.setText("1月");
+//        myMonth.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
+//        myMonth.setTextColor(mTManager.colorTitle());
+//
+//        myTitle = new TextView(context);
+//        myTitle.setText("已经连续签到8天");
+//        myTitle.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
+//        myTitle.setTextColor(mTManager.colorTitle());
+
+
+//        signIn = new RelativeLayout(context);
+//        signIn.setPadding(rlTitlePadding, rlTitlePadding, rlTitlePadding, rlTitlePadding);
+        //signIn.setBackgroundDrawable(context.getResources().getDrawable(R.drawable.box_gray_solid));
+
+//        mySignIn = new TextView(context);
+//        //mySignIn.setText("已签到");
+//        mySignIn.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 16);
+//        mySignIn.setTextColor(mTManager.colorTitle());
+//
+//        signIn.addView(mySignIn, lpTvSignIn);
+
+        setRightTitle(isSignIn);
+
+//        signIn.setOnClickListener(new OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                if (!isSignIn) {
+//                    onClickSignIn.signIn();
+//                }
+//            }
+//        });
+
+
+//        rlTitle.addView(myMonth, lpMyMonth);
+////        rlTitle.addView(myTitle, lpMyTitle);
+//        rlTitle.addView(signIn, lpSignIn);
+
+
+//        addView(rlTitle, llParams);
+
+        // --------------------------------------------------------------------------------周视图
+        for (int i = 0; i < mLManager.titleWeek().length; i++) {
+            TextView tvWeek = new TextView(context);
+            tvWeek.setText(mLManager.titleWeek()[i]);
+            tvWeek.setGravity(Gravity.CENTER);
+            tvWeek.setTextSize(TypedValue.COMPLEX_UNIT_DIP, 14);
+            tvWeek.setTextColor(mTManager.colorTitle());
+            llWeek.addView(tvWeek, lpWeek);
+        }
+        addView(llWeek, llParams);
+
+        // ------------------------------------------------------------------------------------月视图
+        monthView = new MonthView(context);
+        monthView.setOnDateChangeListener(new MonthView.OnDateChangeListener() {
+            @Override
+            public void onMonthChange(int month) {
+                //tvMonth.setText(mLManager.titleMonth()[month - 1]);
+            }
+
+            @Override
+            public void onYearChange(int year) {
+                String tmp = String.valueOf(year);
+                if (tmp.startsWith("-")) {
+                    tmp = tmp.replace("-", mLManager.titleBC());
+                }
+                //tvYear.setText(tmp);
+            }
+
+            @Override
+            public void onAllChange(int year, int month) {
+
+            }
+        });
+        addView(monthView, llParams);
+    }
+
+    /**
+     * 设置初始化年月日期
+     *
+     * @param year  ...
+     * @param month ...
+     */
+    public void setDate(int year, int month) {
+        if (month < 1) {
+            month = 1;
+        }
+        if (month > 12) {
+            month = 12;
+        }
+        monthView.setDate(year, month);
+    }
+
+    public void setDPDecor(DPDecor decor) {
+        monthView.setDPDecor(decor);
+    }
+
+    /**
+     * 设置日期选择模式
+     *
+     * @param mode ...
+     */
+    public void setMode(DPMode mode) {
+        if (mode != DPMode.MULTIPLE) {
+            //tvEnsure.setVisibility(GONE);
+        }
+        monthView.setDPMode(mode);
+    }
+
+    /**
+     * 节日标识
+     * @param isFestivalDisplay
+     */
+    public void setFestivalDisplay(boolean isFestivalDisplay) {
+        monthView.setFestivalDisplay(isFestivalDisplay);
+    }
+
+    /**
+     * 今天标识
+     * @param isTodayDisplay
+     */
+    public void setTodayDisplay(boolean isTodayDisplay) {
+        monthView.setTodayDisplay(isTodayDisplay);
+    }
+
+    /**
+     * 假期标识
+     * @param isHolidayDisplay
+     */
+    public void setHolidayDisplay(boolean isHolidayDisplay) {
+        monthView.setHolidayDisplay(isHolidayDisplay);
+    }
+
+    /**
+     * 补休标识
+     * @param isDeferredDisplay
+     */
+    public void setDeferredDisplay(boolean isDeferredDisplay) {
+        monthView.setDeferredDisplay(isDeferredDisplay);
+    }
+
+
+    /**
+     * 是否允许滑动切换日期和年份
+     * @param isScroll
+     */
+    public void setIsScroll(boolean isScroll){
+        monthView.setIsScroll(isScroll);
+    }
+
+
+    public void setIsSelChangeColor(boolean isSelChangeColor,int selChangeTextColor) {
+        monthView.setIsSelChangeColor(isSelChangeColor,selChangeTextColor);
+    }
+
+    /**
+     * 设置单选监听器
+     *
+     * @param onDatePickedListener ...
+     */
+    public void setOnDatePickedListener(OnDatePickedListener onDatePickedListener) {
+        if (monthView.getDPMode() != DPMode.SINGLE) {
+            throw new RuntimeException(
+                    "Current DPMode does not SINGLE! Please call setMode set DPMode to SINGLE!");
+        }
+        monthView.setOnDatePickedListener(onDatePickedListener);
+    }
+
+    /**
+     * 设置多选监听器
+     *
+     * @param onDateSelectedListener ...
+     */
+    public void setOnDateSelectedListener(OnDateSelectedListener onDateSelectedListener) {
+        if (monthView.getDPMode() != DPMode.MULTIPLE) {
+            throw new RuntimeException(
+                    "Current DPMode does not MULTIPLE! Please call setMode set DPMode to MULTIPLE!");
+        }
+        this.onDateSelectedListener = onDateSelectedListener;
+    }
+
+
+    public void setOnClickSignIn(OnClickSignIn onClickSignIn) {
+        this.onClickSignIn = onClickSignIn;
+    }
+
+
+    /**
+     * 左边标题的文字
+     */
+    public void setLeftTitle(String title){
+//        myMonth.setText(title);
+    }
+
+    /**
+     * 中间标题的文字
+     * @param title
+     */
+    public void setMiddleTitle(String title){
+//        myTitle.setText(title);
+    }
+
+
+    /**
+     * 设置右边是否签到
+     * @param flag ture表示签到  false表示未签到
+     */
+    public void setRightTitle(boolean flag){
+        this.isSignIn = flag;
+        if(isSignIn){
+//            mySignIn.setText("已签到");
+//            mySignIn.setTextColor(mContext.getResources().getColor(R.color.colorAccent));
+//            signIn.setBackgroundDrawable(mContext.getResources().getDrawable(R.drawable.box_blue_solid));
+        }else{
+//            mySignIn.setText("未签到");
+//            mySignIn.setTextColor(mContext.getResources().getColor(R.color.gray_normal));
+//            signIn.setBackgroundDrawable(mContext.getResources().getDrawable(R.drawable.box_gray_solid));
+        }
+    }
+
+
+
+
+
+
+
+}
Index: baselib/src/main/java/com/baselib/recycleview/wrapper/EmptyWrapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/wrapper/EmptyWrapper.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/wrapper/EmptyWrapper.java	(revision )
@@ -0,0 +1,121 @@
+package com.baselib.recycleview.wrapper;
+
+import android.support.v7.widget.GridLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.baselib.recycleview.ViewHolder;
+
+
+public class EmptyWrapper<T> extends RecyclerView.Adapter<RecyclerView.ViewHolder>
+{
+    public static final int ITEM_TYPE_EMPTY = Integer.MAX_VALUE - 1;
+
+    private RecyclerView.Adapter mInnerAdapter;
+    private View mEmptyView;
+    private int mEmptyLayoutId;
+
+
+    public EmptyWrapper(RecyclerView.Adapter adapter)
+    {
+        mInnerAdapter = adapter;
+    }
+
+    private boolean isEmpty()
+    {
+        return (mEmptyView != null || mEmptyLayoutId != 0) && mInnerAdapter.getItemCount() == 0;
+    }
+
+    @Override
+    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType)
+    {
+        if (isEmpty())
+        {
+            RecyclerView.ViewHolder holder;
+            if (mEmptyView != null)
+            {
+                holder = ViewHolder.createViewHolder(parent.getContext(), mEmptyView);
+            } else
+            {
+                holder = ViewHolder.createViewHolder(parent.getContext(), parent, mEmptyLayoutId);
+            }
+            return holder;
+        }
+        return mInnerAdapter.onCreateViewHolder(parent, viewType);
+    }
+
+    @Override
+    public void onAttachedToRecyclerView(RecyclerView recyclerView)
+    {
+        WrapperUtils.onAttachedToRecyclerView(mInnerAdapter, recyclerView, new WrapperUtils.SpanSizeCallback()
+        {
+            @Override
+            public int getSpanSize(GridLayoutManager gridLayoutManager, GridLayoutManager.SpanSizeLookup oldLookup, int position)
+            {
+                if (isEmpty())
+                {
+                    return gridLayoutManager.getSpanCount();
+                }
+                if (oldLookup != null)
+                {
+                    return oldLookup.getSpanSize(position);
+                }
+                return 1;
+            }
+        });
+
+
+    }
+
+    @Override
+    public void onViewAttachedToWindow(RecyclerView.ViewHolder holder)
+    {
+        mInnerAdapter.onViewAttachedToWindow(holder);
+        if (isEmpty())
+        {
+            WrapperUtils.setFullSpan(holder);
+        }
+    }
+
+
+    @Override
+    public int getItemViewType(int position)
+    {
+        if (isEmpty())
+        {
+            return ITEM_TYPE_EMPTY;
+        }
+        return mInnerAdapter.getItemViewType(position);
+    }
+
+    @Override
+    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position)
+    {
+        if (isEmpty())
+        {
+            return;
+        }
+        mInnerAdapter.onBindViewHolder(holder, position);
+    }
+
+    @Override
+    public int getItemCount()
+    {
+        if (isEmpty()) return 1;
+        return mInnerAdapter.getItemCount();
+    }
+
+
+
+    public void setEmptyView(View emptyView)
+    {
+        mEmptyView = emptyView;
+    }
+
+    public void setEmptyView(int layoutId)
+    {
+        mEmptyLayoutId = layoutId;
+    }
+
+}
Index: gradlew
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew	(revision )
+++ gradlew	(revision )
@@ -0,0 +1,160 @@
+#!/usr/bin/env bash
+
+##############################################################################
+##
+##  Gradle start up script for UN*X
+##
+##############################################################################
+
+# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+DEFAULT_JVM_OPTS=""
+
+APP_NAME="Gradle"
+APP_BASE_NAME=`basename "$0"`
+
+# Use the maximum available, or set MAX_FD != -1 to use that value.
+MAX_FD="maximum"
+
+warn ( ) {
+    echo "$*"
+}
+
+die ( ) {
+    echo
+    echo "$*"
+    echo
+    exit 1
+}
+
+# OS specific support (must be 'true' or 'false').
+cygwin=false
+msys=false
+darwin=false
+case "`uname`" in
+  CYGWIN* )
+    cygwin=true
+    ;;
+  Darwin* )
+    darwin=true
+    ;;
+  MINGW* )
+    msys=true
+    ;;
+esac
+
+# Attempt to set APP_HOME
+# Resolve links: $0 may be a link
+PRG="$0"
+# Need this for relative symlinks.
+while [ -h "$PRG" ] ; do
+    ls=`ls -ld "$PRG"`
+    link=`expr "$ls" : '.*-> \(.*\)$'`
+    if expr "$link" : '/.*' > /dev/null; then
+        PRG="$link"
+    else
+        PRG=`dirname "$PRG"`"/$link"
+    fi
+done
+SAVED="`pwd`"
+cd "`dirname \"$PRG\"`/" >/dev/null
+APP_HOME="`pwd -P`"
+cd "$SAVED" >/dev/null
+
+CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
+
+# Determine the Java command to use to start the JVM.
+if [ -n "$JAVA_HOME" ] ; then
+    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
+        # IBM's JDK on AIX uses strange locations for the executables
+        JAVACMD="$JAVA_HOME/jre/sh/java"
+    else
+        JAVACMD="$JAVA_HOME/bin/java"
+    fi
+    if [ ! -x "$JAVACMD" ] ; then
+        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+    fi
+else
+    JAVACMD="java"
+    which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+
+Please set the JAVA_HOME variable in your environment to match the
+location of your Java installation."
+fi
+
+# Increase the maximum file descriptors if we can.
+if [ "$cygwin" = "false" -a "$darwin" = "false" ] ; then
+    MAX_FD_LIMIT=`ulimit -H -n`
+    if [ $? -eq 0 ] ; then
+        if [ "$MAX_FD" = "maximum" -o "$MAX_FD" = "max" ] ; then
+            MAX_FD="$MAX_FD_LIMIT"
+        fi
+        ulimit -n $MAX_FD
+        if [ $? -ne 0 ] ; then
+            warn "Could not set maximum file descriptor limit: $MAX_FD"
+        fi
+    else
+        warn "Could not query maximum file descriptor limit: $MAX_FD_LIMIT"
+    fi
+fi
+
+# For Darwin, add options to specify how the application appears in the dock
+if $darwin; then
+    GRADLE_OPTS="$GRADLE_OPTS \"-Xdock:name=$APP_NAME\" \"-Xdock:icon=$APP_HOME/media/gradle.icns\""
+fi
+
+# For Cygwin, switch paths to Windows format before running java
+if $cygwin ; then
+    APP_HOME=`cygpath --path --mixed "$APP_HOME"`
+    CLASSPATH=`cygpath --path --mixed "$CLASSPATH"`
+    JAVACMD=`cygpath --unix "$JAVACMD"`
+
+    # We build the pattern for arguments to be converted via cygpath
+    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`
+    SEP=""
+    for dir in $ROOTDIRSRAW ; do
+        ROOTDIRS="$ROOTDIRS$SEP$dir"
+        SEP="|"
+    done
+    OURCYGPATTERN="(^($ROOTDIRS))"
+    # Add a user-defined pattern to the cygpath arguments
+    if [ "$GRADLE_CYGPATTERN" != "" ] ; then
+        OURCYGPATTERN="$OURCYGPATTERN|($GRADLE_CYGPATTERN)"
+    fi
+    # Now convert the arguments - kludge to limit ourselves to /bin/sh
+    i=0
+    for arg in "$@" ; do
+        CHECK=`echo "$arg"|egrep -c "$OURCYGPATTERN" -`
+        CHECK2=`echo "$arg"|egrep -c "^-"`                                 ### Determine if an option
+
+        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition
+            eval `echo args$i`=`cygpath --path --ignore --mixed "$arg"`
+        else
+            eval `echo args$i`="\"$arg\""
+        fi
+        i=$((i+1))
+    done
+    case $i in
+        (0) set -- ;;
+        (1) set -- "$args0" ;;
+        (2) set -- "$args0" "$args1" ;;
+        (3) set -- "$args0" "$args1" "$args2" ;;
+        (4) set -- "$args0" "$args1" "$args2" "$args3" ;;
+        (5) set -- "$args0" "$args1" "$args2" "$args3" "$args4" ;;
+        (6) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" ;;
+        (7) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" ;;
+        (8) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" ;;
+        (9) set -- "$args0" "$args1" "$args2" "$args3" "$args4" "$args5" "$args6" "$args7" "$args8" ;;
+    esac
+fi
+
+# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules
+function splitJvmOpts() {
+    JVM_OPTS=("$@")
+}
+eval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS
+JVM_OPTS[${#JVM_OPTS[*]}]="-Dorg.gradle.appname=$APP_BASE_NAME"
+
+exec "$JAVACMD" "${JVM_OPTS[@]}" -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
Index: baselib/src/main/java/com/baselib/utilcode/util/PhoneUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/PhoneUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/PhoneUtils.java	(revision )
@@ -0,0 +1,399 @@
+package com.baselib.utilcode.util;
+
+import android.annotation.SuppressLint;
+import android.app.PendingIntent;
+import android.content.ContentResolver;
+import android.content.Context;
+import android.content.Intent;
+import android.database.Cursor;
+import android.net.Uri;
+import android.os.SystemClock;
+import android.telephony.SmsManager;
+import android.telephony.TelephonyManager;
+import android.util.Log;
+import android.util.Xml;
+
+import org.xmlpull.v1.XmlSerializer;
+
+import java.io.File;
+import java.io.FileOutputStream;
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/02
+ *     desc  : 手机相关工具类
+ * </pre>
+ */
+public final class PhoneUtils {
+
+    private PhoneUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 判断设备是否是手机
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isPhone() {
+        TelephonyManager tm = (TelephonyManager) Utils.getApp().getSystemService(Context.TELEPHONY_SERVICE);
+        return tm != null && tm.getPhoneType() != TelephonyManager.PHONE_TYPE_NONE;
+    }
+
+    /**
+     * 获取IMEI码
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.READ_PHONE_STATE"/>}</p>
+     *
+     * @return IMEI码
+     */
+    @SuppressLint("HardwareIds")
+    public static String getIMEI() {
+        TelephonyManager tm = (TelephonyManager) Utils.getApp().getSystemService(Context.TELEPHONY_SERVICE);
+        return tm != null ? tm.getDeviceId() : null;
+    }
+
+    /**
+     * 获取IMSI码
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.READ_PHONE_STATE"/>}</p>
+     *
+     * @return IMSI码
+     */
+    @SuppressLint("HardwareIds")
+    public static String getIMSI() {
+        TelephonyManager tm = (TelephonyManager) Utils.getApp().getSystemService(Context.TELEPHONY_SERVICE);
+        return tm != null ? tm.getSubscriberId() : null;
+    }
+
+    /**
+     * 获取移动终端类型
+     *
+     * @return 手机制式
+     * <ul>
+     * <li>{@link TelephonyManager#PHONE_TYPE_NONE } : 0 手机制式未知</li>
+     * <li>{@link TelephonyManager#PHONE_TYPE_GSM  } : 1 手机制式为GSM，移动和联通</li>
+     * <li>{@link TelephonyManager#PHONE_TYPE_CDMA } : 2 手机制式为CDMA，电信</li>
+     * <li>{@link TelephonyManager#PHONE_TYPE_SIP  } : 3</li>
+     * </ul>
+     */
+    public static int getPhoneType() {
+        TelephonyManager tm = (TelephonyManager) Utils.getApp().getSystemService(Context.TELEPHONY_SERVICE);
+        return tm != null ? tm.getPhoneType() : -1;
+    }
+
+    /**
+     * 判断sim卡是否准备好
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isSimCardReady() {
+        TelephonyManager tm = (TelephonyManager) Utils.getApp().getSystemService(Context.TELEPHONY_SERVICE);
+        return tm != null && tm.getSimState() == TelephonyManager.SIM_STATE_READY;
+    }
+
+    /**
+     * 获取Sim卡运营商名称
+     * <p>中国移动、如中国联通、中国电信</p>
+     *
+     * @return sim卡运营商名称
+     */
+    public static String getSimOperatorName() {
+        TelephonyManager tm = (TelephonyManager) Utils.getApp().getSystemService(Context.TELEPHONY_SERVICE);
+        return tm != null ? tm.getSimOperatorName() : null;
+    }
+
+    /**
+     * 获取Sim卡运营商名称
+     * <p>中国移动、如中国联通、中国电信</p>
+     *
+     * @return 移动网络运营商名称
+     */
+    public static String getSimOperatorByMnc() {
+        TelephonyManager tm = (TelephonyManager) Utils.getApp().getSystemService(Context.TELEPHONY_SERVICE);
+        String operator = tm != null ? tm.getSimOperator() : null;
+        if (operator == null) return null;
+        switch (operator) {
+            case "46000":
+            case "46002":
+            case "46007":
+                return "中国移动";
+            case "46001":
+                return "中国联通";
+            case "46003":
+                return "中国电信";
+            default:
+                return operator;
+        }
+    }
+
+    /**
+     * 获取手机状态信息
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.READ_PHONE_STATE"/>}</p>
+     *
+     * @return DeviceId(IMEI) = 99000311726612<br>
+     * DeviceSoftwareVersion = 00<br>
+     * Line1Number =<br>
+     * NetworkCountryIso = cn<br>
+     * NetworkOperator = 46003<br>
+     * NetworkOperatorName = 中国电信<br>
+     * NetworkType = 6<br>
+     * honeType = 2<br>
+     * SimCountryIso = cn<br>
+     * SimOperator = 46003<br>
+     * SimOperatorName = 中国电信<br>
+     * SimSerialNumber = 89860315045710604022<br>
+     * SimState = 5<br>
+     * SubscriberId(IMSI) = 460030419724900<br>
+     * VoiceMailNumber = *86<br>
+     */
+    @SuppressLint("HardwareIds")
+    public static String getPhoneStatus() {
+        TelephonyManager tm = (TelephonyManager) Utils.getApp()
+                .getSystemService(Context.TELEPHONY_SERVICE);
+        String str = "";
+        str += "DeviceId(IMEI) = " + tm.getDeviceId() + "\n";
+        str += "DeviceSoftwareVersion = " + tm.getDeviceSoftwareVersion() + "\n";
+        str += "Line1Number = " + tm.getLine1Number() + "\n";
+        str += "NetworkCountryIso = " + tm.getNetworkCountryIso() + "\n";
+        str += "NetworkOperator = " + tm.getNetworkOperator() + "\n";
+        str += "NetworkOperatorName = " + tm.getNetworkOperatorName() + "\n";
+        str += "NetworkType = " + tm.getNetworkType() + "\n";
+        str += "PhoneType = " + tm.getPhoneType() + "\n";
+        str += "SimCountryIso = " + tm.getSimCountryIso() + "\n";
+        str += "SimOperator = " + tm.getSimOperator() + "\n";
+        str += "SimOperatorName = " + tm.getSimOperatorName() + "\n";
+        str += "SimSerialNumber = " + tm.getSimSerialNumber() + "\n";
+        str += "SimState = " + tm.getSimState() + "\n";
+        str += "SubscriberId(IMSI) = " + tm.getSubscriberId() + "\n";
+        str += "VoiceMailNumber = " + tm.getVoiceMailNumber() + "\n";
+        return str;
+    }
+
+    /**
+     * 跳至拨号界面
+     *
+     * @param phoneNumber 电话号码
+     */
+    public static void dial(final String phoneNumber) {
+        Utils.getApp().startActivity(IntentUtils.getDialIntent(phoneNumber));
+    }
+
+    /**
+     * 拨打电话
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.CALL_PHONE"/>}</p>
+     *
+     * @param phoneNumber 电话号码
+     */
+    public static void call(final String phoneNumber) {
+        Utils.getApp().startActivity(IntentUtils.getCallIntent(phoneNumber));
+    }
+
+    /**
+     * 跳至发送短信界面
+     *
+     * @param phoneNumber 接收号码
+     * @param content     短信内容
+     */
+    public static void sendSms(final String phoneNumber, final String content) {
+        Utils.getApp().startActivity(IntentUtils.getSendSmsIntent(phoneNumber, content));
+    }
+
+    /**
+     * 发送短信
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.SEND_SMS"/>}</p>
+     *
+     * @param phoneNumber 接收号码
+     * @param content     短信内容
+     */
+    public static void sendSmsSilent(final String phoneNumber, final String content) {
+        if (StringUtils.isEmpty(content)) return;
+        PendingIntent sentIntent = PendingIntent.getBroadcast(Utils.getApp(), 0, new Intent(), 0);
+        SmsManager smsManager = SmsManager.getDefault();
+        if (content.length() >= 70) {
+            List<String> ms = smsManager.divideMessage(content);
+            for (String str : ms) {
+                smsManager.sendTextMessage(phoneNumber, null, str, sentIntent, null);
+            }
+        } else {
+            smsManager.sendTextMessage(phoneNumber, null, content, sentIntent, null);
+        }
+    }
+
+    /**
+     * 获取手机联系人
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>}</p>
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.READ_CONTACTS"/>}</p>
+     *
+     * @return 联系人链表
+     */
+    public static List<HashMap<String, String>> getAllContactInfo() {
+        SystemClock.sleep(3000);
+        ArrayList<HashMap<String, String>> list = new ArrayList<HashMap<String, String>>();
+        // 1.获取内容解析者
+        ContentResolver resolver = Utils.getApp().getContentResolver();
+        // 2.获取内容提供者的地址:com.android.contacts
+        // raw_contacts表的地址 :raw_contacts
+        // view_data表的地址 : data
+        // 3.生成查询地址
+        Uri raw_uri = Uri.parse("content://com.android.contacts/raw_contacts");
+        Uri date_uri = Uri.parse("content://com.android.contacts/data");
+        // 4.查询操作,先查询raw_contacts,查询contact_id
+        // projection : 查询的字段
+        Cursor cursor = resolver.query(raw_uri, new String[]{"contact_id"}, null, null, null);
+        try {
+            // 5.解析cursor
+            if (cursor != null) {
+                while (cursor.moveToNext()) {
+                    // 6.获取查询的数据
+                    String contact_id = cursor.getString(0);
+                    // cursor.getString(cursor.getColumnIndex("contact_id"));//getColumnIndex
+                    // : 查询字段在cursor中索引值,一般都是用在查询字段比较多的时候
+                    // 判断contact_id是否为空
+                    if (!StringUtils.isEmpty(contact_id)) {//null   ""
+                        // 7.根据contact_id查询view_data表中的数据
+                        // selection : 查询条件
+                        // selectionArgs :查询条件的参数
+                        // sortOrder : 排序
+                        // 空指针: 1.null.方法 2.参数为null
+                        Cursor c = resolver.query(date_uri, new String[]{"data1",
+                                        "mimetype"}, "raw_contact_id=?",
+                                new String[]{contact_id}, null);
+                        HashMap<String, String> map = new HashMap<String, String>();
+                        // 8.解析c
+                        if (c != null) {
+                            while (c.moveToNext()) {
+                                // 9.获取数据
+                                String data1 = c.getString(0);
+                                String mimetype = c.getString(1);
+                                // 10.根据类型去判断获取的data1数据并保存
+                                if (mimetype.equals("vnd.android.cursor.item/phone_v2")) {
+                                    // 电话
+                                    map.put("phone", data1);
+                                } else if (mimetype.equals("vnd.android.cursor.item/name")) {
+                                    // 姓名
+                                    map.put("name", data1);
+                                }
+                            }
+                        }
+                        // 11.添加到集合中数据
+                        list.add(map);
+                        // 12.关闭cursor
+                        if (c != null) {
+                            c.close();
+                        }
+                    }
+                }
+            }
+        } finally {
+            // 12.关闭cursor
+            if (cursor != null) {
+                cursor.close();
+            }
+        }
+        return list;
+    }
+
+    /**
+     * 打开手机联系人界面点击联系人后便获取该号码
+     * <p>参照以下注释代码</p>
+     */
+    public static void getContactNum() {
+        Log.d("tips", "U should copy the following code.");
+        /*
+        Intent intent = new Intent();
+        intent.setAction("android.intent.action.PICK");
+        intent.setType("vnd.android.cursor.dir/phone_v2");
+        startActivityForResult(intent, 0);
+
+        @Override
+        protected void onActivityResult ( int requestCode, int resultCode, Intent data){
+            super.onActivityResult(requestCode, resultCode, data);
+            if (data != null) {
+                Uri uri = data.getData();
+                String num = null;
+                // 创建内容解析者
+                ContentResolver contentResolver = getContentResolver();
+                Cursor cursor = contentResolver.query(uri,
+                        null, null, null, null);
+                while (cursor.moveToNext()) {
+                    num = cursor.getString(cursor.getColumnIndex("data1"));
+                }
+                cursor.close();
+                num = num.replaceAll("-", "");//替换的操作,555-6 -> 5556
+            }
+        }
+        */
+    }
+
+    /**
+     * 获取手机短信并保存到xml中
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>}</p>
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.READ_SMS"/>}</p>
+     */
+    public static void getAllSMS() {
+        // 1.获取短信
+        // 1.1获取内容解析者
+        ContentResolver resolver = Utils.getApp().getContentResolver();
+        // 1.2获取内容提供者地址   sms,sms表的地址:null  不写
+        // 1.3获取查询路径
+        Uri uri = Uri.parse("content://sms");
+        // 1.4.查询操作
+        // projection : 查询的字段
+        // selection : 查询的条件
+        // selectionArgs : 查询条件的参数
+        // sortOrder : 排序
+        Cursor cursor = resolver.query(uri, new String[]{"address", "date", "type", "body"}, null, null, null);
+        // 设置最大进度
+        int count = cursor.getCount();//获取短信的个数
+        // 2.备份短信
+        // 2.1获取xml序列器
+        XmlSerializer xmlSerializer = Xml.newSerializer();
+        try {
+            // 2.2设置xml文件保存的路径
+            // os : 保存的位置
+            // encoding : 编码格式
+            xmlSerializer.setOutput(new FileOutputStream(new File("/mnt/sdcard/backupsms.xml")), "utf-8");
+            // 2.3设置头信息
+            // standalone : 是否独立保存
+            xmlSerializer.startDocument("utf-8", true);
+            // 2.4设置根标签
+            xmlSerializer.startTag(null, "smss");
+            // 1.5.解析cursor
+            while (cursor.moveToNext()) {
+                SystemClock.sleep(1000);
+                // 2.5设置短信的标签
+                xmlSerializer.startTag(null, "sms");
+                // 2.6设置文本内容的标签
+                xmlSerializer.startTag(null, "address");
+                String address = cursor.getString(0);
+                // 2.7设置文本内容
+                xmlSerializer.text(address);
+                xmlSerializer.endTag(null, "address");
+                xmlSerializer.startTag(null, "date");
+                String date = cursor.getString(1);
+                xmlSerializer.text(date);
+                xmlSerializer.endTag(null, "date");
+                xmlSerializer.startTag(null, "type");
+                String type = cursor.getString(2);
+                xmlSerializer.text(type);
+                xmlSerializer.endTag(null, "type");
+                xmlSerializer.startTag(null, "body");
+                String body = cursor.getString(3);
+                xmlSerializer.text(body);
+                xmlSerializer.endTag(null, "body");
+                xmlSerializer.endTag(null, "sms");
+                System.out.println("address:" + address + "   date:" + date + "  type:" + type + "  body:" + body);
+            }
+            xmlSerializer.endTag(null, "smss");
+            xmlSerializer.endDocument();
+            // 2.8将数据刷新到文件中
+            xmlSerializer.flush();
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+}
Index: baselib/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/proguard-rules.pro	(revision )
+++ baselib/proguard-rules.pro	(revision )
@@ -0,0 +1,17 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in /Library/android-sdk-macosx/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
Index: baselib/src/main/java/com/baselib/uitls/WxPayUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/uitls/WxPayUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/uitls/WxPayUtils.java	(revision )
@@ -0,0 +1,55 @@
+package com.baselib.uitls;
+
+import android.app.Activity;
+import android.text.TextUtils;
+
+import com.baselib.R;
+import com.baselib.baseapp.BaseApplication;
+import com.baselib.basebean.WxBean;
+import com.tencent.mm.opensdk.modelpay.PayReq;
+import com.tencent.mm.opensdk.openapi.IWXAPI;
+import com.tencent.mm.opensdk.openapi.WXAPIFactory;
+
+/**
+ * Created by luo on 2018/2/7.
+ */
+
+public class WxPayUtils {
+
+    /**
+     * 微信支付
+     *
+     * @param activity
+     * @param wxBean
+     */
+    private void wxPay(Activity activity, final WxBean wxBean) {
+
+        //防双击
+        if (CommonUtils.isDoubleClick(200)) return;
+
+        if (wxBean == null) return;
+
+        String appId = "";
+        if (TextUtils.isEmpty(wxBean.getAppid())) {
+            appId = BaseApplication.getAppResources().getString(R.string.wx_app_id);
+        } else {
+            appId = wxBean.getAppid();
+        }
+
+        IWXAPI api = WXAPIFactory.createWXAPI(activity, appId);
+
+        PayReq req = new PayReq();
+
+        req.appId = appId;
+        req.partnerId = wxBean.getPartnerid();
+        req.prepayId = wxBean.getPrepayid();
+        req.nonceStr = wxBean.getNoncestr();
+        req.timeStamp = wxBean.getTimestamp();
+        req.packageValue = wxBean.getPackageX();
+        req.sign = wxBean.getSign();
+
+        api.sendReq(req);
+    }
+
+
+}
Index: baselib/src/main/java/com/baselib/recycleview/wrapper/HeaderAndFooterWrapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/wrapper/HeaderAndFooterWrapper.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/wrapper/HeaderAndFooterWrapper.java	(revision )
@@ -0,0 +1,148 @@
+package com.baselib.recycleview.wrapper;
+
+import android.support.v4.util.SparseArrayCompat;
+import android.support.v7.widget.GridLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.baselib.recycleview.ViewHolder;
+
+
+public class HeaderAndFooterWrapper<T> extends RecyclerView.Adapter<RecyclerView.ViewHolder>
+{
+    private static final int BASE_ITEM_TYPE_HEADER = 100000;
+    private static final int BASE_ITEM_TYPE_FOOTER = 200000;
+
+    private SparseArrayCompat<View> mHeaderViews = new SparseArrayCompat<>();
+    private SparseArrayCompat<View> mFootViews = new SparseArrayCompat<>();
+
+    private RecyclerView.Adapter mInnerAdapter;
+
+    public HeaderAndFooterWrapper(RecyclerView.Adapter adapter)
+    {
+        mInnerAdapter = adapter;
+    }
+
+    @Override
+    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType)
+    {
+        if (mHeaderViews.get(viewType) != null)
+        {
+            ViewHolder holder = ViewHolder.createViewHolder(parent.getContext(), mHeaderViews.get(viewType));
+            return holder;
+
+        } else if (mFootViews.get(viewType) != null)
+        {
+            ViewHolder holder = ViewHolder.createViewHolder(parent.getContext(), mFootViews.get(viewType));
+            return holder;
+        }
+        return mInnerAdapter.onCreateViewHolder(parent, viewType);
+    }
+
+    @Override
+    public int getItemViewType(int position)
+    {
+        if (isHeaderViewPos(position))
+        {
+            return mHeaderViews.keyAt(position);
+        } else if (isFooterViewPos(position))
+        {
+            return mFootViews.keyAt(position - getHeadersCount() - getRealItemCount());
+        }
+        return mInnerAdapter.getItemViewType(position - getHeadersCount());
+    }
+
+    private int getRealItemCount()
+    {
+        return mInnerAdapter.getItemCount();
+    }
+
+
+    @Override
+    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position)
+    {
+        if (isHeaderViewPos(position))
+        {
+            return;
+        }
+        if (isFooterViewPos(position))
+        {
+            return;
+        }
+        mInnerAdapter.onBindViewHolder(holder, position - getHeadersCount());
+    }
+
+    @Override
+    public int getItemCount()
+    {
+        return getHeadersCount() + getFootersCount() + getRealItemCount();
+    }
+
+    @Override
+    public void onAttachedToRecyclerView(RecyclerView recyclerView)
+    {
+        WrapperUtils.onAttachedToRecyclerView(mInnerAdapter, recyclerView, new WrapperUtils.SpanSizeCallback()
+        {
+            @Override
+            public int getSpanSize(GridLayoutManager layoutManager, GridLayoutManager.SpanSizeLookup oldLookup, int position)
+            {
+                int viewType = getItemViewType(position);
+                if (mHeaderViews.get(viewType) != null)
+                {
+                    return layoutManager.getSpanCount();
+                } else if (mFootViews.get(viewType) != null)
+                {
+                    return layoutManager.getSpanCount();
+                }
+                if (oldLookup != null)
+                    return oldLookup.getSpanSize(position);
+                return 1;
+            }
+        });
+    }
+
+    @Override
+    public void onViewAttachedToWindow(RecyclerView.ViewHolder holder)
+    {
+        mInnerAdapter.onViewAttachedToWindow(holder);
+        int position = holder.getLayoutPosition();
+        if (isHeaderViewPos(position) || isFooterViewPos(position))
+        {
+            WrapperUtils.setFullSpan(holder);
+        }
+    }
+
+    private boolean isHeaderViewPos(int position)
+    {
+        return position < getHeadersCount();
+    }
+
+    private boolean isFooterViewPos(int position)
+    {
+        return position >= getHeadersCount() + getRealItemCount();
+    }
+
+
+    public void addHeaderView(View view)
+    {
+        mHeaderViews.put(mHeaderViews.size() + BASE_ITEM_TYPE_HEADER, view);
+    }
+
+    public void addFootView(View view)
+    {
+        mFootViews.put(mFootViews.size() + BASE_ITEM_TYPE_FOOTER, view);
+    }
+
+    public int getHeadersCount()
+    {
+        return mHeaderViews.size();
+    }
+
+    public int getFootersCount()
+    {
+        return mFootViews.size();
+    }
+
+
+}
Index: baselib/src/main/java/com/baselib/baserx/RxManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baserx/RxManager.java	(revision )
+++ baselib/src/main/java/com/baselib/baserx/RxManager.java	(revision )
@@ -0,0 +1,61 @@
+package com.baselib.baserx;
+import java.util.HashMap;
+import java.util.Map;
+
+import rx.Observable;
+import rx.Subscription;
+import rx.android.schedulers.AndroidSchedulers;
+import rx.functions.Action1;
+import rx.subscriptions.CompositeSubscription;
+/**
+ * Created by liuhuaqian on 2017/9/6.
+ * 用于管理单个presenter的RxBus的事件和Rxjava相关代码的生命周期处理
+ */
+
+public class RxManager {
+    public RxBus mRxBus = RxBus.getInstance();
+    //管理rxbus订阅
+    private Map<String, Observable<?>> mObservables = new HashMap<>();
+    /*管理Observables 和 Subscribers订阅*/
+    private CompositeSubscription mCompositeSubscription = new CompositeSubscription();
+
+    /**
+     * RxBus注入监听
+     * @param eventName
+     * @param action1
+     */
+    public <T>void on(String eventName, Action1<T> action1) {
+        Observable<T> mObservable = mRxBus.register(eventName);
+        mObservables.put(eventName, mObservable);
+        /*订阅管理*/
+        mCompositeSubscription.add(mObservable.observeOn(AndroidSchedulers.mainThread())
+                .subscribe(action1, new Action1<Throwable>() {
+                    @Override
+                    public void call(Throwable throwable) {
+                        throwable.printStackTrace();
+                    }
+                }));
+    }
+
+    /**
+     * 单纯的Observables 和 Subscribers管理
+     * @param m
+     */
+    public void add(Subscription m) {
+        /*订阅管理*/
+        mCompositeSubscription.add(m);
+    }
+    /**
+     * 单个presenter生命周期结束，取消订阅和所有rxbus观察
+     */
+    public void clear() {
+        mCompositeSubscription.unsubscribe();// 取消所有订阅
+        for (Map.Entry<String, Observable<?>> entry : mObservables.entrySet()) {
+            mRxBus.unregister(entry.getKey(), entry.getValue());// 移除rxbus观察
+        }
+    }
+    //发送rxbus
+    public void post(Object tag, Object content) {
+        mRxBus.post(tag, content);
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPDecor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPDecor.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPDecor.java	(revision )
@@ -0,0 +1,139 @@
+package com.baselib.ui.widget.mydatepicker;
+
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.Rect;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 月历装饰物类
+ * Decor of Calendar
+ *
+ * @author AigeStudio 2015-07-22
+ * @author AigeStudio 2015-10-29
+ *         为每一个装饰物的绘制方法增加一个含参data的重载方法
+ *         Add a parameter for each method.
+ */
+
+public class DPDecor {
+    /**
+     * 绘制当前日期区域左上角的装饰物
+     * Draw decor on Top left of current date area
+     *
+     * @param canvas 绘制图形的画布 Canvas of image drew
+     * @param rect   可以绘制的区域范围 Area you can draw
+     * @param paint  画笔对象 Paint
+     * @param data   日期
+     */
+    public void drawDecorTL(Canvas canvas, Rect rect, Paint paint, String data) {
+        drawDecorTL(canvas, rect, paint);
+    }
+
+    /**
+     * @see #drawDecorTL(Canvas, Rect, Paint, String)
+     */
+    public void drawDecorTL(Canvas canvas, Rect rect, Paint paint) {
+
+    }
+
+    /**
+     * 绘制当前日期区域顶部的装饰物
+     * Draw decor on top of current date area
+     *
+     * @param canvas 绘制图形的画布 Canvas of image drew
+     * @param rect   可以绘制的区域范围 Area you can draw
+     * @param paint  画笔对象 Paint
+     * @param data   日期
+     */
+    public void drawDecorT(Canvas canvas, Rect rect, Paint paint, String data) {
+        drawDecorT(canvas, rect, paint);
+    }
+
+    /**
+     * @see #drawDecorT(Canvas, Rect, Paint, String)
+     */
+    public void drawDecorT(Canvas canvas, Rect rect, Paint paint) {
+
+    }
+
+    /**
+     * 绘制当前日期区域右上角的装饰物
+     * Draw decor on Top right of current date area
+     *
+     * @param canvas 绘制图形的画布 Canvas of image drew
+     * @param rect   可以绘制的区域范围 Area you can draw
+     * @param paint  画笔对象 Paint
+     * @param data   日期
+     */
+    public void drawDecorTR(Canvas canvas, Rect rect, Paint paint, String data) {
+        drawDecorTR(canvas, rect, paint);
+    }
+
+    /**
+     * @see #drawDecorTR(Canvas, Rect, Paint, String)
+     */
+    public void drawDecorTR(Canvas canvas, Rect rect, Paint paint) {
+
+    }
+
+    /**
+     * 绘制当前日期区域左边的装饰物
+     * Draw decor on left of current date area
+     *
+     * @param canvas 绘制图形的画布 Canvas of image drew
+     * @param rect   可以绘制的区域范围 Area you can draw
+     * @param paint  画笔对象 Paint
+     * @param data   日期
+     */
+    public void drawDecorL(Canvas canvas, Rect rect, Paint paint, String data) {
+        drawDecorL(canvas, rect, paint);
+    }
+
+    /**
+     * @see #drawDecorL(Canvas, Rect, Paint, String)
+     */
+    public void drawDecorL(Canvas canvas, Rect rect, Paint paint) {
+
+    }
+
+    /**
+     * 绘制当前日期区域右边的装饰物
+     * Draw decor on right of current date area
+     *
+     * @param canvas 绘制图形的画布 Canvas of image drew
+     * @param rect   可以绘制的区域范围 Area you can draw
+     * @param paint  画笔对象 Paint
+     * @param data   日期
+     */
+    public void drawDecorR(Canvas canvas, Rect rect, Paint paint, String data) {
+        drawDecorR(canvas, rect, paint);
+    }
+
+    /**
+     * @see #drawDecorR(Canvas, Rect, Paint, String)
+     */
+    public void drawDecorR(Canvas canvas, Rect rect, Paint paint) {
+
+    }
+
+    /**
+     * 绘制当前日期区域背景的装饰物
+     * Draw decor of background of current date area
+     *
+     * @param canvas 绘制图形的画布 Canvas of image drew
+     * @param rect   可以绘制的区域范围 Area you can draw
+     * @param paint  画笔对象 Paint
+     * @param data   日期
+     */
+    public void drawDecorBG(Canvas canvas, Rect rect, Paint paint, String data) {
+        drawDecorBG(canvas, rect, paint);
+    }
+
+    /**
+     * @see #drawDecorBG(Canvas, Rect, Paint, String)
+     */
+    public void drawDecorBG(Canvas canvas, Rect rect, Paint paint) {
+
+    }
+}
+
Index: baselib/src/main/java/com/baselib/takephoto/app/SelectPhotoTestActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/app/SelectPhotoTestActivity.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/app/SelectPhotoTestActivity.java	(revision )
@@ -0,0 +1,93 @@
+package com.baselib.takephoto.app;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.os.Environment;
+import android.widget.Toast;
+
+import com.baselib.takephoto.compress.CompressConfig;
+import com.baselib.takephoto.model.CropOptions;
+import com.baselib.takephoto.model.TResult;
+import com.baselib.takephoto.model.TakePhotoOptions;
+
+import java.io.File;
+
+/**
+ * 选择头像中间页面
+ * 传入值为 Type
+ * CAMERA 调用相机
+ * PHOTO 调用相册
+ *
+ */
+
+public class SelectPhotoTestActivity extends TakePhotoActivity {
+
+    File file;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        selectPhoto(getTakePhoto());
+    }
+
+    @Override
+    public void takeCancel() {
+        super.takeCancel();
+        finish();
+    }
+
+
+    @Override
+    public void takeFail(TResult result, String msg) {
+        super.takeFail(result, msg);
+        finish();
+    }
+
+    @Override
+    public void takeSuccess(TResult result) {
+        super.takeSuccess(result);
+        if (result != null) {
+            //TODO 这里是设置返回页面
+//            Intent intent=new Intent(SelectPhotoActivity.this,HeadPortraitActivity.class);
+//            intent.putExtra("path",result.getImage().getCompressPath());
+//            setResult(6,intent);
+        }
+        finish();
+    }
+
+    private void selectPhoto(TakePhoto takePhoto) {
+        file = new File(Environment.getExternalStorageDirectory(), "/temp/" + System.currentTimeMillis() + ".jpg");
+        if (!file.getParentFile().exists()) file.getParentFile().mkdirs();
+        Uri imageUri = Uri.fromFile(file);
+
+        //压缩参数
+        CompressConfig config = new CompressConfig.Builder()
+                .setMaxSize(50 * 1024)//尺寸
+                .setMaxPixel(800)//最大像素
+                .enableReserveRaw(false)//是否保留原文件
+                .create();
+        takePhoto.onEnableCompress(config, false);//压缩是对话框
+
+        //是否使用自带相册
+        TakePhotoOptions.Builder builder1 = new TakePhotoOptions.Builder();
+        builder1.setWithOwnGallery(false);//是否使用TakePhoto自带的相册进行图片选择，默认不使用，但选择多张图片会使用
+        takePhoto.setTakePhotoOptions(builder1.create());
+
+        //剪切设置
+        CropOptions.Builder builder = new CropOptions.Builder();
+        builder.setOutputX(400).setOutputY(400);//剪切大小设置
+        builder.setWithOwnCrop(true);
+
+        String type = getIntent().getStringExtra("Type");
+        if ("CAMERA".equals(type)) {
+            takePhoto.onPickFromCaptureWithCrop(imageUri, builder.create());
+        } else if ("PHOTO".equals(type)) {
+            takePhoto.onPickFromGalleryWithCrop(imageUri, builder.create());
+        }else{
+            Toast.makeText(this,"缺少Type请用意图传入...",Toast.LENGTH_SHORT).show();
+        }
+
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/EmptyUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/EmptyUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/EmptyUtils.java	(revision )
@@ -0,0 +1,88 @@
+package com.baselib.utilcode.util;
+
+import android.os.Build;
+import android.support.v4.util.LongSparseArray;
+import android.support.v4.util.SimpleArrayMap;
+import android.util.SparseArray;
+import android.util.SparseBooleanArray;
+import android.util.SparseIntArray;
+import android.util.SparseLongArray;
+
+import java.lang.reflect.Array;
+import java.util.Collection;
+import java.util.Map;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/09/28
+ *     desc  : 判空相关工具类
+ * </pre>
+ */
+public final class EmptyUtils {
+
+    private EmptyUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 判断对象是否为空
+     *
+     * @param obj 对象
+     * @return {@code true}: 为空<br>{@code false}: 不为空
+     */
+    public static boolean isEmpty(final Object obj) {
+        if (obj == null) {
+            return true;
+        }
+        if (obj instanceof String && obj.toString().length() == 0) {
+            return true;
+        }
+        if (obj.getClass().isArray() && Array.getLength(obj) == 0) {
+            return true;
+        }
+        if (obj instanceof Collection && ((Collection) obj).isEmpty()) {
+            return true;
+        }
+        if (obj instanceof Map && ((Map) obj).isEmpty()) {
+            return true;
+        }
+        if (obj instanceof SimpleArrayMap && ((SimpleArrayMap) obj).isEmpty()) {
+            return true;
+        }
+        if (obj instanceof SparseArray && ((SparseArray) obj).size() == 0) {
+            return true;
+        }
+        if (obj instanceof SparseBooleanArray && ((SparseBooleanArray) obj).size() == 0) {
+            return true;
+        }
+        if (obj instanceof SparseIntArray && ((SparseIntArray) obj).size() == 0) {
+            return true;
+        }
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
+            if (obj instanceof SparseLongArray && ((SparseLongArray) obj).size() == 0) {
+                return true;
+            }
+        }
+        if (obj instanceof LongSparseArray && ((LongSparseArray) obj).size() == 0) {
+            return true;
+        }
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
+            if (obj instanceof android.util.LongSparseArray && ((android.util.LongSparseArray) obj).size() == 0) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 判断对象是否非空
+     *
+     * @param obj 对象
+     * @return {@code true}: 非空<br>{@code false}: 空
+     */
+    public static boolean isNotEmpty(final Object obj) {
+        return !isEmpty(obj);
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/CommonProgressDialog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/CommonProgressDialog.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/CommonProgressDialog.java	(revision )
@@ -0,0 +1,174 @@
+package com.baselib.ui.widget;
+
+import android.app.AlertDialog;
+import android.content.Context;
+import android.os.Bundle;
+import android.os.Handler;
+import android.os.Message;
+import android.text.Spannable;
+import android.text.SpannableString;
+import android.text.style.StyleSpan;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+
+import com.baselib.R;
+
+import java.text.NumberFormat;
+
+/**
+ * 作者: liuhuaqian on 2017/11/9.
+ * 自定义进度条
+ */
+
+public class CommonProgressDialog extends AlertDialog {
+    private ProgressBar mProgress;
+    private TextView mProgressNumber;
+    private TextView mProgressPercent;
+    private TextView mProgressMessage;
+    private Handler mViewUpdateHandler;
+    private int mMax;
+    private CharSequence mMessage;
+    private boolean mHasStarted;
+    private int mProgressVal;
+    private String TAG = "CommonProgressDialog";
+    private String mProgressNumberFormat;
+    private NumberFormat mProgressPercentFormat;
+
+    public CommonProgressDialog(Context context) {
+        super(context);
+        // TODO Auto-generated constructor stub
+        initFormats();
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        // TODO Auto-generated method stub
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.common_progress_dialog);
+        mProgress = (ProgressBar) findViewById(R.id.progress);
+        mProgressNumber = (TextView) findViewById(R.id.progress_number);
+        mProgressPercent = (TextView) findViewById(R.id.progress_percent);
+        mProgressMessage = (TextView) findViewById(R.id.progress_message);
+        // LayoutInflater inflater = LayoutInflater.from(getContext());
+        mViewUpdateHandler = new Handler() {
+            @Override
+            public void handleMessage(Message msg) {
+                // TODO Auto-generated method stub
+                super.handleMessage(msg);
+                int progress = mProgress.getProgress();
+                int max = mProgress.getMax();
+                double dProgress = (double) progress / (double) (1024 * 1024);
+                double dMax = (double) max / (double) (1024 * 1024);
+                if (mProgressNumberFormat != null) {
+                    String format = mProgressNumberFormat;
+                    mProgressNumber.setText(String.format(format, dProgress,
+                            dMax));
+                } else {
+                    mProgressNumber.setText("");
+                }
+                if (mProgressPercentFormat != null) {
+                    double percent = (double) progress / (double) max;
+                    SpannableString tmp = new SpannableString(
+                            mProgressPercentFormat.format(percent));
+                    tmp.setSpan(new StyleSpan(android.graphics.Typeface.BOLD),
+                            0, tmp.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);
+                    mProgressPercent.setText(tmp);
+                } else {
+                    mProgressPercent.setText("");
+                }
+            }
+        };
+        // View view = inflater.inflate(R.layout.common_progress_dialog, null);
+        // mProgress = (ProgressBar) view.findViewById(R.id.progress);
+        // mProgressNumber = (TextView) view.findViewById(R.id.progress_number);
+        // mProgressPercent = (TextView)
+        // view.findViewById(R.id.progress_percent);
+        // setView(view);
+        // mProgress.setMax(100);
+        onProgressChanged();
+        if (mMessage != null) {
+            setMessage(mMessage);
+        }
+        if (mMax > 0) {
+            setMax(mMax);
+        }
+        if (mProgressVal > 0) {
+            setProgress(mProgressVal);
+        }
+    }
+
+    private void initFormats() {
+        mProgressNumberFormat = "%1.2fM/%2.2fM";
+        mProgressPercentFormat = NumberFormat.getPercentInstance();
+        mProgressPercentFormat.setMaximumFractionDigits(0);
+    }
+
+    private void onProgressChanged() {
+        mViewUpdateHandler.sendEmptyMessage(0);
+    }
+
+    public void setProgressStyle(int style) {
+        // mProgressStyle = style;
+    }
+
+    public int getMax() {
+        if (mProgress != null) {
+            return mProgress.getMax();
+        }
+        return mMax;
+    }
+
+    public void setMax(int max) {
+        if (mProgress != null) {
+            mProgress.setMax(max);
+            onProgressChanged();
+        } else {
+            mMax = max;
+        }
+    }
+
+    public void setIndeterminate(boolean indeterminate) {
+        if (mProgress != null) {
+            mProgress.setIndeterminate(indeterminate);
+        }
+        // else {
+        // mIndeterminate = indeterminate;
+        // }
+    }
+
+    public void setProgress(int value) {
+        if (mHasStarted) {
+            mProgress.setProgress(value);
+            onProgressChanged();
+        } else {
+            mProgressVal = value;
+        }
+    }
+
+    @Override
+    public void setMessage(CharSequence message) {
+        // TODO Auto-generated method stub
+        // super.setMessage(message);
+        if (mProgressMessage != null) {
+            mProgressMessage.setText(message);
+        } else {
+            mMessage = message;
+        }
+    }
+
+    @Override
+    protected void onStart() {
+        // TODO Auto-generated method stub
+        super.onStart();
+        mHasStarted = true;
+    }
+
+    @Override
+    protected void onStop() {
+        // TODO Auto-generated method stub
+        super.onStop();
+        mHasStarted = false;
+    }
+
+}
Index: baselib/src/main/java/com/baselib/commonutils/NetWorkUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/commonutils/NetWorkUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/commonutils/NetWorkUtils.java	(revision )
@@ -0,0 +1,69 @@
+package com.baselib.commonutils;
+import android.content.Context;
+import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
+
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+/**
+ * 作者: liuhuaqian on 2017/9/8.
+ * 网络管理工具
+ */
+
+public class NetWorkUtils {
+    /**
+     * 检查网络是否可用
+     *
+     * @param paramContext
+     * @return
+     */
+    public static boolean isNetConnected(Context paramContext) {
+        boolean i = false;
+        NetworkInfo localNetworkInfo = ((ConnectivityManager) paramContext
+                .getSystemService(Context.CONNECTIVITY_SERVICE)).getActiveNetworkInfo();
+        if ((localNetworkInfo != null) && (localNetworkInfo.isAvailable()))
+            return true;
+        return false;
+    }
+    /**
+     * 检测wifi是否连接
+     */
+    public static boolean isWifiConnected(Context context) {
+        ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        if (cm != null) {
+            NetworkInfo networkInfo = cm.getActiveNetworkInfo();
+            if (networkInfo != null && networkInfo.getType() == ConnectivityManager.TYPE_WIFI) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 检测3G是否连接
+     */
+    public static boolean is3gConnected(Context context) {
+        ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);
+        if (cm != null) {
+            NetworkInfo networkInfo = cm.getActiveNetworkInfo();
+            if (networkInfo != null && networkInfo.getType() == ConnectivityManager.TYPE_MOBILE) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 判断网址是否有效
+     */
+    public static boolean isLinkAvailable(String link) {
+        Pattern pattern = Pattern.compile("^(http://|https://)?((?:[A-Za-z0-9]+-[A-Za-z0-9]+|[A-Za-z0-9]+)\\.)+([A-Za-z]+)[/\\?\\:]?.*$", Pattern.CASE_INSENSITIVE);
+        Matcher matcher = pattern.matcher(link);
+        if (matcher.matches()) {
+            return true;
+        }
+        return false;
+    }
+}
+
Index: baselib/src/main/java/com/baselib/utilcode/util/ConvertUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/ConvertUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/ConvertUtils.java	(revision )
@@ -0,0 +1,618 @@
+package com.baselib.utilcode.util;
+
+import android.annotation.SuppressLint;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.PixelFormat;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+import android.view.View;
+
+import com.baselib.utilcode.constant.MemoryConstants;
+import com.baselib.utilcode.constant.TimeConstants;
+
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.io.UnsupportedEncodingException;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/13
+ *     desc  : 转换相关工具类
+ * </pre>
+ */
+public final class ConvertUtils {
+
+    private ConvertUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    private static final char hexDigits[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
+
+    /**
+     * byteArr转hexString
+     * <p>例如：</p>
+     * bytes2HexString(new byte[] { 0, (byte) 0xa8 }) returns 00A8
+     *
+     * @param bytes 字节数组
+     * @return 16进制大写字符串
+     */
+    public static String bytes2HexString(final byte[] bytes) {
+        if (bytes == null) return null;
+        int len = bytes.length;
+        if (len <= 0) return null;
+        char[] ret = new char[len << 1];
+        for (int i = 0, j = 0; i < len; i++) {
+            ret[j++] = hexDigits[bytes[i] >>> 4 & 0x0f];
+            ret[j++] = hexDigits[bytes[i] & 0x0f];
+        }
+        return new String(ret);
+    }
+
+    /**
+     * hexString转byteArr
+     * <p>例如：</p>
+     * hexString2Bytes("00A8") returns { 0, (byte) 0xA8 }
+     *
+     * @param hexString 十六进制字符串
+     * @return 字节数组
+     */
+    public static byte[] hexString2Bytes(String hexString) {
+        if (isSpace(hexString)) return null;
+        int len = hexString.length();
+        if (len % 2 != 0) {
+            hexString = "0" + hexString;
+            len = len + 1;
+        }
+        char[] hexBytes = hexString.toUpperCase().toCharArray();
+        byte[] ret = new byte[len >> 1];
+        for (int i = 0; i < len; i += 2) {
+            ret[i >> 1] = (byte) (hex2Dec(hexBytes[i]) << 4 | hex2Dec(hexBytes[i + 1]));
+        }
+        return ret;
+    }
+
+    /**
+     * hexChar转int
+     *
+     * @param hexChar hex单个字节
+     * @return 0..15
+     */
+    private static int hex2Dec(final char hexChar) {
+        if (hexChar >= '0' && hexChar <= '9') {
+            return hexChar - '0';
+        } else if (hexChar >= 'A' && hexChar <= 'F') {
+            return hexChar - 'A' + 10;
+        } else {
+            throw new IllegalArgumentException();
+        }
+    }
+
+    /**
+     * charArr转byteArr
+     *
+     * @param chars 字符数组
+     * @return 字节数组
+     */
+    public static byte[] chars2Bytes(final char[] chars) {
+        if (chars == null || chars.length <= 0) return null;
+        int len = chars.length;
+        byte[] bytes = new byte[len];
+        for (int i = 0; i < len; i++) {
+            bytes[i] = (byte) (chars[i]);
+        }
+        return bytes;
+    }
+
+    /**
+     * byteArr转charArr
+     *
+     * @param bytes 字节数组
+     * @return 字符数组
+     */
+    public static char[] bytes2Chars(final byte[] bytes) {
+        if (bytes == null) return null;
+        int len = bytes.length;
+        if (len <= 0) return null;
+        char[] chars = new char[len];
+        for (int i = 0; i < len; i++) {
+            chars[i] = (char) (bytes[i] & 0xff);
+        }
+        return chars;
+    }
+
+    /**
+     * 以unit为单位的内存大小转字节数
+     *
+     * @param memorySize 大小
+     * @param unit       单位类型
+     *                   <ul>
+     *                   <li>{@link MemoryConstants#BYTE}: 字节</li>
+     *                   <li>{@link MemoryConstants#KB}  : 千字节</li>
+     *                   <li>{@link MemoryConstants#MB}  : 兆</li>
+     *                   <li>{@link MemoryConstants#GB}  : GB</li>
+     *                   </ul>
+     * @return 字节数
+     */
+    public static long memorySize2Byte(final long memorySize, @MemoryConstants.Unit final int unit) {
+        if (memorySize < 0) return -1;
+        return memorySize * unit;
+    }
+
+    /**
+     * 字节数转以unit为单位的内存大小
+     *
+     * @param byteNum 字节数
+     * @param unit    单位类型
+     *                <ul>
+     *                <li>{@link MemoryConstants#BYTE}: 字节</li>
+     *                <li>{@link MemoryConstants#KB}  : 千字节</li>
+     *                <li>{@link MemoryConstants#MB}  : 兆</li>
+     *                <li>{@link MemoryConstants#GB}  : GB</li>
+     *                </ul>
+     * @return 以unit为单位的size
+     */
+    public static double byte2MemorySize(final long byteNum, @MemoryConstants.Unit final int unit) {
+        if (byteNum < 0) return -1;
+        return (double) byteNum / unit;
+    }
+
+    /**
+     * 字节数转合适内存大小
+     * <p>保留3位小数</p>
+     *
+     * @param byteNum 字节数
+     * @return 合适内存大小
+     */
+    @SuppressLint("DefaultLocale")
+    public static String byte2FitMemorySize(final long byteNum) {
+        if (byteNum < 0) {
+            return "shouldn't be less than zero!";
+        } else if (byteNum < MemoryConstants.KB) {
+            return String.format("%.3fB", (double) byteNum);
+        } else if (byteNum < MemoryConstants.MB) {
+            return String.format("%.3fKB", (double) byteNum / MemoryConstants.KB);
+        } else if (byteNum < MemoryConstants.GB) {
+            return String.format("%.3fMB", (double) byteNum / MemoryConstants.MB);
+        } else {
+            return String.format("%.3fGB", (double) byteNum / MemoryConstants.GB);
+        }
+    }
+
+    /**
+     * 以unit为单位的时间长度转毫秒时间戳
+     *
+     * @param timeSpan 毫秒时间戳
+     * @param unit     单位类型
+     *                 <ul>
+     *                 <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *                 <li>{@link TimeConstants#SEC }: 秒</li>
+     *                 <li>{@link TimeConstants#MIN }: 分</li>
+     *                 <li>{@link TimeConstants#HOUR}: 小时</li>
+     *                 <li>{@link TimeConstants#DAY }: 天</li>
+     *                 </ul>
+     * @return 毫秒时间戳
+     */
+    public static long timeSpan2Millis(final long timeSpan, @TimeConstants.Unit final int unit) {
+        return timeSpan * unit;
+    }
+
+    /**
+     * 毫秒时间戳转以unit为单位的时间长度
+     *
+     * @param millis 毫秒时间戳
+     * @param unit   单位类型
+     *               <ul>
+     *               <li>{@link TimeConstants#MSEC}: 毫秒</li>
+     *               <li>{@link TimeConstants#SEC }: 秒</li>
+     *               <li>{@link TimeConstants#MIN }: 分</li>
+     *               <li>{@link TimeConstants#HOUR}: 小时</li>
+     *               <li>{@link TimeConstants#DAY }: 天</li>
+     *               </ul>
+     * @return 以unit为单位的时间长度
+     */
+    public static long millis2TimeSpan(final long millis, @TimeConstants.Unit final int unit) {
+        return millis / unit;
+    }
+
+    /**
+     * 毫秒时间戳转合适时间长度
+     *
+     * @param millis    毫秒时间戳
+     *                  <p>小于等于0，返回null</p>
+     * @param precision 精度
+     *                  <ul>
+     *                  <li>precision = 0，返回null</li>
+     *                  <li>precision = 1，返回天</li>
+     *                  <li>precision = 2，返回天和小时</li>
+     *                  <li>precision = 3，返回天、小时和分钟</li>
+     *                  <li>precision = 4，返回天、小时、分钟和秒</li>
+     *                  <li>precision &gt;= 5，返回天、小时、分钟、秒和毫秒</li>
+     *                  </ul>
+     * @return 合适时间长度
+     */
+    @SuppressLint("DefaultLocale")
+    public static String millis2FitTimeSpan(long millis, int precision) {
+        if (millis <= 0 || precision <= 0) return null;
+        StringBuilder sb = new StringBuilder();
+        String[] units = {"天", "小时", "分钟", "秒", "毫秒"};
+        int[] unitLen = {86400000, 3600000, 60000, 1000, 1};
+        precision = Math.min(precision, 5);
+        for (int i = 0; i < precision; i++) {
+            if (millis >= unitLen[i]) {
+                long mode = millis / unitLen[i];
+                millis -= mode * unitLen[i];
+                sb.append(mode).append(units[i]);
+            }
+        }
+        return sb.toString();
+    }
+
+    /**
+     * bytes转bits
+     *
+     * @param bytes 字节数组
+     * @return bits
+     */
+    public static String bytes2Bits(final byte[] bytes) {
+        StringBuilder sb = new StringBuilder();
+        for (byte aByte : bytes) {
+            for (int j = 7; j >= 0; --j) {
+                sb.append(((aByte >> j) & 0x01) == 0 ? '0' : '1');
+            }
+        }
+        return sb.toString();
+    }
+
+    /**
+     * bits转bytes
+     *
+     * @param bits 二进制
+     * @return bytes
+     */
+    public static byte[] bits2Bytes(String bits) {
+        int lenMod = bits.length() % 8;
+        int byteLen = bits.length() / 8;
+        // 不是8的倍数前面补0
+        if (lenMod != 0) {
+            for (int i = lenMod; i < 8; i++) {
+                bits = "0" + bits;
+            }
+            byteLen++;
+        }
+        byte[] bytes = new byte[byteLen];
+        for (int i = 0; i < byteLen; ++i) {
+            for (int j = 0; j < 8; ++j) {
+                bytes[i] <<= 1;
+                bytes[i] |= bits.charAt(i * 8 + j) - '0';
+            }
+        }
+        return bytes;
+    }
+
+    /**
+     * inputStream转outputStream
+     *
+     * @param is 输入流
+     * @return outputStream子类
+     */
+    public static ByteArrayOutputStream input2OutputStream(final InputStream is) {
+        if (is == null) return null;
+        try {
+            ByteArrayOutputStream os = new ByteArrayOutputStream();
+            byte[] b = new byte[MemoryConstants.KB];
+            int len;
+            while ((len = is.read(b, 0, MemoryConstants.KB)) != -1) {
+                os.write(b, 0, len);
+            }
+            return os;
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        } finally {
+            CloseUtils.closeIO(is);
+        }
+    }
+
+    /**
+     * outputStream转inputStream
+     *
+     * @param out 输出流
+     * @return inputStream子类
+     */
+    public ByteArrayInputStream output2InputStream(final OutputStream out) {
+        if (out == null) return null;
+        return new ByteArrayInputStream(((ByteArrayOutputStream) out).toByteArray());
+    }
+
+    /**
+     * inputStream转byteArr
+     *
+     * @param is 输入流
+     * @return 字节数组
+     */
+    public static byte[] inputStream2Bytes(final InputStream is) {
+        if (is == null) return null;
+        return input2OutputStream(is).toByteArray();
+    }
+
+    /**
+     * byteArr转inputStream
+     *
+     * @param bytes 字节数组
+     * @return 输入流
+     */
+    public static InputStream bytes2InputStream(final byte[] bytes) {
+        if (bytes == null || bytes.length <= 0) return null;
+        return new ByteArrayInputStream(bytes);
+    }
+
+    /**
+     * outputStream转byteArr
+     *
+     * @param out 输出流
+     * @return 字节数组
+     */
+    public static byte[] outputStream2Bytes(final OutputStream out) {
+        if (out == null) return null;
+        return ((ByteArrayOutputStream) out).toByteArray();
+    }
+
+    /**
+     * outputStream转byteArr
+     *
+     * @param bytes 字节数组
+     * @return 字节数组
+     */
+    public static OutputStream bytes2OutputStream(final byte[] bytes) {
+        if (bytes == null || bytes.length <= 0) return null;
+        ByteArrayOutputStream os = null;
+        try {
+            os = new ByteArrayOutputStream();
+            os.write(bytes);
+            return os;
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        } finally {
+            CloseUtils.closeIO(os);
+        }
+    }
+
+    /**
+     * inputStream转string按编码
+     *
+     * @param is          输入流
+     * @param charsetName 编码格式
+     * @return 字符串
+     */
+    public static String inputStream2String(final InputStream is, final String charsetName) {
+        if (is == null || isSpace(charsetName)) return null;
+        try {
+            return new String(inputStream2Bytes(is), charsetName);
+        } catch (UnsupportedEncodingException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * string转inputStream按编码
+     *
+     * @param string      字符串
+     * @param charsetName 编码格式
+     * @return 输入流
+     */
+    public static InputStream string2InputStream(final String string, final String charsetName) {
+        if (string == null || isSpace(charsetName)) return null;
+        try {
+            return new ByteArrayInputStream(string.getBytes(charsetName));
+        } catch (UnsupportedEncodingException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * outputStream转string按编码
+     *
+     * @param out         输出流
+     * @param charsetName 编码格式
+     * @return 字符串
+     */
+    public static String outputStream2String(final OutputStream out, final String charsetName) {
+        if (out == null || isSpace(charsetName)) return null;
+        try {
+            return new String(outputStream2Bytes(out), charsetName);
+        } catch (UnsupportedEncodingException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * string转outputStream按编码
+     *
+     * @param string      字符串
+     * @param charsetName 编码格式
+     * @return 输入流
+     */
+    public static OutputStream string2OutputStream(final String string, final String charsetName) {
+        if (string == null || isSpace(charsetName)) return null;
+        try {
+            return bytes2OutputStream(string.getBytes(charsetName));
+        } catch (UnsupportedEncodingException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * bitmap转byteArr
+     *
+     * @param bitmap bitmap对象
+     * @param format 格式
+     * @return 字节数组
+     */
+    public static byte[] bitmap2Bytes(final Bitmap bitmap, final Bitmap.CompressFormat format) {
+        if (bitmap == null) return null;
+        ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        bitmap.compress(format, 100, baos);
+        return baos.toByteArray();
+    }
+
+    /**
+     * byteArr转bitmap
+     *
+     * @param bytes 字节数组
+     * @return bitmap
+     */
+    public static Bitmap bytes2Bitmap(final byte[] bytes) {
+        return (bytes == null || bytes.length == 0) ? null : BitmapFactory.decodeByteArray(bytes, 0, bytes.length);
+    }
+
+    /**
+     * drawable转bitmap
+     *
+     * @param drawable drawable对象
+     * @return bitmap
+     */
+    public static Bitmap drawable2Bitmap(final Drawable drawable) {
+        if (drawable instanceof BitmapDrawable) {
+            BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;
+            if (bitmapDrawable.getBitmap() != null) {
+                return bitmapDrawable.getBitmap();
+            }
+        }
+        Bitmap bitmap;
+        if (drawable.getIntrinsicWidth() <= 0 || drawable.getIntrinsicHeight() <= 0) {
+            bitmap = Bitmap.createBitmap(1, 1,
+                    drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565);
+        } else {
+            bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(),
+                    drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565);
+        }
+        Canvas canvas = new Canvas(bitmap);
+        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
+        drawable.draw(canvas);
+        return bitmap;
+    }
+
+    /**
+     * bitmap转drawable
+     *
+     * @param bitmap bitmap对象
+     * @return drawable
+     */
+    public static Drawable bitmap2Drawable(final Bitmap bitmap) {
+        return bitmap == null ? null : new BitmapDrawable(Utils.getApp().getResources(), bitmap);
+    }
+
+    /**
+     * drawable转byteArr
+     *
+     * @param drawable drawable对象
+     * @param format   格式
+     * @return 字节数组
+     */
+    public static byte[] drawable2Bytes(final Drawable drawable, final Bitmap.CompressFormat format) {
+        return drawable == null ? null : bitmap2Bytes(drawable2Bitmap(drawable), format);
+    }
+
+    /**
+     * byteArr转drawable
+     *
+     * @param bytes 字节数组
+     * @return drawable
+     */
+    public static Drawable bytes2Drawable(final byte[] bytes) {
+        return bytes == null ? null : bitmap2Drawable(bytes2Bitmap(bytes));
+    }
+
+    /**
+     * view转Bitmap
+     *
+     * @param view 视图
+     * @return bitmap
+     */
+    public static Bitmap view2Bitmap(final View view) {
+        if (view == null) return null;
+        Bitmap ret = Bitmap.createBitmap(view.getWidth(), view.getHeight(), Bitmap.Config.ARGB_8888);
+        Canvas canvas = new Canvas(ret);
+        Drawable bgDrawable = view.getBackground();
+        if (bgDrawable != null) {
+            bgDrawable.draw(canvas);
+        } else {
+            canvas.drawColor(Color.WHITE);
+        }
+        view.draw(canvas);
+        return ret;
+    }
+
+    /**
+     * dp转px
+     *
+     * @param dpValue dp值
+     * @return px值
+     */
+    public static int dp2px(final float dpValue) {
+        final float scale = Utils.getApp().getResources().getDisplayMetrics().density;
+        return (int) (dpValue * scale + 0.5f);
+    }
+
+    /**
+     * px转dp
+     *
+     * @param pxValue px值
+     * @return dp值
+     */
+    public static int px2dp(final float pxValue) {
+        final float scale = Utils.getApp().getResources().getDisplayMetrics().density;
+        return (int) (pxValue / scale + 0.5f);
+    }
+
+    /**
+     * sp转px
+     *
+     * @param spValue sp值
+     * @return px值
+     */
+    public static int sp2px(final float spValue) {
+        final float fontScale = Utils.getApp().getResources().getDisplayMetrics().scaledDensity;
+        return (int) (spValue * fontScale + 0.5f);
+    }
+
+    /**
+     * px转sp
+     *
+     * @param pxValue px值
+     * @return sp值
+     */
+    public static int px2sp(final float pxValue) {
+        final float fontScale = Utils.getApp().getResources().getDisplayMetrics().scaledDensity;
+        return (int) (pxValue / fontScale + 0.5f);
+    }
+
+    /**
+     * 判断字符串是否为null或全为空白字符
+     *
+     * @param s 待校验字符串
+     * @return {@code true}: null或全空白字符<br> {@code false}: 不为null且不全空白字符
+     */
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/EncryptUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/EncryptUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/EncryptUtils.java	(revision )
@@ -0,0 +1,889 @@
+package com.baselib.utilcode.util;
+
+import android.util.Base64;
+
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.IOException;
+import java.security.DigestInputStream;
+import java.security.InvalidKeyException;
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
+import java.security.SecureRandom;
+
+import javax.crypto.Cipher;
+import javax.crypto.Mac;
+import javax.crypto.spec.SecretKeySpec;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/02
+ *     desc  : 加密解密相关的工具类
+ * </pre>
+ */
+public final class EncryptUtils {
+
+    private EncryptUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // 哈希加密相关
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * MD2加密
+     *
+     * @param data 明文字符串
+     * @return 16进制密文
+     */
+    public static String encryptMD2ToString(final String data) {
+        return encryptMD2ToString(data.getBytes());
+    }
+
+    /**
+     * MD2加密
+     *
+     * @param data 明文字节数组
+     * @return 16进制密文
+     */
+    public static String encryptMD2ToString(final byte[] data) {
+        return bytes2HexString(encryptMD2(data));
+    }
+
+    /**
+     * MD2加密
+     *
+     * @param data 明文字节数组
+     * @return 密文字节数组
+     */
+    public static byte[] encryptMD2(final byte[] data) {
+        return hashTemplate(data, "MD2");
+    }
+
+    /**
+     * MD5加密
+     *
+     * @param data 明文字符串
+     * @return 16进制密文
+     */
+    public static String encryptMD5ToString(final String data) {
+        return encryptMD5ToString(data.getBytes());
+    }
+
+    /**
+     * MD5加密
+     *
+     * @param data 明文字符串
+     * @param salt 盐
+     * @return 16进制加盐密文
+     */
+    public static String encryptMD5ToString(final String data, final String salt) {
+        return bytes2HexString(encryptMD5((data + salt).getBytes()));
+    }
+
+    /**
+     * MD5加密
+     *
+     * @param data 明文字节数组
+     * @return 16进制密文
+     */
+    public static String encryptMD5ToString(final byte[] data) {
+        return bytes2HexString(encryptMD5(data));
+    }
+
+    /**
+     * MD5加密
+     *
+     * @param data 明文字节数组
+     * @param salt 盐字节数组
+     * @return 16进制加盐密文
+     */
+    public static String encryptMD5ToString(final byte[] data, final byte[] salt) {
+        if (data == null || salt == null) return null;
+        byte[] dataSalt = new byte[data.length + salt.length];
+        System.arraycopy(data, 0, dataSalt, 0, data.length);
+        System.arraycopy(salt, 0, dataSalt, data.length, salt.length);
+        return bytes2HexString(encryptMD5(dataSalt));
+    }
+
+    /**
+     * MD5加密
+     *
+     * @param data 明文字节数组
+     * @return 密文字节数组
+     */
+    public static byte[] encryptMD5(final byte[] data) {
+        return hashTemplate(data, "MD5");
+    }
+
+    /**
+     * MD5加密文件
+     *
+     * @param filePath 文件路径
+     * @return 文件的16进制密文
+     */
+    public static String encryptMD5File2String(final String filePath) {
+        File file = isSpace(filePath) ? null : new File(filePath);
+        return encryptMD5File2String(file);
+    }
+
+    /**
+     * MD5加密文件
+     *
+     * @param filePath 文件路径
+     * @return 文件的MD5校验码
+     */
+    public static byte[] encryptMD5File(final String filePath) {
+        File file = isSpace(filePath) ? null : new File(filePath);
+        return encryptMD5File(file);
+    }
+
+    /**
+     * MD5加密文件
+     *
+     * @param file 文件
+     * @return 文件的16进制密文
+     */
+    public static String encryptMD5File2String(final File file) {
+        return bytes2HexString(encryptMD5File(file));
+    }
+
+    /**
+     * MD5加密文件
+     *
+     * @param file 文件
+     * @return 文件的MD5校验码
+     */
+    public static byte[] encryptMD5File(final File file) {
+        if (file == null) return null;
+        FileInputStream fis = null;
+        DigestInputStream digestInputStream;
+        try {
+            fis = new FileInputStream(file);
+            MessageDigest md = MessageDigest.getInstance("MD5");
+            digestInputStream = new DigestInputStream(fis, md);
+            byte[] buffer = new byte[256 * 1024];
+            while (true) {
+                if (!(digestInputStream.read(buffer) > 0)) break;
+            }
+            md = digestInputStream.getMessageDigest();
+            return md.digest();
+        } catch (NoSuchAlgorithmException | IOException e) {
+            e.printStackTrace();
+            return null;
+        } finally {
+            CloseUtils.closeIO(fis);
+        }
+    }
+
+    /**
+     * SHA1加密
+     *
+     * @param data 明文字符串
+     * @return 16进制密文
+     */
+    public static String encryptSHA1ToString(final String data) {
+        return encryptSHA1ToString(data.getBytes());
+    }
+
+    /**
+     * SHA1加密
+     *
+     * @param data 明文字节数组
+     * @return 16进制密文
+     */
+    public static String encryptSHA1ToString(final byte[] data) {
+        return bytes2HexString(encryptSHA1(data));
+    }
+
+    /**
+     * SHA1加密
+     *
+     * @param data 明文字节数组
+     * @return 密文字节数组
+     */
+    public static byte[] encryptSHA1(final byte[] data) {
+        return hashTemplate(data, "SHA1");
+    }
+
+    /**
+     * SHA224加密
+     *
+     * @param data 明文字符串
+     * @return 16进制密文
+     */
+    public static String encryptSHA224ToString(final String data) {
+        return encryptSHA224ToString(data.getBytes());
+    }
+
+    /**
+     * SHA224加密
+     *
+     * @param data 明文字节数组
+     * @return 16进制密文
+     */
+    public static String encryptSHA224ToString(final byte[] data) {
+        return bytes2HexString(encryptSHA224(data));
+    }
+
+    /**
+     * SHA224加密
+     *
+     * @param data 明文字节数组
+     * @return 密文字节数组
+     */
+    public static byte[] encryptSHA224(final byte[] data) {
+        return hashTemplate(data, "SHA224");
+    }
+
+    /**
+     * SHA256加密
+     *
+     * @param data 明文字符串
+     * @return 16进制密文
+     */
+    public static String encryptSHA256ToString(final String data) {
+        return encryptSHA256ToString(data.getBytes());
+    }
+
+    /**
+     * SHA256加密
+     *
+     * @param data 明文字节数组
+     * @return 16进制密文
+     */
+    public static String encryptSHA256ToString(final byte[] data) {
+        return bytes2HexString(encryptSHA256(data));
+    }
+
+    /**
+     * SHA256加密
+     *
+     * @param data 明文字节数组
+     * @return 密文字节数组
+     */
+    public static byte[] encryptSHA256(final byte[] data) {
+        return hashTemplate(data, "SHA256");
+    }
+
+    /**
+     * SHA384加密
+     *
+     * @param data 明文字符串
+     * @return 16进制密文
+     */
+    public static String encryptSHA384ToString(final String data) {
+        return encryptSHA384ToString(data.getBytes());
+    }
+
+    /**
+     * SHA384加密
+     *
+     * @param data 明文字节数组
+     * @return 16进制密文
+     */
+    public static String encryptSHA384ToString(final byte[] data) {
+        return bytes2HexString(encryptSHA384(data));
+    }
+
+    /**
+     * SHA384加密
+     *
+     * @param data 明文字节数组
+     * @return 密文字节数组
+     */
+    public static byte[] encryptSHA384(final byte[] data) {
+        return hashTemplate(data, "SHA384");
+    }
+
+    /**
+     * SHA512加密
+     *
+     * @param data 明文字符串
+     * @return 16进制密文
+     */
+    public static String encryptSHA512ToString(final String data) {
+        return encryptSHA512ToString(data.getBytes());
+    }
+
+    /**
+     * SHA512加密
+     *
+     * @param data 明文字节数组
+     * @return 16进制密文
+     */
+    public static String encryptSHA512ToString(final byte[] data) {
+        return bytes2HexString(encryptSHA512(data));
+    }
+
+    /**
+     * SHA512加密
+     *
+     * @param data 明文字节数组
+     * @return 密文字节数组
+     */
+    public static byte[] encryptSHA512(final byte[] data) {
+        return hashTemplate(data, "SHA512");
+    }
+
+    /**
+     * hash加密模板
+     *
+     * @param data      数据
+     * @param algorithm 加密算法
+     * @return 密文字节数组
+     */
+    private static byte[] hashTemplate(final byte[] data, final String algorithm) {
+        if (data == null || data.length <= 0) return null;
+        try {
+            MessageDigest md = MessageDigest.getInstance(algorithm);
+            md.update(data);
+            return md.digest();
+        } catch (NoSuchAlgorithmException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * HmacMD5加密
+     *
+     * @param data 明文字符串
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacMD5ToString(final String data, final String key) {
+        return encryptHmacMD5ToString(data.getBytes(), key.getBytes());
+    }
+
+    /**
+     * HmacMD5加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacMD5ToString(final byte[] data, final byte[] key) {
+        return bytes2HexString(encryptHmacMD5(data, key));
+    }
+
+    /**
+     * HmacMD5加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 密文字节数组
+     */
+    public static byte[] encryptHmacMD5(final byte[] data, final byte[] key) {
+        return hmacTemplate(data, key, "HmacMD5");
+    }
+
+    /**
+     * HmacSHA1加密
+     *
+     * @param data 明文字符串
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacSHA1ToString(final String data, final String key) {
+        return encryptHmacSHA1ToString(data.getBytes(), key.getBytes());
+    }
+
+    /**
+     * HmacSHA1加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacSHA1ToString(final byte[] data, final byte[] key) {
+        return bytes2HexString(encryptHmacSHA1(data, key));
+    }
+
+    /**
+     * HmacSHA1加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 密文字节数组
+     */
+    public static byte[] encryptHmacSHA1(final byte[] data, final byte[] key) {
+        return hmacTemplate(data, key, "HmacSHA1");
+    }
+
+    /**
+     * HmacSHA224加密
+     *
+     * @param data 明文字符串
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacSHA224ToString(final String data, final String key) {
+        return encryptHmacSHA224ToString(data.getBytes(), key.getBytes());
+    }
+
+    /**
+     * HmacSHA224加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacSHA224ToString(final byte[] data, final byte[] key) {
+        return bytes2HexString(encryptHmacSHA224(data, key));
+    }
+
+    /**
+     * HmacSHA224加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 密文字节数组
+     */
+    public static byte[] encryptHmacSHA224(final byte[] data, final byte[] key) {
+        return hmacTemplate(data, key, "HmacSHA224");
+    }
+
+    /**
+     * HmacSHA256加密
+     *
+     * @param data 明文字符串
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacSHA256ToString(final String data, final String key) {
+        return encryptHmacSHA256ToString(data.getBytes(), key.getBytes());
+    }
+
+    /**
+     * HmacSHA256加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacSHA256ToString(final byte[] data, final byte[] key) {
+        return bytes2HexString(encryptHmacSHA256(data, key));
+    }
+
+    /**
+     * HmacSHA256加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 密文字节数组
+     */
+    public static byte[] encryptHmacSHA256(final byte[] data, final byte[] key) {
+        return hmacTemplate(data, key, "HmacSHA256");
+    }
+
+    /**
+     * HmacSHA384加密
+     *
+     * @param data 明文字符串
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacSHA384ToString(final String data, final String key) {
+        return encryptHmacSHA384ToString(data.getBytes(), key.getBytes());
+    }
+
+    /**
+     * HmacSHA384加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacSHA384ToString(final byte[] data, final byte[] key) {
+        return bytes2HexString(encryptHmacSHA384(data, key));
+    }
+
+    /**
+     * HmacSHA384加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 密文字节数组
+     */
+    public static byte[] encryptHmacSHA384(final byte[] data, final byte[] key) {
+        return hmacTemplate(data, key, "HmacSHA384");
+    }
+
+    /**
+     * HmacSHA512加密
+     *
+     * @param data 明文字符串
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacSHA512ToString(final String data, final String key) {
+        return encryptHmacSHA512ToString(data.getBytes(), key.getBytes());
+    }
+
+    /**
+     * HmacSHA512加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 16进制密文
+     */
+    public static String encryptHmacSHA512ToString(final byte[] data, final byte[] key) {
+        return bytes2HexString(encryptHmacSHA512(data, key));
+    }
+
+    /**
+     * HmacSHA512加密
+     *
+     * @param data 明文字节数组
+     * @param key  秘钥
+     * @return 密文字节数组
+     */
+    public static byte[] encryptHmacSHA512(final byte[] data, final byte[] key) {
+        return hmacTemplate(data, key, "HmacSHA512");
+    }
+
+    /**
+     * Hmac加密模板
+     *
+     * @param data      数据
+     * @param key       秘钥
+     * @param algorithm 加密算法
+     * @return 密文字节数组
+     */
+    private static byte[] hmacTemplate(final byte[] data, final byte[] key, final String algorithm) {
+        if (data == null || data.length == 0 || key == null || key.length == 0) return null;
+        try {
+            SecretKeySpec secretKey = new SecretKeySpec(key, algorithm);
+            Mac mac = Mac.getInstance(algorithm);
+            mac.init(secretKey);
+            return mac.doFinal(data);
+        } catch (InvalidKeyException | NoSuchAlgorithmException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // DES加密相关
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * DES转变
+     * <p>法算法名称/加密模式/填充方式</p>
+     * <p>加密模式有：电子密码本模式ECB、加密块链模式CBC、加密反馈模式CFB、输出反馈模式OFB</p>
+     * <p>填充方式有：NoPadding、ZerosPadding、PKCS5Padding</p>
+     */
+    public static        String DES_Transformation = "DES/ECB/NoPadding";
+    private static final String DES_Algorithm      = "DES";
+
+    /**
+     * DES加密后转为Base64编码
+     *
+     * @param data 明文
+     * @param key  8字节秘钥
+     * @return Base64密文
+     */
+    public static byte[] encryptDES2Base64(final byte[] data, final byte[] key) {
+        return base64Encode(encryptDES(data, key));
+    }
+
+    /**
+     * DES加密后转为16进制
+     *
+     * @param data 明文
+     * @param key  8字节秘钥
+     * @return 16进制密文
+     */
+    public static String encryptDES2HexString(final byte[] data, final byte[] key) {
+        return bytes2HexString(encryptDES(data, key));
+    }
+
+    /**
+     * DES加密
+     *
+     * @param data 明文
+     * @param key  8字节秘钥
+     * @return 密文
+     */
+    public static byte[] encryptDES(final byte[] data, final byte[] key) {
+        return desTemplate(data, key, DES_Algorithm, DES_Transformation, true);
+    }
+
+    /**
+     * DES解密Base64编码密文
+     *
+     * @param data Base64编码密文
+     * @param key  8字节秘钥
+     * @return 明文
+     */
+    public static byte[] decryptBase64DES(final byte[] data, final byte[] key) {
+        return decryptDES(base64Decode(data), key);
+    }
+
+    /**
+     * DES解密16进制密文
+     *
+     * @param data 16进制密文
+     * @param key  8字节秘钥
+     * @return 明文
+     */
+    public static byte[] decryptHexStringDES(final String data, final byte[] key) {
+        return decryptDES(hexString2Bytes(data), key);
+    }
+
+    /**
+     * DES解密
+     *
+     * @param data 密文
+     * @param key  8字节秘钥
+     * @return 明文
+     */
+    public static byte[] decryptDES(final byte[] data, final byte[] key) {
+        return desTemplate(data, key, DES_Algorithm, DES_Transformation, false);
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // 3DES加密相关
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 3DES转变
+     * <p>法算法名称/加密模式/填充方式</p>
+     * <p>加密模式有：电子密码本模式ECB、加密块链模式CBC、加密反馈模式CFB、输出反馈模式OFB</p>
+     * <p>填充方式有：NoPadding、ZerosPadding、PKCS5Padding</p>
+     */
+    public static        String TripleDES_Transformation = "DESede/ECB/NoPadding";
+    private static final String TripleDES_Algorithm      = "DESede";
+
+
+    /**
+     * 3DES加密后转为Base64编码
+     *
+     * @param data 明文
+     * @param key  24字节秘钥
+     * @return Base64密文
+     */
+    public static byte[] encrypt3DES2Base64(final byte[] data, final byte[] key) {
+        return base64Encode(encrypt3DES(data, key));
+    }
+
+    /**
+     * 3DES加密后转为16进制
+     *
+     * @param data 明文
+     * @param key  24字节秘钥
+     * @return 16进制密文
+     */
+    public static String encrypt3DES2HexString(final byte[] data, final byte[] key) {
+        return bytes2HexString(encrypt3DES(data, key));
+    }
+
+    /**
+     * 3DES加密
+     *
+     * @param data 明文
+     * @param key  24字节密钥
+     * @return 密文
+     */
+    public static byte[] encrypt3DES(final byte[] data, final byte[] key) {
+        return desTemplate(data, key, TripleDES_Algorithm, TripleDES_Transformation, true);
+    }
+
+    /**
+     * 3DES解密Base64编码密文
+     *
+     * @param data Base64编码密文
+     * @param key  24字节秘钥
+     * @return 明文
+     */
+    public static byte[] decryptBase64_3DES(final byte[] data, final byte[] key) {
+        return decrypt3DES(base64Decode(data), key);
+    }
+
+    /**
+     * 3DES解密16进制密文
+     *
+     * @param data 16进制密文
+     * @param key  24字节秘钥
+     * @return 明文
+     */
+    public static byte[] decryptHexString3DES(final String data, final byte[] key) {
+        return decrypt3DES(hexString2Bytes(data), key);
+    }
+
+    /**
+     * 3DES解密
+     *
+     * @param data 密文
+     * @param key  24字节密钥
+     * @return 明文
+     */
+    public static byte[] decrypt3DES(final byte[] data, final byte[] key) {
+        return desTemplate(data, key, TripleDES_Algorithm, TripleDES_Transformation, false);
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // AES加密相关
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * AES转变
+     * <p>法算法名称/加密模式/填充方式</p>
+     * <p>加密模式有：电子密码本模式ECB、加密块链模式CBC、加密反馈模式CFB、输出反馈模式OFB</p>
+     * <p>填充方式有：NoPadding、ZerosPadding、PKCS5Padding</p>
+     */
+    public static        String AES_Transformation = "AES/ECB/NoPadding";
+    private static final String AES_Algorithm      = "AES";
+
+
+    /**
+     * AES加密后转为Base64编码
+     *
+     * @param data 明文
+     * @param key  16、24、32字节秘钥
+     * @return Base64密文
+     */
+    public static byte[] encryptAES2Base64(final byte[] data, final byte[] key) {
+        return base64Encode(encryptAES(data, key));
+    }
+
+    /**
+     * AES加密后转为16进制
+     *
+     * @param data 明文
+     * @param key  16、24、32字节秘钥
+     * @return 16进制密文
+     */
+    public static String encryptAES2HexString(final byte[] data, final byte[] key) {
+        return bytes2HexString(encryptAES(data, key));
+    }
+
+    /**
+     * AES加密
+     *
+     * @param data 明文
+     * @param key  16、24、32字节秘钥
+     * @return 密文
+     */
+    public static byte[] encryptAES(final byte[] data, final byte[] key) {
+        return desTemplate(data, key, AES_Algorithm, AES_Transformation, true);
+    }
+
+    /**
+     * AES解密Base64编码密文
+     *
+     * @param data Base64编码密文
+     * @param key  16、24、32字节秘钥
+     * @return 明文
+     */
+    public static byte[] decryptBase64AES(final byte[] data, final byte[] key) {
+        return decryptAES(base64Decode(data), key);
+    }
+
+    /**
+     * AES解密16进制密文
+     *
+     * @param data 16进制密文
+     * @param key  16、24、32字节秘钥
+     * @return 明文
+     */
+    public static byte[] decryptHexStringAES(final String data, final byte[] key) {
+        return decryptAES(hexString2Bytes(data), key);
+    }
+
+    /**
+     * AES解密
+     *
+     * @param data 密文
+     * @param key  16、24、32字节秘钥
+     * @return 明文
+     */
+    public static byte[] decryptAES(final byte[] data, final byte[] key) {
+        return desTemplate(data, key, AES_Algorithm, AES_Transformation, false);
+    }
+
+    /**
+     * DES加密模板
+     *
+     * @param data           数据
+     * @param key            秘钥
+     * @param algorithm      加密算法
+     * @param transformation 转变
+     * @param isEncrypt      {@code true}: 加密 {@code false}: 解密
+     * @return 密文或者明文，适用于DES，3DES，AES
+     */
+    public static byte[] desTemplate(final byte[] data, final byte[] key, final String algorithm, final String transformation, final boolean isEncrypt) {
+        if (data == null || data.length == 0 || key == null || key.length == 0) return null;
+        try {
+            SecretKeySpec keySpec = new SecretKeySpec(key, algorithm);
+            Cipher cipher = Cipher.getInstance(transformation);
+            SecureRandom random = new SecureRandom();
+            cipher.init(isEncrypt ? Cipher.ENCRYPT_MODE : Cipher.DECRYPT_MODE, keySpec, random);
+            return cipher.doFinal(data);
+        } catch (Throwable e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    private static final char hexDigits[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
+
+    private static String bytes2HexString(final byte[] bytes) {
+        if (bytes == null) return null;
+        int len = bytes.length;
+        if (len <= 0) return null;
+        char[] ret = new char[len << 1];
+        for (int i = 0, j = 0; i < len; i++) {
+            ret[j++] = hexDigits[bytes[i] >>> 4 & 0x0f];
+            ret[j++] = hexDigits[bytes[i] & 0x0f];
+        }
+        return new String(ret);
+    }
+
+    private static byte[] hexString2Bytes(String hexString) {
+        if (isSpace(hexString)) return null;
+        int len = hexString.length();
+        if (len % 2 != 0) {
+            hexString = "0" + hexString;
+            len = len + 1;
+        }
+        char[] hexBytes = hexString.toUpperCase().toCharArray();
+        byte[] ret = new byte[len >> 1];
+        for (int i = 0; i < len; i += 2) {
+            ret[i >> 1] = (byte) (hex2Dec(hexBytes[i]) << 4 | hex2Dec(hexBytes[i + 1]));
+        }
+        return ret;
+    }
+
+    private static int hex2Dec(final char hexChar) {
+        if (hexChar >= '0' && hexChar <= '9') {
+            return hexChar - '0';
+        } else if (hexChar >= 'A' && hexChar <= 'F') {
+            return hexChar - 'A' + 10;
+        } else {
+            throw new IllegalArgumentException();
+        }
+    }
+
+    private static byte[] base64Encode(final byte[] input) {
+        return Base64.encode(input, Base64.NO_WRAP);
+    }
+
+    private static byte[] base64Decode(final byte[] input) {
+        return Base64.decode(input, Base64.NO_WRAP);
+    }
+
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+}
Index: baselib/src/main/java/com/baselib/baserx/GsonResponseBodyConverter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baserx/GsonResponseBodyConverter.java	(revision )
+++ baselib/src/main/java/com/baselib/baserx/GsonResponseBodyConverter.java	(revision )
@@ -0,0 +1,49 @@
+package com.baselib.baserx;
+
+/**
+ * 作者: liuhuaqian on 2017/10/8.
+ */
+
+import android.util.Log;
+
+import com.baselib.basebean.BaseRespose;
+import com.baselib.commonutils.LogUtils;
+import com.google.gson.Gson;
+
+import java.lang.reflect.Type;
+import java.io.IOException;
+
+import okhttp3.ResponseBody;
+import retrofit2.Converter;
+
+final class GsonResponseBodyConverter<T> implements Converter<ResponseBody, T> {
+    private final Gson gson;
+    private final Type type;
+
+    GsonResponseBodyConverter(Gson gson, Type type) {
+        this.gson = gson;
+        this.type = type;
+    }
+
+    /**
+     * 针对数据返回成功、错误不同类型字段处理
+     */
+    @Override
+    public T convert(ResponseBody value) throws IOException {
+        String response = value.string();
+        try {
+            BaseRespose result = gson.fromJson(response, BaseRespose.class);
+
+            String rows = result.getRows().toString().trim();
+
+            if (result.success() && !"[]".equals(rows) && !"[{}]".contains(rows)) {
+                return gson.fromJson(response, type);
+            } else {
+                LogUtils.logd("HttpManager,返回err==：" + response);
+                throw new ResultException(result.getErrorMsg(), !result.success());
+            }
+        } finally {
+            value.close();
+        }
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/activity/Okhttp3Activity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/activity/Okhttp3Activity.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/activity/Okhttp3Activity.java	(revision )
@@ -0,0 +1,263 @@
+package com.b3ad.yuxie.myapplication.activity;
+
+import android.os.Looper;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.ArrayMap;
+import android.util.Log;
+import android.view.View;
+import android.widget.Button;
+import android.widget.TextView;
+
+import com.b3ad.yuxie.myapplication.R;
+import com.b3ad.yuxie.myapplication.retrofit.Contributor;
+import com.b3ad.yuxie.myapplication.retrofit.GitHubApi;
+import com.b3ad.yuxie.myapplication.music.RetrofitBean;
+import com.b3ad.yuxie.myapplication.retrofit.User;
+import com.google.gson.Gson;
+import com.google.gson.reflect.TypeToken;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Map;
+
+import okhttp3.Call;
+//import okhttp3.Callback;
+import okhttp3.Callback;
+import okhttp3.FormBody;
+import okhttp3.OkHttpClient;
+import okhttp3.Request;
+import okhttp3.RequestBody;
+import okhttp3.Response;
+import okhttp3.ResponseBody;
+//import retrofit2.Call;
+//import retrofit2.Callback;
+//import retrofit2.Response;
+//import retrofit2.Retrofit;
+//import retrofit2.converter.gson.GsonConverterFactory;
+
+public class Okhttp3Activity extends AppCompatActivity {
+
+    private String TAG = "TAG";
+
+    Button btnTest;
+    TextView tv;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_okhttp3);
+
+        btnTest=(Button)findViewById(R.id.btn_test);
+        tv=(TextView)findViewById(R.id.tv);
+        tv.setText("你好");
+    }
+
+    public void doClick(View view) {
+        Log.i("TAG", "doClick");
+//        new Thread(new Runnable() {
+//            @Override
+//            public void run() {
+//                testRetrofitPost();
+//            }
+//        }).start();
+        String url = "http://www.baidu.com";
+        async(url);
+
+//        test();
+
+    }
+
+    /**
+     * 异步请求：回调方法可以直接操作UI
+     */
+    private void async(String url) {
+
+//        OkHttpUtil.getDefault(this).doGetAsync(HttpInfo.Builder().setUrl(url).build(), new com.okhttplib.callback.Callback() {
+//            @Override
+//            public void onSuccess(HttpInfo info) throws IOException {
+//                Log.i("TAG", "异步请求成功：" + info.toString());
+//                tv.setText("结果:"+info.toString());
+//
+//            }
+//
+//            @Override
+//            public void onFailure(HttpInfo info) throws IOException {
+//
+//            }
+//        });
+    }
+
+//                    @Override
+//                    public void onFailure(HttpInfo info) throws IOException {
+//                        String result = info.getRetDetail();
+//                        Log.i("TAG", "异步请求失败：" + result);
+//                    }
+//
+//                    @Override
+//                    public void onSuccess(HttpInfo info) throws IOException {
+//                        String result = info.getRetDetail();
+//                        Log.i("TAG", "异步请求成功：" + result);
+//                    }
+//                });
+//    }
+//    public void test() {
+//        //okhttp,异步访问测试
+//        String url = "http://www.baidu.com";
+//        OkHttpClient okHttpClient = new OkHttpClient();
+//
+//        //post请求参数构造
+//        RequestBody body = new FormBody.Builder().add("page", "1")
+//                .add("code", "news").build();
+//        //构造请求信息
+//        Request request = new Request.Builder().post(body).url(url).build();
+//        Call call = okHttpClient.newCall(request);
+//        call.enqueue(new Callback() {
+//            @Override
+//            public void onFailure(Call call, IOException e) {
+//
+//            }
+//            @Override
+//            public void onResponse(Call call, Response response) throws IOException {
+//                String str = response.body().string();
+//                Log.i("TAG", "str:" + str);
+//                boolean b=Thread.currentThread() == Looper.getMainLooper().getThread();
+//                Log.i("TAG", "Thread.currentThread():" + Thread.currentThread());
+//                Log.i("TAG", "Thread.currentThread():" + b );
+////                tv.setText("结果:"+str);
+//
+//
+//            }
+//        });
+//
+//    }
+
+//    //直接返回集合(已实现解析json数据)
+//    public void testRetrofitReturnList() {
+//
+//        Retrofit retrofit = new Retrofit.Builder()
+//                .baseUrl("https://api.github.com/")
+//                .addConverterFactory(GsonConverterFactory.create())//声明需要返回对象
+//                .build();
+//
+//        GitHubApi repo = retrofit.create(GitHubApi.class);
+//
+//        Call<List<Contributor>> call = repo.contributorsBySimpleGetList("square", "retrofit");
+//        call.enqueue(new Callback<List<Contributor>>() {
+//            @Override
+//            public void onResponse(Call<List<Contributor>> call, Response<List<Contributor>> response) {
+//                List<Contributor> contributorList = response.body();
+//                for (Contributor contributor : contributorList) {
+//                    Log.i("TAG", "login:" + contributor.getLogin());
+//                    Log.i("TAG", "contributions:" + contributor.getContributions());
+//                }
+//            }
+//
+//            @Override
+//            public void onFailure(Call<List<Contributor>> call, Throwable t) {
+//
+//            }
+//        });
+//
+//    }
+//    public void testRetrofitReturnString() {
+//        Retrofit retrofit = new Retrofit.Builder()
+//                .baseUrl("https://api.github.com/")
+//                .build();
+//
+//        GitHubApi repo = retrofit.create(GitHubApi.class);
+//
+//        Call<ResponseBody> call = repo.contributorsBySimpleGetString("square", "retrofit");
+//        call.enqueue(new Callback<ResponseBody>() {
+//            @Override
+//            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {
+//                try {
+//                    Gson gson = new Gson();
+//                    ArrayList<Contributor> contributorsList = gson.fromJson(response.body().string(), new TypeToken<List<Contributor>>() {
+//                    }.getType());
+//                    for (Contributor contributor : contributorsList) {
+//                        Log.i("TAG", "login:" + contributor.getLogin());
+//                        Log.i("TAG", "contributions:" + contributor.getContributions());
+//                    }
+//                } catch (IOException e) {
+//                    e.printStackTrace();
+//                }
+//            }
+//
+//            @Override
+//            public void onFailure(Call<ResponseBody> call, Throwable t) {
+//
+//            }
+//        });
+//    }
+    //get请求
+//    public void testRetrofit() {
+//        Retrofit retrofit = new Retrofit.Builder()
+//                .baseUrl("https://api.github.com/")
+//                .addConverterFactory(GsonConverterFactory.create())//声明需要返回对象
+//                .build();
+//
+//        GitHubApi repo = retrofit.create(GitHubApi.class);
+//
+//        Map<String, String> map = new ArrayMap<>();
+////        q=retrofit&since=2016-03-29&page=1&per_page=3
+//        map.put("q", "retrofit");
+//        map.put("since", "2016-03-29");
+//        map.put("page", "1");
+//        map.put("per_page", "3");
+//        Call<RetrofitBean> call = repo.queryRetrofitByGetCall("retrofit", "2016-03-29", 1, 3);
+//        call.enqueue(new Callback<RetrofitBean>() {
+//            @Override
+//            public void onResponse(Call<RetrofitBean> call, Response<RetrofitBean> response) {
+//                Log.i(TAG, "---total:");
+//                RetrofitBean retrofit = response.body();
+//                Log.i(TAG, "total:" + retrofit.getTotal_count());
+//                List<RetrofitBean.Items> list = retrofit.getItems();
+//                if (list == null)
+//                    return;
+//                Log.i(TAG, "total:" + retrofit.getTotal_count());
+//                Log.i(TAG, "incompleteResults:" + retrofit.getIncomplete_results());
+//                Log.i(TAG, "----------------------");
+//                for (RetrofitBean.Items item : list) {
+//                    Log.i(TAG, "name:" + item.getName());
+//                    Log.i(TAG, "full_name:" + item.getFull_name());
+//                    Log.i(TAG, "description:" + item.getDescription());
+//                    RetrofitBean.Owner owner = item.getOwner();
+//                    Log.i(TAG, "login:" + owner.getLogin());
+//                    Log.i(TAG, "type:" + owner.getType());
+//                }
+//            }
+//
+//            @Override
+//            public void onFailure(Call<RetrofitBean> call, Throwable t) {
+//
+//            }
+//        });
+//    }
+
+    //post请求
+//    public void testRetrofitPost() {
+//
+//        Retrofit retrofit = new Retrofit.Builder()
+//                .baseUrl("https://api.github.com/")
+//                .addConverterFactory(GsonConverterFactory.create())//声明需要返回对象
+//                .build();
+//        GitHubApi repo = retrofit.create(GitHubApi.class);
+//        Call<User> call=repo.updateUser("hello", "123");
+//        call.enqueue(new Callback<User>() {
+//            @Override
+//            public void onResponse(Call<User> call, Response<User> response) {
+//                Log.i("TAG","onResponse---:"+response.toString());
+//                User user= response.body();
+//                Log.i("TAG","user.getFirst_name():"+user.getFirst_name());
+//                Log.i("TAG","user.getLast_name():"+user.getLast_name());
+//            }
+//
+//            @Override
+//            public void onFailure(Call<User> call, Throwable t) {
+//                Log.i("TAG","onFailure---");
+//            }
+//        });
+//    }
+}
Index: app/src/main/res/layout/prompt_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/prompt_view.xml	(revision )
+++ app/src/main/res/layout/prompt_view.xml	(revision )
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical">
+
+    <TextView
+        android:id="@+id/text"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content" />
+
+    <EditText
+        android:id="@+id/edit"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:scrollHorizontally="true"
+        android:selectAllOnFocus="true" />
+
+</LinearLayout>  
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/uitls/GlideUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/uitls/GlideUtil.java	(revision )
+++ baselib/src/main/java/com/baselib/uitls/GlideUtil.java	(revision )
@@ -0,0 +1,128 @@
+package com.baselib.uitls;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.net.Uri;
+import android.support.v4.graphics.drawable.RoundedBitmapDrawable;
+import android.support.v4.graphics.drawable.RoundedBitmapDrawableFactory;
+import android.text.TextUtils;
+import android.widget.ImageView;
+
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.request.target.BitmapImageViewTarget;
+
+/**
+ * Created by luo on 2018/1/16.
+ */
+
+
+public class GlideUtil {
+
+    /**
+     * 显示圆形头像
+     *
+     * @param url
+     * @param imageView
+     */
+    public static void showHead(String url, ImageView imageView, int defaultPic) {
+        final Context context = imageView.getContext();
+        Uri uri = !TextUtils.isEmpty(url) ? Uri.parse(url) : null;
+        Glide.with(context).load(uri).asBitmap().thumbnail(0.6f).centerCrop().placeholder(defaultPic).into(new BitmapImageViewTarget(imageView) {
+            @Override
+            protected void setResource(Bitmap resource) {
+                super.setResource(resource);
+
+                RoundedBitmapDrawable roundedBitmapDrawable = RoundedBitmapDrawableFactory.create(context.getResources(), resource);
+                roundedBitmapDrawable.setCircular(true);
+                getView().setImageDrawable(roundedBitmapDrawable);
+            }
+        });
+    }
+
+    public static void showHead1(String url, ImageView imageView, int defaultPic) {
+        final Context context = imageView.getContext();
+        Glide.with(context).load(url).asBitmap().thumbnail(0.6f).centerCrop().placeholder(defaultPic).into(new BitmapImageViewTarget(imageView) {
+            @Override
+            protected void setResource(Bitmap resource) {
+                super.setResource(resource);
+
+                RoundedBitmapDrawable roundedBitmapDrawable = RoundedBitmapDrawableFactory.create(context.getResources(), resource);
+                roundedBitmapDrawable.setCircular(true);
+                getView().setImageDrawable(roundedBitmapDrawable);
+            }
+        });
+    }
+
+    public static void showHead1(int url, ImageView imageView) {
+        final Context context = imageView.getContext();
+        Glide.with(context).load(url).asBitmap().thumbnail(0.6f).centerCrop().into(new BitmapImageViewTarget(imageView) {
+            @Override
+            protected void setResource(Bitmap resource) {
+                super.setResource(resource);
+
+                RoundedBitmapDrawable roundedBitmapDrawable = RoundedBitmapDrawableFactory.create(context.getResources(), resource);
+                roundedBitmapDrawable.setCircular(true);
+                getView().setImageDrawable(roundedBitmapDrawable);
+            }
+        });
+    }
+
+    public static void showHead(Uri uri, ImageView imageView, int defaultPic) {
+        final Context context = imageView.getContext();
+        Glide.with(context).load(uri).asBitmap().thumbnail(0.6f).centerCrop().placeholder(defaultPic).into(new BitmapImageViewTarget(imageView) {
+            @Override
+            protected void setResource(Bitmap resource) {
+                super.setResource(resource);
+                RoundedBitmapDrawable roundedBitmapDrawable = RoundedBitmapDrawableFactory.create(context.getResources(), resource);
+                roundedBitmapDrawable.setCircular(true);
+                getView().setImageDrawable(roundedBitmapDrawable);
+            }
+        });
+    }
+
+    /**
+     * 显示方形
+     *
+     * @param url
+     * @param imageView
+     */
+    public static void showRect(String url, ImageView imageView, int defaultPic) {
+        Context context = imageView.getContext();
+        Uri uri = !TextUtils.isEmpty(url) ? Uri.parse(url) : null;
+        Glide.with(context).load(uri).asBitmap().centerCrop().placeholder(defaultPic).into(new BitmapImageViewTarget(imageView) {
+            @Override
+            protected void setResource(Bitmap resource) {
+                super.setResource(resource);
+            }
+        });
+    }
+
+    /**
+     * 显示方形
+     *
+     * @param url
+     * @param imageView
+     */
+    public static void showRect(String url, ImageView imageView) {
+        Context context = imageView.getContext();
+        Uri uri = !TextUtils.isEmpty(url) ? Uri.parse(url) : null;
+        Glide.with(context).load(uri).fitCenter().into(imageView);
+    }
+
+    /**
+     * 显示
+     *
+     * @param url
+     * @param imageView
+     * @param defaultPic
+     */
+    public static void showImageView(String url, ImageView imageView, int defaultPic) {
+
+        Context context = imageView.getContext();
+        Uri uri = !TextUtils.isEmpty(url) ? Uri.parse(url) : null;
+        Glide.with(context).load(uri).centerCrop().dontAnimate().placeholder(defaultPic).into(imageView);
+
+    }
+
+}
+
Index: app/proguard-rules.pro
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/proguard-rules.pro	(revision )
+++ app/proguard-rules.pro	(revision )
@@ -0,0 +1,25 @@
+# Add project specific ProGuard rules here.
+# By default, the flags in this file are appended to flags specified
+# in D:\Android\sdk/tools/proguard/proguard-android.txt
+# You can edit the include path and order by changing the proguardFiles
+# directive in build.gradle.
+#
+# For more details, see
+#   http://developer.android.com/guide/developing/tools/proguard.html
+
+# Add any project specific keep options here:
+
+# If your project uses WebView with JS, uncomment the following
+# and specify the fully qualified class name to the JavaScript interface
+# class:
+#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
+#   public *;
+#}
+
+# Uncomment this to preserve the line number information for
+# debugging stack traces.
+#-keepattributes SourceFile,LineNumberTable
+
+# If you keep the line number information, uncomment this to
+# hide the original source file name.
+#-renamesourcefileattribute SourceFile
Index: baselib/src/main/java/com/baselib/ui/popwindow/SelectPicturePopupWindow.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/popwindow/SelectPicturePopupWindow.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/popwindow/SelectPicturePopupWindow.java	(revision )
@@ -0,0 +1,103 @@
+package com.baselib.ui.popwindow;
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.PopupWindow;
+
+import com.baselib.R;
+
+/**
+ * 作者: liuhuaqian on 2017/9/10.
+ * 拍照PopupWindow
+ */
+
+public class SelectPicturePopupWindow extends PopupWindow implements View.OnClickListener {
+
+    private Button takePhotoBtn, pickPictureBtn, cancelBtn;
+    private View mMenuView;
+    private PopupWindow popupWindow;
+    private OnSelectedListener mOnSelectedListener;
+
+    public SelectPicturePopupWindow(Context context) {
+        super(context);
+        LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
+        mMenuView = inflater.inflate(R.layout.layout_picture_selector, null);
+        takePhotoBtn = (Button) mMenuView.findViewById(R.id.picture_selector_take_photo_btn);
+        pickPictureBtn = (Button) mMenuView.findViewById(R.id.picture_selector_pick_picture_btn);
+        cancelBtn = (Button) mMenuView.findViewById(R.id.picture_selector_cancel_btn);
+        // 设置按钮监听
+        takePhotoBtn.setOnClickListener(this);
+        pickPictureBtn.setOnClickListener(this);
+        cancelBtn.setOnClickListener(this);
+    }
+
+    /**
+     * 把一个View控件添加到PopupWindow上并且显示
+     *
+     * @param activity
+     */
+    public void showPopupWindow(Activity activity) {
+        popupWindow = new PopupWindow(mMenuView,    // 添加到popupWindow
+                ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
+        // ☆ 注意： 必须要设置背景，播放动画有一个前提 就是窗体必须有背景
+        popupWindow.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
+        popupWindow.showAtLocation(activity.getWindow().getDecorView(), Gravity.CENTER | Gravity.BOTTOM, 0, 0);
+        popupWindow.setAnimationStyle(android.R.style.Animation_InputMethod);   // 设置窗口显示的动画效果
+        popupWindow.setFocusable(false);                                        // 点击其他地方隐藏键盘 popupWindow
+        popupWindow.update();
+    }
+
+    /**
+     * 移除PopupWindow
+     */
+    public void dismissPopupWindow() {
+        if (popupWindow != null && popupWindow.isShowing()) {
+            popupWindow.dismiss();
+            popupWindow = null;
+        }
+    }
+
+    @Override
+    public void onClick(View v) {
+        int i = v.getId();
+        if (i == R.id.picture_selector_take_photo_btn) {
+            if (null != mOnSelectedListener) {
+                mOnSelectedListener.OnSelected(v, 0);
+            }
+
+        } else if (i == R.id.picture_selector_pick_picture_btn) {
+            if (null != mOnSelectedListener) {
+                mOnSelectedListener.OnSelected(v, 1);
+            }
+
+        } else if (i == R.id.picture_selector_cancel_btn) {
+            if (null != mOnSelectedListener) {
+                mOnSelectedListener.OnSelected(v, 2);
+            }
+
+        }
+    }
+
+    /**
+     * 设置选择监听
+     *
+     * @param l
+     */
+    public void setOnSelectedListener(OnSelectedListener l) {
+        this.mOnSelectedListener = l;
+    }
+
+    /**
+     * 选择监听接口
+     */
+    public interface OnSelectedListener {
+        void OnSelected(View v, int position);
+    }
+
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/daynightmodeutils/grant/PermissionsManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/daynightmodeutils/grant/PermissionsManager.java	(revision )
+++ baselib/src/main/java/com/baselib/daynightmodeutils/grant/PermissionsManager.java	(revision )
@@ -0,0 +1,367 @@
+package com.baselib.daynightmodeutils.grant;
+import android.Manifest;
+import android.app.Activity;
+import android.content.Context;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.os.Build;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+
+import java.lang.ref.WeakReference;
+import java.lang.reflect.Field;
+import java.util.ArrayList;
+import java.util.HashSet;
+import java.util.Iterator;
+import java.util.List;
+import java.util.Set;
+
+/**
+ * A class to help you manage your permissions simply.
+ */
+public class PermissionsManager {
+
+    private static final String TAG = PermissionsManager.class.getSimpleName();
+
+    private final Set<String> mPendingRequests = new HashSet<>(1);
+    private final Set<String> mPermissions = new HashSet<>(1);
+    private final List<WeakReference<PermissionsResultAction>> mPendingActions = new ArrayList<>(1);
+
+    private static PermissionsManager mInstance = null;
+
+    public static PermissionsManager getInstance() {
+        if (mInstance == null) {
+            mInstance = new PermissionsManager();
+        }
+        return mInstance;
+    }
+
+    private PermissionsManager() {
+        initializePermissionsMap();
+    }
+
+    /**
+     * This method uses reflection to read all the permissions in the Manifest class.
+     * This is necessary because some permissions do not exist on older versions of Android,
+     * since they do not exist, they will be denied when you check whether you have permission
+     * which is problematic since a new permission is often added where there was no previous
+     * permission required. We initialize a Set of available permissions and check the set
+     * when checking if we have permission since we want to know when we are denied a permission
+     * because it doesn't exist yet.
+     */
+    private synchronized void initializePermissionsMap() {
+        Field[] fields = Manifest.permission.class.getFields();
+        for (Field field : fields) {
+            String name = null;
+            try {
+                name = (String) field.get("");
+            } catch (IllegalAccessException e) {
+                Log.e(TAG, "Could not access field", e);
+            }
+            mPermissions.add(name);
+        }
+    }
+
+    /**
+     * This method retrieves all the permissions declared in the application's manifest.
+     * It returns a non null array of permisions that can be declared.
+     *
+     * @param activity the Activity necessary to check what permissions we have.
+     * @return a non null array of permissions that are declared in the application manifest.
+     */
+    @NonNull
+    private synchronized String[] getManifestPermissions(@NonNull final Activity activity) {
+        PackageInfo packageInfo = null;
+        List<String> list = new ArrayList<>(1);
+        try {
+            Log.d(TAG, activity.getPackageName());
+            packageInfo = activity.getPackageManager().getPackageInfo(activity.getPackageName(), PackageManager.GET_PERMISSIONS);
+        } catch (PackageManager.NameNotFoundException e) {
+            Log.e(TAG, "A problem occurred when retrieving permissions", e);
+        }
+        if (packageInfo != null) {
+            String[] permissions = packageInfo.requestedPermissions;
+            if (permissions != null) {
+                for (String perm : permissions) {
+                    Log.d(TAG, "Manifest contained permission: " + perm);
+                    list.add(perm);
+                }
+            }
+        }
+        return list.toArray(new String[list.size()]);
+    }
+
+    /**
+     * This method adds the {@link PermissionsResultAction} to the current list
+     * of pending actions that will be completed when the permissions are
+     * received. The list of permissions passed to this method are registered
+     * in the PermissionsResultAction object so that it will be notified of changes
+     * made to these permissions.
+     *
+     * @param permissions the required permissions for the action to be executed.
+     * @param action      the action to add to the current list of pending actions.
+     */
+    private synchronized void addPendingAction(@NonNull String[] permissions,
+                                               @Nullable PermissionsResultAction action) {
+        if (action == null) {
+            return;
+        }
+        action.registerPermissions(permissions);
+        mPendingActions.add(new WeakReference<>(action));
+    }
+
+    /**
+     * This method removes a pending action from the list of pending actions.
+     * It is used for cases where the permission has already been granted, so
+     * you immediately wish to remove the pending action from the queue and
+     * execute the action.
+     *
+     * @param action the action to remove
+     */
+    private synchronized void removePendingAction(@Nullable PermissionsResultAction action) {
+        for (Iterator<WeakReference<PermissionsResultAction>> iterator = mPendingActions.iterator();
+             iterator.hasNext(); ) {
+            WeakReference<PermissionsResultAction> weakRef = iterator.next();
+            if (weakRef.get() == action || weakRef.get() == null) {
+                iterator.remove();
+            }
+        }
+    }
+
+    /**
+     * This static method can be used to check whether or not you have a specific permission.
+     * It is basically a less verbose method of using {@link ActivityCompat#checkSelfPermission(Context, String)}
+     * and will simply return a boolean whether or not you have the permission. If you pass
+     * in a null Context object, it will return false as otherwise it cannot check the permission.
+     * However, the Activity parameter is nullable so that you can pass in a reference that you
+     * are not always sure will be valid or not (e.g. getActivity() from Fragment).
+     *
+     * @param context    the Context necessary to check the permission
+     * @param permission the permission to check
+     * @return true if you have been granted the permission, false otherwise
+     */
+    @SuppressWarnings("unused")
+    public synchronized boolean hasPermission(@Nullable Context context, @NonNull String permission) {
+        return context != null && (ActivityCompat.checkSelfPermission(context, permission)
+                == PackageManager.PERMISSION_GRANTED || !mPermissions.contains(permission));
+    }
+
+    /**
+     * This static method can be used to check whether or not you have several specific permissions.
+     * It is simpler than checking using {@link ActivityCompat#checkSelfPermission(Context, String)}
+     * for each permission and will simply return a boolean whether or not you have all the permissions.
+     * If you pass in a null Context object, it will return false as otherwise it cannot check the
+     * permission. However, the Activity parameter is nullable so that you can pass in a reference
+     * that you are not always sure will be valid or not (e.g. getActivity() from Fragment).
+     *
+     * @param context     the Context necessary to check the permission
+     * @param permissions the permissions to check
+     * @return true if you have been granted all the permissions, false otherwise
+     */
+    @SuppressWarnings("unused")
+    public synchronized boolean hasAllPermissions(@Nullable Context context, @NonNull String[] permissions) {
+        if (context == null) {
+            return false;
+        }
+        boolean hasAllPermissions = true;
+        for (String perm : permissions) {
+            hasAllPermissions &= hasPermission(context, perm);
+        }
+        return hasAllPermissions;
+    }
+
+    /**
+     * This method will request all the permissions declared in your application manifest
+     * for the specified {@link PermissionsResultAction}. The purpose of this method is to enable
+     * all permissions to be requested at one shot. The PermissionsResultAction is used to notify
+     * you of the user allowing or denying each permission. The Activity and PermissionsResultAction
+     * parameters are both annotated Nullable, but this method will not work if the Activity
+     * is null. It is only annotated Nullable as a courtesy to prevent crashes in the case
+     * that you call this from a Fragment where {@link Fragment#getActivity()} could yield
+     * null. Additionally, you will not receive any notification of permissions being granted
+     * if you provide a null PermissionsResultAction.
+     *
+     * @param activity the Activity necessary to request and check permissions.
+     * @param action   the PermissionsResultAction used to notify you of permissions being accepted.
+     */
+    @SuppressWarnings("unused")
+    public synchronized void requestAllManifestPermissionsIfNecessary(final @Nullable Activity activity,
+                                                                      final @Nullable PermissionsResultAction action) {
+        if (activity == null) {
+            return;
+        }
+        String[] perms = getManifestPermissions(activity);
+        requestPermissionsIfNecessaryForResult(activity, perms, action);
+    }
+
+    /**
+     * This method should be used to execute a {@link PermissionsResultAction} for the array
+     * of permissions passed to this method. This method will request the permissions if
+     * they need to be requested (i.e. we don't have permission yet) and will add the
+     * PermissionsResultAction to the queue to be notified of permissions being granted or
+     * denied. In the case of pre-Android Marshmallow, permissions will be granted immediately.
+     * The Activity variable is nullable, but if it is null, the method will fail to execute.
+     * This is only nullable as a courtesy for Fragments where getActivity() may yeild null
+     * if the Fragment is not currently added to its parent Activity.
+     *
+     * @param activity    the activity necessary to request the permissions.
+     * @param permissions the list of permissions to request for the {@link PermissionsResultAction}.
+     * @param action      the PermissionsResultAction to notify when the permissions are granted or denied.
+     */
+    @SuppressWarnings("unused")
+    public synchronized void requestPermissionsIfNecessaryForResult(@Nullable Activity activity,
+                                                                    @NonNull String[] permissions,
+                                                                    @Nullable PermissionsResultAction action) {
+        if (activity == null) {
+            return;
+        }
+        addPendingAction(permissions, action);
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {
+            doPermissionWorkBeforeAndroidM(activity, permissions, action);
+        } else {
+            List<String> permList = getPermissionsListToRequest(activity, permissions, action);
+            if (permList.isEmpty()) {
+                //if there is no permission to request, there is no reason to keep the action int the list
+                removePendingAction(action);
+            } else {
+                String[] permsToRequest = permList.toArray(new String[permList.size()]);
+                mPendingRequests.addAll(permList);
+                ActivityCompat.requestPermissions(activity, permsToRequest, 1);
+            }
+        }
+    }
+
+    /**
+     * This method should be used to execute a {@link PermissionsResultAction} for the array
+     * of permissions passed to this method. This method will request the permissions if
+     * they need to be requested (i.e. we don't have permission yet) and will add the
+     * PermissionsResultAction to the queue to be notified of permissions being granted or
+     * denied. In the case of pre-Android Marshmallow, permissions will be granted immediately.
+     * The Fragment variable is used, but if {@link Fragment#getActivity()} returns null, this method
+     * will fail to work as the activity reference is necessary to check for permissions.
+     *
+     * @param fragment    the fragment necessary to request the permissions.
+     * @param permissions the list of permissions to request for the {@link PermissionsResultAction}.
+     * @param action      the PermissionsResultAction to notify when the permissions are granted or denied.
+     */
+    @SuppressWarnings("unused")
+    public synchronized void requestPermissionsIfNecessaryForResult(@NonNull Fragment fragment,
+                                                                    @NonNull String[] permissions,
+                                                                    @Nullable PermissionsResultAction action) {
+        Activity activity = fragment.getActivity();
+        if (activity == null) {
+            return;
+        }
+        addPendingAction(permissions, action);
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {
+            doPermissionWorkBeforeAndroidM(activity, permissions, action);
+        } else {
+            List<String> permList = getPermissionsListToRequest(activity, permissions, action);
+            if (permList.isEmpty()) {
+                //if there is no permission to request, there is no reason to keep the action int the list
+                removePendingAction(action);
+            } else {
+                String[] permsToRequest = permList.toArray(new String[permList.size()]);
+                mPendingRequests.addAll(permList);
+                fragment.requestPermissions(permsToRequest, 1);
+            }
+        }
+    }
+
+    /**
+     * This method notifies the PermissionsManager that the permissions have change. If you are making
+     * the permissions requests using an Activity, then this method should be called from the
+     * Activity callback onRequestPermissionsResult() with the variables passed to that method. If
+     * you are passing a Fragment to make the permissions request, then you should call this in
+     * the {@link Fragment#onRequestPermissionsResult(int, String[], int[])} method.
+     * It will notify all the pending PermissionsResultAction objects currently
+     * in the queue, and will remove the permissions request from the list of pending requests.
+     *
+     * @param permissions the permissions that have changed.
+     * @param results     the values for each permission.
+     */
+    @SuppressWarnings("unused")
+    public synchronized void notifyPermissionsChange(@NonNull String[] permissions, @NonNull int[] results) {
+        int size = permissions.length;
+        if (results.length < size) {
+            size = results.length;
+        }
+        Iterator<WeakReference<PermissionsResultAction>> iterator = mPendingActions.iterator();
+        while (iterator.hasNext()) {
+            PermissionsResultAction action = iterator.next().get();
+            for (int n = 0; n < size; n++) {
+                if (action == null || action.onResult(permissions[n], results[n])) {
+                    iterator.remove();
+                    break;
+                }
+            }
+        }
+        for (int n = 0; n < size; n++) {
+            mPendingRequests.remove(permissions[n]);
+        }
+    }
+
+    /**
+     * When request permissions on devices before Android M (Android 6.0, API Level 23)
+     * Do the granted or denied work directly according to the permission status
+     *
+     * @param activity    the activity to check permissions
+     * @param permissions the permissions names
+     * @param action      the callback work object, containing what we what to do after
+     *                    permission check
+     */
+    private void doPermissionWorkBeforeAndroidM(@NonNull Activity activity,
+                                                @NonNull String[] permissions,
+                                                @Nullable PermissionsResultAction action) {
+        for (String perm : permissions) {
+            if (action != null) {
+                if (!mPermissions.contains(perm)) {
+                    action.onResult(perm, Permissions.NOT_FOUND);
+                } else if (ActivityCompat.checkSelfPermission(activity, perm)
+                        != PackageManager.PERMISSION_GRANTED) {
+                    action.onResult(perm, Permissions.DENIED);
+                } else {
+                    action.onResult(perm, Permissions.GRANTED);
+                }
+            }
+        }
+    }
+
+    /**
+     * Filter the permissions list:
+     * If a permission is not granted, add it to the result list
+     * if a permission is granted, do the granted work, do not add it to the result list
+     *
+     * @param activity    the activity to check permissions
+     * @param permissions all the permissions names
+     * @param action      the callback work object, containing what we what to do after
+     *                    permission check
+     * @return a list of permissions names that are not granted yet
+     */
+    @NonNull
+    private List<String> getPermissionsListToRequest(@NonNull Activity activity,
+                                                     @NonNull String[] permissions,
+                                                     @Nullable PermissionsResultAction action) {
+        List<String> permList = new ArrayList<>(permissions.length);
+        for (String perm : permissions) {
+            if (!mPermissions.contains(perm)) {
+                if (action != null) {
+                    action.onResult(perm, Permissions.NOT_FOUND);
+                }
+            } else if (ActivityCompat.checkSelfPermission(activity, perm) != PackageManager.PERMISSION_GRANTED) {
+                if (!mPendingRequests.contains(perm)) {
+                    permList.add(perm);
+                }
+            } else {
+                if (action != null) {
+                    action.onResult(perm, Permissions.GRANTED);
+                }
+            }
+        }
+        return permList;
+    }
+
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/ndk/com_b3ad_yuxie_myapplication_ndk_NdkJniUtils.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/ndk/com_b3ad_yuxie_myapplication_ndk_NdkJniUtils.h	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/ndk/com_b3ad_yuxie_myapplication_ndk_NdkJniUtils.h	(revision )
@@ -0,0 +1,21 @@
+/* DO NOT EDIT THIS FILE - it is machine generated */
+#include <jni.h>
+/* Header for class com_b3ad_yuxie_myapplication_ndk_NdkJniUtils */
+
+#ifndef _Included_com_b3ad_yuxie_myapplication_ndk_NdkJniUtils
+#define _Included_com_b3ad_yuxie_myapplication_ndk_NdkJniUtils
+#ifdef __cplusplus
+extern "C" {
+#endif
+/*
+ * Class:     com_b3ad_yuxie_myapplication_ndk_NdkJniUtils
+ * Method:    getCLanguageString
+ * Signature: ()Ljava/lang/String;
+ */
+JNIEXPORT jstring JNICALL Java_com_b3ad_yuxie_myapplication_ndk_NdkJniUtils_getCLanguageString
+  (JNIEnv *, jobject);
+
+#ifdef __cplusplus
+}
+#endif
+#endif
Index: baselib/src/main/java/com/baselib/utilcode/constant/TimeConstants.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/constant/TimeConstants.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/constant/TimeConstants.java	(revision )
@@ -0,0 +1,43 @@
+package com.baselib.utilcode.constant;
+
+import android.support.annotation.IntDef;
+
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2017/03/13
+ *     desc  : 时间相关常量
+ * </pre>
+ */
+public final class TimeConstants {
+
+    /**
+     * 毫秒与毫秒的倍数
+     */
+    public static final int MSEC = 1;
+    /**
+     * 秒与毫秒的倍数
+     */
+    public static final int SEC  = 1000;
+    /**
+     * 分与毫秒的倍数
+     */
+    public static final int MIN  = 60000;
+    /**
+     * 时与毫秒的倍数
+     */
+    public static final int HOUR = 3600000;
+    /**
+     * 天与毫秒的倍数
+     */
+    public static final int DAY  = 86400000;
+
+    @IntDef({MSEC, SEC, MIN, HOUR, DAY})
+    @Retention(RetentionPolicy.SOURCE)
+    public @interface Unit {
+    }
+}
Index: app/src/main/res/layout/content_main2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/content_main2.xml	(revision )
+++ app/src/main/res/layout/content_main2.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"
+    tools:context="com.b3ad.yuxie.myapplication.Main2Activity"
+    tools:showIn="@layout/activity_main2">
+
+</android.support.constraint.ConstraintLayout>
Index: baselib/src/main/java/com/baselib/takephoto/app/TakePhotoImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/app/TakePhotoImpl.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/app/TakePhotoImpl.java	(revision )
@@ -0,0 +1,479 @@
+package com.baselib.takephoto.app;
+
+import android.app.Activity;
+import android.app.ProgressDialog;
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.net.Uri;
+import android.os.Build;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.widget.Toast;
+
+import com.darsh.multipleimageselect.helpers.Constants;
+import com.darsh.multipleimageselect.models.Image;
+import com.baselib.R;
+import com.baselib.takephoto.compress.CompressConfig;
+import com.baselib.takephoto.compress.CompressImage;
+import com.baselib.takephoto.compress.CompressImageImpl;
+import com.baselib.takephoto.model.CropOptions;
+import com.baselib.takephoto.model.MultipleCrop;
+import com.baselib.takephoto.model.TContextWrap;
+import com.baselib.takephoto.model.TExceptionType;
+import com.baselib.takephoto.model.TImage;
+import com.baselib.takephoto.model.TIntentWap;
+import com.baselib.takephoto.model.TResult;
+import com.baselib.takephoto.model.TakePhotoOptions;
+import com.baselib.takephoto.permission.PermissionManager;
+import com.baselib.takephoto.uitl.ImageRotateUtil;
+import com.baselib.takephoto.uitl.IntentUtils;
+import com.baselib.takephoto.uitl.TConstant;
+import com.baselib.takephoto.model.TException;
+import com.baselib.takephoto.uitl.TFileUtils;
+import com.baselib.takephoto.uitl.TImageFiles;
+import com.baselib.takephoto.uitl.TUriParse;
+import com.baselib.takephoto.uitl.TUtils;
+import com.soundcloud.android.crop.Crop;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.Map;
+
+/**
+ * - 支持通过相机拍照获取图片
+ * - 支持从相册选择图片
+ * - 支持从文件选择图片
+ * - 支持多图选择
+ * - 支持批量图片裁切
+ * - 支持批量图片压缩
+ * - 支持对图片进行压缩
+ * - 支持对图片进行裁剪
+ * - 支持对裁剪及压缩参数自定义
+ * - 提供自带裁剪工具(可选)
+ * - 支持智能选取及裁剪异常处理
+ * - 支持因拍照Activity被回收后的自动恢复
+ * Date: 2016/9/21 0007 20:10
+ * Version:4.0.0
+ * 技术博文：http://www.cboy.me
+ * GitHub:https://github.com/crazycodeboy
+ * Eamil:crazycodeboy@gmail.com
+ */
+public class TakePhotoImpl implements TakePhoto {
+    private static final String TAG = IntentUtils.class.getName();
+    private TContextWrap contextWrap;
+    private TakeResultListener listener;
+    private Uri outPutUri;
+    private Uri tempUri;
+    private CropOptions cropOptions;
+    private TakePhotoOptions takePhotoOptions;
+    private CompressConfig compressConfig;
+    private MultipleCrop multipleCrop;
+    private PermissionManager.TPermissionType permissionType;
+    private TImage.FromType fromType; //CAMERA图片来源相机，OTHER图片来源其他
+    /**
+     * 是否显示压缩对话框
+     */
+    private boolean showCompressDialog;
+    private ProgressDialog wailLoadDialog;
+
+    public TakePhotoImpl(Activity activity, TakeResultListener listener) {
+        contextWrap = TContextWrap.of(activity);
+        this.listener = listener;
+    }
+
+    public TakePhotoImpl(Fragment fragment, TakeResultListener listener) {
+        contextWrap = TContextWrap.of(fragment);
+        this.listener = listener;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        if (savedInstanceState != null) {
+            cropOptions = (CropOptions) savedInstanceState.getSerializable("cropOptions");
+            takePhotoOptions = (TakePhotoOptions) savedInstanceState.getSerializable("takePhotoOptions");
+            showCompressDialog = savedInstanceState.getBoolean("showCompressDialog");
+            outPutUri = savedInstanceState.getParcelable("outPutUri");
+            tempUri = savedInstanceState.getParcelable("tempUri");
+            compressConfig = (CompressConfig) savedInstanceState.getSerializable("compressConfig");
+        }
+    }
+
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        outState.putSerializable("cropOptions", cropOptions);
+        outState.putSerializable("takePhotoOptions", takePhotoOptions);
+        outState.putBoolean("showCompressDialog", showCompressDialog);
+        outState.putParcelable("outPutUri", outPutUri);
+        outState.putParcelable("tempUri", tempUri);
+        outState.putSerializable("compressConfig", compressConfig);
+    }
+
+    @Override
+    public void onActivityResult(int requestCode, int resultCode, Intent data) {
+        switch (requestCode) {
+            case TConstant.RC_PICK_PICTURE_FROM_GALLERY_CROP:
+                if (resultCode == Activity.RESULT_OK && data != null) {//从相册选择照片并裁剪
+                    try {
+                        onCrop(data.getData(), outPutUri, cropOptions);
+                    } catch (TException e) {
+                        takeResult(TResult.of(TImage.of(outPutUri, fromType)), e.getDetailMessage());
+                        e.printStackTrace();
+                    }
+                } else {
+                    listener.takeCancel();
+                }
+                break;
+            case TConstant.RC_PICK_PICTURE_FROM_GALLERY_ORIGINAL://从相册选择照片不裁剪
+                if (resultCode == Activity.RESULT_OK) {
+                    try {
+                        takeResult(TResult.of(TImage.of(TUriParse.getFilePathWithUri(data.getData(), contextWrap.getActivity()), fromType)));
+                    } catch (TException e) {
+                        takeResult(TResult.of(TImage.of(data.getData(), fromType)), e.getDetailMessage());
+                        e.printStackTrace();
+                    }
+                } else {
+                    listener.takeCancel();
+                }
+                break;
+            case TConstant.RC_PICK_PICTURE_FROM_DOCUMENTS_ORIGINAL://从文件选择照片不裁剪
+                if (resultCode == Activity.RESULT_OK) {
+                    try {
+                        takeResult(TResult.of(TImage.of(TUriParse.getFilePathWithDocumentsUri(data.getData(), contextWrap.getActivity()), fromType)));
+                    } catch (TException e) {
+                        takeResult(TResult.of(TImage.of(outPutUri, fromType)), e.getDetailMessage());
+                        e.printStackTrace();
+                    }
+                } else {
+                    listener.takeCancel();
+                }
+                break;
+            case TConstant.RC_PICK_PICTURE_FROM_DOCUMENTS_CROP://从文件选择照片，并裁剪
+                if (resultCode == Activity.RESULT_OK) {
+                    try {
+                        onCrop(data.getData(), outPutUri, cropOptions);
+                    } catch (TException e) {
+                        takeResult(TResult.of(TImage.of(outPutUri, fromType)), e.getDetailMessage());
+                        e.printStackTrace();
+                    }
+                } else {
+                    listener.takeCancel();
+                }
+                break;
+            case TConstant.RC_PICK_PICTURE_FROM_CAPTURE_CROP://拍取照片,并裁剪
+                if (resultCode == Activity.RESULT_OK) {
+                    if(takePhotoOptions!=null&&takePhotoOptions.isCorrectImage())ImageRotateUtil.of().correctImage(contextWrap.getActivity(), tempUri);
+                    try {
+                        onCrop(tempUri, Uri.fromFile(new File(TUriParse.parseOwnUri(contextWrap.getActivity(), outPutUri))), cropOptions);
+                    } catch (TException e) {
+                        takeResult(TResult.of(TImage.of(outPutUri, fromType)), e.getDetailMessage());
+                        e.printStackTrace();
+                    }
+                } else {
+                    listener.takeCancel();
+                }
+                break;
+            case TConstant.RC_PICK_PICTURE_FROM_CAPTURE://拍取照片
+                if (resultCode == Activity.RESULT_OK) {
+                    if(takePhotoOptions!=null&&takePhotoOptions.isCorrectImage())ImageRotateUtil.of().correctImage(contextWrap.getActivity(), outPutUri);
+                    try {
+                        takeResult(TResult.of(TImage.of(TUriParse.getFilePathWithUri(outPutUri, contextWrap.getActivity()), fromType)));
+                    } catch (TException e) {
+                        takeResult(TResult.of(TImage.of(outPutUri, fromType)), e.getDetailMessage());
+                        e.printStackTrace();
+                    }
+                } else {
+                    listener.takeCancel();
+                }
+                break;
+            case TConstant.RC_CROP://裁剪照片返回结果
+            case Crop.REQUEST_CROP://裁剪照片返回结果
+                if (resultCode == Activity.RESULT_OK) {
+                    if (multipleCrop != null) {
+                        cropContinue(true);
+                    } else {
+                        try {
+                            TImage image = TImage.of(TUriParse.getFilePathWithUri(outPutUri, contextWrap.getActivity()), fromType);
+                            image.setCropped(true);
+                            takeResult(TResult.of(image));
+                        } catch (TException e) {
+                            takeResult(TResult.of(TImage.of(outPutUri.getPath(), fromType)), e.getDetailMessage());
+                            e.printStackTrace();
+                        }
+                    }
+                } else if (resultCode == Activity.RESULT_CANCELED) {//裁剪的照片没有保存
+                    if (multipleCrop != null) {
+                        if (data != null) {
+                            Bitmap bitmap = data.getParcelableExtra("data");//获取裁剪的结果数据
+                            TImageFiles.writeToFile(bitmap, outPutUri);//将裁剪的结果写入到文件
+                            cropContinue(true);
+                        } else {
+                            cropContinue(false);
+                        }
+                    } else {
+                        if (data != null) {
+                            Bitmap bitmap = data.getParcelableExtra("data");//获取裁剪的结果数据
+                            TImageFiles.writeToFile(bitmap, outPutUri);//将裁剪的结果写入到文件
+
+                            TImage image = TImage.of(outPutUri.getPath(), fromType);
+                            image.setCropped(true);
+                            takeResult(TResult.of(image));
+                        } else {
+                            listener.takeCancel();
+                        }
+                    }
+                } else {
+                    if (multipleCrop != null) {
+                        cropContinue(false);
+                    } else {
+                        listener.takeCancel();
+                    }
+                }
+                break;
+            case TConstant.RC_PICK_MULTIPLE://多选图片返回结果
+                if (resultCode == Activity.RESULT_OK && data != null) {
+                    ArrayList<Image> images = data.getParcelableArrayListExtra(Constants.INTENT_EXTRA_IMAGES);
+                    if (cropOptions != null) {
+                        try {
+                            onCrop(MultipleCrop.of(TUtils.convertImageToUri(contextWrap.getActivity(), images), contextWrap.getActivity(), fromType), cropOptions);
+                        } catch (TException e) {
+                            cropContinue(false);
+                            e.printStackTrace();
+                        }
+                    } else {
+                        takeResult(TResult.of(TUtils.getTImagesWithImages(images, fromType)));
+                    }
+
+                } else {
+                    listener.takeCancel();
+                }
+                break;
+            default:
+                break;
+        }
+    }
+
+    @Override
+    public void onPickMultiple(int limit) {
+        if (PermissionManager.TPermissionType.WAIT.equals(permissionType)) return;
+        TUtils.startActivityForResult(contextWrap, new TIntentWap(IntentUtils.getPickMultipleIntent(contextWrap, limit), TConstant.RC_PICK_MULTIPLE));
+    }
+
+    @Override
+    public void onPickMultipleWithCrop(int limit, CropOptions options) {
+        this.fromType = TImage.FromType.OTHER;
+        onPickMultiple(limit);
+        this.cropOptions = options;
+    }
+
+    /**
+     * -----crop------
+     **/
+    @Override
+    public void onCrop(Uri imageUri, Uri outPutUri, CropOptions options) throws TException {
+        if (PermissionManager.TPermissionType.WAIT.equals(permissionType)) return;
+        this.outPutUri = outPutUri;
+        if (!TImageFiles.checkMimeType(contextWrap.getActivity(), TImageFiles.getMimeType(contextWrap.getActivity(), imageUri))) {
+            Toast.makeText(contextWrap.getActivity(), contextWrap.getActivity().getResources().getText(R.string.tip_type_not_image), Toast.LENGTH_SHORT).show();
+            throw new TException(TExceptionType.TYPE_NOT_IMAGE);
+        }
+        cropWithNonException(imageUri, outPutUri, options);
+    }
+
+    @Override
+    public void onCrop(MultipleCrop multipleCrop, CropOptions options) throws TException {
+        this.multipleCrop = multipleCrop;
+        onCrop(multipleCrop.getUris().get(0), multipleCrop.getOutUris().get(0), options);
+    }
+
+    private void cropWithNonException(Uri imageUri, Uri outPutUri, CropOptions options) {
+        this.outPutUri = outPutUri;
+        if (options.isWithOwnCrop()) {
+            TUtils.cropWithOwnApp(contextWrap, imageUri, outPutUri, options);
+        } else {
+            TUtils.cropWithOtherAppBySafely(contextWrap, imageUri, outPutUri, options);
+        }
+    }
+
+    private void cropContinue(boolean preSuccess) {
+        Map result = multipleCrop.setCropWithUri(outPutUri, preSuccess);
+        int index = (int) result.get("index");
+        boolean isLast = (boolean) result.get("isLast");
+
+        if (isLast) {
+            if (preSuccess) {
+                takeResult(TResult.of(multipleCrop.gettImages()));
+            } else {
+                takeResult(TResult.of(multipleCrop.gettImages()), outPutUri.getPath() + contextWrap.getActivity().getResources().getString(R.string.msg_crop_canceled));
+            }
+        } else {
+            cropWithNonException(multipleCrop.getUris().get(index + 1), multipleCrop.getOutUris().get(index + 1), cropOptions);
+        }
+    }
+
+    @Override
+    public void onPickFromDocuments() {
+        selectPicture(0, false);
+    }
+
+    @Override
+    public void onPickFromGallery() {
+        selectPicture(1, false);
+    }
+
+    private void selectPicture(int defaultIndex, boolean isCrop) {
+        this.fromType = TImage.FromType.OTHER;
+        if (takePhotoOptions != null && takePhotoOptions.isWithOwnGallery()) {
+            onPickMultiple(1);
+            return;
+        }
+        if (PermissionManager.TPermissionType.WAIT.equals(permissionType)) return;
+        ArrayList<TIntentWap> intentWapList = new ArrayList<>();
+        intentWapList.add(new TIntentWap(IntentUtils.getPickIntentWithDocuments(), isCrop ? TConstant.RC_PICK_PICTURE_FROM_DOCUMENTS_CROP : TConstant.RC_PICK_PICTURE_FROM_DOCUMENTS_ORIGINAL));
+        intentWapList.add(new TIntentWap(IntentUtils.getPickIntentWithGallery(), isCrop ? TConstant.RC_PICK_PICTURE_FROM_GALLERY_CROP : TConstant.RC_PICK_PICTURE_FROM_GALLERY_ORIGINAL));
+        try {
+            TUtils.sendIntentBySafely(contextWrap, intentWapList, defaultIndex, isCrop);
+        } catch (TException e) {
+            takeResult(TResult.of(TImage.of("", fromType)), e.getDetailMessage());
+            e.printStackTrace();
+        }
+    }
+
+    @Override
+    public void onPickFromGalleryWithCrop(Uri outPutUri, CropOptions options) {
+        this.cropOptions = options;
+        this.outPutUri = outPutUri;
+        selectPicture(1, true);
+    }
+
+    @Override
+    public void onPickFromDocumentsWithCrop(Uri outPutUri, CropOptions options) {
+        this.cropOptions = options;
+        this.outPutUri = outPutUri;
+        selectPicture(0, true);
+    }
+
+    @Override
+    public void onPickFromCapture(Uri outPutUri) {
+        this.fromType = TImage.FromType.CAMERA;
+        if (PermissionManager.TPermissionType.WAIT.equals(permissionType)) return;
+        if (Build.VERSION.SDK_INT >= 23) {
+            this.outPutUri = TUriParse.convertFileUriToFileProviderUri(contextWrap.getActivity(), outPutUri);
+        } else {
+            this.outPutUri = outPutUri;
+        }
+
+        try {
+            TUtils.captureBySafely(contextWrap, new TIntentWap(IntentUtils.getCaptureIntent(this.outPutUri), TConstant.RC_PICK_PICTURE_FROM_CAPTURE));
+        } catch (TException e) {
+            takeResult(TResult.of(TImage.of("", fromType)), e.getDetailMessage());
+            e.printStackTrace();
+        }
+    }
+
+    @Override
+    public void onPickFromCaptureWithCrop(Uri outPutUri, CropOptions options) {
+        this.fromType = TImage.FromType.CAMERA;
+        if (PermissionManager.TPermissionType.WAIT.equals(permissionType)) return;
+        this.cropOptions = options;
+        this.outPutUri = outPutUri;
+        if (Build.VERSION.SDK_INT >= 23) {
+            this.tempUri = TUriParse.getTempUri(contextWrap.getActivity());
+        } else {
+            this.tempUri = outPutUri;
+        }
+
+        try {
+            TUtils.captureBySafely(contextWrap, new TIntentWap(IntentUtils.getCaptureIntent(this.tempUri), TConstant.RC_PICK_PICTURE_FROM_CAPTURE_CROP));
+        } catch (TException e) {
+            takeResult(TResult.of(TImage.of("", fromType)), e.getDetailMessage());
+            e.printStackTrace();
+        }
+    }
+
+    @Override
+    public void onEnableCompress(CompressConfig config, boolean showCompressDialog) {
+        this.compressConfig = config;
+        this.showCompressDialog = showCompressDialog;
+    }
+
+    @Override
+    public void setTakePhotoOptions(TakePhotoOptions options) {
+        this.takePhotoOptions = options;
+    }
+
+    @Override
+    public void permissionNotify(PermissionManager.TPermissionType type) {
+        this.permissionType = type;
+    }
+
+    private void takeResult(final TResult result, final String... message) {
+        if (null == compressConfig) {
+            handleTakeCallBack(result, message);
+        } else {
+            if (showCompressDialog)
+                wailLoadDialog = TUtils.showProgressDialog(contextWrap.getActivity(), contextWrap.getActivity().getResources().getString(R.string.tip_compress));
+
+            CompressImageImpl.of(contextWrap.getActivity(), compressConfig, result.getImages(), new CompressImage.CompressListener() {
+                @Override
+                public void onCompressSuccess(ArrayList<TImage> images) {
+                    if(!compressConfig.isEnableReserveRaw()) {
+                        deleteRawFile(images);
+                    }
+                    handleTakeCallBack(result);
+                    if (wailLoadDialog != null && !contextWrap.getActivity().isFinishing())
+                        wailLoadDialog.dismiss();
+                }
+
+                @Override
+                public void onCompressFailed(ArrayList<TImage> images, String msg) {
+                    if(!compressConfig.isEnableReserveRaw()) {
+                        deleteRawFile(images);
+                    }
+                    handleTakeCallBack(TResult.of(images), String.format(contextWrap.getActivity().getResources().getString(R.string.tip_compress_failed), message.length > 0 ? message[0] : "", msg, result.getImage().getCompressPath()));
+                    if (wailLoadDialog != null && !contextWrap.getActivity().isFinishing())
+                        wailLoadDialog.dismiss();
+                }
+            }).compress();
+        }
+    }
+
+    private void deleteRawFile(ArrayList<TImage> images) {
+        for(TImage image : images) {
+            if(TImage.FromType.CAMERA == fromType) {
+                TFileUtils.delete(image.getOriginalPath());
+                image.setOriginalPath("");
+            }
+        }
+    }
+
+    private void handleTakeCallBack(final TResult result, String... message) {
+        if (message.length > 0) {
+            listener.takeFail(result, message[0]);
+        } else if (multipleCrop != null && multipleCrop.hasFailed) {
+            listener.takeFail(result, contextWrap.getActivity().getResources().getString(R.string.msg_crop_failed));
+        } else if (compressConfig != null) {
+            boolean hasFailed = false;
+            for (TImage image : result.getImages()) {
+                if (image == null || !image.isCompressed()) {
+                    hasFailed = true;
+                    break;
+                }
+            }
+            if (hasFailed) {
+                listener.takeFail(result, contextWrap.getActivity().getString(R.string.msg_compress_failed));
+            } else {
+                listener.takeSuccess(result);
+            }
+        } else {
+            listener.takeSuccess(result);
+        }
+        clearParams();
+    }
+
+    private void clearParams() {
+        compressConfig = null;
+        takePhotoOptions = null;
+        cropOptions = null;
+        multipleCrop = null;
+    }
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/basebean/StudentEvent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/basebean/StudentEvent.java	(revision )
+++ baselib/src/main/java/com/baselib/basebean/StudentEvent.java	(revision )
@@ -0,0 +1,96 @@
+package com.baselib.basebean;
+
+import com.baselib.enums.StudentEnum;
+
+/**
+ * 作者: liuhuaqian on 2017/9/8.
+ */
+
+public class StudentEvent<T> {
+  private T msgEntity;
+    private StudentEnum id;
+    private int position;
+
+    public StudentEvent(StudentEnum id,int position) {
+        this.position = position;
+        this.id = id;
+    }
+
+    public int getPosition() {
+        return position;
+    }
+
+    public void setPosition(int position) {
+        this.position = position;
+    }
+
+    private String message;
+
+    @Override
+    public String toString() {
+        return "StudentEvent{" +
+                "msgEntity=" + msgEntity +
+                ", id=" + id +
+                ", position=" + position +
+                ", message='" + message + '\'' +
+                ", type='" + type + '\'' +
+                '}';
+    }
+
+    public String getType() {
+        return type;
+    }
+
+    public void setType(String type) {
+        this.type = type;
+    }
+
+    private String type;
+
+    public StudentEvent(StudentEnum id, T msgEntity) {
+        this.id = id;
+        this.msgEntity = msgEntity;
+    }
+    public StudentEvent(StudentEnum id,String message, T msgEntity) {
+        this.id = id;
+        this.msgEntity = msgEntity;
+        this.message = message;
+    }
+    public StudentEvent(StudentEnum id, String message) {
+        this.id = id;
+        this.message = message;
+    }
+    public StudentEvent(StudentEnum id, String message,String type) {
+        this.id = id;
+        this.message = message;
+        this.type = type;
+    }
+    public StudentEvent(StudentEnum id) {
+        this.id = id;
+
+    }
+
+    public T getMsgEntity() {
+        return msgEntity;
+    }
+
+    public void setMsgEntity(T msgEntity) {
+        this.msgEntity = msgEntity;
+    }
+
+    public StudentEnum getId() {
+        return id;
+    }
+
+    public void setId(StudentEnum id) {
+        this.id = id;
+    }
+
+    public String getMessage() {
+        return message;
+    }
+
+    public void setMessage(String message) {
+        this.message = message;
+    }
+}
Index: baselib/src/main/java/com/baselib/recycleview/DividerItemDecoration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/DividerItemDecoration.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/DividerItemDecoration.java	(revision )
@@ -0,0 +1,104 @@
+package com.baselib.recycleview;/*
+ * Copyright (C) 2014 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * limitations under the License.
+ */
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Canvas;
+import android.graphics.Rect;
+import android.graphics.drawable.Drawable;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+
+
+/**
+ * This class is from the v7 samples of the Android SDK. It's not by me!
+ * <p/>
+ * See the license above for details.
+ */
+public class DividerItemDecoration extends RecyclerView.ItemDecoration {
+
+    private static final int[] ATTRS = new int[]{
+            android.R.attr.listDivider
+    };
+
+    public static final int HORIZONTAL_LIST = LinearLayoutManager.HORIZONTAL;
+
+    public static final int VERTICAL_LIST = LinearLayoutManager.VERTICAL;
+
+    private Drawable mDivider;
+
+    private int mOrientation;
+
+    public DividerItemDecoration(Context context, int orientation) {
+        final TypedArray a = context.obtainStyledAttributes(ATTRS);
+        mDivider = a.getDrawable(0);
+        a.recycle();
+        setOrientation(orientation);
+    }
+
+    public void setOrientation(int orientation) {
+        if (orientation != HORIZONTAL_LIST && orientation != VERTICAL_LIST) {
+            throw new IllegalArgumentException("invalid orientation");
+        }
+        mOrientation = orientation;
+    }
+
+    @Override
+    public void onDraw(Canvas c, RecyclerView parent) {
+
+        if (mOrientation == VERTICAL_LIST) {
+            drawVertical(c, parent);
+        } else {
+            drawHorizontal(c, parent);
+        }
+
+    }
+
+
+    public void drawVertical(Canvas c, RecyclerView parent) {
+        final int left = parent.getPaddingLeft();
+        final int right = parent.getWidth() - parent.getPaddingRight();
+
+        final int childCount = parent.getChildCount();
+        for (int i = 0; i < childCount-1; i++) {
+            final View child = parent.getChildAt(i);
+            RecyclerView v = new RecyclerView(parent.getContext());
+            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child
+                    .getLayoutParams();
+            final int top = child.getBottom() + params.bottomMargin;
+            final int bottom = top + mDivider.getIntrinsicHeight();
+            mDivider.setBounds(left, top, right, bottom);
+            mDivider.draw(c);
+        }
+    }
+
+    public void drawHorizontal(Canvas c, RecyclerView parent) {
+        final int top = parent.getPaddingTop();
+        final int bottom = parent.getHeight() - parent.getPaddingBottom();
+
+        final int childCount = parent.getChildCount();
+        for (int i = 0; i < childCount; i++) {
+            final View child = parent.getChildAt(i);
+            final RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) child
+                    .getLayoutParams();
+            final int left = child.getRight() + params.rightMargin;
+            final int right = left + mDivider.getIntrinsicHeight();
+            mDivider.setBounds(left, top, right, bottom);
+            mDivider.draw(c);
+        }
+    }
+
+    @Override
+    public void getItemOffsets(Rect outRect, int itemPosition, RecyclerView parent) {
+        if (mOrientation == VERTICAL_LIST) {
+            outRect.set(0, 0, 0, mDivider.getIntrinsicHeight());
+        } else {
+            outRect.set(0, 0, mDivider.getIntrinsicWidth(), 0);
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/assets/jsdemo.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/assets/jsdemo.html	(revision )
+++ app/src/main/assets/jsdemo.html	(revision )
@@ -0,0 +1,45 @@
+<html>
+<head>
+    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8"
+    <title>测试Js的三种不同对话框</title>
+    <script language="JavaScript">
+        function alertFun()
+        {
+            alert("Alert警告对话框!");
+        }
+        function confirmFun()
+        {
+            if(confirm("访问百度?"))
+            {location.href = "http://www.baidu.com";}
+            <!--{location.href = "https://www.baidu.com/link?url=9DrhvZLhIXGep2u3AqEwbdB5K-fHbV76vyx-Z301jLbLR4dVlbbYzevSG0X-uD_G5qiddsBkuJtD9GDIPaP5fL8e-gb36CpRiC5zhDT6Rae&wd=&eqid=bcff63690001cde2000000065966e5bd";}-->
+            else alert("取消访问!");
+        }
+        function promptFun()
+        {
+            var word = prompt("Prompt对话框","请输入点什么...:");
+            if(word)
+            {
+                alert("你输入了:"+word)
+            }else{alert("呵呵,你什么都没写!");}
+        }
+
+    </script>
+</head>
+
+<body>
+<p>三种对话框的使用</p>
+
+<p>Alert对话框</p>
+<p>
+    <input type="submit" name="Submit1" value="展示1" onclick="alertFun()"/>
+</p>
+<p>Confirm对话框</p>
+<p>
+    <input type="submit" name="Submit2" value="展示2" onclick="confirmFun()"/>
+</p>
+<p>Prompt对话框</p>
+<p>
+    <input type="submit" name="Submit3" value="展示3" onclick="promptFun()"/>
+</p>
+</body>
+</html>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/daynightmodeutils/grant/PermissionsResultAction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/daynightmodeutils/grant/PermissionsResultAction.java	(revision )
+++ baselib/src/main/java/com/baselib/daynightmodeutils/grant/PermissionsResultAction.java	(revision )
@@ -0,0 +1,167 @@
+package com.baselib.daynightmodeutils.grant;
+import android.content.pm.PackageManager;
+import android.os.Handler;
+import android.os.Looper;
+import android.support.annotation.CallSuper;
+import android.support.annotation.NonNull;
+import android.util.Log;
+
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * This abstract class should be used to create an if/else action that the PermissionsManager
+ * can execute when the permissions you request are granted or denied. Simple use involves
+ * creating an anonymous instance of it and passing that instance to the
+ * requestPermissionsIfNecessaryForResult method. The result will be sent back to you as
+ * either onGranted (all permissions have been granted), or onDenied (a required permission
+ * has been denied). Ideally you put your functionality in the onGranted method and notify
+ * the user what won't work in the onDenied method.
+ */
+public abstract class PermissionsResultAction {
+
+    private static final String TAG = PermissionsResultAction.class.getSimpleName();
+    private final Set<String> mPermissions = new HashSet<>(1);
+    private Looper mLooper = Looper.getMainLooper();
+
+    /**
+     * Default Constructor
+     */
+    public PermissionsResultAction() {}
+
+    /**
+     * Alternate Constructor. Pass the looper you wish the PermissionsResultAction
+     * callbacks to be executed on if it is not the current Looper. For instance,
+     * if you are making a permissions request from a background thread but wish the
+     * callback to be on the UI thread, use this constructor to specify the UI Looper.
+     *
+     * @param looper the looper that the callbacks will be called using.
+     */
+    @SuppressWarnings("unused")
+    public PermissionsResultAction(@NonNull Looper looper) {mLooper = looper;}
+
+    /**
+     * This method is called when ALL permissions that have been
+     * requested have been granted by the user. In this method
+     * you should put all your permissions sensitive code that can
+     * only be executed with the required permissions.
+     */
+    public abstract void onGranted();
+
+    /**
+     * This method is called when a permission has been denied by
+     * the user. It provides you with the permission that was denied
+     * and will be executed on the Looper you pass to the constructor
+     * of this class, or the Looper that this object was created on.
+     *
+     * @param permission the permission that was denied.
+     */
+    public abstract void onDenied(String permission);
+
+    /**
+     * This method is used to determine if a permission not
+     * being present on the current Android platform should
+     * affect whether the PermissionsResultAction should continue
+     * listening for events. By default, it returns true and will
+     * simply ignore the permission that did not exist. Usually this will
+     * work fine since most new permissions are introduced to
+     * restrict what was previously allowed without permission.
+     * If that is not the case for your particular permission you
+     * request, override this method and return false to result in the
+     * Action being denied.
+     *
+     * @param permission the permission that doesn't exist on this
+     *                   Android version
+     * @return return true if the PermissionsResultAction should
+     * ignore the lack of the permission and proceed with exection
+     * or false if the PermissionsResultAction should treat the
+     * absence of the permission on the API level as a denial.
+     */
+    @SuppressWarnings({"WeakerAccess", "SameReturnValue"})
+    public synchronized boolean shouldIgnorePermissionNotFound(String permission) {
+        Log.d(TAG, "Permission not found: " + permission);
+        return true;
+    }
+
+    @SuppressWarnings("WeakerAccess")
+    @CallSuper
+    protected synchronized final boolean onResult(final @NonNull String permission, int result) {
+        if (result == PackageManager.PERMISSION_GRANTED) {
+            return onResult(permission, Permissions.GRANTED);
+        } else {
+            return onResult(permission, Permissions.DENIED);
+        }
+
+    }
+
+    /**
+     * This method is called when a particular permission has changed.
+     * This method will be called for all permissions, so this method determines
+     * if the permission affects the state or not and whether it can proceed with
+     * calling onGranted or if onDenied should be called.
+     *
+     * @param permission the permission that changed.
+     * @param result     the result for that permission.
+     * @return this method returns true if its primary action has been completed
+     * and it should be removed from the data structure holding a reference to it.
+     */
+    @SuppressWarnings("WeakerAccess")
+    @CallSuper
+    protected synchronized final boolean onResult(final @NonNull String permission, Permissions result) {
+        mPermissions.remove(permission);
+        if (result == Permissions.GRANTED) {
+            if (mPermissions.isEmpty()) {
+                new Handler(mLooper).post(new Runnable() {
+                    @Override
+                    public void run() {
+                        onGranted();
+                    }
+                });
+                return true;
+            }
+        } else if (result == Permissions.DENIED) {
+            new Handler(mLooper).post(new Runnable() {
+                @Override
+                public void run() {
+                    onDenied(permission);
+                }
+            });
+            return true;
+        } else if (result == Permissions.NOT_FOUND) {
+            if (shouldIgnorePermissionNotFound(permission)) {
+                if (mPermissions.isEmpty()) {
+                    new Handler(mLooper).post(new Runnable() {
+                        @Override
+                        public void run() {
+                            onGranted();
+                        }
+                    });
+                    return true;
+                }
+            } else {
+                new Handler(mLooper).post(new Runnable() {
+                    @Override
+                    public void run() {
+                        onDenied(permission);
+                    }
+                });
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * This method registers the PermissionsResultAction object for the specified permissions
+     * so that it will know which permissions to look for changes to. The PermissionsResultAction
+     * will then know to look out for changes to these permissions.
+     *
+     * @param perms the permissions to listen for
+     */
+    @SuppressWarnings("WeakerAccess")
+    @CallSuper
+    protected synchronized final void registerPermissions(@NonNull String[] perms) {
+        Collections.addAll(mPermissions, perms);
+    }
+}
Index: app/src/main/res/layout/activity_okhttp3.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_okhttp3.xml	(revision )
+++ app/src/main/res/layout/activity_okhttp3.xml	(revision )
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.b3ad.yuxie.myapplication.activity.Okhttp3Activity">
+
+    <Button
+        android:id="@+id/btn_test"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:onClick="doClick"
+        android:text="okhttp3测试" />
+
+    <TextView
+        android:id="@+id/tv"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_centerVertical="true"
+        android:text="你好" />
+
+</RelativeLayout>
Index: baselib/src/main/java/com/baselib/daynightmodeutils/ChangeModeHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/daynightmodeutils/ChangeModeHelper.java	(revision )
+++ baselib/src/main/java/com/baselib/daynightmodeutils/ChangeModeHelper.java	(revision )
@@ -0,0 +1,24 @@
+package com.baselib.daynightmodeutils;
+import android.content.Context;
+import android.content.SharedPreferences;
+/**
+ *
+ * Created by liuhuaqian on 2017/9/6.
+ * 夜间模式辅助类
+ */
+
+public class ChangeModeHelper {
+    public static final int MODE_DAY = 1;
+
+    public static final int MODE_NIGHT = 2;
+    private static String Mode = "mode";
+    public static void setChangeMode(Context ctx,int mode){
+        SharedPreferences sp = ctx.getSharedPreferences("config_mode", Context.MODE_PRIVATE);
+        sp.edit().putInt(Mode, mode).commit();
+    }
+    public static int getChangeMode(Context ctx){
+        SharedPreferences sp = ctx.getSharedPreferences("config_mode", Context.MODE_PRIVATE);
+        return sp.getInt(Mode, MODE_DAY);
+    }
+}
+
Index: baselib/src/main/java/com/baselib/recycleview/wrapper/LoadMoreWrapper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/wrapper/LoadMoreWrapper.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/wrapper/LoadMoreWrapper.java	(revision )
@@ -0,0 +1,187 @@
+package com.baselib.recycleview.wrapper;
+
+import android.content.Context;
+import android.support.v7.widget.GridLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.StaggeredGridLayoutManager;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ProgressBar;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
+import com.baselib.R;
+import com.baselib.recycleview.ViewHolder;
+
+
+public class LoadMoreWrapper<T> extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
+    public static final int ITEM_TYPE_LOAD_MORE = Integer.MAX_VALUE - 2;
+
+    private RecyclerView.Adapter mInnerAdapter;
+    private View mLoadMoreView;
+    private int mLoadMoreLayoutId;
+
+    TextView tvFooter;
+    ProgressBar pbLoading;
+
+    public LoadMoreWrapper(RecyclerView.Adapter adapter) {
+        mInnerAdapter = adapter;
+    }
+
+    private boolean hasLoadMore() {
+        return mLoadMoreView != null || mLoadMoreLayoutId != 0;
+    }
+
+
+    private boolean isShowLoadMore(int position) {
+        return hasLoadMore() && (position >= mInnerAdapter.getItemCount());
+    }
+
+    @Override
+    public int getItemViewType(int position) {
+        if (isShowLoadMore(position)) {
+            return ITEM_TYPE_LOAD_MORE;
+        }
+        return mInnerAdapter.getItemViewType(position);
+    }
+
+    @Override
+    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        if (viewType == ITEM_TYPE_LOAD_MORE) {
+            ViewHolder holder;
+            if (mLoadMoreView != null) {
+                holder = ViewHolder.createViewHolder(parent.getContext(), mLoadMoreView);
+            } else {
+                holder = ViewHolder.createViewHolder(parent.getContext(), parent, mLoadMoreLayoutId);
+            }
+            return holder;
+        }
+        return mInnerAdapter.onCreateViewHolder(parent, viewType);
+    }
+
+    @Override
+    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
+        if (isShowLoadMore(position)) {
+            if (mOnLoadMoreListener != null) {
+                mOnLoadMoreListener.onLoadMoreRequested();
+            }
+            return;
+        }
+        mInnerAdapter.onBindViewHolder(holder, position);
+    }
+
+    @Override
+    public void onAttachedToRecyclerView(RecyclerView recyclerView) {
+        WrapperUtils.onAttachedToRecyclerView(mInnerAdapter, recyclerView, new WrapperUtils.SpanSizeCallback() {
+            @Override
+            public int getSpanSize(GridLayoutManager layoutManager, GridLayoutManager.SpanSizeLookup oldLookup, int position) {
+                if (isShowLoadMore(position)) {
+                    return layoutManager.getSpanCount();
+                }
+                if (oldLookup != null) {
+                    return oldLookup.getSpanSize(position);
+                }
+                return 1;
+            }
+        });
+    }
+
+
+    @Override
+    public void onViewAttachedToWindow(RecyclerView.ViewHolder holder) {
+        mInnerAdapter.onViewAttachedToWindow(holder);
+
+        if (isShowLoadMore(holder.getLayoutPosition())) {
+            setFullSpan(holder);
+        }
+    }
+
+    private void setFullSpan(RecyclerView.ViewHolder holder) {
+        ViewGroup.LayoutParams lp = holder.itemView.getLayoutParams();
+
+        if (lp != null
+                && lp instanceof StaggeredGridLayoutManager.LayoutParams) {
+            StaggeredGridLayoutManager.LayoutParams p = (StaggeredGridLayoutManager.LayoutParams) lp;
+
+            p.setFullSpan(true);
+        }
+    }
+
+    @Override
+    public int getItemCount() {
+        return mInnerAdapter.getItemCount() + (hasLoadMore() ? 1 : 0);
+    }
+
+
+    public interface OnLoadMoreListener {
+        void onLoadMoreRequested();
+    }
+
+    private OnLoadMoreListener mOnLoadMoreListener;
+
+    public LoadMoreWrapper setOnLoadMoreListener(OnLoadMoreListener loadMoreListener) {
+        if (loadMoreListener != null) {
+            mOnLoadMoreListener = loadMoreListener;
+        }
+        return this;
+    }
+
+    public LoadMoreWrapper setLoadMoreView(View loadMoreView) {
+        mLoadMoreView = loadMoreView;
+        return this;
+    }
+
+    /**
+     * 设置默认加载更多视图
+     *
+     * @param context
+     * @return
+     */
+    public LoadMoreWrapper setLoadMoreDefaultView(Context context) {
+
+        View loadMoreView = LayoutInflater.from(context).inflate(R.layout.default_loading, null, false);
+        RelativeLayout.LayoutParams lp = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, 120);
+        lp.setMargins(0, 10, 0, 10);
+        loadMoreView.setLayoutParams(lp);
+
+        tvFooter = (TextView) loadMoreView.findViewById(R.id.tv_loading_text);
+        pbLoading = (ProgressBar) loadMoreView.findViewById(R.id.pb_loading);
+
+        mLoadMoreView = loadMoreView;
+        mLoadMoreView.setVisibility(View.GONE);
+        return this;
+    }
+
+    /**
+     * 加载更多显示
+     */
+    public void loadMoreOpen() {
+        if (mLoadMoreView != null) {
+            mLoadMoreView.setVisibility(View.VISIBLE);
+        }
+        if (tvFooter != null && pbLoading != null) {
+            tvFooter.setText("加载更多...");
+            pbLoading.setVisibility(View.VISIBLE);
+        }
+    }
+
+    /**
+     * 加载更多完成显示
+     */
+    public void loadMoreClose() {
+        if (mLoadMoreView != null) {
+            mLoadMoreView.setVisibility(View.VISIBLE);
+        }
+        if (tvFooter != null && pbLoading != null) {
+            tvFooter.setText("没有更多了");
+            pbLoading.setVisibility(View.GONE);
+        }
+    }
+
+
+    public LoadMoreWrapper setLoadMoreView(int layoutId) {
+        mLoadMoreLayoutId = layoutId;
+        return this;
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/utils/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/utils/Utils.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/utils/Utils.java	(revision )
@@ -0,0 +1,214 @@
+package com.b3ad.yuxie.myapplication.utils;
+
+import android.app.ActivityManager;
+import android.content.Context;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.Signature;
+import android.util.Log;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.InputStreamReader;
+import java.net.HttpURLConnection;
+import java.net.MalformedURLException;
+import java.net.URL;
+import java.security.MessageDigest;
+
+
+/**
+ * Created by Administrator on 2017/8/14.
+ */
+
+public class Utils {
+
+    // 如需要小写则把ABCDEF改成小写
+    private static final char HEX_DIGITS[] = { '0', '1', '2', '3', '4', '5',
+            '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };
+
+    private static Context mContext;
+    public static Utils instance;
+
+    //没有第一次传入上下文的异常处理
+    public Utils(){
+        if (mContext==null){
+            throw new UnsupportedOperationException("utils no inits");
+        }
+    }
+    //单例模式双从判断
+    public static Utils getInstance() {
+        if (instance==null){
+            synchronized (Utils.class){
+                if (instance==null){
+                    instance=new Utils();
+                }
+            }
+        }
+        return instance;
+    }
+    //初始化工具类,传入application的上下文仅需一次
+    public Utils (Context mContext){
+        this.mContext=mContext;
+    }
+
+    public static String getSignature(){
+        String result="";
+        String packageName=mContext.getPackageName();
+        try {
+            //PackageManager.GET_SIGNATURES获取签名信息
+            PackageInfo packageInfo=mContext.getPackageManager().getPackageInfo(packageName,PackageManager.GET_SIGNATURES);
+            Signature[] signatures=packageInfo.signatures;
+            StringBuffer sb=new StringBuffer();
+            for (Signature signature:signatures) {
+                sb.append(signature.toCharsString());
+                Log.i("TAG","signature.toCharsString():"+signature.toCharsString());
+            }
+            result=sb.toString();
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+        }
+        Log.i("TAG","result:"+result);
+        return result;
+    }
+
+    public static Signature[] getSignature(String packageName){
+        Signature[] signatures=null;
+        try {
+            //PackageManager.GET_SIGNATURES获取签名信息
+            PackageInfo packageInfo=mContext.getPackageManager().getPackageInfo(packageName,PackageManager.GET_SIGNATURES);
+            signatures=packageInfo.signatures;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+        }
+        return signatures;
+    }
+
+    /**
+     * 进行转换
+     */
+    public static String toHexString(byte[] bData) {
+        StringBuilder sb = new StringBuilder(bData.length * 2);
+        for (int i = 0; i < bData.length; i++) {
+            sb.append(HEX_DIGITS[(bData[i] & 0xf0) >>> 4]);
+            sb.append(HEX_DIGITS[bData[i] & 0x0f]);
+        }
+        return sb.toString();
+    }
+
+    /**
+     * 返回MD5
+     */
+    public static String signatureMD5(Signature[] signatures) {
+        try {
+            MessageDigest digest = MessageDigest.getInstance("MD5");
+            if (signatures != null) {
+                for (Signature s : signatures)
+                    digest.update(s.toByteArray());
+            }
+            return toHexString(digest.digest());
+        } catch (Exception e) {
+            return "";
+        }
+    }
+
+    /**
+     * SHA1
+     */
+    public static String signatureSHA1(Signature[] signatures) {
+        try {
+            MessageDigest digest = MessageDigest.getInstance("SHA-1");
+            if (signatures != null) {
+                for (Signature s : signatures)
+                    digest.update(s.toByteArray());
+            }
+            return toHexString(digest.digest());
+        } catch (Exception e) {
+            return "";
+        }
+    }
+
+    /**
+     * SHA256
+     */
+    public static String signatureSHA256(Signature[] signatures) {
+        try {
+            MessageDigest digest = MessageDigest.getInstance("SHA-256");
+            if (signatures != null) {
+                for (Signature s : signatures)
+                    digest.update(s.toByteArray());
+            }
+            return toHexString(digest.digest());
+        } catch (Exception e) {
+            return "";
+        }
+    }
+
+    /**
+     * get请求
+     * @param uri
+     * @return
+     */
+    public static String getDataNet(String uri) {
+        String result = null;
+        HttpURLConnection conn=null;
+        try {
+            URL url = new URL(uri);
+            // 2)根据url,获得HttpURLConnection 连接工具
+            conn = (HttpURLConnection) url.openConnection();
+            conn.setConnectTimeout(5*1000);
+            conn.setRequestMethod("GET");
+            conn.setRequestProperty("contentType", "utf-8");
+            // 3)很据连接工具，获得响应码
+            int responseCode = conn.getResponseCode();
+            InputStream inStream = conn.getInputStream();
+            // 4)响应码正确，即可获取、流、文件长度...
+            if (responseCode == 200) {
+                result = streamToString(inStream);
+            }
+        } catch (MalformedURLException e) {
+            e.printStackTrace();
+        } catch (IOException e) {
+            e.printStackTrace();
+        }finally{
+            if (conn!=null) {
+                conn.disconnect();
+                conn=null;
+            }
+        }
+        return result;
+    }
+
+    /**
+     * 流转换为字符串
+     * @param in
+     * @return
+     * @throws IOException
+     */
+    public static String streamToString(InputStream in) throws IOException {
+        StringBuffer out = new StringBuffer();
+        BufferedReader br=new BufferedReader(new InputStreamReader(in,"UTF-8"));
+        String line = null;
+        while ((line = br.readLine()) != null) {
+            out.append(line);
+        }
+        br.close();
+        return out.toString();
+    }
+    /**
+     * 流转换为字符串
+     * @param in
+     * @return
+     * @throws IOException
+     */
+    public static String inputStreamToStringGbk(InputStream in) throws IOException {
+        StringBuffer out = new StringBuffer();
+        BufferedReader br=new BufferedReader(new InputStreamReader(in,"GBK"));
+        String line = null;
+        while ((line = br.readLine()) != null) {
+            out.append(line);
+        }
+        br.close();
+        return out.toString();
+    }
+}
Index: baselib/src/main/java/com/baselib/baserx/ResultException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baserx/ResultException.java	(revision )
+++ baselib/src/main/java/com/baselib/baserx/ResultException.java	(revision )
@@ -0,0 +1,34 @@
+package com.baselib.baserx;
+
+import java.io.IOException;
+
+/**
+ * 作者: liuhuaqian on 2017/10/9.
+ */
+
+public class ResultException extends IOException {
+
+    private String errMsg;
+    private boolean errCode;
+
+    public ResultException(String errMsg, boolean errCode){
+        this.errMsg = errMsg;
+        this.errCode = errCode;
+    }
+
+    public String getErrMsg() {
+        return errMsg;
+    }
+
+    public void setErrMsg(String errMsg) {
+        this.errMsg = errMsg;
+    }
+
+    public boolean isErrCode() {
+        return errCode;
+    }
+
+    public void setErrCode(boolean errCode) {
+        this.errCode = errCode;
+    }
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/recycleview/wrapper/WrapperUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/wrapper/WrapperUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/wrapper/WrapperUtils.java	(revision )
@@ -0,0 +1,50 @@
+package com.baselib.recycleview.wrapper;
+
+import android.support.v7.widget.GridLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.StaggeredGridLayoutManager;
+import android.view.ViewGroup;
+
+public class WrapperUtils
+{
+    public interface SpanSizeCallback
+    {
+        int getSpanSize(GridLayoutManager layoutManager, GridLayoutManager.SpanSizeLookup oldLookup, int position);
+    }
+
+    public static void onAttachedToRecyclerView(RecyclerView.Adapter innerAdapter, RecyclerView recyclerView, final SpanSizeCallback callback)
+    {
+        innerAdapter.onAttachedToRecyclerView(recyclerView);
+
+        RecyclerView.LayoutManager layoutManager = recyclerView.getLayoutManager();
+        if (layoutManager instanceof GridLayoutManager)
+        {
+            final GridLayoutManager gridLayoutManager = (GridLayoutManager) layoutManager;
+            final GridLayoutManager.SpanSizeLookup spanSizeLookup = gridLayoutManager.getSpanSizeLookup();
+
+            gridLayoutManager.setSpanSizeLookup(new GridLayoutManager.SpanSizeLookup()
+            {
+                @Override
+                public int getSpanSize(int position)
+                {
+                    return callback.getSpanSize(gridLayoutManager, spanSizeLookup, position);
+                }
+            });
+            gridLayoutManager.setSpanCount(gridLayoutManager.getSpanCount());
+        }
+    }
+
+    public static void setFullSpan(RecyclerView.ViewHolder holder)
+    {
+        ViewGroup.LayoutParams lp = holder.itemView.getLayoutParams();
+
+        if (lp != null
+                && lp instanceof StaggeredGridLayoutManager.LayoutParams)
+        {
+
+            StaggeredGridLayoutManager.LayoutParams p = (StaggeredGridLayoutManager.LayoutParams) lp;
+
+            p.setFullSpan(true);
+        }
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCNTheme.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCNTheme.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCNTheme.java	(revision )
@@ -0,0 +1,31 @@
+package com.baselib.ui.widget.mydatepicker;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ *  天朝日历主题类
+ * 其他国家的主题不需要这样去处理
+ */
+
+public class DPCNTheme extends DPBaseTheme {
+    /**
+     * 农历文本颜色
+     *
+     * Color of Lunar text
+     *
+     * @return 16进制颜色值 hex color
+     */
+    public int colorL() {
+        return 0xFFF86E0C;
+    }
+
+    /**
+     * 补休日期背景颜色
+     *
+     * Color of Deferred background
+     *
+     * @return 16进制颜色值 hex color
+     */
+    public int colorDeferred() {
+        return 0xFFFFFFFF;
+    }
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/baserx/RxBus.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baserx/RxBus.java	(revision )
+++ baselib/src/main/java/com/baselib/baserx/RxBus.java	(revision )
@@ -0,0 +1,158 @@
+package com.baselib.baserx;
+
+import android.support.annotation.NonNull;
+
+import com.baselib.commonutils.LogUtils;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.List;
+import java.util.concurrent.ConcurrentHashMap;
+
+import rx.Observable;
+import rx.android.schedulers.AndroidSchedulers;
+import rx.functions.Action1;
+import rx.subjects.PublishSubject;
+import rx.subjects.SerializedSubject;
+import rx.subjects.Subject;
+
+/**
+ *
+ * Created by liuhuaqian on 2017/9/6.
+ *
+ */
+
+public class RxBus {
+    private volatile static RxBus instance;
+    private  Subject bus;
+    public static RxBus getInstance() {
+        if (null == instance) {
+            synchronized (RxBus.class) {
+                instance = new RxBus();
+            }
+        }
+        return instance;
+    }
+
+    private RxBus() {
+        bus = new SerializedSubject<>(PublishSubject.create());
+    }
+
+    @SuppressWarnings("rawtypes")
+    private ConcurrentHashMap<Object, List<Subject>> subjectMapper = new ConcurrentHashMap<Object, List<Subject>>();
+
+    /**
+     * 订阅事件源
+     *
+     * @param mObservable
+     * @param mAction1
+     * @return
+     */
+    public RxBus OnEvent(Observable<?> mObservable, Action1<Object> mAction1) {
+        mObservable.observeOn(AndroidSchedulers.mainThread()).subscribe(mAction1, new Action1<Throwable>() {
+            @Override
+            public void call(Throwable throwable) {
+                throwable.printStackTrace();
+            }
+        });
+        return getInstance();
+    }
+
+    /**
+     * 注册事件源
+     *
+     * @param tag
+     * @return
+     */
+    @SuppressWarnings({"rawtypes"})
+    public <T> Observable<T> register(@NonNull Object tag) {
+        List<Subject> subjectList = subjectMapper.get(tag);
+        if (null == subjectList) {
+            subjectList = new ArrayList<Subject>();
+            subjectMapper.put(tag, subjectList);
+        }
+        Subject<T, T> subject;
+        subjectList.add(subject = PublishSubject.create());
+        LogUtils.logd("register" + tag + "  size:" + subjectList.size());
+        return subject;
+    }
+
+    @SuppressWarnings("rawtypes")
+    public void unregister(@NonNull Object tag) {
+        List<Subject> subjects = subjectMapper.get(tag);
+        if (null != subjects) {
+            subjectMapper.remove(tag);
+        }
+    }
+
+    /**
+     * 取消监听
+     *
+     * @param tagName
+     * @param observable
+     * @return
+     */
+    @SuppressWarnings("rawtypes")
+    public RxBus unregister(@NonNull Object tagName,
+                            @NonNull Observable<?> observable) {
+        if (null == observable)
+            return getInstance();
+        List<Subject> subjects = subjectMapper.get(tagName);
+        if (null != subjects) {
+            subjects.remove((Subject<?, ?>) observable);
+            if (isEmpty(subjects)) {
+                subjectMapper.remove(tagName);
+                LogUtils.logd("unregister" + tagName + "  size:" + subjects.size());
+            }
+        }
+        return getInstance();
+    }
+//    // 发送一个新的事件
+//    public void post(@NonNull Object content) {
+//        post(content.getClass().getName(), content);
+//    }
+    /**
+     * 发送消息
+     *
+     * @param object
+     */
+    public void post(Object object)
+    {
+
+        bus.onNext(object);
+
+    }
+    /**
+     * 触发事件
+     *
+     * @param content
+     */
+    @SuppressWarnings({"unchecked", "rawtypes"})
+    public void post(@NonNull Object tag, @NonNull Object content) {
+        LogUtils.logd("post" + "eventName: " + tag);
+        List<Subject> subjectList = subjectMapper.get(tag);
+        LogUtils.logd(subjectList.size() + "");
+        if (!isEmpty(subjectList)) {
+            for (Subject subject : subjectList) {
+                subject.onNext(content);
+            }
+        }
+    }
+
+    @SuppressWarnings("rawtypes")
+    public static boolean isEmpty(Collection<Subject> collection) {
+        return null == collection || collection.isEmpty();
+    }
+
+    /**
+     * 接收消息
+     *
+     * @param eventType
+     * @param <T>
+     * @return
+     */
+    public <T> Observable<T> toObserverable(Class<T> eventType)
+    {
+        return bus.ofType(eventType);
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/ndk/Application.mk
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/ndk/Application.mk	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/ndk/Application.mk	(revision )
@@ -0,0 +1,1 @@
+APP_ABI := all
\ No newline at end of file
Index: baselib/src/main/res/xml/file_paths.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/xml/file_paths.xml	(revision )
+++ baselib/src/main/res/xml/file_paths.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <paths>
+        <root-path path="" name="camera_photos" />
+    </paths>
+</resources>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/baseapp/AppManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baseapp/AppManager.java	(revision )
+++ baselib/src/main/java/com/baselib/baseapp/AppManager.java	(revision )
@@ -0,0 +1,188 @@
+package com.baselib.baseapp;
+import android.app.Activity;
+import android.app.ActivityManager;
+import android.content.Context;
+
+import java.util.Stack;
+/**
+ *
+ * Created by liuhuaqian on 2017/9/6.
+ * activity管理
+ */
+
+public class AppManager {
+    private static Stack<Activity> activityStack;
+    private volatile static AppManager instance;
+
+    private AppManager() {
+
+    }
+    /**
+     * 单一实例
+     */
+    public static AppManager getAppManager() {
+        if (instance == null) {
+            synchronized (AppManager.class){
+                if(instance==null){
+                    instance = new AppManager();
+                    instance.activityStack = new Stack();
+                }
+            }
+        }
+        return instance;
+    }
+
+    /**
+     * 添加Activity到堆栈
+     */
+    public void addActivity(Activity activity) {
+        if (activityStack == null) {
+            activityStack = new Stack<Activity>();
+        }
+        activityStack.add(activity);
+    }
+
+    /**
+     * 获取当前Activity（堆栈中最后一个压入的）
+     */
+    public Activity currentActivity() {
+        try {
+            Activity activity = activityStack.lastElement();
+            return activity;
+        } catch (Exception e) {
+//            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * 获取当前Activity的前一个Activity
+     */
+    public Activity preActivity() {
+        int index = activityStack.size() - 2;
+        if (index < 0) {
+            return null;
+        }
+        Activity activity = activityStack.get(index);
+        return activity;
+    }
+
+    /**
+     * 结束当前Activity（堆栈中最后一个压入的）
+     */
+    public void finishActivity() {
+        Activity activity = activityStack.lastElement();
+        finishActivity(activity);
+    }
+
+    /**
+     * 结束指定的Activity
+     */
+    public void finishActivity(Activity activity) {
+        if (activity != null) {
+            activityStack.remove(activity);
+            activity.finish();
+            activity = null;
+        }
+    }
+
+    /**
+     * 移除指定的Activity
+     */
+    public void removeActivity(Activity activity) {
+        if (activity != null) {
+            activityStack.remove(activity);
+            activity = null;
+        }
+    }
+
+    /**
+     * 结束指定类名的Activity
+     */
+    public void finishActivity(Class<?> cls) {
+        try {
+            for (Activity activity : activityStack) {
+                if (activity.getClass().equals(cls)) {
+                    finishActivity(activity);
+                }
+            }
+        } catch (Exception e) {
+            //e.printStackTrace();
+        }
+
+    }
+
+    public boolean isCheckActivity(Class<?> cls){
+        for (Activity activity : activityStack) {
+            if (activity.getClass().equals(cls)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 结束所有Activity
+     */
+    public void finishAllActivity() {
+        for (int i = 0, size = activityStack.size(); i < size; i++) {
+            if (null != activityStack.get(i)) {
+                activityStack.get(i).finish();
+            }
+        }
+        activityStack.clear();
+    }
+
+    /**
+     * 返回到指定的activity
+     *
+     * @param cls
+     */
+    public void returnToActivity(Class<?> cls) {
+        while (activityStack.size() != 0)
+            if (activityStack.peek().getClass() == cls) {
+                break;
+            } else {
+                finishActivity(activityStack.peek());
+            }
+    }
+
+
+    /**
+     * 是否已经打开指定的activity
+     * @param cls
+     * @return
+     */
+    public boolean isOpenActivity(Class<?> cls) {
+        if (activityStack!=null){
+            for (int i = 0, size = activityStack.size(); i < size; i++) {
+                if (cls == activityStack.peek().getClass()) {
+                    return true;
+                }
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 退出应用程序
+     *
+     * @param context      上下文
+     * @param isBackground 是否开开启后台运行
+     */
+    public void AppExit(Context context, Boolean isBackground) {
+        try {
+            finishAllActivity();
+            ActivityManager activityMgr = (ActivityManager) context
+                    .getSystemService(Context.ACTIVITY_SERVICE);
+            activityMgr.restartPackage(context.getPackageName());
+        } catch (Exception e) {
+
+        } finally {
+            // 注意，如果您有后台程序运行，请不要支持此句子
+            if (!isBackground) {
+                System.exit(0);
+            }
+        }
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/uitl/TImageFiles.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/uitl/TImageFiles.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/uitl/TImageFiles.java	(revision )
@@ -0,0 +1,140 @@
+package com.baselib.takephoto.uitl;
+
+import android.app.Activity;
+import android.content.ContentResolver;
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.net.Uri;
+import android.os.Environment;
+import android.text.TextUtils;
+import android.util.Log;
+import android.webkit.MimeTypeMap;
+import android.widget.Toast;
+
+import com.baselib.R;
+import com.baselib.takephoto.model.TException;
+import com.baselib.takephoto.model.TExceptionType;
+
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.util.UUID;
+
+/**
+ * ImageFiles工具类
+ * @author JPH
+ * Date 2016/6/7 0007 9:39
+ */
+public class TImageFiles {
+    private static final String TAG = IntentUtils.class.getName();
+    /**
+     * 将bitmap写入到文件
+     *
+     * @param bitmap
+     */
+    public static void writeToFile(Bitmap bitmap, Uri imageUri) {
+        if (bitmap == null) return;
+        File file = new File(imageUri.getPath());
+        ByteArrayOutputStream bos = new ByteArrayOutputStream();
+        bitmap.compress(Bitmap.CompressFormat.JPEG, 100, bos);
+        FileOutputStream fos = null;
+        try {
+            fos = new FileOutputStream(file);
+            fos.write(bos.toByteArray());
+            bos.flush();
+            fos.flush();
+        } catch (java.io.IOException e) {
+            e.printStackTrace();
+        } finally {
+            if (fos != null) try {
+                fos.close();
+                if (bos != null) bos.close();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+    /**
+     * InputStream 转File
+     * */
+    public static void inputStreamToFile(InputStream is, File file) throws TException {
+        if (file==null){
+            Log.i(TAG,"inputStreamToFile:file not be null");
+            throw new TException(TExceptionType.TYPE_WRITE_FAIL);
+        }
+        FileOutputStream fos = null;
+        try {
+            fos = new FileOutputStream(file);
+            byte[] buffer = new byte[1024 * 10];
+            int i;
+            while ((i = is.read(buffer)) != -1) {
+                fos.write(buffer, 0, i);
+            }
+        } catch (IOException e) {
+            Log.e(TAG,"InputStream 写入文件出错:"+e.toString());
+            throw new TException(TExceptionType.TYPE_WRITE_FAIL);
+        } finally {
+            try {
+                fos.flush();
+                fos.close();
+                is.close();
+            } catch (IOException e) {
+                e.printStackTrace();
+            }
+        }
+    }
+
+    /**
+     * 获取临时文件
+     * @param context
+     * @param photoUri
+     * @return
+     */
+    public static File getTempFile(Activity context, Uri photoUri)throws TException {
+        String minType=getMimeType(context, photoUri);
+        if (!checkMimeType(context,minType))throw new TException(TExceptionType.TYPE_NOT_IMAGE);
+        File filesDir=context.getExternalFilesDir(Environment.DIRECTORY_PICTURES);
+        if (!filesDir.exists())filesDir.mkdirs();
+        File photoFile = new File(filesDir, UUID.randomUUID().toString() + "." +minType );
+        return photoFile;
+    }
+
+    /**
+     * 检查文件类型是否是图片
+     * @param minType
+     * @return
+     */
+    public static boolean checkMimeType(Context context,String minType) {
+        boolean isPicture=TextUtils.isEmpty(minType)?false:".jpg|.gif|.png|.bmp|.jpeg|.webp|".contains(minType.toLowerCase())?true:false;
+        if (!isPicture)Toast.makeText(context,context.getResources().getText(R.string.tip_type_not_image),Toast.LENGTH_SHORT).show();
+        return isPicture;
+    }
+
+    /**
+     * To find out the extension of required object in given uri
+     * Solution by http://stackoverflow.com/a/36514823/1171484
+     */
+    public static String getMimeType(Activity context, Uri uri) {
+        String extension;
+        //Check uri format to avoid null
+        if (ContentResolver.SCHEME_CONTENT.equals(uri.getScheme())) {
+            //If scheme is a content
+            extension = MimeTypeMap.getSingleton().getExtensionFromMimeType(context.getContentResolver().getType(uri));
+            if (TextUtils.isEmpty(extension))extension=MimeTypeMap.getFileExtensionFromUrl(Uri.fromFile(new File(uri.getPath())).toString());
+        } else {
+            //If scheme is a File
+            //This will replace white spaces with %20 and also other special characters. This will avoid returning null values on file name with spaces and special characters.
+            extension = MimeTypeMap.getFileExtensionFromUrl(Uri.fromFile(new File(uri.getPath())).toString());
+            if (TextUtils.isEmpty(extension))extension=MimeTypeMap.getSingleton().getExtensionFromMimeType(context.getContentResolver().getType(uri));
+        }
+        if(TextUtils.isEmpty(extension)){
+            extension=getMimeTypeByFileName(TUriParse.getFileWithUri(uri,context).getName());
+        }
+        return extension;
+    }
+    public static String getMimeTypeByFileName(String fileName){
+        return fileName.substring(fileName.lastIndexOf("."),fileName.length());
+    }
+ }
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPInfo.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPInfo.java	(revision )
@@ -0,0 +1,16 @@
+package com.baselib.ui.widget.mydatepicker;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 日历数据实体
+ * 封装日历绘制时需要的数据
+ */
+
+public class DPInfo {
+    public String strG, strF;
+    public boolean isHoliday;
+    public boolean isToday, isWeekend;
+    public boolean isSolarTerms, isFestival, isDeferred;
+    public boolean isDecorBG;
+    public boolean isDecorTL, isDecorT, isDecorTR, isDecorL, isDecorR;
+}
Index: baselib/src/main/java/com/baselib/takephoto/model/TResult.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/model/TResult.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/model/TResult.java	(revision )
@@ -0,0 +1,41 @@
+package com.baselib.takephoto.model;
+
+import java.util.ArrayList;
+
+/**
+ * TakePhoto 操作成功返回的处理结果
+ * Author: JPH
+ * Date: 2016/8/11 17:01
+ */
+public class TResult {
+    private  ArrayList<TImage> images;
+    private TImage image;
+    public static TResult of(TImage image){
+        ArrayList<TImage> images=new ArrayList<>(1);
+        images.add(image);
+        return new TResult(images);
+    }
+    public static TResult of(ArrayList<TImage> images){
+        return new TResult(images);
+    }
+    private TResult(ArrayList<TImage> images) {
+        this.images = images;
+        if(images!=null&&!images.isEmpty())this.image=images.get(0);
+    }
+
+    public ArrayList<TImage> getImages() {
+        return images;
+    }
+
+    public void setImages(ArrayList<TImage> images) {
+        this.images = images;
+    }
+
+    public TImage getImage() {
+        return image;
+    }
+
+    public void setImage(TImage image) {
+        this.image = image;
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/BarUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/BarUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/BarUtils.java	(revision )
@@ -0,0 +1,505 @@
+package com.baselib.utilcode.util;
+
+import android.app.Activity;
+import android.content.Context;
+import android.content.res.Resources;
+import android.graphics.Color;
+import android.os.Build;
+import android.support.annotation.ColorInt;
+import android.support.annotation.IntRange;
+import android.support.annotation.NonNull;
+import android.support.v4.widget.DrawerLayout;
+import android.util.TypedValue;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.LinearLayout;
+
+import java.lang.reflect.Method;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/09/23
+ *     desc  : 栏相关工具类
+ * </pre>
+ */
+public final class BarUtils {
+
+    ///////////////////////////////////////////////////////////////////////////
+    // status bar
+    ///////////////////////////////////////////////////////////////////////////
+
+    private static final int    DEFAULT_ALPHA = 112;
+    private static final String TAG_COLOR     = "TAG_COLOR";
+    private static final String TAG_ALPHA     = "TAG_ALPHA";
+    private static final int    TAG_OFFSET    = -123;
+
+    private BarUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 获取状态栏高度(px)
+     *
+     * @return 状态栏高度px
+     */
+    public static int getStatusBarHeight() {
+        Resources resources = Utils.getApp().getResources();
+        int resourceId = resources.getIdentifier("status_bar_height", "dimen", "android");
+        return resources.getDimensionPixelSize(resourceId);
+    }
+
+    /**
+     * 为view增加MarginTop为状态栏高度
+     *
+     * @param view view
+     */
+    public static void addMarginTopEqualStatusBarHeight(@NonNull View view) {
+        Object haveSetOffset = view.getTag(TAG_OFFSET);
+        if (haveSetOffset != null && (Boolean) haveSetOffset) return;
+        ViewGroup.MarginLayoutParams layoutParams = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
+        layoutParams.setMargins(layoutParams.leftMargin,
+                layoutParams.topMargin + getStatusBarHeight(),
+                layoutParams.rightMargin,
+                layoutParams.bottomMargin);
+        view.setTag(TAG_OFFSET, true);
+    }
+
+    /**
+     * 为view减少MarginTop为状态栏高度
+     *
+     * @param view view
+     */
+    public static void subtractMarginTopEqualStatusBarHeight(@NonNull View view) {
+        Object haveSetOffset = view.getTag(TAG_OFFSET);
+        if (haveSetOffset == null || !(Boolean) haveSetOffset) return;
+        ViewGroup.MarginLayoutParams layoutParams = (ViewGroup.MarginLayoutParams) view.getLayoutParams();
+        layoutParams.setMargins(layoutParams.leftMargin,
+                layoutParams.topMargin - getStatusBarHeight(),
+                layoutParams.rightMargin,
+                layoutParams.bottomMargin);
+        view.setTag(TAG_OFFSET, false);
+    }
+
+    /**
+     * 设置状态栏颜色
+     *
+     * @param activity activity
+     * @param color    状态栏颜色值
+     */
+    public static void setStatusBarColor(@NonNull final Activity activity,
+                                         @ColorInt final int color) {
+        setStatusBarColor(activity, color, DEFAULT_ALPHA, false);
+    }
+
+    /**
+     * 设置状态栏颜色
+     *
+     * @param activity activity
+     * @param color    状态栏颜色值
+     * @param alpha    状态栏透明度，此透明度并非颜色中的透明度
+     */
+    public static void setStatusBarColor(@NonNull final Activity activity,
+                                         @ColorInt final int color,
+                                         @IntRange(from = 0, to = 255) final int alpha) {
+        setStatusBarColor(activity, color, alpha, false);
+    }
+
+    /**
+     * 设置状态栏颜色
+     *
+     * @param activity activity
+     * @param color    状态栏颜色值
+     * @param alpha    状态栏透明度，此透明度并非颜色中的透明度
+     * @param isDecor  {@code true}: 设置在DecorView中<br>
+     *                 {@code false}: 设置在ContentView中
+     */
+    public static void setStatusBarColor(@NonNull final Activity activity,
+                                         @ColorInt final int color,
+                                         @IntRange(from = 0, to = 255) final int alpha,
+                                         final boolean isDecor) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) return;
+        hideAlphaView(activity);
+        transparentStatusBar(activity);
+        addStatusBarColor(activity, color, alpha, isDecor);
+    }
+
+    /**
+     * 设置状态栏透明度
+     *
+     * @param activity activity
+     */
+    public static void setStatusBarAlpha(@NonNull final Activity activity) {
+        setStatusBarAlpha(activity, DEFAULT_ALPHA, false);
+    }
+
+    /**
+     * 设置状态栏透明度
+     *
+     * @param activity activity
+     */
+    public static void setStatusBarAlpha(@NonNull final Activity activity,
+                                         @IntRange(from = 0, to = 255) final int alpha) {
+        setStatusBarAlpha(activity, alpha, false);
+    }
+
+    /**
+     * 设置状态栏透明度
+     *
+     * @param activity activity
+     * @param alpha    状态栏透明度
+     * @param isDecor  {@code true}: 设置在DecorView中<br>
+     *                 {@code false}: 设置在ContentView中
+     */
+    public static void setStatusBarAlpha(@NonNull final Activity activity,
+                                         @IntRange(from = 0, to = 255) final int alpha,
+                                         final boolean isDecor) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) return;
+        hideColorView(activity);
+        transparentStatusBar(activity);
+        addStatusBarAlpha(activity, alpha, isDecor);
+    }
+
+    /**
+     * 设置状态栏颜色
+     *
+     * @param fakeStatusBar 伪造状态栏
+     * @param color         状态栏颜色值
+     */
+    public static void setStatusBarColor(@NonNull final View fakeStatusBar, @ColorInt final int color) {
+        setStatusBarColor(fakeStatusBar, color, DEFAULT_ALPHA);
+    }
+
+    /**
+     * 设置状态栏颜色
+     *
+     * @param fakeStatusBar 伪造状态栏
+     * @param color         状态栏颜色值
+     * @param alpha         状态栏透明度，此透明度并非颜色中的透明度
+     */
+    public static void setStatusBarColor(@NonNull final View fakeStatusBar,
+                                         @ColorInt final int color,
+                                         @IntRange(from = 0, to = 255) final int alpha) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) return;
+        fakeStatusBar.setVisibility(View.VISIBLE);
+        transparentStatusBar((Activity) fakeStatusBar.getContext());
+        ViewGroup.LayoutParams layoutParams = fakeStatusBar.getLayoutParams();
+        layoutParams.width = ViewGroup.LayoutParams.MATCH_PARENT;
+        layoutParams.height = BarUtils.getStatusBarHeight();
+        fakeStatusBar.setBackgroundColor(getStatusBarColor(color, alpha));
+    }
+
+    /**
+     * 设置状态栏透明度
+     *
+     * @param fakeStatusBar 伪造状态栏
+     */
+    public static void setStatusBarAlpha(@NonNull final View fakeStatusBar) {
+        setStatusBarAlpha(fakeStatusBar, DEFAULT_ALPHA);
+    }
+
+    /**
+     * 设置状态栏透明度
+     *
+     * @param fakeStatusBar 伪造状态栏
+     * @param alpha         状态栏透明度
+     */
+    public static void setStatusBarAlpha(@NonNull final View fakeStatusBar,
+                                         @IntRange(from = 0, to = 255) final int alpha) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) return;
+        fakeStatusBar.setVisibility(View.VISIBLE);
+        transparentStatusBar((Activity) fakeStatusBar.getContext());
+        ViewGroup.LayoutParams layoutParams = fakeStatusBar.getLayoutParams();
+        layoutParams.width = ViewGroup.LayoutParams.MATCH_PARENT;
+        layoutParams.height = BarUtils.getStatusBarHeight();
+        fakeStatusBar.setBackgroundColor(Color.argb(alpha, 0, 0, 0));
+    }
+
+    /**
+     * 为DrawerLayout设置状态栏颜色
+     * <p>DrawLayout需设置 {@code android:fitsSystemWindows="true"}</p>
+     *
+     * @param activity      activity
+     * @param drawer        drawerLayout
+     * @param fakeStatusBar 伪造状态栏
+     * @param color         状态栏颜色值
+     * @param isTop         drawerLayout是否在顶层
+     */
+    public static void setStatusBarColor4Drawer(@NonNull final Activity activity,
+                                                @NonNull final DrawerLayout drawer,
+                                                @NonNull final View fakeStatusBar,
+                                                @ColorInt final int color,
+                                                final boolean isTop) {
+        setStatusBarColor4Drawer(activity, drawer, fakeStatusBar, color, DEFAULT_ALPHA, isTop);
+    }
+
+    /**
+     * 为DrawerLayout设置状态栏颜色
+     * <p>DrawLayout需设置 {@code android:fitsSystemWindows="true"}</p>
+     *
+     * @param activity      activity
+     * @param drawer        drawerLayout
+     * @param fakeStatusBar 伪造状态栏
+     * @param color         状态栏颜色值
+     * @param alpha         状态栏透明度，此透明度并非颜色中的透明度
+     * @param isTop         drawerLayout是否在顶层
+     */
+    public static void setStatusBarColor4Drawer(@NonNull final Activity activity,
+                                                @NonNull final DrawerLayout drawer,
+                                                @NonNull final View fakeStatusBar,
+                                                @ColorInt final int color,
+                                                @IntRange(from = 0, to = 255) final int alpha,
+                                                final boolean isTop) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) return;
+        drawer.setFitsSystemWindows(false);
+        transparentStatusBar(activity);
+        setStatusBarColor(fakeStatusBar, color, isTop ? alpha : 0);
+        for (int i = 0, len = drawer.getChildCount(); i < len; i++) {
+            drawer.getChildAt(i).setFitsSystemWindows(false);
+        }
+        if (isTop) {
+            hideAlphaView(activity);
+        } else {
+            addStatusBarAlpha(activity, alpha, false);
+        }
+    }
+
+    /**
+     * 为DrawerLayout设置状态栏透明度
+     * <p>DrawLayout需设置 {@code android:fitsSystemWindows="true"}</p>
+     *
+     * @param activity      activity
+     * @param drawer        drawerLayout
+     * @param fakeStatusBar 伪造状态栏
+     * @param isTop         drawerLayout是否在顶层
+     */
+    public static void setStatusBarAlpha4Drawer(@NonNull final Activity activity,
+                                                @NonNull final DrawerLayout drawer,
+                                                @NonNull final View fakeStatusBar,
+                                                final boolean isTop) {
+        setStatusBarAlpha4Drawer(activity, drawer, fakeStatusBar, DEFAULT_ALPHA, isTop);
+    }
+
+    /**
+     * 为DrawerLayout设置状态栏透明度
+     * <p>DrawLayout需设置 {@code android:fitsSystemWindows="true"}</p>
+     *
+     * @param activity      activity
+     * @param drawer        drawerLayout
+     * @param fakeStatusBar 伪造状态栏
+     * @param alpha         状态栏透明度
+     * @param isTop         drawerLayout是否在顶层
+     */
+    public static void setStatusBarAlpha4Drawer(@NonNull final Activity activity,
+                                                @NonNull final DrawerLayout drawer,
+                                                @NonNull final View fakeStatusBar,
+                                                @IntRange(from = 0, to = 255) final int alpha,
+                                                final boolean isTop) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) return;
+        drawer.setFitsSystemWindows(false);
+        transparentStatusBar(activity);
+        setStatusBarAlpha(fakeStatusBar, isTop ? alpha : 0);
+        for (int i = 0, len = drawer.getChildCount(); i < len; i++) {
+            drawer.getChildAt(i).setFitsSystemWindows(false);
+        }
+        if (isTop) {
+            hideAlphaView(activity);
+        } else {
+            addStatusBarAlpha(activity, alpha, false);
+        }
+    }
+
+    private static void addStatusBarColor(final Activity activity, final int color, final int alpha, boolean isDecor) {
+        ViewGroup parent = isDecor ?
+                (ViewGroup) activity.getWindow().getDecorView() :
+                (ViewGroup) activity.findViewById(android.R.id.content);
+        View fakeStatusBarView = parent.findViewWithTag(TAG_COLOR);
+        if (fakeStatusBarView != null) {
+            if (fakeStatusBarView.getVisibility() == View.GONE) {
+                fakeStatusBarView.setVisibility(View.VISIBLE);
+            }
+            fakeStatusBarView.setBackgroundColor(getStatusBarColor(color, alpha));
+        } else {
+            parent.addView(createColorStatusBarView(parent.getContext(), color, alpha));
+        }
+    }
+
+    private static void addStatusBarAlpha(final Activity activity, final int alpha, boolean isDecor) {
+        ViewGroup parent = isDecor ?
+                (ViewGroup) activity.getWindow().getDecorView() :
+                (ViewGroup) activity.findViewById(android.R.id.content);
+        View fakeStatusBarView = parent.findViewWithTag(TAG_ALPHA);
+        if (fakeStatusBarView != null) {
+            if (fakeStatusBarView.getVisibility() == View.GONE) {
+                fakeStatusBarView.setVisibility(View.VISIBLE);
+            }
+            fakeStatusBarView.setBackgroundColor(Color.argb(alpha, 0, 0, 0));
+        } else {
+            parent.addView(createAlphaStatusBarView(parent.getContext(), alpha));
+        }
+    }
+
+    private static void hideColorView(final Activity activity) {
+        ViewGroup decorView = (ViewGroup) activity.getWindow().getDecorView();
+        View fakeStatusBarView = decorView.findViewWithTag(TAG_COLOR);
+        if (fakeStatusBarView == null) return;
+        fakeStatusBarView.setVisibility(View.GONE);
+    }
+
+    private static void hideAlphaView(final Activity activity) {
+        ViewGroup decorView = (ViewGroup) activity.getWindow().getDecorView();
+        View fakeStatusBarView = decorView.findViewWithTag(TAG_ALPHA);
+        if (fakeStatusBarView == null) return;
+        fakeStatusBarView.setVisibility(View.GONE);
+    }
+
+    private static int getStatusBarColor(final int color, final int alpha) {
+        if (alpha == 0) return color;
+        float a = 1 - alpha / 255f;
+        int red = (color >> 16) & 0xff;
+        int green = (color >> 8) & 0xff;
+        int blue = color & 0xff;
+        red = (int) (red * a + 0.5);
+        green = (int) (green * a + 0.5);
+        blue = (int) (blue * a + 0.5);
+        return Color.argb(255, red, green, blue);
+    }
+
+    /**
+     * 绘制一个和状态栏一样高的颜色矩形
+     */
+    private static View createColorStatusBarView(final Context context, final int color, final int alpha) {
+        View statusBarView = new View(context);
+        statusBarView.setLayoutParams(new LinearLayout.LayoutParams(
+                ViewGroup.LayoutParams.MATCH_PARENT, getStatusBarHeight()));
+        statusBarView.setBackgroundColor(getStatusBarColor(color, alpha));
+        statusBarView.setTag(TAG_COLOR);
+        return statusBarView;
+    }
+
+    /**
+     * 绘制一个和状态栏一样高的黑色透明度矩形
+     */
+    private static View createAlphaStatusBarView(final Context context, final int alpha) {
+        View statusBarView = new View(context);
+        statusBarView.setLayoutParams(new LinearLayout.LayoutParams(
+                ViewGroup.LayoutParams.MATCH_PARENT, getStatusBarHeight()));
+        statusBarView.setBackgroundColor(Color.argb(alpha, 0, 0, 0));
+        statusBarView.setTag(TAG_ALPHA);
+        return statusBarView;
+    }
+
+    private static void transparentStatusBar(final Activity activity) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.KITKAT) return;
+        Window window = activity.getWindow();
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            int option = View.SYSTEM_UI_FLAG_LAYOUT_STABLE | View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN;
+            window.getDecorView().setSystemUiVisibility(option);
+            window.setStatusBarColor(Color.TRANSPARENT);
+        } else {
+            window.addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
+        }
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // action bar
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 获取ActionBar高度
+     *
+     * @param activity activity
+     * @return ActionBar高度
+     */
+    public static int getActionBarHeight(@NonNull final Activity activity) {
+        TypedValue tv = new TypedValue();
+        if (activity.getTheme().resolveAttribute(android.R.attr.actionBarSize, tv, true)) {
+            return TypedValue.complexToDimensionPixelSize(tv.data, activity.getResources().getDisplayMetrics());
+        }
+        return 0;
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // notification bar
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 显示通知栏
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.EXPAND_STATUS_BAR"/>}</p>
+     *
+     * @param context        上下文
+     * @param isSettingPanel {@code true}: 打开设置<br>{@code false}: 打开通知
+     */
+    public static void showNotificationBar(@NonNull final Context context, final boolean isSettingPanel) {
+        String methodName = (Build.VERSION.SDK_INT <= 16) ? "expand"
+                : (isSettingPanel ? "expandSettingsPanel" : "expandNotificationsPanel");
+        invokePanels(context, methodName);
+    }
+
+    /**
+     * 隐藏通知栏
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.EXPAND_STATUS_BAR"/>}</p>
+     *
+     * @param context 上下文
+     */
+    public static void hideNotificationBar(@NonNull final Context context) {
+        String methodName = (Build.VERSION.SDK_INT <= 16) ? "collapse" : "collapsePanels";
+        invokePanels(context, methodName);
+    }
+
+    /**
+     * 反射唤醒通知栏
+     *
+     * @param context    上下文
+     * @param methodName 方法名
+     */
+    private static void invokePanels(@NonNull final Context context, final String methodName) {
+        try {
+            Object service = context.getSystemService("statusbar");
+            Class<?> statusBarManager = Class.forName("android.app.StatusBarManager");
+            Method expand = statusBarManager.getMethod(methodName);
+            expand.invoke(service);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // navigation bar
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 获取导航栏高度
+     * <p>0代表不存在</p>
+     *
+     * @return 导航栏高度
+     */
+    public static int getNavBarHeight() {
+        Resources res = Utils.getApp().getResources();
+        int resourceId = res.getIdentifier("navigation_bar_height", "dimen", "android");
+        if (resourceId != 0) {
+            return res.getDimensionPixelSize(resourceId);
+        } else {
+            return 0;
+        }
+    }
+
+    /**
+     * 隐藏导航栏
+     *
+     * @param activity activity
+     */
+    public static void hideNavBar(@NonNull final Activity activity) {
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) return;
+        if (getNavBarHeight() > 0) {
+            View decorView = activity.getWindow().getDecorView();
+            int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
+                    | View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION
+                    | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY;
+            decorView.setSystemUiVisibility(uiOptions);
+        }
+    }
+}
Index: baselib/src/main/java/com/baselib/recycleview/DividerDecoration.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/DividerDecoration.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/DividerDecoration.java	(revision )
@@ -0,0 +1,310 @@
+package com.baselib.recycleview;
+
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.graphics.Canvas;
+import android.graphics.Paint;
+import android.graphics.Rect;
+import android.graphics.drawable.Drawable;
+import android.support.v4.content.ContextCompat;
+import android.support.v7.widget.GridLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.StaggeredGridLayoutManager;
+import android.util.Log;
+import android.view.View;
+
+/**
+ * 万能分割线
+ * Created by ChenSS on 2016/9/21.
+ */
+public class DividerDecoration extends RecyclerView.ItemDecoration {
+    private Paint mPaint;
+    //取名mDivider似乎更恰当
+    private Drawable mDrawable;
+    //分割线高度，默认为1px
+    private int mDividerHeight = 2;
+    //列表的方向
+    private int mOrientation;
+    //系统自带的参数
+    private static final int[] ATTRS = new int[]{android.R.attr.listDivider};
+    //水平
+    public static final int HORIZONTAL_LIST = RecyclerView.HORIZONTAL;
+    //垂直
+    public static final int VERTICAL_LIST = RecyclerView.VERTICAL;
+    //水平+垂直
+    public static final int BOTH_SET = 2;
+
+
+    /**
+     * 默认分割线：高度为2px，颜色为灰色
+     *
+     * @param context     上下文
+     * @param orientation 列表方向
+     */
+    public DividerDecoration(Context context, int orientation) {
+        this.setOrientation(orientation);
+        //获取xml配置的参数
+        final TypedArray a = context.obtainStyledAttributes(ATTRS);
+        //typedArray.getDrawable(attr)这句是说我们可以通过我们的资源获得资源，使用我们的资源名attr去获得资源id
+        //看不懂就用自己写一个分割线的图片吧，方法：ContextCompat.getDrawable(context, drawableId);
+        mDrawable = a.getDrawable(0);
+        //官方的解释是：回收TypedArray，以便后面重用。在调用这个函数后，你就不能再使用这个TypedArray。
+        //在TypedArray后调用recycle主要是为了缓存。
+        a.recycle();
+    }
+
+    /**
+     * 自定义分割线
+     *
+     * @param context     上下文
+     * @param orientation 列表方向
+     * @param drawableId  分割线图片
+     */
+    public DividerDecoration(Context context, int orientation, int drawableId) {
+        this.setOrientation(orientation);
+        //旧的getDrawable方法弃用了，这个是新的
+        mDrawable = ContextCompat.getDrawable(context, drawableId);
+        mDividerHeight = mDrawable.getIntrinsicHeight();
+    }
+
+    /**
+     * 自定义分割线
+     *
+     * @param context       上下文
+     * @param orientation   列表方向
+     * @param dividerHeight 分割线高度
+     * @param dividerColor  分割线颜色
+     */
+    public DividerDecoration(Context context, int orientation,
+                                 int dividerHeight, int dividerColor) {
+        this.setOrientation(orientation);
+        mDividerHeight = dividerHeight;
+        Log.e("mDividerHeight", mDividerHeight + "===================");
+        //抗锯齿画笔
+        mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        mPaint.setColor(dividerColor);
+        //填满颜色
+        mPaint.setStyle(Paint.Style.FILL);
+    }
+
+    /**
+     * 设置方向
+     *
+     * @param orientation
+     */
+    public void setOrientation(int orientation) {
+        if (orientation < 0 || orientation > 2)
+            throw new IllegalArgumentException("invalid orientation");
+        mOrientation = orientation;
+    }
+
+
+    /**
+     * 绘制分割线之后,需要留出一个外边框,就是说item之间的间距要换一下
+     *
+     * @param outRect outRect.set(0, 0, 0, 0);的四个参数理解成margin就好了
+     * @param view    视图
+     * @param parent  父级view
+     * @param state
+     */
+    @Override
+    public void getItemOffsets(Rect outRect, View view, RecyclerView parent, RecyclerView.State state) {
+        //下面super...代码其实调用的就是那个过时的getItemOffsets,也就是说这个方法体内容也可以通通移到那个过时的getItemOffsets中
+        super.getItemOffsets(outRect, view, parent, state);
+        //获取layoutParams参数
+        RecyclerView.LayoutParams layoutParams = (RecyclerView.LayoutParams) view.getLayoutParams();
+        //当前位置
+        int itemPosition = layoutParams.getViewLayoutPosition();
+        //ItemView数量
+        int childCount = parent.getAdapter().getItemCount();
+        switch (mOrientation) {
+            case BOTH_SET:
+                //获取Layout的相关参数
+                int spanCount = this.getSpanCount(parent);
+                if (isLastRaw(parent, itemPosition, spanCount, childCount)) {
+                    // 如果是最后一行，则不需要绘制底部
+                    outRect.set(0, 0, mDividerHeight, 0);
+                } else if (isLastColum(parent, itemPosition, spanCount, childCount)) {
+                    // 如果是最后一列，则不需要绘制右边
+                    outRect.set(0, 0, 0, mDividerHeight);
+                } else {
+                    outRect.set(0, 0, mDividerHeight, mDividerHeight);
+                }
+                break;
+            case VERTICAL_LIST:
+                childCount -= 1;
+                //水平布局右侧留Margin,如果是最后一列,就不要留Margin了
+                outRect.set(0, 0, (itemPosition != childCount) ? mDividerHeight : 0, 0);
+                break;
+            case HORIZONTAL_LIST:
+                childCount -= 1;
+                //垂直布局底部留边，最后一行不留
+                outRect.set(0, 0, 0, (itemPosition != childCount) ? mDividerHeight : 0);
+                break;
+        }
+    }
+
+    /**
+     * 绘制分割线
+     *
+     * @param c
+     * @param parent
+     * @param state
+     */
+    @Override
+    public void onDraw(Canvas c, RecyclerView parent, RecyclerView.State state) {
+        super.onDraw(c, parent, state);
+        if (mOrientation == VERTICAL_LIST) {
+            drawVertical(c, parent);
+        } else if (mOrientation == HORIZONTAL_LIST) {
+            drawHorizontal(c, parent);
+        } else {
+            drawHorizontal(c, parent);
+            drawVertical(c, parent);
+        }
+    }
+
+    /**
+     * 绘制横向 item 分割线
+     *
+     * @param canvas 画布
+     * @param parent 父容器
+     */
+    private void drawHorizontal(Canvas canvas, RecyclerView parent) {
+        final int x = parent.getPaddingLeft();
+        final int width = parent.getMeasuredWidth() - parent.getPaddingRight();
+        //getChildCount()(ViewGroup.getChildCount) 返回的是显示层面上的“所包含的子 View 个数”。
+        final int childSize = parent.getChildCount();
+        for (int i = 0; i < childSize; i++) {
+            final View child = parent.getChildAt(i);
+            RecyclerView.LayoutParams layoutParams =
+                    (RecyclerView.LayoutParams) child.getLayoutParams();
+            //item底部的Y轴坐标+margin值
+            final int y = child.getBottom() + layoutParams.bottomMargin;
+            final int height = y + mDividerHeight;
+            Log.e("height", height + "===================");
+            if (mDrawable != null) {
+                //setBounds(x,y,width,height); x:组件在容器X轴上的起点 y:组件在容器Y轴上的起点
+                // width:组件的长度 height:组件的高度
+                mDrawable.setBounds(x, y, width, height);
+                mDrawable.draw(canvas);
+            }
+            if (mPaint != null) {
+                canvas.drawRect(x, y, width, height, mPaint);
+            }
+        }
+    }
+
+    /**
+     * 绘制纵向 item 分割线
+     *
+     * @param canvas
+     * @param parent
+     */
+    private void drawVertical(Canvas canvas, RecyclerView parent) {
+        final int top = parent.getPaddingTop();
+        final int bottom = parent.getMeasuredHeight() - parent.getPaddingBottom();
+        final int childSize = parent.getChildCount();
+        for (int i = 0; i < childSize; i++) {
+            final View child = parent.getChildAt(i);
+            RecyclerView.LayoutParams layoutParams = (RecyclerView.LayoutParams) child.getLayoutParams();
+            final int left = child.getRight() + layoutParams.rightMargin;
+            final int right = left + mDividerHeight;
+            if (mDrawable != null) {
+                mDrawable.setBounds(left, top, right, bottom);
+                mDrawable.draw(canvas);
+            }
+            if (mPaint != null) {
+                canvas.drawRect(left, top, right, bottom, mPaint);
+            }
+        }
+    }
+
+
+    /**
+     * 获取列数
+     *
+     * @param parent
+     * @return
+     */
+    private int getSpanCount(RecyclerView parent) {
+        int spanCount = -1;
+        RecyclerView.LayoutManager layoutManager = parent.getLayoutManager();
+        if (layoutManager instanceof GridLayoutManager) {
+            spanCount = ((GridLayoutManager) layoutManager).getSpanCount();
+        } else if (layoutManager instanceof StaggeredGridLayoutManager) {
+            spanCount = ((StaggeredGridLayoutManager) layoutManager)
+                    .getSpanCount();
+        }
+        return spanCount;
+    }
+
+
+    private boolean isLastColum(RecyclerView parent, int pos, int spanCount,
+                                int childCount) {
+        RecyclerView.LayoutManager layoutManager = parent.getLayoutManager();
+        if (layoutManager instanceof GridLayoutManager) {
+            int orientation = ((GridLayoutManager) layoutManager)
+                    .getOrientation();
+            if (orientation == StaggeredGridLayoutManager.VERTICAL) {
+                // 如果是最后一列，则不需要绘制右边
+                if ((pos + 1) % spanCount == 0)
+                    return true;
+            } else {
+                childCount = childCount - childCount % spanCount;
+                // 如果是最后一列，则不需要绘制右边
+                if (pos >= childCount)
+                    return true;
+            }
+        } else if (layoutManager instanceof StaggeredGridLayoutManager) {
+            int orientation = ((StaggeredGridLayoutManager) layoutManager)
+                    .getOrientation();
+            if (orientation == StaggeredGridLayoutManager.VERTICAL) {
+                // 如果是最后一列，则不需要绘制右边
+                if ((pos + 1) % spanCount == 0)
+                    return true;
+            } else {
+                childCount = childCount - childCount % spanCount;
+                // 如果是最后一列，则不需要绘制右边
+                if (pos >= childCount)
+                    return true;
+            }
+        }
+        return false;
+    }
+
+    private boolean isLastRaw(RecyclerView parent, int pos, int spanCount,
+                              int childCount) {
+        int orientation;
+        RecyclerView.LayoutManager layoutManager = parent.getLayoutManager();
+        if (layoutManager instanceof GridLayoutManager) {
+            childCount = childCount - childCount % spanCount;
+            orientation = ((GridLayoutManager) layoutManager)
+                    .getOrientation();
+            if (orientation == StaggeredGridLayoutManager.VERTICAL) {
+                // 如果是最后一行，则不需要绘制底部
+                childCount = childCount - childCount % spanCount;
+                if (pos >= childCount)
+                    return true;
+            } else {// StaggeredGridLayoutManager 横向滚动
+                // 如果是最后一行，则不需要绘制底部
+                if ((pos + 1) % spanCount == 0)
+                    return true;
+            }
+        } else if (layoutManager instanceof StaggeredGridLayoutManager) {
+            orientation = ((StaggeredGridLayoutManager) layoutManager)
+                    .getOrientation();
+            if (orientation == StaggeredGridLayoutManager.VERTICAL) {
+                // 如果是最后一行，则不需要绘制底部
+                childCount = childCount - childCount % spanCount;
+                if (pos >= childCount)
+                    return true;
+            } else {// StaggeredGridLayoutManager 横向滚动
+                // 如果是最后一行，则不需要绘制底部
+                if ((pos + 1) % spanCount == 0)
+                    return true;
+            }
+        }
+        return false;
+    }
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/utilcode/util/CloseUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/CloseUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/CloseUtils.java	(revision )
@@ -0,0 +1,54 @@
+package com.baselib.utilcode.util;
+
+import java.io.Closeable;
+import java.io.IOException;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/10/09
+ *     desc  : 关闭相关工具类
+ * </pre>
+ */
+public final class CloseUtils {
+
+    private CloseUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 关闭IO
+     *
+     * @param closeables closeables
+     */
+    public static void closeIO(final Closeable... closeables) {
+        if (closeables == null) return;
+        for (Closeable closeable : closeables) {
+            if (closeable != null) {
+                try {
+                    closeable.close();
+                } catch (IOException e) {
+                    e.printStackTrace();
+                }
+            }
+        }
+    }
+
+    /**
+     * 安静关闭IO
+     *
+     * @param closeables closeables
+     */
+    public static void closeIOQuietly(final Closeable... closeables) {
+        if (closeables == null) return;
+        for (Closeable closeable : closeables) {
+            if (closeable != null) {
+                try {
+                    closeable.close();
+                } catch (IOException ignored) {
+                }
+            }
+        }
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/SnackbarUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/SnackbarUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/SnackbarUtils.java	(revision )
@@ -0,0 +1,299 @@
+package com.baselib.utilcode.util;
+
+import android.support.annotation.ColorInt;
+import android.support.annotation.DrawableRes;
+import android.support.annotation.IntDef;
+import android.support.annotation.IntRange;
+import android.support.annotation.LayoutRes;
+import android.support.annotation.NonNull;
+import android.support.design.widget.Snackbar;
+import android.text.SpannableString;
+import android.text.Spanned;
+import android.text.style.ForegroundColorSpan;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import java.lang.annotation.Retention;
+import java.lang.annotation.RetentionPolicy;
+import java.lang.ref.WeakReference;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/10/16
+ *     desc  : Snackbar相关工具类
+ * </pre>
+ */
+public final class SnackbarUtils {
+
+    public static final int LENGTH_INDEFINITE = -2;
+    public static final int LENGTH_SHORT      = -1;
+    public static final int LENGTH_LONG       = 0;
+
+    @IntDef({LENGTH_INDEFINITE, LENGTH_SHORT, LENGTH_LONG})
+    @Retention(RetentionPolicy.SOURCE)
+    public @interface Duration {
+    }
+
+    private static final int COLOR_DEFAULT = 0xFEFFFFFF;
+    private static final int COLOR_SUCCESS = 0xFF2BB600;
+    private static final int COLOR_WARNING = 0xFFFFC100;
+    private static final int COLOR_ERROR   = 0xFFFF0000;
+    private static final int COLOR_MESSAGE = 0xFFFFFFFF;
+
+    private static WeakReference<Snackbar> snackbarWeakReference;
+
+    private View                 parent;
+    private CharSequence         message;
+    private int                  messageColor;
+    private int                  bgColor;
+    private int                  bgResource;
+    private int                  duration;
+    private CharSequence         actionText;
+    private int                  actionTextColor;
+    private View.OnClickListener actionListener;
+    private int                  bottomMargin;
+
+    private SnackbarUtils(final View parent) {
+        setDefault();
+        this.parent = parent;
+    }
+
+    private void setDefault() {
+        message = "";
+        messageColor = COLOR_DEFAULT;
+        bgColor = COLOR_DEFAULT;
+        bgResource = -1;
+        duration = LENGTH_SHORT;
+        actionText = "";
+        actionTextColor = COLOR_DEFAULT;
+        bottomMargin = 0;
+    }
+
+    /**
+     * 设置snackbar依赖view
+     *
+     * @param parent 依赖view
+     * @return {@link SnackbarUtils}
+     */
+    public static SnackbarUtils with(@NonNull final View parent) {
+        return new SnackbarUtils(parent);
+    }
+
+    /**
+     * 设置消息
+     *
+     * @param msg 消息
+     * @return {@link SnackbarUtils}
+     */
+    public SnackbarUtils setMessage(@NonNull final CharSequence msg) {
+        this.message = msg;
+        return this;
+    }
+
+    /**
+     * 设置消息颜色
+     *
+     * @param color 颜色
+     * @return {@link SnackbarUtils}
+     */
+    public SnackbarUtils setMessageColor(@ColorInt final int color) {
+        this.messageColor = color;
+        return this;
+    }
+
+    /**
+     * 设置背景色
+     *
+     * @param color 背景色
+     * @return {@link SnackbarUtils}
+     */
+    public SnackbarUtils setBgColor(@ColorInt final int color) {
+        this.bgColor = color;
+        return this;
+    }
+
+    /**
+     * 设置背景资源
+     *
+     * @param bgResource 背景资源
+     * @return {@link SnackbarUtils}
+     */
+    public SnackbarUtils setBgResource(@DrawableRes final int bgResource) {
+        this.bgResource = bgResource;
+        return this;
+    }
+
+    /**
+     * 设置显示时长
+     *
+     * @param duration 时长
+     *                 <ul>
+     *                 <li>{@link Duration#LENGTH_INDEFINITE}永久</li>
+     *                 <li>{@link Duration#LENGTH_SHORT}短时</li>
+     *                 <li>{@link Duration#LENGTH_LONG}长时</li>
+     *                 </ul>
+     * @return {@link SnackbarUtils}
+     */
+    public SnackbarUtils setDuration(@Duration final int duration) {
+        this.duration = duration;
+        return this;
+    }
+
+    /**
+     * 设置行为
+     *
+     * @param text     文本
+     * @param listener 事件
+     * @return {@link SnackbarUtils}
+     */
+    public SnackbarUtils setAction(@NonNull final CharSequence text, @NonNull final View.OnClickListener listener) {
+        return setAction(text, COLOR_DEFAULT, listener);
+    }
+
+    /**
+     * 设置行为
+     *
+     * @param text     文本
+     * @param color    文本颜色
+     * @param listener 事件
+     * @return {@link SnackbarUtils}
+     */
+
+    public SnackbarUtils setAction(@NonNull final CharSequence text, @ColorInt final int color, @NonNull final View.OnClickListener listener) {
+        this.actionText = text;
+        this.actionTextColor = color;
+        this.actionListener = listener;
+        return this;
+    }
+
+    /**
+     * 设置底边距
+     *
+     * @param bottomMargin 底边距
+     */
+    public SnackbarUtils setBottomMargin(@IntRange(from = 1) final int bottomMargin) {
+        this.bottomMargin = bottomMargin;
+        return this;
+    }
+
+    /**
+     * 显示snackbar
+     */
+    public void show() {
+        final View view = parent;
+        if (view == null) return;
+        if (messageColor != COLOR_DEFAULT) {
+            SpannableString spannableString = new SpannableString(message);
+            ForegroundColorSpan colorSpan = new ForegroundColorSpan(messageColor);
+            spannableString.setSpan(colorSpan, 0, spannableString.length(), Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);
+            snackbarWeakReference = new WeakReference<>(Snackbar.make(view, spannableString, duration));
+        } else {
+            snackbarWeakReference = new WeakReference<>(Snackbar.make(view, message, duration));
+        }
+        final Snackbar snackbar = snackbarWeakReference.get();
+        final View snackbarView = snackbar.getView();
+        if (bgResource != -1) {
+            snackbarView.setBackgroundResource(bgResource);
+        } else if (bgColor != COLOR_DEFAULT) {
+            snackbarView.setBackgroundColor(bgColor);
+        }
+        if (bottomMargin != 0) {
+            ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) snackbarView.getLayoutParams();
+            params.bottomMargin = bottomMargin;
+        }
+        if (actionText.length() > 0 && actionListener != null) {
+            if (actionTextColor != COLOR_DEFAULT) {
+                snackbar.setActionTextColor(actionTextColor);
+            }
+            snackbar.setAction(actionText, actionListener);
+        }
+        snackbar.show();
+    }
+
+    /**
+     * 显示预设成功的snackbar
+     */
+    public void showSuccess() {
+        bgColor = COLOR_SUCCESS;
+        messageColor = COLOR_MESSAGE;
+        actionTextColor = COLOR_MESSAGE;
+        show();
+    }
+
+    /**
+     * 显示预设警告的snackbar
+     */
+    public void showWarning() {
+        bgColor = COLOR_WARNING;
+        messageColor = COLOR_MESSAGE;
+        actionTextColor = COLOR_MESSAGE;
+        show();
+    }
+
+    /**
+     * 显示预设错误的snackbar
+     */
+    public void showError() {
+        bgColor = COLOR_ERROR;
+        messageColor = COLOR_MESSAGE;
+        actionTextColor = COLOR_MESSAGE;
+        show();
+    }
+
+    /**
+     * 消失snackbar
+     */
+    public static void dismiss() {
+        if (snackbarWeakReference != null && snackbarWeakReference.get() != null) {
+            snackbarWeakReference.get().dismiss();
+            snackbarWeakReference = null;
+        }
+    }
+
+    /**
+     * 获取snackbar视图
+     *
+     * @return snackbar视图
+     */
+    public static View getView() {
+        Snackbar snackbar = snackbarWeakReference.get();
+        if (snackbar == null) return null;
+        return snackbar.getView();
+    }
+
+    /**
+     * 添加snackbar视图
+     * <p>在{@link #show()}之后调用</p>
+     *
+     * @param layoutId 布局文件
+     * @param params   布局参数
+     */
+    public static void addView(@LayoutRes final int layoutId, @NonNull final ViewGroup.LayoutParams params) {
+        final View view = getView();
+        if (view != null) {
+            view.setPadding(0, 0, 0, 0);
+            Snackbar.SnackbarLayout layout = (Snackbar.SnackbarLayout) view;
+            View child = LayoutInflater.from(view.getContext()).inflate(layoutId, null);
+            layout.addView(child, -1, params);
+        }
+    }
+
+    /**
+     * 添加snackbar视图
+     * <p>在{@link #show()}之后调用</p>
+     *
+     * @param child  要添加的view
+     * @param params 布局参数
+     */
+    public static void addView(@NonNull final View child, @NonNull final ViewGroup.LayoutParams params) {
+        final View view = getView();
+        if (view != null) {
+            view.setPadding(0, 0, 0, 0);
+            Snackbar.SnackbarLayout layout = (Snackbar.SnackbarLayout) view;
+            layout.addView(child, params);
+        }
+    }
+}
Index: gradlew.bat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- gradlew.bat	(revision )
+++ gradlew.bat	(revision )
@@ -0,0 +1,90 @@
+@if "%DEBUG%" == "" @echo off
+@rem ##########################################################################
+@rem
+@rem  Gradle startup script for Windows
+@rem
+@rem ##########################################################################
+
+@rem Set local scope for the variables with windows NT shell
+if "%OS%"=="Windows_NT" setlocal
+
+@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
+set DEFAULT_JVM_OPTS=
+
+set DIRNAME=%~dp0
+if "%DIRNAME%" == "" set DIRNAME=.
+set APP_BASE_NAME=%~n0
+set APP_HOME=%DIRNAME%
+
+@rem Find java.exe
+if defined JAVA_HOME goto findJavaFromJavaHome
+
+set JAVA_EXE=java.exe
+%JAVA_EXE% -version >NUL 2>&1
+if "%ERRORLEVEL%" == "0" goto init
+
+echo.
+echo ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:findJavaFromJavaHome
+set JAVA_HOME=%JAVA_HOME:"=%
+set JAVA_EXE=%JAVA_HOME%/bin/java.exe
+
+if exist "%JAVA_EXE%" goto init
+
+echo.
+echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%
+echo.
+echo Please set the JAVA_HOME variable in your environment to match the
+echo location of your Java installation.
+
+goto fail
+
+:init
+@rem Get command-line arguments, handling Windowz variants
+
+if not "%OS%" == "Windows_NT" goto win9xME_args
+if "%@eval[2+2]" == "4" goto 4NT_args
+
+:win9xME_args
+@rem Slurp the command line arguments.
+set CMD_LINE_ARGS=
+set _SKIP=2
+
+:win9xME_args_slurp
+if "x%~1" == "x" goto execute
+
+set CMD_LINE_ARGS=%*
+goto execute
+
+:4NT_args
+@rem Get arguments from the 4NT Shell from JP Software
+set CMD_LINE_ARGS=%$
+
+:execute
+@rem Setup the command line
+
+set CLASSPATH=%APP_HOME%\gradle\wrapper\gradle-wrapper.jar
+
+@rem Execute Gradle
+"%JAVA_EXE%" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% "-Dorg.gradle.appname=%APP_BASE_NAME%" -classpath "%CLASSPATH%" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%
+
+:end
+@rem End local scope for the variables with windows NT shell
+if "%ERRORLEVEL%"=="0" goto mainEnd
+
+:fail
+rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of
+rem the _cmd.exe /c_ return code!
+if  not "" == "%GRADLE_EXIT_CONSOLE%" exit 1
+exit /b 1
+
+:mainEnd
+if "%OS%"=="Windows_NT" endlocal
+
+:omega
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision )
+++ app/src/main/AndroidManifest.xml	(revision )
@@ -0,0 +1,68 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    package="com.b3ad.yuxie.myapplication">
+
+    <!-- 添加读写权限 -->
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
+    <!-- 访问互联网权限 -->
+    <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
+    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
+
+    <application
+        android:name=".application.App"
+        android:allowBackup="true"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:supportsRtl="true"
+        android:theme="@style/AppTheme">
+
+        <!-- 横屏:landscape -->
+        <!-- 竖屏:portrait -->
+        <!-- 横屏：setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE); -->
+        <!-- 竖屏：setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT); -->
+        <!-- android:configChanges="orientation|keyboardHidden|screenSize">切换横竖屏,不从新执行生命周期,执行onConfigurationChanged 方法 -->
+        <activity android:name=".activity.MainActivity">
+
+            <!-- android:configChanges="orientation|keyboardHidden|screenSize" -->
+            <!-- android:screenOrientation="portrait"> -->
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <!-- webview使用 -->
+        <activity android:name=".activity.WebViewJsActivity" />
+        <!-- okhttp3使用 -->
+        <activity android:name=".activity.Okhttp3Activity" />
+        <activity android:name=".activity.GlideAndPicassoActivity" />
+        <activity android:name=".activity.ViewActivity" />
+        <activity android:name=".mvp.view.UserActivity" />
+        <activity android:name=".Login.view.LoginActivity" />
+        <activity android:name=".activity.RxjavaActivity" />
+        <activity android:name=".mvvp.MvvpActivity" />
+        <activity android:name=".video.VideoListActivity" />
+        <activity
+            android:name=".video.PlayActivity"
+            android:configChanges="orientation|screenSize"
+            android:hardwareAccelerated="true"
+            android:label="@string/title_activity_play" />
+        <activity android:name=".music.MusicActivity" />
+        <activity android:name=".txt.TxtActivity" />
+        <activity android:name=".txt.ReadTxtActivity" />
+        <activity android:name=".txt.TxtDirActivity" />
+        <activity android:name=".listandrecycler.ListAndRecyclerActivity" />
+        <activity android:name=".listandrecycler.MultiItemListViewActivity" />
+        <activity android:name=".listandrecycler.RecyclerViewActivity" />
+        <activity android:name=".listandrecycler.MultiItemRvActivity" />
+        <activity android:name=".controlpc.RemoteControlActivity" />
+        <activity android:name=".controlpc.ControlActivity" />
+        <activity android:name=".controlpc.PcScreenActivity" />
+        <activity android:name=".activity.SmsApiActivity"></activity>
+    </application>
+
+</manifest>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/recycleview/MultiItemTypeAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/MultiItemTypeAdapter.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/MultiItemTypeAdapter.java	(revision )
@@ -0,0 +1,117 @@
+package com.baselib.recycleview;
+
+import android.content.Context;
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.view.ViewGroup;
+
+import java.util.List;
+
+public class MultiItemTypeAdapter<T> extends RecyclerView.Adapter<ViewHolder> {
+    protected Context mContext;
+    protected List<T> mDatas;
+
+    protected ItemViewDelegateManager mItemViewDelegateManager;
+    protected OnItemClickListener mOnItemClickListener;
+
+
+    public MultiItemTypeAdapter(Context context, List<T> datas) {
+        mContext = context;
+        mDatas = datas;
+        mItemViewDelegateManager = new ItemViewDelegateManager();
+    }
+
+    @Override
+    public int getItemViewType(int position) {
+        if (!useItemViewDelegateManager()) return super.getItemViewType(position);
+        return mItemViewDelegateManager.getItemViewType(mDatas.get(position), position);
+    }
+
+
+    @Override
+    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        ItemViewDelegate itemViewDelegate = mItemViewDelegateManager.getItemViewDelegate(viewType);
+        int layoutId = itemViewDelegate.getItemViewLayoutId();
+        ViewHolder holder = ViewHolder.createViewHolder(mContext, parent, layoutId);
+        onViewHolderCreated(holder,holder.getConvertView());
+        setListener(parent, holder, viewType);
+        return holder;
+    }
+
+    public void onViewHolderCreated(ViewHolder holder,View itemView){
+
+    }
+
+    public void convert(ViewHolder holder, T t) {
+        mItemViewDelegateManager.convert(holder, t, holder.getAdapterPosition());
+    }
+
+    protected boolean isEnabled(int viewType) {
+        return true;
+    }
+
+
+    protected void setListener(final ViewGroup parent, final ViewHolder viewHolder, int viewType) {
+        if (!isEnabled(viewType)) return;
+        viewHolder.getConvertView().setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if (mOnItemClickListener != null) {
+                    int position = viewHolder.getAdapterPosition();
+                    mOnItemClickListener.onItemClick(v, viewHolder , position);
+                }
+            }
+        });
+
+        viewHolder.getConvertView().setOnLongClickListener(new View.OnLongClickListener() {
+            @Override
+            public boolean onLongClick(View v) {
+                if (mOnItemClickListener != null) {
+                    int position = viewHolder.getAdapterPosition();
+                    return mOnItemClickListener.onItemLongClick(v, viewHolder, position);
+                }
+                return false;
+            }
+        });
+    }
+
+    @Override
+    public void onBindViewHolder(ViewHolder holder, int position) {
+        convert(holder, mDatas.get(position));
+    }
+
+    @Override
+    public int getItemCount() {
+        int itemCount = mDatas.size();
+        return itemCount;
+    }
+
+
+    public List<T> getDatas() {
+        return mDatas;
+    }
+
+    public MultiItemTypeAdapter addItemViewDelegate(ItemViewDelegate<T> itemViewDelegate) {
+        mItemViewDelegateManager.addDelegate(itemViewDelegate);
+        return this;
+    }
+
+    public MultiItemTypeAdapter addItemViewDelegate(int viewType, ItemViewDelegate<T> itemViewDelegate) {
+        mItemViewDelegateManager.addDelegate(viewType, itemViewDelegate);
+        return this;
+    }
+
+    protected boolean useItemViewDelegateManager() {
+        return mItemViewDelegateManager.getItemViewDelegateCount() > 0;
+    }
+
+    public interface OnItemClickListener {
+        void onItemClick(View view, RecyclerView.ViewHolder holder, int position);
+
+        boolean onItemLongClick(View view, RecyclerView.ViewHolder holder, int position);
+    }
+
+    public void setOnItemClickListener(OnItemClickListener onItemClickListener) {
+        this.mOnItemClickListener = onItemClickListener;
+    }
+}
Index: app/src/main/res/layout/activity_mvvp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_mvvp.xml	(revision )
+++ app/src/main/res/layout/activity_mvvp.xml	(revision )
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="utf-8"?>
+<layout xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <data>
+
+        <import type="com.b3ad.yuxie.myapplication.mvvp.User" />
+
+        <variable
+            name="user"
+            type="User" />
+
+    </data>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="@{String.valueOf(user.id)}" />
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="@{user.username}" />
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:text="@{user.password}" />
+
+    </LinearLayout>
+
+</layout>
Index: baselib/src/main/res/values-w820dp/dimens.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/values-w820dp/dimens.xml	(revision )
+++ baselib/src/main/res/values-w820dp/dimens.xml	(revision )
@@ -0,0 +1,6 @@
+<resources>
+    <!-- Example customization of dimensions originally defined in res/values/dimens.xml
+         (such as screen margins) for screens with more than 820dp of available width. This
+         would include 7" and 10" devices in landscape (~960dp and ~1280dp respectively). -->
+    <dimen name="activity_horizontal_margin">64dp</dimen>
+</resources>
Index: baselib/src/main/java/com/baselib/utilcode/util/DeviceUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/DeviceUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/DeviceUtils.java	(revision )
@@ -0,0 +1,242 @@
+package com.baselib.utilcode.util;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.content.Intent;
+import android.net.wifi.WifiInfo;
+import android.net.wifi.WifiManager;
+import android.os.Build;
+import android.os.PowerManager;
+import android.provider.Settings;
+
+import java.io.File;
+import java.net.NetworkInterface;
+import java.util.Collections;
+import java.util.List;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/8/1
+ *     desc  : 设备相关工具类
+ * </pre>
+ */
+public final class DeviceUtils {
+
+    private DeviceUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 判断设备是否root
+     *
+     * @return the boolean{@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isDeviceRooted() {
+        String su = "su";
+        String[] locations = {"/system/bin/", "/system/xbin/", "/sbin/", "/system/sd/xbin/", "/system/bin/failsafe/",
+                "/data/local/xbin/", "/data/local/bin/", "/data/local/"};
+        for (String location : locations) {
+            if (new File(location + su).exists()) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 获取设备系统版本号
+     *
+     * @return 设备系统版本号
+     */
+    public static int getSDKVersion() {
+        return Build.VERSION.SDK_INT;
+    }
+
+
+    /**
+     * 获取设备AndroidID
+     *
+     * @return AndroidID
+     */
+    @SuppressLint("HardwareIds")
+    public static String getAndroidID() {
+        return Settings.Secure.getString(Utils.getApp().getContentResolver(), Settings.Secure.ANDROID_ID);
+    }
+
+    /**
+     * 获取设备MAC地址
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>}</p>
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.INTERNET"/>}</p>
+     *
+     * @return MAC地址
+     */
+    public static String getMacAddress() {
+        String macAddress = getMacAddressByWifiInfo();
+        if (!"02:00:00:00:00:00".equals(macAddress)) {
+            return macAddress;
+        }
+        macAddress = getMacAddressByNetworkInterface();
+        if (!"02:00:00:00:00:00".equals(macAddress)) {
+            return macAddress;
+        }
+        macAddress = getMacAddressByFile();
+        if (!"02:00:00:00:00:00".equals(macAddress)) {
+            return macAddress;
+        }
+        return "please open wifi";
+    }
+
+    /**
+     * 获取设备MAC地址
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>}</p>
+     *
+     * @return MAC地址
+     */
+    @SuppressLint("HardwareIds")
+    private static String getMacAddressByWifiInfo() {
+        try {
+            @SuppressLint("WifiManagerLeak")
+            WifiManager wifi = (WifiManager) Utils.getApp().getSystemService(Context.WIFI_SERVICE);
+            if (wifi != null) {
+                WifiInfo info = wifi.getConnectionInfo();
+                if (info != null) return info.getMacAddress();
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return "02:00:00:00:00:00";
+    }
+
+    /**
+     * 获取设备MAC地址
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.INTERNET"/>}</p>
+     *
+     * @return MAC地址
+     */
+    private static String getMacAddressByNetworkInterface() {
+        try {
+            List<NetworkInterface> nis = Collections.list(NetworkInterface.getNetworkInterfaces());
+            for (NetworkInterface ni : nis) {
+                if (!ni.getName().equalsIgnoreCase("wlan0")) continue;
+                byte[] macBytes = ni.getHardwareAddress();
+                if (macBytes != null && macBytes.length > 0) {
+                    StringBuilder res1 = new StringBuilder();
+                    for (byte b : macBytes) {
+                        res1.append(String.format("%02x:", b));
+                    }
+                    return res1.deleteCharAt(res1.length() - 1).toString();
+                }
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return "02:00:00:00:00:00";
+    }
+
+    /**
+     * 获取设备MAC地址
+     *
+     * @return MAC地址
+     */
+    private static String getMacAddressByFile() {
+        ShellUtils.CommandResult result = ShellUtils.execCmd("getprop wifi.interface", false);
+        if (result.result == 0) {
+            String name = result.successMsg;
+            if (name != null) {
+                result = ShellUtils.execCmd("cat /sys/class/net/" + name + "/address", false);
+                if (result.result == 0) {
+                    if (result.successMsg != null) {
+                        return result.successMsg;
+                    }
+                }
+            }
+        }
+        return "02:00:00:00:00:00";
+    }
+
+    /**
+     * 获取设备厂商
+     * <p>如Xiaomi</p>
+     *
+     * @return 设备厂商
+     */
+
+    public static String getManufacturer() {
+        return Build.MANUFACTURER;
+    }
+
+    /**
+     * 获取设备型号
+     * <p>如MI2SC</p>
+     *
+     * @return 设备型号
+     */
+    public static String getModel() {
+        String model = Build.MODEL;
+        if (model != null) {
+            model = model.trim().replaceAll("\\s*", "");
+        } else {
+            model = "";
+        }
+        return model;
+    }
+
+    /**
+     * 关机
+     * <p>需要root权限或者系统权限 {@code <android:sharedUserId="android.uid.system"/>}</p>
+     */
+    public static void shutdown() {
+        ShellUtils.execCmd("reboot -p", true);
+        Intent intent = new Intent("android.intent.action.ACTION_REQUEST_SHUTDOWN");
+        intent.putExtra("android.intent.extra.KEY_CONFIRM", false);
+        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        Utils.getApp().startActivity(intent);
+    }
+
+    /**
+     * 重启
+     * <p>需要root权限或者系统权限 {@code <android:sharedUserId="android.uid.system"/>}</p>
+     *
+     */
+    public static void reboot() {
+        ShellUtils.execCmd("reboot", true);
+        Intent intent = new Intent(Intent.ACTION_REBOOT);
+        intent.putExtra("nowait", 1);
+        intent.putExtra("interval", 1);
+        intent.putExtra("window", 0);
+        Utils.getApp().sendBroadcast(intent);
+    }
+
+    /**
+     * 重启
+     * <p>需系统权限 {@code <android:sharedUserId="android.uid.system"/>}</p>
+     *
+     * @param reason  传递给内核来请求特殊的引导模式，如"recovery"
+     */
+    public static void reboot(final String reason) {
+        PowerManager mPowerManager = (PowerManager) Utils.getApp().getSystemService(Context.POWER_SERVICE);
+        try {
+            mPowerManager.reboot(reason);
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * 重启到recovery
+     * <p>需要root权限</p>
+     */
+    public static void reboot2Recovery() {
+        ShellUtils.execCmd("reboot recovery", true);
+    }
+
+    /**
+     * 重启到bootloader
+     * <p>需要root权限</p>
+     */
+    public static void reboot2Bootloader() {
+        ShellUtils.execCmd("reboot bootloader", true);
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/SolarTerm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/SolarTerm.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/SolarTerm.java	(revision )
@@ -0,0 +1,278 @@
+package com.baselib.ui.widget.mydatepicker;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 农历二十四节气算法
+ * 该算法目前仅对外提供一个接口方法获取某年的节气数据{@link #buildSolarTerm(int)}
+
+ */
+
+public class SolarTerm {
+    private static final double E10[] = {1.75347045673, 0.00000000000, 0.0000000000, 0.03341656456, 4.66925680417, 6283.0758499914, 0.00034894275, 4.62610241759, 12566.1516999828, 0.00003417571, 2.82886579606, 3.5231183490, 0.00003497056, 2.74411800971, 5753.3848848968, 0.00003135896, 3.62767041758, 77713.7714681205, 0.00002676218, 4.41808351397, 7860.4193924392, 0.00002342687, 6.13516237631, 3930.2096962196, 0.00001273166, 2.03709655772, 529.6909650946, 0.00001324292, 0.74246356352, 11506.7697697936, 0.00000901855, 2.04505443513, 26.2983197998, 0.00001199167, 1.10962944315, 1577.3435424478, 0.00000857223, 3.50849156957, 398.1490034082, 0.00000779786, 1.17882652114, 5223.6939198022, 0.00000990250, 5.23268129594, 5884.9268465832, 0.00000753141, 2.53339053818, 5507.5532386674, 0.00000505264, 4.58292563052, 18849.2275499742, 0.00000492379, 4.20506639861, 775.5226113240, 0.00000356655, 2.91954116867, 0.0673103028, 0.00000284125, 1.89869034186, 796.2980068164, 0.00000242810, 0.34481140906, 5486.7778431750, 0.00000317087, 5.84901952218, 11790.6290886588, 0.00000271039, 0.31488607649, 10977.0788046990, 0.00000206160, 4.80646606059, 2544.3144198834, 0.00000205385, 1.86947813692, 5573.1428014331, 0.00000202261, 2.45767795458, 6069.7767545534, 0.00000126184, 1.08302630210, 20.7753954924, 0.00000155516, 0.83306073807, 213.2990954380, 0.00000115132, 0.64544911683, 0.9803210682, 0.00000102851, 0.63599846727, 4694.0029547076, 0.00000101724, 4.26679821365, 7.1135470008, 0.00000099206, 6.20992940258, 2146.1654164752, 0.00000132212, 3.41118275555, 2942.4634232916, 0.00000097607, 0.68101272270, 155.4203994342, 0.00000085128, 1.29870743025, 6275.9623029906, 0.00000074651, 1.75508916159, 5088.6288397668, 0.00000101895, 0.97569221824, 15720.8387848784, 0.00000084711, 3.67080093025, 71430.6956181291, 0.00000073547, 4.67926565481, 801.8209311238, 0.00000073874, 3.50319443167, 3154.6870848956, 0.00000078756, 3.03698313141, 12036.4607348882, 0.00000079637, 1.80791330700, 17260.1546546904, 0.00000085803, 5.98322631256, 161000.6857376741, 0.00000056963, 2.78430398043, 6286.5989683404, 0.00000061148, 1.81839811024, 7084.8967811152, 0.00000069627, 0.83297596966, 9437.7629348870, 0.00000056116, 4.38694880779, 14143.4952424306, 0.00000062449, 3.97763880587, 8827.3902698748, 0.00000051145, 0.28306864501, 5856.4776591154, 0.00000055577, 3.47006009062, 6279.5527316424, 0.00000041036, 5.36817351402, 8429.2412664666, 0.00000051605, 1.33282746983, 1748.0164130670, 0.00000051992, 0.18914945834, 12139.5535091068, 0.00000049000, 0.48735065033, 1194.4470102246, 0.00000039200, 6.16832995016, 10447.3878396044, 0.00000035566, 1.77597314691, 6812.7668150860, 0.00000036770, 6.04133859347, 10213.2855462110, 0.00000036596, 2.56955238628, 1059.3819301892, 0.00000033291, 0.59309499459, 17789.8456197850, 0.00000035954, 1.70876111898, 2352.8661537718};
+
+    private static final double E11[] = {6283.31966747491, 0.00000000000, 0.0000000000, 0.00206058863, 2.67823455584, 6283.0758499914, 0.00004303430, 2.63512650414, 12566.1516999828, 0.00000425264, 1.59046980729, 3.5231183490, 0.00000108977, 2.96618001993, 1577.3435424478, 0.00000093478, 2.59212835365, 18849.2275499742, 0.00000119261, 5.79557487799, 26.2983197998, 0.00000072122, 1.13846158196, 529.6909650946, 0.00000067768, 1.87472304791, 398.1490034082, 0.00000067327, 4.40918235168, 5507.5532386674, 0.00000059027, 2.88797038460, 5223.6939198022, 0.00000055976, 2.17471680261, 155.4203994342, 0.00000045407, 0.39803079805, 796.2980068164, 0.00000036369, 0.46624739835, 775.5226113240, 0.00000028958, 2.64707383882, 7.1135470008, 0.00000019097, 1.84628332577, 5486.7778431750, 0.00000020844, 5.34138275149, 0.9803210682, 0.00000018508, 4.96855124577, 213.2990954380, 0.00000016233, 0.03216483047, 2544.3144198834, 0.00000017293, 2.99116864949, 6275.9623029906};
+
+    private static final double E12[] = {0.00052918870, 0.00000000000, 0.0000000000, 0.00008719837, 1.07209665242, 6283.0758499914, 0.00000309125, 0.86728818832, 12566.1516999828, 0.00000027339, 0.05297871691, 3.5231183490, 0.00000016334, 5.18826691036, 26.2983197998, 0.00000015752, 3.68457889430, 155.4203994342, 0.00000009541, 0.75742297675, 18849.2275499742, 0.00000008937, 2.05705419118, 77713.7714681205, 0.00000006952, 0.82673305410, 775.5226113240, 0.00000005064, 4.66284525271, 1577.3435424478};
+
+    private static final double E13[] = {0.00000289226, 5.84384198723, 6283.0758499914, 0.00000034955, 0.00000000000, 0.0000000000, 0.00000016819, 5.48766912348, 12566.1516999828};
+
+    private static final double E14[] = {0.00000114084, 3.14159265359, 0.0000000000, 0.00000007717, 4.13446589358, 6283.0758499914, 0.00000000765, 3.83803776214, 12566.1516999828};
+
+    private static final double E15[] = {0.00000000878, 3.14159265359, 0.0000000000};
+
+    private static final double E20[] = {0.00000279620, 3.19870156017, 84334.6615813083, 0.00000101643, 5.42248619256, 5507.5532386674, 0.00000080445, 3.88013204458, 5223.6939198022, 0.00000043806, 3.70444689758, 2352.8661537718, 0.00000031933, 4.00026369781, 1577.3435424478, 0.00000022724, 3.98473831560, 1047.7473117547, 0.00000016392, 3.56456119782, 5856.4776591154, 0.00000018141, 4.98367470263, 6283.0758499914, 0.00000014443, 3.70275614914, 9437.7629348870, 0.00000014304, 3.41117857525, 10213.2855462110};
+
+    private static final double E21[] = {0.00000009030, 3.89729061890, 5507.5532386674, 0.00000006177, 1.73038850355, 5223.6939198022};
+
+    private static final double E30[] = {1.00013988799, 0.00000000000, 0.0000000000, 0.01670699626, 3.09846350771, 6283.0758499914, 0.00013956023, 3.05524609620, 12566.1516999828, 0.00003083720, 5.19846674381, 77713.7714681205, 0.00001628461, 1.17387749012, 5753.3848848968, 0.00001575568, 2.84685245825, 7860.4193924392, 0.00000924799, 5.45292234084, 11506.7697697936, 0.00000542444, 4.56409149777, 3930.2096962196};
+
+    private static final double E31[] = {0.00103018608, 1.10748969588, 6283.0758499914, 0.00001721238, 1.06442301418, 12566.1516999828, 0.00000702215, 3.14159265359, 0.0000000000};
+
+    private static final double E32[] = {0.00004359385, 5.78455133738, 6283.0758499914};
+
+    private static final double E33[] = {0.00000144595, 4.27319435148, 6283.0758499914};
+
+    private static final double M10[] = {22639.5858800, 2.3555545723, 8328.6914247251, 1.5231275E-04, 2.5041111E-07, -1.1863391E-09, 4586.4383203, 8.0413790709, 7214.0628654588, -2.1850087E-04, -1.8646419E-07, 8.7760973E-10, 2369.9139357, 10.3969336431, 15542.7542901840, -6.6188121E-05, 6.3946925E-08, -3.0872935E-10, 769.0257187, 4.7111091445, 16657.3828494503, 3.0462550E-04, 5.0082223E-07, -2.3726782E-09, -666.4175399, -0.0431256817, 628.3019552485, -2.6638815E-06, 6.1639211E-10, -5.4439728E-11, -411.5957339, 3.2558104895, 16866.9323152810, -1.2804259E-04, -9.8998954E-09, 4.0433461E-11, 211.6555524, 5.6858244986, -1114.6285592663, -3.7081362E-04, -4.3687530E-07, 2.0639488E-09, 205.4359530, 8.0845047526, 6585.7609102104, -2.1583699E-04, -1.8708058E-07, 9.3204945E-10, 191.9561973, 12.7524882154, 23871.4457149091, 8.6124629E-05, 3.1435804E-07, -1.4950684E-09, 164.7286185, 10.4400593249, 14914.4523349355, -6.3524240E-05, 6.3330532E-08, -2.5428962E-10, -147.3213842, -2.3986802540, -7700.3894694766, -1.5497663E-04, -2.4979472E-07, 1.1318993E-09, -124.9881185, 5.1984668216, 7771.3771450920, -3.3094061E-05, 3.1973462E-08, -1.5436468E-10, -109.3803637, 2.3124288905, 8956.9933799736, 1.4964887E-04, 2.5102751E-07, -1.2407788E-09, 55.1770578, 7.1411231536, -1324.1780250970, 6.1854469E-05, 7.3846820E-08, -3.4916281E-10, -45.0996092, 5.6113650618, 25195.6237400061, 2.4270161E-05, 2.4051122E-07, -1.1459056E-09, 39.5333010, -0.9002559173, -8538.2408905558, 2.8035534E-04, 2.6031101E-07, -1.2267725E-09, 38.4298346, 18.4383127140, 22756.8171556428, -2.8468899E-04, -1.2251727E-07, 5.6888037E-10, 36.1238141, 7.0666637168, 24986.0742741754, 4.5693825E-04, 7.5123334E-07, -3.5590172E-09, 30.7725751, 16.0827581417, 14428.1257309177, -4.3700174E-04, -3.7292838E-07, 1.7552195E-09, -28.3971008, 7.9982533891, 7842.3648207073, -2.2116475E-04, -1.8584780E-07, 8.2317000E-10, -24.3582283, 10.3538079614, 16171.0562454324, -6.8852003E-05, 6.4563317E-08, -3.6316908E-10, -18.5847068, 2.8429122493, -557.3142796331, -1.8540681E-04, -2.1843765E-07, 1.0319744E-09, 17.9544674, 5.1553411398, 8399.6791003405, -3.5757942E-05, 3.2589854E-08, -2.0880440E-10, 14.5302779, 12.7956138971, 23243.1437596606, 8.8788511E-05, 3.1374165E-07, -1.4406287E-09, 14.3796974, 15.1080427876, 32200.1371396342, 2.3843738E-04, 5.6476915E-07, -2.6814075E-09, 14.2514576, -24.0810366320, -2.3011998397, 1.5231275E-04, 2.5041111E-07, -1.1863391E-09, 13.8990596, 20.7938672862, 31085.5085803679, -1.3237624E-04, 1.2789385E-07, -6.1745870E-10, 13.1940636, 3.3302699264, -9443.3199839914, -5.2312637E-04, -6.8728642E-07, 3.2502879E-09, -9.6790568, -4.7542348263, -16029.0808942018, -3.0728938E-04, -5.0020584E-07, 2.3182384E-09, -9.3658635, 11.2971895604, 24080.9951807398, -3.4654346E-04, -1.9636409E-07, 9.1804319E-10, 8.6055318, 5.7289501804, -1742.9305145148, -3.6814974E-04, -4.3749170E-07, 2.1183885E-09, -8.4530982, 7.5540213938, 16100.0685698171, 1.1921869E-04, 2.8238458E-07, -1.3407038E-09, 8.0501724, 10.4831850066, 14286.1503796870, -6.0860358E-05, 6.2714140E-08, -1.9984990E-10, -7.6301553, 4.6679834628, 17285.6848046987, 3.0196162E-04, 5.0143862E-07, -2.4271179E-09, -7.4474952, -0.0862513635, 1256.6039104970, -5.3277630E-06, 1.2327842E-09, -1.0887946E-10, 7.3712011, 8.1276304344, 5957.4589549619, -2.1317311E-04, -1.8769697E-07, 9.8648918E-10, 7.0629900, 0.9591375719, 33.7570471374, -3.0829302E-05, -3.6967043E-08, 1.7385419E-10, -6.3831491, 9.4966777258, 7004.5133996281, 2.1416722E-04, 3.2425793E-07, -1.5355019E-09, -5.7416071, 13.6527441326, 32409.6866054649, -1.9423071E-04, 5.4047029E-08, -2.6829589E-10, 4.3740095, 18.4814383957, 22128.5152003943, -2.8202511E-04, -1.2313366E-07, 6.2332010E-10, -3.9976134, 7.9669196340, 33524.3151647312, 1.7658291E-04, 4.9092233E-07, -2.3322447E-09, -3.2096876, 13.2398458924, 14985.4400105508, -2.5159493E-04, -1.5449073E-07, 7.2324505E-10, -2.9145404, 12.7093625336, 24499.7476701576, 8.3460748E-05, 3.1497443E-07, -1.5495082E-09, 2.7318890, 16.1258838235, 13799.8237756692, -4.3433786E-04, -3.7354477E-07, 1.8096592E-09, -2.5679459, -2.4418059357, -7072.0875142282, -1.5764051E-04, -2.4917833E-07, 1.0774596E-09, -2.5211990, 7.9551277074, 8470.6667759558, -2.2382863E-04, -1.8523141E-07, 7.6873027E-10, 2.4888871, 5.6426988169, -486.3266040178, -3.7347750E-04, -4.3625891E-07, 2.0095091E-09, 2.1460741, 7.1842488353, -1952.4799803455, 6.4518350E-05, 7.3230428E-08, -2.9472308E-10, 1.9777270, 23.1494218585, 39414.2000050930, 1.9936508E-05, 3.7830496E-07, -1.8037978E-09, 1.9336825, 9.4222182890, 33314.7656989005, 6.0925100E-04, 1.0016445E-06, -4.7453563E-09, 1.8707647, 20.8369929680, 30457.2066251194, -1.2971236E-04, 1.2727746E-07, -5.6301898E-10, -1.7529659, 0.4873576771, -8886.0057043583, -3.3771956E-04, -4.6884877E-07, 2.2183135E-09, -1.4371624, 7.0979974718, -695.8760698485, 5.9190587E-05, 7.4463212E-08, -4.0360254E-10, -1.3725701, 1.4552986550, -209.5494658307, 4.3266809E-04, 5.1072212E-07, -2.4131116E-09, 1.2618162, 7.5108957121, 16728.3705250656, 1.1655481E-04, 2.8300097E-07, -1.3951435E-09};
+
+    private static final double M11[] = {1.6768000, -0.0431256817, 628.3019552485, -2.6638815E-06, 6.1639211E-10, -5.4439728E-11, 0.5164200, 11.2260974062, 6585.7609102104, -2.1583699E-04, -1.8708058E-07, 9.3204945E-10, 0.4138300, 13.5816519784, 14914.4523349355, -6.3524240E-05, 6.3330532E-08, -2.5428962E-10, 0.3711500, 5.5402729076, 7700.3894694766, 1.5497663E-04, 2.4979472E-07, -1.1318993E-09, 0.2756000, 2.3124288905, 8956.9933799736, 1.4964887E-04, 2.5102751E-07, -1.2407788E-09, 0.2459863, -25.6198212459, -2.3011998397, 1.5231275E-04, 2.5041111E-07, -1.1863391E-09, 0.0711800, 7.9982533891, 7842.3648207073, -2.2116475E-04, -1.8584780E-07, 8.2317000E-10, 0.0612800, 10.3538079614, 16171.0562454324, -6.8852003E-05, 6.4563317E-08, -3.6316908E-10};
+
+    private static final double M12[] = {0.0048700, -0.0431256817, 628.3019552485, -2.6638815E-06, 6.1639211E-10, -5.4439728E-11, 0.0022800, -27.1705318325, -2.3011998397, 1.5231275E-04, 2.5041111E-07, -1.1863391E-09, 0.0015000, 11.2260974062, 6585.7609102104, -2.1583699E-04, -1.8708058E-07, 9.3204945E-10};
+
+    private static final double M20[] = {18461.2400600, 1.6279052448, 8433.4661576405, -6.4021295E-05, -4.9499477E-09, 2.0216731E-11, 1010.1671484, 3.9834598170, 16762.1575823656, 8.8291456E-05, 2.4546117E-07, -1.1661223E-09, 999.6936555, 0.7276493275, -104.7747329154, 2.1633405E-04, 2.5536106E-07, -1.2065558E-09, 623.6524746, 8.7690283983, 7109.2881325435, -2.1668263E-06, 6.8896872E-08, -3.2894608E-10, 199.4837596, 9.6692843156, 15647.5290230993, -2.8252217E-04, -1.9141414E-07, 8.9782646E-10, 166.5741153, 6.4134738261, -1219.4032921817, -1.5447958E-04, -1.8151424E-07, 8.5739300E-10, 117.2606951, 12.0248388879, 23976.2204478244, -1.3020942E-04, 5.8996977E-08, -2.8851262E-10, 61.9119504, 6.3390143893, 25090.8490070907, 2.4060421E-04, 4.9587228E-07, -2.3524614E-09, 33.3572027, 11.1245829706, 15437.9795572686, 1.5014592E-04, 3.1930799E-07, -1.5152852E-09, 31.7596709, 3.0832038997, 8223.9166918098, 3.6864680E-04, 5.0577218E-07, -2.3928949E-09, 29.5766003, 8.8121540801, 6480.9861772950, 4.9705523E-07, 6.8280480E-08, -2.7450635E-10, 15.5662654, 4.0579192538, -9548.0947169068, -3.0679233E-04, -4.3192536E-07, 2.0437321E-09, 15.1215543, 14.3803934601, 32304.9118725496, 2.2103334E-05, 3.0940809E-07, -1.4748517E-09, -12.0941511, 8.7259027166, 7737.5900877920, -4.8307078E-06, 6.9513264E-08, -3.8338581E-10, 8.8681426, 9.7124099974, 15019.2270678508, -2.7985829E-04, -1.9203053E-07, 9.5226618E-10, 8.0450400, 0.6687636586, 8399.7091105030, -3.3191993E-05, 3.2017096E-08, -1.5363746E-10, 7.9585542, 12.0679645696, 23347.9184925760, -1.2754553E-04, 5.8380585E-08, -2.3407289E-10, 7.4345550, 6.4565995078, -1847.7052474301, -1.5181570E-04, -1.8213063E-07, 9.1183272E-10, -6.7314363, -4.0265854988, -16133.8556271171, -9.0955337E-05, -2.4484477E-07, 1.1116826E-09, 6.5795750, 16.8104074692, 14323.3509980023, -2.2066770E-04, -1.1756732E-07, 5.4866364E-10, -6.4600721, 1.5847795630, 9061.7681128890, -6.6685176E-05, -4.3335556E-09, -3.4222998E-11, -6.2964773, 4.8837157343, 25300.3984729215, -1.9206388E-04, -1.4849843E-08, 6.0650192E-11, -5.6323538, -0.7707750092, 733.0766881638, -2.1899793E-04, -2.5474467E-07, 1.1521161E-09, -5.3683961, 6.8263720663, 16204.8433027325, -9.7115356E-05, 2.7023515E-08, -1.3414795E-10, -5.3112784, 3.9403341353, 17390.4595376141, 8.5627574E-05, 2.4607756E-07, -1.2205621E-09, -5.0759179, 0.6845236457, 523.5272223331, 2.1367016E-04, 2.5597745E-07, -1.2609955E-09, -4.8396143, -1.6710309265, -7805.1642023920, 6.1357413E-05, 5.5663398E-09, -7.4656459E-11, -4.8057401, 3.5705615768, -662.0890125485, 3.0927234E-05, 3.6923410E-08, -1.7458141E-10, 3.9840545, 8.6945689615, 33419.5404318159, 3.9291696E-04, 7.4628340E-07, -3.5388005E-09, 3.6744619, 19.1659620415, 22652.0424227274, -6.8354947E-05, 1.3284380E-07, -6.3767543E-10, 2.9984815, 20.0662179587, 31190.2833132833, -3.4871029E-04, -1.2746721E-07, 5.8909710E-10, 2.7986413, -2.5281611620, -16971.7070481963, 3.4437664E-04, 2.6526096E-07, -1.2469893E-09, 2.4138774, 17.7106633865, 22861.5918885581, -5.0102304E-04, -3.7787833E-07, 1.7754362E-09, 2.1863132, 5.5132179088, -9757.6441827375, 1.2587576E-04, 7.8796768E-08, -3.6937954E-10, 2.1461692, 13.4801375428, 23766.6709819937, 3.0245868E-04, 5.6971910E-07, -2.7016242E-09, 1.7659832, 11.1677086523, 14809.6776020201, 1.5280981E-04, 3.1869159E-07, -1.4608454E-09, -1.6244212, 7.3137297434, 7318.8375983742, -4.3483492E-04, -4.4182525E-07, 2.0841655E-09, 1.5813036, 5.4387584720, 16552.6081165349, 5.2095955E-04, 7.5618329E-07, -3.5792340E-09, 1.5197528, 16.7359480324, 40633.6032972747, 1.7441609E-04, 5.5981921E-07, -2.6611908E-09, 1.5156341, 1.7023646816, -17876.7861416319, -4.5910508E-04, -6.8233647E-07, 3.2300712E-09, 1.5102092, 5.4977296450, 8399.6847301375, -3.3094061E-05, 3.1973462E-08, -1.5436468E-10, -1.3178223, 9.6261586339, 16275.8309783478, -2.8518605E-04, -1.9079775E-07, 8.4338673E-10, -1.2642739, 11.9817132061, 24604.5224030729, -1.3287330E-04, 5.9613369E-08, -3.4295235E-10, 1.1918723, 22.4217725310, 39518.9747380084, -1.9639754E-04, 1.2294390E-07, -5.9724197E-10, 1.1346110, 14.4235191419, 31676.6099173011, 2.4767216E-05, 3.0879170E-07, -1.4204120E-09, 1.0857810, 8.8552797618, 5852.6842220465, 3.1609367E-06, 6.7664088E-08, -2.2006663E-10, -1.0193852, 7.2392703065, 33629.0898976466, -3.9751134E-05, 2.3556127E-07, -1.1256889E-09, -0.8227141, 11.0814572888, 16066.2815125171, 1.4748204E-04, 3.1992438E-07, -1.5697249E-09, 0.8042238, 3.5274358950, -33.7870573000, 2.8263353E-05, 3.7539802E-08, -2.2902113E-10, 0.8025939, 6.7832463846, 16833.1452579809, -9.9779237E-05, 2.7639907E-08, -1.8858767E-10, -0.7931866, -6.3821400710, -24462.5470518423, -2.4326809E-04, -4.9525589E-07, 2.2980217E-09, -0.7910153, 6.3703481443, -591.1013369332, -1.5714346E-04, -1.8089785E-07, 8.0295327E-10, -0.6674056, 9.1819266386, 24533.5347274576, 5.5197395E-05, 2.7743463E-07, -1.3204870E-09, 0.6502226, 4.1010449356, -10176.3966721553, -3.0412845E-04, -4.3254175E-07, 2.0981718E-09, -0.6388131, 6.2958887075, 25719.1509623392, 2.3794032E-04, 4.9648867E-07, -2.4069012E-09};
+
+    private static final double M21[] = {0.0743000, 11.9537467337, 6480.9861772950, 4.9705523E-07, 6.8280480E-08, -2.7450635E-10, 0.0304300, 8.7259027166, 7737.5900877920, -4.8307078E-06, 6.9513264E-08, -3.8338581E-10, 0.0222900, 12.8540026510, 15019.2270678508, -2.7985829E-04, -1.9203053E-07, 9.5226618E-10, 0.0199900, 15.2095572232, 23347.9184925760, -1.2754553E-04, 5.8380585E-08, -2.3407289E-10, 0.0186900, 9.5981921614, -1847.7052474301, -1.5181570E-04, -1.8213063E-07, 9.1183272E-10, 0.0169600, 7.1681781524, 16133.8556271171, 9.0955337E-05, 2.4484477E-07, -1.1116826E-09, 0.0162300, 1.5847795630, 9061.7681128890, -6.6685176E-05, -4.3335556E-09, -3.4222998E-11, 0.0141900, -0.7707750092, 733.0766881638, -2.1899793E-04, -2.5474467E-07, 1.1521161E-09};
+
+    private static final double M30[] = {385000.5290396, 1.5707963268, 0.0000000000, 0.0000000E+00, 0.0000000E+00, 0.0000000E+00, -20905.3551378, 3.9263508990, 8328.6914247251, 1.5231275E-04, 2.5041111E-07, -1.1863391E-09, -3699.1109330, 9.6121753977, 7214.0628654588, -2.1850087E-04, -1.8646419E-07, 8.7760973E-10, -2955.9675626, 11.9677299699, 15542.7542901840, -6.6188121E-05, 6.3946925E-08, -3.0872935E-10, -569.9251264, 6.2819054713, 16657.3828494503, 3.0462550E-04, 5.0082223E-07, -2.3726782E-09, 246.1584797, 7.2566208254, -1114.6285592663, -3.7081362E-04, -4.3687530E-07, 2.0639488E-09, -204.5861179, 12.0108556517, 14914.4523349355, -6.3524240E-05, 6.3330532E-08, -2.5428962E-10, -170.7330791, 14.3232845422, 23871.4457149091, 8.6124629E-05, 3.1435804E-07, -1.4950684E-09, -152.1378118, 9.6553010794, 6585.7609102104, -2.1583699E-04, -1.8708058E-07, 9.3204945E-10, -129.6202242, -0.8278839272, -7700.3894694766, -1.5497663E-04, -2.4979472E-07, 1.1318993E-09, 108.7427014, 6.7692631483, 7771.3771450920, -3.3094061E-05, 3.1973462E-08, -1.5436468E-10, 104.7552944, 3.8832252173, 8956.9933799736, 1.4964887E-04, 2.5102751E-07, -1.2407788E-09, 79.6605685, 0.6705404095, -8538.2408905558, 2.8035534E-04, 2.6031101E-07, -1.2267725E-09, 48.8883284, 1.5276706450, 628.3019552485, -2.6638815E-06, 6.1639211E-10, -5.4439728E-11, -34.7825237, 20.0091090408, 22756.8171556428, -2.8468899E-04, -1.2251727E-07, 5.6888037E-10, 30.8238599, 11.9246042882, 16171.0562454324, -6.8852003E-05, 6.4563317E-08, -3.6316908E-10, 24.2084985, 9.5690497159, 7842.3648207073, -2.2116475E-04, -1.8584780E-07, 8.2317000E-10, -23.2104305, 8.6374600436, 24986.0742741754, 4.5693825E-04, 7.5123334E-07, -3.5590172E-09, -21.6363439, 17.6535544685, 14428.1257309177, -4.3700174E-04, -3.7292838E-07, 1.7552195E-09, -16.6747239, 6.7261374666, 8399.6791003405, -3.5757942E-05, 3.2589854E-08, -2.0880440E-10, 14.4026890, 4.9010662531, -9443.3199839914, -5.2312637E-04, -6.8728642E-07, 3.2502879E-09, -12.8314035, 14.3664102239, 23243.1437596606, 8.8788511E-05, 3.1374165E-07, -1.4406287E-09, -11.6499478, 22.3646636130, 31085.5085803679, -1.3237624E-04, 1.2789385E-07, -6.1745870E-10, -10.4447578, 16.6788391144, 32200.1371396342, 2.3843738E-04, 5.6476915E-07, -2.6814075E-09, 10.3211071, 8.7119194804, -1324.1780250970, 6.1854469E-05, 7.3846820E-08, -3.4916281E-10, 10.0562033, 7.2997465071, -1742.9305145148, -3.6814974E-04, -4.3749170E-07, 2.1183885E-09, -9.8844667, 12.0539813334, 14286.1503796870, -6.0860358E-05, 6.2714140E-08, -1.9984990E-10, 8.7515625, 6.3563649081, -9652.8694498221, -9.0458282E-05, -1.7656429E-07, 8.3717626E-10, -8.3791067, 4.4137085761, -557.3142796331, -1.8540681E-04, -2.1843765E-07, 1.0319744E-09, -7.0026961, -3.1834384995, -16029.0808942018, -3.0728938E-04, -5.0020584E-07, 2.3182384E-09, 6.3220032, 9.1248177206, 16100.0685698171, 1.1921869E-04, 2.8238458E-07, -1.3407038E-09, 5.7508579, 6.2387797896, 17285.6848046987, 3.0196162E-04, 5.0143862E-07, -2.4271179E-09, -4.9501349, 9.6984267611, 5957.4589549619, -2.1317311E-04, -1.8769697E-07, 9.8648918E-10, -4.4211770, 3.0260949818, -209.5494658307, 4.3266809E-04, 5.1072212E-07, -2.4131116E-09, 4.1311145, 11.0674740526, 7004.5133996281, 2.1416722E-04, 3.2425793E-07, -1.5355019E-09, -3.9579827, 20.0522347225, 22128.5152003943, -2.8202511E-04, -1.2313366E-07, 6.2332010E-10, 3.2582371, 14.8106422192, 14985.4400105508, -2.5159493E-04, -1.5449073E-07, 7.2324505E-10, -3.1483020, 4.8266068163, 16866.9323152810, -1.2804259E-04, -9.8998954E-09, 4.0433461E-11, 2.6164092, 14.2801588604, 24499.7476701576, 8.3460748E-05, 3.1497443E-07, -1.5495082E-09, 2.3536310, 9.5259240342, 8470.6667759558, -2.2382863E-04, -1.8523141E-07, 7.6873027E-10, -2.1171283, -0.8710096090, -7072.0875142282, -1.5764051E-04, -2.4917833E-07, 1.0774596E-09, -1.8970368, 17.6966801503, 13799.8237756692, -4.3433786E-04, -3.7354477E-07, 1.8096592E-09, -1.7385258, 2.0581540038, -8886.0057043583, -3.3771956E-04, -4.6884877E-07, 2.2183135E-09, -1.5713944, 22.4077892948, 30457.2066251194, -1.2971236E-04, 1.2727746E-07, -5.6301898E-10, -1.4225541, 24.7202181853, 39414.2000050930, 1.9936508E-05, 3.7830496E-07, -1.8037978E-09, -1.4189284, 17.1661967915, 23314.1314352759, -9.9282182E-05, 9.5920387E-08, -4.6309403E-10, 1.1655364, 3.8400995356, 9585.2953352221, 1.4698499E-04, 2.5164390E-07, -1.2952185E-09, -1.1169371, 10.9930146158, 33314.7656989005, 6.0925100E-04, 1.0016445E-06, -4.7453563E-09, 1.0656723, 1.4845449633, 1256.6039104970, -5.3277630E-06, 1.2327842E-09, -1.0887946E-10, 1.0586190, 11.9220903668, 8364.7398411275, -2.1850087E-04, -1.8646419E-07, 8.7760973E-10, -0.9333176, 9.0816920389, 16728.3705250656, 1.1655481E-04, 2.8300097E-07, -1.3951435E-09, 0.8624328, 12.4550876470, 6656.7485858257, -4.0390768E-04, -4.0490184E-07, 1.9095841E-09, 0.8512404, 4.3705828944, 70.9876756153, -1.8807069E-04, -2.1782126E-07, 9.7753467E-10, -0.8488018, 16.7219647962, 31571.8351843857, 2.4110126E-04, 5.6415276E-07, -2.6269678E-09, -0.7956264, 3.5134526588, -9095.5551701890, 9.4948529E-05, 4.1873358E-08, -1.9479814E-10};
+
+    private static final double M31[] = {0.5139500, 12.0108556517, 14914.4523349355, -6.3524240E-05, 6.3330532E-08, -2.5428962E-10, 0.3824500, 9.6553010794, 6585.7609102104, -2.1583699E-04, -1.8708058E-07, 9.3204945E-10, 0.3265400, 3.9694765808, 7700.3894694766, 1.5497663E-04, 2.4979472E-07, -1.1318993E-09, 0.2639600, 0.7416325637, 8956.9933799736, 1.4964887E-04, 2.5102751E-07, -1.2407788E-09, 0.1230200, -1.6139220085, 628.3019552485, -2.6638815E-06, 6.1639211E-10, -5.4439728E-11, 0.0775400, 8.7830116346, 16171.0562454324, -6.8852003E-05, 6.4563317E-08, -3.6316908E-10, 0.0606800, 6.4274570623, 7842.3648207073, -2.2116475E-04, -1.8584780E-07, 8.2317000E-10, 0.0497000, 12.0539813334, 14286.1503796870, -6.0860358E-05, 6.2714140E-08, -1.9984990E-10};
+
+    private static final double M1n[] = {3.81034392032, 8.39968473021E+03, -3.31919929753E-05, 3.20170955005E-08, -1.53637455544E-10};
+
+    private static final double nutB[] = {2.1824391966, -33.757045954, 0.0000362262, 3.7340E-08, -2.8793E-10, -171996, -1742, 92025, 89, 3.5069406862, 1256.663930738, 0.0000105845, 6.9813E-10, -2.2815E-10, -13187, -16, 5736, -31, 1.3375032491, 16799.418221925, -0.0000511866, 6.4626E-08, -5.3543E-10, -2274, -2, 977, -5, 4.3648783932, -67.514091907, 0.0000724525, 7.4681E-08, -5.7586E-10, 2062, 2, -895, 5, 0.0431251803, -628.301955171, 0.0000026820, 6.5935E-10, 5.5705E-11, -1426, 34, 54, -1, 2.3555557435, 8328.691425719, 0.0001545547, 2.5033E-07, -1.1863E-09, 712, 1, -7, 0, 3.4638155059, 1884.965885909, 0.0000079025, 3.8785E-11, -2.8386E-10, -517, 12, 224, -6, 5.4382493597, 16833.175267879, -0.0000874129, 2.7285E-08, -2.4750E-10, -386, -4, 200, 0, 3.6930589926, 25128.109647645, 0.0001033681, 3.1496E-07, -1.7218E-09, -301, 0, 129, -1, 3.5500658664, 628.361975567, 0.0000132664, 1.3575E-09, -1.7245E-10, 217, -5, -95, 3};
+
+    private static final double GXC_e[] = {0.016708634, -0.000042037, -0.0000001267};
+
+    private static final double rad = 180 * 3600 / Math.PI;
+
+    private static final double RAD = 180 / Math.PI;
+
+    private static final double J2000 = 2451545;
+
+    private static final double preceB[] = {0, 50287.92262, 111.24406, 0.07699, -0.23479, -0.00178, 0.00018, 0.00001};
+
+    private static final double GXC_p[] = {102.93735 / RAD, 1.71946 / RAD, 0.00046 / RAD};
+
+    private static final double GXC_l[] = {280.4664567 / RAD, 36000.76982779 / RAD, 0.0003032028 / RAD, 1 / 49931000 / RAD, -1 / 153000000 / RAD};
+
+    private static final double GXC_k = 20.49552 / rad;
+
+    private static final double[] dts = {-4000, 108371.7, -13036.80, 392.000, 0.0000, -500, 17201.0, -627.82, 16.170, -0.3413, -150, 12200.6, -346.41, 5.403, -0.1593, 150, 9113.8, -328.13, -1.647, 0.0377, 500, 5707.5, -391.41, 0.915, 0.3145, 900, 2203.4, -283.45, 13.034, -0.1778, 1300, 490.1, -57.35, 2.085, -0.0072, 1600, 120.0, -9.81, -1.532, 0.1403, 1700, 10.2, -0.91, 0.510, -0.0370, 1800, 13.4, -0.72, 0.202, -0.0193, 1830, 7.8, -1.81, 0.416, -0.0247, 1860, 8.3, -0.13, -0.406, 0.0292, 1880, -5.4, 0.32, -0.183, 0.0173, 1900, -2.3, 2.06, 0.169, -0.0135, 1920, 21.2, 1.69, -0.304, 0.0167, 1940, 24.2, 1.22, -0.064, 0.0031, 1960, 33.2, 0.51, 0.231, -0.0109, 1980, 51.0, 1.29, -0.026, 0.0032, 2000, 64.7, -1.66, 5.224, -0.2905, 2150, 279.4, 732.95, 429.579, 0.0158, 6000};
+
+    private double EnnT = 0;
+    private double MnnT = 0;
+
+    private double D = 1;
+
+    private class ZD {
+        double Lon;
+        double Obl;
+    }
+
+    /**
+     * 生成某年农历二十四节气数组数据
+     * Create solar term by year.
+     *
+     * @param year 某年
+     * @return ...
+     */
+    String[][] buildSolarTerm(int year) {
+        String[] tmp = new String[24];
+        double jd = 365.2422 * (year - 2000), q;
+        int j;
+        for (int i = 0; i < tmp.length; i++) {
+            j = (i - 5);
+            q = angleCal(jd + j * 15.2, j * 15, 0);
+            q = q + J2000 + (double) 8 / 24;
+            setFromJD(q, true);
+            tmp[i] = String.valueOf((int) D);
+        }
+        return DataUtils.arraysConvert(tmp, 12, 2);
+    }
+
+    private void setFromJD(double jd, boolean UTC) {
+        if (UTC)
+            jd -= this.deltaT2(jd - J2000);
+        jd += 0.5;
+
+        double A = int2(jd);
+        double D;
+
+        if (A > 2299161) {
+            D = int2((A - 1867216.25) / 36524.25);
+            A += 1 + D - int2(D / 4);
+        }
+        A += 1524;
+        double y = int2((A - 122.1) / 365.25);
+        D = A - int2(365.25 * y);
+        double m = int2(D / 30.6001);
+        this.D = D - int2(m * 30.6001);
+        y -= 4716;
+        m--;
+        if (m > 12)
+            m -= 12;
+        if (m <= 2)
+            //noinspection UnusedAssignment
+            y++;
+    }
+
+    private double int2(double v) {
+        v = Math.floor(v);
+        if (v < 0)
+            return v + 1;
+        return v;
+    }
+
+    private double deltaT2(double jd) {
+        return this.deltaT(jd / 365.2425 + 2000) / 86400.0;
+    }
+
+    private double deltaT(double y) {
+        int i;
+        for (i = 0; i < 100; i += 5)
+            if (y < dts[i + 5] || i == 95)
+                break;
+        double t1 = (y - dts[i]) / (dts[i + 5] - dts[i]) * 10;
+        double t2 = t1 * t1;
+        double t3 = t2 * t1;
+        return dts[i + 1] + dts[i + 2] * t1 + dts[i + 3] * t2 + dts[i + 4] * t3;
+    }
+
+    private double angleCal(double t1, double jiao, int lx) {
+        double t2 = t1, t = 0, v;
+        if (lx == 0)
+            t2 += 360;
+        else
+            t2 += 25;
+        jiao *= Math.PI / 180;
+        double v1 = jiaoCai(lx, t1, jiao);
+        double v2 = jiaoCai(lx, t2, jiao);
+        if (v1 < v2)
+            v2 -= 2 * Math.PI;
+        double k = 1, k2;
+        for (int i = 0; i < 10; i++) {
+            k2 = (v2 - v1) / (t2 - t1);
+            if (Math.abs(k2) > 1e-15)
+                k = k2;
+            t = t1 - v1 / k;
+            v = jiaoCai(lx, t, jiao);
+            if (v > 1)
+                v -= 2 * Math.PI;
+            if (Math.abs(v) < 1e-8)
+                break;
+            t1 = t2;
+            v1 = v2;
+            t2 = t;
+            v2 = v;
+        }
+        return t;
+    }
+
+    private double jiaoCai(int lx, double t, double jiao) {
+        double[] sun = earCal(t);
+        sun[0] += Math.PI;
+        sun[1] = -sun[1];
+        addGxc(t, sun);
+        if (lx == 0) {
+            ZD d = nutation(t);
+            sun[0] += d.Lon;
+            return rad2mrad(jiao - sun[0]);
+        }
+        double[] moon = moonCal(t);
+        return rad2mrad(jiao - (moon[0] - sun[0]));
+    }
+
+    private double[] moonCal(double jd) {
+        MnnT = jd / 36525;
+        double t1 = MnnT, t2 = t1 * t1, t3 = t2 * t1, t4 = t3 * t1;
+        double[] llr = new double[3];
+        llr[0] = (Mnn(M10) + Mnn(M11) * t1 + Mnn(M12) * t2) / rad;
+        llr[1] = (Mnn(M20) + Mnn(M21) * t1) / rad;
+        llr[2] = (Mnn(M30) + Mnn(M31) * t1) * 0.999999949827;
+        llr[0] = llr[0] + M1n[0] + M1n[1] * t1 + M1n[2] * t2 + M1n[3] * t3 + M1n[4] * t4;
+        llr[0] = rad2mrad(llr[0]);
+        addPrece(jd, llr);
+        return llr;
+    }
+
+    private void addPrece(double jd, double[] zb) {
+        int i;
+        double t = 1, v = 0, t1 = jd / 365250;
+        for (i = 1; i < 8; i++) {
+            t *= t1;
+            v += preceB[i] * t;
+        }
+        zb[0] = rad2mrad(zb[0] + (v + 2.9965 * t1) / rad);
+    }
+
+    private double Mnn(double[] F) {
+        double v = 0, t1 = MnnT, t2 = t1 * t1, t3 = t2 * t1, t4 = t3 * t1;
+        for (int i = 0; i < F.length; i += 6)
+            v += F[i] * Math.sin(F[i + 1] + t1 * F[i + 2] + t2 * F[i + 3] + t3 * F[i + 4] + t4 * F[i + 5]);
+        return v;
+    }
+
+    private ZD nutation(double t) {
+        ZD d = new ZD();
+        d.Lon = 0;
+        d.Obl = 0;
+        t /= 36525;
+        double c, t1 = t, t2 = t1 * t1, t3 = t2 * t1, t4 = t3 * t1;
+        for (int i = 0; i < nutB.length; i += 9) {
+            c = nutB[i] + nutB[i + 1] * t1 + nutB[i + 2] * t2 + nutB[i + 3] * t3 + nutB[i + 4] * t4;
+            d.Lon += (nutB[i + 5] + nutB[i + 6] * t / 10) * Math.sin(c);
+            d.Obl += (nutB[i + 7] + nutB[i + 8] * t / 10) * Math.cos(c);
+        }
+        d.Lon /= rad * 10000;
+        d.Obl /= rad * 10000;
+        return d;
+    }
+
+    private void addGxc(double t, double[] zb) {
+        double t1 = t / 36525;
+        double t2 = t1 * t1;
+        double t3 = t2 * t1;
+        double t4 = t3 * t1;
+        double L = GXC_l[0] + GXC_l[1] * t1 + GXC_l[2] * t2 + GXC_l[3] * t3 + GXC_l[4] * t4;
+        double p = GXC_p[0] + GXC_p[1] * t1 + GXC_p[2] * t2;
+        double e = GXC_e[0] + GXC_e[1] * t1 + GXC_e[2] * t2;
+        double dL = L - zb[0], dP = p - zb[0];
+        zb[0] -= GXC_k * (Math.cos(dL) - e * Math.cos(dP)) / Math.cos(zb[1]);
+        zb[1] -= GXC_k * Math.sin(zb[1]) * (Math.sin(dL) - e * Math.sin(dP));
+        zb[0] = rad2mrad(zb[0]);
+    }
+
+    private double[] earCal(double jd) {
+        EnnT = jd / 365250;
+        double llr[] = new double[3];
+        double t1 = EnnT, t2 = t1 * t1, t3 = t2 * t1, t4 = t3 * t1, t5 = t4 * t1;
+        llr[0] = Enn(E10) + Enn(E11) * t1 + Enn(E12) * t2 + Enn(E13) * t3 + Enn(E14) * t4 + Enn(E15) * t5;
+        llr[1] = Enn(E20) + Enn(E21) * t1;
+        llr[2] = Enn(E30) + Enn(E31) * t1 + Enn(E32) * t2 + Enn(E33) * t3;
+        llr[0] = rad2mrad(llr[0]);
+        return llr;
+    }
+
+    private double rad2mrad(double v) {
+        v = v % (2 * Math.PI);
+        if (v < 0)
+            return v + 2 * Math.PI;
+        return v;
+    }
+
+    private double Enn(double[] F) {
+        double v = 0;
+        for (int i = 0; i < F.length; i += 3)
+            v += F[i] * Math.cos(F[i + 1] + EnnT * F[i + 2]);
+        return v;
+    }
+}
Index: app/src/main/res/drawable/pg.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/pg.xml	(revision )
+++ app/src/main/res/drawable/pg.xml	(revision )
@@ -0,0 +1,26 @@
+<layer-list xmlns:android="http://schemas.android.com/apk/res/android" >
+
+    <item android:id="@android:id/background">
+        <shape>
+            <corners android:radius="2dp" />
+            <gradient
+                android:angle="270"
+                android:centerColor="#E3E3E3"
+                android:endColor="#E6E6E6"
+                android:startColor="#C8C8C8" />
+        </shape>
+    </item>
+    <item android:id="@android:id/progress">
+        <clip>
+            <shape>
+                <corners android:radius="2dp" />
+                <gradient
+                    android:centerColor="#4AEA2F"
+                    android:endColor="#31CE15"
+                    android:startColor="#5FEC46" />
+
+            </shape>
+        </clip>
+    </item>
+
+</layer-list>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/baserx/RxSubscriber.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baserx/RxSubscriber.java	(revision )
+++ baselib/src/main/java/com/baselib/baserx/RxSubscriber.java	(revision )
@@ -0,0 +1,128 @@
+package com.baselib.baserx;
+
+import android.app.Activity;
+import android.content.Context;
+import android.text.TextUtils;
+
+import com.baselib.R;
+import com.baselib.baseapp.BaseApplication;
+import com.baselib.basebean.StudentEvent;
+import com.baselib.commonutils.LogUtils;
+import com.baselib.commonutils.NetWorkUtils;
+import com.baselib.enums.StudentEnum;
+import com.baselib.ui.widget.LoadingDialog;
+
+import java.net.SocketTimeoutException;
+
+import rx.Subscriber;
+
+/**
+ * 作者: liuhuaqian on 2017/9/8.
+ * 订阅封装
+ */
+
+public abstract class RxSubscriber<T> extends Subscriber<T> {
+
+    private Context mContext;
+    private String msg;
+    private boolean showDialog = true;
+
+    /**
+     * 是否显示浮动dialog
+     */
+    public void showDialog() {
+        this.showDialog = true;
+    }
+
+    public void hideDialog() {
+        this.showDialog = false;
+    }
+
+    public RxSubscriber(Context context, String msg, boolean showDialog) {
+        this.mContext = context;
+        this.msg = msg;
+        this.showDialog = showDialog;
+    }
+
+    public RxSubscriber(Context context) {
+        this(context, BaseApplication.getAppContext().getString(R.string.loading), true);
+    }
+
+    public RxSubscriber(Context context, boolean showDialog) {
+        this(context, BaseApplication.getAppContext().getString(R.string.loading), showDialog);
+    }
+
+    @Override
+    public void onCompleted() {
+        if (showDialog)
+            LoadingDialog.cancelDialogForLoading();
+    }
+
+    @Override
+    public void onStart() {
+        super.onStart();
+        if (showDialog) {
+            try {
+                LoadingDialog.showDialogForLoading((Activity) mContext, msg, true);
+            } catch (Exception e) {
+                //e.printStackTrace();
+            }
+        }
+    }
+
+
+    @Override
+    public void onNext(T t) {
+        if (showDialog) {
+            LoadingDialog.cancelDialogForLoading();
+        }
+        LogUtils.loge(t.toString());
+        _onNext(t);
+    }
+
+    @Override
+    public void onError(Throwable e) {
+        if (showDialog) {
+            LoadingDialog.cancelDialogForLoading();
+        }
+//        e.printStackTrace();
+        //网络
+        if (!NetWorkUtils.isNetConnected(BaseApplication.getAppContext())) {
+            _onError(BaseApplication.getAppContext().getString(R.string.no_net));
+        } else if (e instanceof ServerException) {//服务器
+            _onError("服务器异常,请稍后再试!");
+        } else if (e instanceof SocketTimeoutException) {
+            _onError("请求超时,请稍后再试!");
+        } else if (e instanceof ResultException) {
+            ResultException err = (ResultException) e;
+
+            if (TextUtils.isEmpty(err.getErrMsg())) {
+                err.setErrMsg("");
+            }
+            if ("Index: 0, Size: 0".equals(err.getErrMsg())) {
+                err.setErrMsg("");
+            }
+
+            if (err.isErrCode()) {
+                if ("400003".equals(err.getErrMsg())) {
+                    RxBus.getInstance().post(new StudentEvent<>(StudentEnum.TOKEN, "400003"));
+                } else {
+                    _onError(err.getErrMsg());
+                }
+            } else {
+                _onData(err.getErrMsg());
+            }
+        } else { //其它
+            _onError("网络访问错误,请稍后再试!");
+            if (e != null)
+                LogUtils.logi("其它错误:" + e.getMessage());
+        }
+    }
+
+    protected abstract void _onNext(T t);
+
+    protected abstract void _onData(String message);
+
+    protected abstract void _onError(String message);
+
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/utilcode/util/SizeUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/SizeUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/SizeUtils.java	(revision )
@@ -0,0 +1,172 @@
+package com.baselib.utilcode.util;
+
+import android.util.DisplayMetrics;
+import android.util.TypedValue;
+import android.view.View;
+import android.view.ViewGroup;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/02
+ *     desc  : 尺寸相关工具类
+ * </pre>
+ */
+public final class SizeUtils {
+
+    private SizeUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * dp转px
+     *
+     * @param dpValue dp值
+     * @return px值
+     */
+    public static int dp2px(final float dpValue) {
+        final float scale = Utils.getApp().getResources().getDisplayMetrics().density;
+        return (int) (dpValue * scale + 0.5f);
+    }
+
+    /**
+     * px转dp
+     *
+     * @param pxValue px值
+     * @return dp值
+     */
+    public static int px2dp(final float pxValue) {
+        final float scale = Utils.getApp().getResources().getDisplayMetrics().density;
+        return (int) (pxValue / scale + 0.5f);
+    }
+
+    /**
+     * sp转px
+     *
+     * @param spValue sp值
+     * @return px值
+     */
+    public static int sp2px(final float spValue) {
+        final float fontScale = Utils.getApp().getResources().getDisplayMetrics().scaledDensity;
+        return (int) (spValue * fontScale + 0.5f);
+    }
+
+    /**
+     * px转sp
+     *
+     * @param pxValue px值
+     * @return sp值
+     */
+    public static int px2sp(final float pxValue) {
+        final float fontScale = Utils.getApp().getResources().getDisplayMetrics().scaledDensity;
+        return (int) (pxValue / fontScale + 0.5f);
+    }
+
+    /**
+     * 各种单位转换
+     * <p>该方法存在于TypedValue</p>
+     *
+     * @param unit    单位
+     * @param value   值
+     * @param metrics DisplayMetrics
+     * @return 转换结果
+     */
+    public static float applyDimension(final int unit, final float value, final DisplayMetrics metrics) {
+        switch (unit) {
+            case TypedValue.COMPLEX_UNIT_PX:
+                return value;
+            case TypedValue.COMPLEX_UNIT_DIP:
+                return value * metrics.density;
+            case TypedValue.COMPLEX_UNIT_SP:
+                return value * metrics.scaledDensity;
+            case TypedValue.COMPLEX_UNIT_PT:
+                return value * metrics.xdpi * (1.0f / 72);
+            case TypedValue.COMPLEX_UNIT_IN:
+                return value * metrics.xdpi;
+            case TypedValue.COMPLEX_UNIT_MM:
+                return value * metrics.xdpi * (1.0f / 25.4f);
+        }
+        return 0;
+    }
+
+    /**
+     * 在onCreate中获取视图的尺寸
+     * <p>需回调onGetSizeListener接口，在onGetSize中获取view宽高</p>
+     * <p>用法示例如下所示</p>
+     * <pre>
+     * SizeUtils.forceGetViewSize(view, new SizeUtils.onGetSizeListener() {
+     *     Override
+     *     public void onGetSize(final View view) {
+     *         view.getWidth();
+     *     }
+     * });
+     * </pre>
+     *
+     * @param view     视图
+     * @param listener 监听器
+     */
+    public static void forceGetViewSize(final View view, final onGetSizeListener listener) {
+        view.post(new Runnable() {
+            @Override
+            public void run() {
+                if (listener != null) {
+                    listener.onGetSize(view);
+                }
+            }
+        });
+    }
+
+    /**
+     * 获取到View尺寸的监听
+     */
+    public interface onGetSizeListener {
+        void onGetSize(View view);
+    }
+
+    /**
+     * 测量视图尺寸
+     *
+     * @param view 视图
+     * @return arr[0]: 视图宽度, arr[1]: 视图高度
+     */
+    public static int[] measureView(final View view) {
+        ViewGroup.LayoutParams lp = view.getLayoutParams();
+        if (lp == null) {
+            lp = new ViewGroup.LayoutParams(
+                    ViewGroup.LayoutParams.MATCH_PARENT,
+                    ViewGroup.LayoutParams.WRAP_CONTENT
+            );
+        }
+        int widthSpec = ViewGroup.getChildMeasureSpec(0, 0, lp.width);
+        int lpHeight = lp.height;
+        int heightSpec;
+        if (lpHeight > 0) {
+            heightSpec = View.MeasureSpec.makeMeasureSpec(lpHeight, View.MeasureSpec.EXACTLY);
+        } else {
+            heightSpec = View.MeasureSpec.makeMeasureSpec(0, View.MeasureSpec.UNSPECIFIED);
+        }
+        view.measure(widthSpec, heightSpec);
+        return new int[]{view.getMeasuredWidth(), view.getMeasuredHeight()};
+    }
+
+    /**
+     * 获取测量视图宽度
+     *
+     * @param view 视图
+     * @return 视图宽度
+     */
+    public static int getMeasuredWidth(final View view) {
+        return measureView(view)[0];
+    }
+
+    /**
+     * 获取测量视图高度
+     *
+     * @param view 视图
+     * @return 视图高度
+     */
+    public static int getMeasuredHeight(final View view) {
+        return measureView(view)[1];
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/permission/PermissionManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/permission/PermissionManager.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/permission/PermissionManager.java	(revision )
@@ -0,0 +1,153 @@
+package com.baselib.takephoto.permission;
+
+import android.Manifest;
+import android.app.Activity;
+import android.content.pm.PackageManager;
+import android.support.annotation.NonNull;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.content.ContextCompat;
+import android.text.TextUtils;
+import android.widget.Toast;
+
+import com.baselib.R;
+import com.baselib.takephoto.app.TakePhoto;
+import com.baselib.takephoto.model.InvokeParam;
+import com.baselib.takephoto.model.TContextWrap;
+import com.baselib.takephoto.uitl.TConstant;
+import java.lang.reflect.Method;
+import java.util.ArrayList;
+
+/**
+ * Created by penn on 16/9/22.
+ */
+public class PermissionManager {
+    public enum TPermission {
+        STORAGE(Manifest.permission.WRITE_EXTERNAL_STORAGE),
+        CAMERA(Manifest.permission.CAMERA);
+        String stringValue;
+
+        TPermission(String stringValue) {
+            this.stringValue = stringValue;
+        }
+
+        public String stringValue() {
+            return stringValue;
+        }
+    }
+
+    public enum TPermissionType {
+        GRANTED("已授权"),
+        DENIED("未授权"),
+        WAIT("等待授权"),
+        NOT_NEED("无需授权"),
+        ONLY_CAMERA_DENIED("没有拍照权限"),
+        ONLY_STORAGE_DENIED("没有读写SD卡权限");
+        String stringValue;
+
+        TPermissionType(String stringValue) {
+            this.stringValue = stringValue;
+        }
+
+        public String stringValue() {
+            return stringValue;
+        }
+    }
+    private final static String []methodNames={
+            "onPickFromCapture",
+            "onPickFromCaptureWithCrop",
+            "onPickMultiple",
+            "onPickMultipleWithCrop",
+            "onPickFromDocuments",
+            "onPickFromDocumentsWithCrop",
+            "onPickFromGallery",
+            "onPickFromGalleryWithCrop",
+            "onCrop"
+    };
+    /**
+     * 检查当前应用是否被授予相应权限
+     *
+     * @param contextWrap
+     * @param method
+     * @return
+     */
+    public static TPermissionType checkPermission(@NonNull TContextWrap contextWrap, @NonNull Method method) {
+        String methodName = method.getName();
+        boolean contain=false;
+        for(int i=0,j=methodNames.length;i<j;i++){
+            if(TextUtils.equals(methodName,methodNames[i])){
+                contain=true;
+                break;
+            }
+        }
+        if(!contain)return TPermissionType.NOT_NEED;
+
+        boolean cameraGranted = true, storageGranted = ContextCompat.checkSelfPermission(contextWrap.getActivity(), TPermission.STORAGE.stringValue()) == PackageManager.PERMISSION_GRANTED ? true : false;
+
+        if (TextUtils.equals(methodName, "onPickFromCapture") || TextUtils.equals(methodName, "onPickFromCaptureWithCrop")) {
+            cameraGranted = ContextCompat.checkSelfPermission(contextWrap.getActivity(), TPermission.CAMERA.stringValue()) == PackageManager.PERMISSION_GRANTED ? true : false;
+        }
+
+        boolean granted = storageGranted && cameraGranted;
+        if (!granted) {
+            ArrayList<String> permissions = new ArrayList<>();
+            if (!storageGranted) permissions.add(TPermission.STORAGE.stringValue());
+            if (!cameraGranted) permissions.add(TPermission.CAMERA.stringValue());
+            requestPermission(contextWrap,permissions.toArray(new String[permissions.size()]));
+        }
+        return granted ? TPermissionType.GRANTED : TPermissionType.WAIT;
+    }
+
+    public static void requestPermission(@NonNull TContextWrap contextWrap, @NonNull String[] permissions) {
+        if(contextWrap.getFragment()!=null){
+            contextWrap.getFragment().requestPermissions(permissions, TConstant.PERMISSION_REQUEST_TAKE_PHOTO);
+        }else{
+            ActivityCompat.requestPermissions(contextWrap.getActivity(), permissions, TConstant.PERMISSION_REQUEST_TAKE_PHOTO);
+        }
+    }
+
+    public static TPermissionType onRequestPermissionsResult(int requestCode, String[] permissions, int[] grantResults) {
+        if (requestCode == TConstant.PERMISSION_REQUEST_TAKE_PHOTO) {
+            boolean cameraGranted = true, storageGranted = true;
+            for (int i = 0, j = permissions.length; i < j; i++) {
+                if (grantResults[i] != PackageManager.PERMISSION_GRANTED) {
+                    if (TextUtils.equals(TPermission.STORAGE.stringValue(),permissions[i])) {
+                        storageGranted = false;
+                    } else if (TextUtils.equals(TPermission.CAMERA.stringValue(),permissions[i])) {
+                        cameraGranted = false;
+                    }
+                }
+            }
+            if (cameraGranted && storageGranted) return TPermissionType.GRANTED;
+            if (!cameraGranted && storageGranted) return TPermissionType.ONLY_CAMERA_DENIED;
+            if (!storageGranted && cameraGranted) return TPermissionType.ONLY_STORAGE_DENIED;
+            if(!storageGranted&&!cameraGranted)return TPermissionType.DENIED;
+        }
+        return TPermissionType.WAIT;
+    }
+    public static void handlePermissionsResult(Activity activity, TPermissionType type, InvokeParam invokeParam, TakePhoto.TakeResultListener listener){
+                String tip=null;
+                switch (type){
+                    case DENIED:
+                        listener.takeFail(null,tip=activity.getResources().getString(R.string.tip_permission_camera_storage));
+                        break;
+                    case ONLY_CAMERA_DENIED:
+                        listener.takeFail(null,tip=activity.getResources().getString(R.string.tip_permission_camera));
+                        break;
+                    case ONLY_STORAGE_DENIED:
+                        listener.takeFail(null,tip=activity.getResources().getString(R.string.tip_permission_storage));
+                        break;
+                    case GRANTED:
+                        try {
+                            invokeParam.getMethod().invoke(invokeParam.getProxy(),invokeParam.getArgs());
+                        } catch (Exception e) {
+                            e.printStackTrace();
+                            listener.takeFail(null,tip=activity.getResources().getString(R.string.tip_permission_camera_storage));
+                        }
+                        break;
+            default:
+                break;
+        }
+        if(tip!=null)Toast.makeText(activity,tip,Toast.LENGTH_LONG).show();
+
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCManager.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCManager.java	(revision )
@@ -0,0 +1,243 @@
+package com.baselib.ui.widget.mydatepicker;
+
+import android.text.TextUtils;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Locale;
+import java.util.Set;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 日期管理器
+ */
+
+public class DPCManager {
+    private static final HashMap<Integer, HashMap<Integer, DPInfo[][]>> DATE_CACHE = new HashMap<>();
+
+    private static final HashMap<String, Set<String>> DECOR_CACHE_BG = new HashMap<>();
+    private static final HashMap<String, Set<String>> DECOR_CACHE_TL = new HashMap<>();
+    private static final HashMap<String, Set<String>> DECOR_CACHE_T = new HashMap<>();
+    private static final HashMap<String, Set<String>> DECOR_CACHE_TR = new HashMap<>();
+    private static final HashMap<String, Set<String>> DECOR_CACHE_L = new HashMap<>();
+    private static final HashMap<String, Set<String>> DECOR_CACHE_R = new HashMap<>();
+
+
+    private List<String> selDateList = new ArrayList<String>(); //选中的日期只有几号
+
+    public List<String> getSelDateList() {
+        return selDateList;
+    }
+
+
+    private static DPCManager sManager;
+
+    private DPCalendar c;
+
+    private DPCManager() {
+        // 默认显示为中文日历
+        String locale = Locale.getDefault().getCountry().toLowerCase();
+        if (locale.equals("cn")) {
+            initCalendar(new DPCNCalendar());
+        } else {
+            initCalendar(new DPUSCalendar());
+        }
+    }
+
+    /**
+     * 获取月历管理器
+     * Get calendar manager
+     *
+     * @return 月历管理器
+     */
+    public static DPCManager getInstance() {
+        if (null == sManager) {
+            sManager = new DPCManager();
+        }
+        return sManager;
+    }
+
+    /**
+     * 初始化日历对象
+     * <p/>
+     * Initialization Calendar
+     *
+     * @param c ...
+     */
+    public void initCalendar(DPCalendar c) {
+        this.c = c;
+    }
+
+    /**
+     * 设置有背景标识物的日期
+     * <p/>
+     * Set date which has decor of background
+     *
+     * @param date 日期列表 List of date
+     */
+    public void setDecorBG(List<String> date) {
+        setDecor(date, DECOR_CACHE_BG);
+    }
+
+    /**
+     * 设置左上角有标识物的日期
+     * <p/>
+     * Set date which has decor on Top left
+     *
+     * @param date 日期列表 List of date
+     */
+    public void setDecorTL(List<String> date) {
+        setDecor(date, DECOR_CACHE_TL);
+    }
+
+    /**
+     * 设置顶部有标识物的日期
+     * <p/>
+     * Set date which has decor on Top
+     *
+     * @param date 日期列表 List of date
+     */
+    public void setDecorT(List<String> date) {
+        setDecor(date, DECOR_CACHE_T);
+    }
+
+    /**
+     * 设置右上角有标识物的日期
+     * <p/>
+     * Set date which has decor on Top right
+     *
+     * @param date 日期列表 List of date
+     */
+    public void setDecorTR(List<String> date) {
+        setDecor(date, DECOR_CACHE_TR);
+    }
+
+    /**
+     * 设置左边有标识物的日期
+     * <p/>
+     * Set date which has decor on left
+     *
+     * @param date 日期列表 List of date
+     */
+    public void setDecorL(List<String> date) {
+        setDecor(date, DECOR_CACHE_L);
+    }
+
+    /**
+     * 设置右上角有标识物的日期
+     * <p/>
+     * Set date which has decor on right
+     *
+     * @param date 日期列表 List of date
+     */
+    public void setDecorR(List<String> date) {
+        setDecor(date, DECOR_CACHE_R);
+    }
+
+    /**
+     * 获取指定年月的日历对象数组
+     *
+     * @param year  公历年
+     * @param month 公历月
+     * @return 日历对象数组 该数组长度恒为6x7 如果某个下标对应无数据则填充为null
+     */
+    public DPInfo[][] obtainDPInfo(int year, int month) {
+        HashMap<Integer, DPInfo[][]> dataOfYear = DATE_CACHE.get(year);
+        if (null != dataOfYear && dataOfYear.size() != 0) {
+            DPInfo[][] dataOfMonth = dataOfYear.get(month);
+            if (dataOfMonth != null) {
+                return dataOfMonth;
+            }
+            dataOfMonth = buildDPInfo(year, month);
+            dataOfYear.put(month, dataOfMonth);
+            return dataOfMonth;
+        }
+        if (null == dataOfYear) dataOfYear = new HashMap<>();
+        DPInfo[][] dataOfMonth = buildDPInfo(year, month);
+        dataOfYear.put((month), dataOfMonth);
+        DATE_CACHE.put(year, dataOfYear);
+        return dataOfMonth;
+    }
+
+    private void setDecor(List<String> date, HashMap<String, Set<String>> cache) {
+        for (String str : date) {
+            int index = str.lastIndexOf("-");
+            String key = str.substring(0, index).replace("-", ":");
+            Set<String> days = cache.get(key);
+            if (null == days) {
+                days = new HashSet<>();
+            }
+            days.add(str.substring(index + 1, str.length()));
+            cache.put(key, days);
+
+            String tempStr = str.substring(index + 1, str.length());
+
+            selDateList.add(tempStr);
+        }
+    }
+
+    private DPInfo[][] buildDPInfo(int year, int month) {
+        DPInfo[][] info = new DPInfo[6][7];
+
+        String[][] strG = c.buildMonthG(year, month);
+        String[][] strF = c.buildMonthFestival(year, month);
+
+        Set<String> strHoliday = c.buildMonthHoliday(year, month);
+        Set<String> strWeekend = c.buildMonthWeekend(year, month);
+
+        Set<String> decorBG = DECOR_CACHE_BG.get(year + ":" + month);
+        Set<String> decorTL = DECOR_CACHE_TL.get(year + ":" + month);
+        Set<String> decorT = DECOR_CACHE_T.get(year + ":" + month);
+        Set<String> decorTR = DECOR_CACHE_TR.get(year + ":" + month);
+        Set<String> decorL = DECOR_CACHE_L.get(year + ":" + month);
+        Set<String> decorR = DECOR_CACHE_R.get(year + ":" + month);
+        for (int i = 0; i < info.length; i++) {
+            for (int j = 0; j < info[i].length; j++) {
+                DPInfo tmp = new DPInfo();
+                tmp.strG = strG[i][j];
+                if (c instanceof DPCNCalendar) {
+                    tmp.strF = strF[i][j].replace("F", "");
+                } else {
+                    tmp.strF = strF[i][j];
+                }
+                if (!TextUtils.isEmpty(tmp.strG) && strHoliday.contains(tmp.strG))
+                    tmp.isHoliday = true;
+                if (!TextUtils.isEmpty(tmp.strG)) tmp.isToday =
+                        c.isToday(year, month, Integer.valueOf(tmp.strG));
+                if (strWeekend.contains(tmp.strG)) tmp.isWeekend = true;
+                if (c instanceof DPCNCalendar) {
+                    if (!TextUtils.isEmpty(tmp.strG)) tmp.isSolarTerms =
+                            ((DPCNCalendar) c).isSolarTerm(year, month, Integer.valueOf(tmp.strG));
+                    if (!TextUtils.isEmpty(strF[i][j]) && strF[i][j].endsWith("F"))
+                        tmp.isFestival = true;
+                    if (!TextUtils.isEmpty(tmp.strG))
+                        tmp.isDeferred = ((DPCNCalendar) c)
+                                .isDeferred(year, month, Integer.valueOf(tmp.strG));
+                } else {
+                    tmp.isFestival = !TextUtils.isEmpty(strF[i][j]);
+                }
+                if (null != decorBG && decorBG.contains(tmp.strG)) tmp.isDecorBG = true;
+                if (null != decorTL && decorTL.contains(tmp.strG)) tmp.isDecorTL = true;
+                if (null != decorT && decorT.contains(tmp.strG)) tmp.isDecorT = true;
+                if (null != decorTR && decorTR.contains(tmp.strG)) tmp.isDecorTR = true;
+                if (null != decorL && decorL.contains(tmp.strG)) tmp.isDecorL = true;
+                if (null != decorR && decorR.contains(tmp.strG)) tmp.isDecorR = true;
+                info[i][j] = tmp;
+            }
+        }
+        return info;
+    }
+
+    public void clearnDATE_CACHE(){
+        DATE_CACHE.clear();
+        DECOR_CACHE_BG.clear();
+        DECOR_CACHE_TL.clear();
+        DECOR_CACHE_T.clear();
+        DECOR_CACHE_TR.clear();
+        DECOR_CACHE_L.clear();
+        DECOR_CACHE_R.clear();
+        selDateList.clear();
+    }
+}
Index: app/src/main/java/com/example/anonymous/greendao/DaoSession.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/anonymous/greendao/DaoSession.java	(revision )
+++ app/src/main/java/com/example/anonymous/greendao/DaoSession.java	(revision )
@@ -0,0 +1,62 @@
+package com.example.anonymous.greendao;
+
+import java.util.Map;
+
+import org.greenrobot.greendao.AbstractDao;
+import org.greenrobot.greendao.AbstractDaoSession;
+import org.greenrobot.greendao.database.Database;
+import org.greenrobot.greendao.identityscope.IdentityScopeType;
+import org.greenrobot.greendao.internal.DaoConfig;
+
+import com.b3ad.yuxie.myapplication.entity.SmsApi;
+import com.b3ad.yuxie.myapplication.entity.User;
+
+import com.example.anonymous.greendao.SmsApiDao;
+import com.example.anonymous.greendao.UserDao;
+
+// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
+
+/**
+ * {@inheritDoc}
+ * 
+ * @see org.greenrobot.greendao.AbstractDaoSession
+ */
+public class DaoSession extends AbstractDaoSession {
+
+    private final DaoConfig smsApiDaoConfig;
+    private final DaoConfig userDaoConfig;
+
+    private final SmsApiDao smsApiDao;
+    private final UserDao userDao;
+
+    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
+            daoConfigMap) {
+        super(db);
+
+        smsApiDaoConfig = daoConfigMap.get(SmsApiDao.class).clone();
+        smsApiDaoConfig.initIdentityScope(type);
+
+        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
+        userDaoConfig.initIdentityScope(type);
+
+        smsApiDao = new SmsApiDao(smsApiDaoConfig, this);
+        userDao = new UserDao(userDaoConfig, this);
+
+        registerDao(SmsApi.class, smsApiDao);
+        registerDao(User.class, userDao);
+    }
+    
+    public void clear() {
+        smsApiDaoConfig.clearIdentityScope();
+        userDaoConfig.clearIdentityScope();
+    }
+
+    public SmsApiDao getSmsApiDao() {
+        return smsApiDao;
+    }
+
+    public UserDao getUserDao() {
+        return userDao;
+    }
+
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/ProcessUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/ProcessUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/ProcessUtils.java	(revision )
@@ -0,0 +1,157 @@
+package com.baselib.utilcode.util;
+
+import android.app.ActivityManager;
+import android.app.AppOpsManager;
+import android.app.usage.UsageStats;
+import android.app.usage.UsageStatsManager;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageManager;
+import android.content.pm.ResolveInfo;
+import android.provider.Settings;
+import android.support.annotation.NonNull;
+import android.util.Log;
+
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.HashSet;
+import java.util.List;
+import java.util.Set;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/10/18
+ *     desc  : 进程相关工具类
+ * </pre>
+ */
+public final class ProcessUtils {
+
+    private ProcessUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 获取前台线程包名
+     * <p>当不是查看当前App，且SDK大于21时，
+     * 需添加权限 {@code <uses-permission android:name="android.permission.PACKAGE_USAGE_STATS"/>}</p>
+     *
+     * @return 前台应用包名
+     */
+    public static String getForegroundProcessName() {
+        ActivityManager manager = (ActivityManager) Utils.getApp().getSystemService(Context.ACTIVITY_SERVICE);
+        List<ActivityManager.RunningAppProcessInfo> pInfo = manager.getRunningAppProcesses();
+        if (pInfo != null && pInfo.size() != 0) {
+            for (ActivityManager.RunningAppProcessInfo aInfo : pInfo) {
+                if (aInfo.importance == ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND) {
+                    return aInfo.processName;
+                }
+            }
+        }
+        if (android.os.Build.VERSION.SDK_INT > android.os.Build.VERSION_CODES.LOLLIPOP) {
+            PackageManager packageManager = Utils.getApp().getPackageManager();
+            Intent intent = new Intent(Settings.ACTION_USAGE_ACCESS_SETTINGS);
+            List<ResolveInfo> list = packageManager.queryIntentActivities(intent, PackageManager.MATCH_DEFAULT_ONLY);
+            System.out.println(list);
+            if (list.size() > 0) {// 有"有权查看使用权限的应用"选项
+                try {
+                    ApplicationInfo info = packageManager.getApplicationInfo(Utils.getApp().getPackageName(), 0);
+                    AppOpsManager aom = (AppOpsManager) Utils.getApp().getSystemService(Context.APP_OPS_SERVICE);
+                    if (aom.checkOpNoThrow(AppOpsManager.OPSTR_GET_USAGE_STATS, info.uid, info.packageName) != AppOpsManager.MODE_ALLOWED) {
+                        Utils.getApp().startActivity(intent);
+                    }
+                    if (aom.checkOpNoThrow(AppOpsManager.OPSTR_GET_USAGE_STATS, info.uid, info.packageName) != AppOpsManager.MODE_ALLOWED) {
+                        LogUtils.d("getForegroundApp", "没有打开\"有权查看使用权限的应用\"选项");
+                        return null;
+                    }
+                    UsageStatsManager usageStatsManager = (UsageStatsManager) Utils.getApp().getSystemService(Context.USAGE_STATS_SERVICE);
+                    long endTime = System.currentTimeMillis();
+                    long beginTime = endTime - 86400000 * 7;
+                    List<UsageStats> usageStatses = usageStatsManager.queryUsageStats(UsageStatsManager.INTERVAL_BEST, beginTime, endTime);
+                    if (usageStatses == null || usageStatses.isEmpty()) return null;
+                    UsageStats recentStats = null;
+                    for (UsageStats usageStats : usageStatses) {
+                        if (recentStats == null || usageStats.getLastTimeUsed() > recentStats.getLastTimeUsed()) {
+                            recentStats = usageStats;
+                        }
+                    }
+                    return recentStats == null ? null : recentStats.getPackageName();
+                } catch (PackageManager.NameNotFoundException e) {
+                    e.printStackTrace();
+                }
+            } else {
+                Log.d("ProcessUtils", "getForegroundProcessName() called" + ": 无\"有权查看使用权限的应用\"选项");
+            }
+        }
+        return null;
+    }
+
+    /**
+     * 获取后台服务进程
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.KILL_BACKGROUND_PROCESSES"/>}</p>
+     *
+     * @return 后台服务进程
+     */
+    public static Set<String> getAllBackgroundProcesses() {
+        ActivityManager am = (ActivityManager) Utils.getApp().getSystemService(Context.ACTIVITY_SERVICE);
+        List<ActivityManager.RunningAppProcessInfo> info = am.getRunningAppProcesses();
+        Set<String> set = new HashSet<>();
+        for (ActivityManager.RunningAppProcessInfo aInfo : info) {
+            Collections.addAll(set, aInfo.pkgList);
+        }
+        return set;
+    }
+
+    /**
+     * 杀死所有的后台服务进程
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.KILL_BACKGROUND_PROCESSES"/>}</p>
+     *
+     * @return 被暂时杀死的服务集合
+     */
+    public static Set<String> killAllBackgroundProcesses() {
+        ActivityManager am = (ActivityManager) Utils.getApp().getSystemService(Context.ACTIVITY_SERVICE);
+        List<ActivityManager.RunningAppProcessInfo> info = am.getRunningAppProcesses();
+        Set<String> set = new HashSet<>();
+        for (ActivityManager.RunningAppProcessInfo aInfo : info) {
+            for (String pkg : aInfo.pkgList) {
+                am.killBackgroundProcesses(pkg);
+                set.add(pkg);
+            }
+        }
+        info = am.getRunningAppProcesses();
+        for (ActivityManager.RunningAppProcessInfo aInfo : info) {
+            for (String pkg : aInfo.pkgList) {
+                set.remove(pkg);
+            }
+        }
+        return set;
+    }
+
+    /**
+     * 杀死后台服务进程
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.KILL_BACKGROUND_PROCESSES"/>}</p>
+     *
+     * @param packageName 包名
+     * @return {@code true}: 杀死成功<br>{@code false}: 杀死失败
+     */
+    public static boolean killBackgroundProcesses(@NonNull final String packageName) {
+        ActivityManager am = (ActivityManager) Utils.getApp().getSystemService(Context.ACTIVITY_SERVICE);
+        List<ActivityManager.RunningAppProcessInfo> info = am.getRunningAppProcesses();
+        if (info == null || info.size() == 0) return true;
+        for (ActivityManager.RunningAppProcessInfo aInfo : info) {
+            if (Arrays.asList(aInfo.pkgList).contains(packageName)) {
+                am.killBackgroundProcesses(packageName);
+            }
+        }
+        info = am.getRunningAppProcesses();
+        if (info == null || info.size() == 0) return true;
+        for (ActivityManager.RunningAppProcessInfo aInfo : info) {
+            if (Arrays.asList(aInfo.pkgList).contains(packageName)) {
+                return false;
+            }
+        }
+        return true;
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/activity/ViewActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/activity/ViewActivity.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/activity/ViewActivity.java	(revision )
@@ -0,0 +1,21 @@
+package com.b3ad.yuxie.myapplication.activity;
+
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+
+import com.b3ad.yuxie.myapplication.R;
+
+public class ViewActivity extends AppCompatActivity {
+
+//    private MyView myView;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_view);
+
+//        myView=(MyView) findViewById(R.id.my_view);
+//
+//        new Thread(myView).start();
+    }
+}
Index: baselib/src/main/java/com/baselib/baserx/GsonRequestBodyConverter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/baserx/GsonRequestBodyConverter.java	(revision )
+++ baselib/src/main/java/com/baselib/baserx/GsonRequestBodyConverter.java	(revision )
@@ -0,0 +1,38 @@
+package com.baselib.baserx;
+
+import com.google.gson.Gson;
+import com.google.gson.TypeAdapter;
+import com.google.gson.stream.JsonWriter;
+
+import java.io.IOException;
+import java.io.OutputStreamWriter;
+import java.io.Writer;
+import java.nio.charset.Charset;
+
+import okhttp3.MediaType;
+import okhttp3.RequestBody;
+import okio.Buffer;
+import retrofit2.Converter;
+
+final class GsonRequestBodyConverter<T> implements Converter<T, RequestBody> {
+    private static final MediaType MEDIA_TYPE = MediaType.parse("application/json; charset=UTF-8");
+    private static final Charset UTF_8 = Charset.forName("UTF-8");
+
+    private final Gson gson;
+    private final TypeAdapter<T> adapter;
+
+    GsonRequestBodyConverter(Gson gson, TypeAdapter<T> adapter) {
+        this.gson = gson;
+        this.adapter = adapter;
+    }
+
+    @Override
+    public RequestBody convert(T value) throws IOException {
+        Buffer buffer = new Buffer();
+        Writer writer = new OutputStreamWriter(buffer.outputStream(), UTF_8);
+        JsonWriter jsonWriter = gson.newJsonWriter(writer);
+        adapter.write(jsonWriter, value);
+        jsonWriter.close();
+        return RequestBody.create(MEDIA_TYPE, buffer.readByteString());
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCNCalendar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCNCalendar.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DPCNCalendar.java	(revision )
@@ -0,0 +1,312 @@
+package com.baselib.ui.widget.mydatepicker;
+
+import android.text.TextUtils;
+
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.HashSet;
+import java.util.Set;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ *  中国月历
+ */
+
+public class DPCNCalendar  extends DPCalendar {
+    private static final int[] FIRST_DAY_OF_LUNAR_IN_GREGORIAN = {1897, 0x75aa, 0x156a, 0x1096d, 0x95c, 0x14ae, 0xaa4d, 0x1a4c, 0x1b2a, 0x8d55, 0xad4, 0x135a, 0x495d, 0x95c, 0xd49b, 0x149a, 0x1a4a, 0xbaa5, 0x16a8, 0x1ad4, 0x52da, 0x12b6, 0xe937, 0x92e, 0x1496, 0xb64b, 0xd4a, 0xda8, 0x95b5, 0x56c, 0x12ae, 0x492f, 0x92e, 0xcc96, 0x1a94, 0x1d4a, 0xada9, 0xb5a, 0x56c, 0x726e, 0x125c, 0xf92d, 0x192a, 0x1a94, 0xdb4a, 0x16aa, 0xad4, 0x955b, 0x4ba, 0x125a, 0x592b, 0x152a, 0xf695, 0xd94, 0x16aa, 0xaab5, 0x9b4, 0x14b6, 0x6a57, 0xa56, 0x1152a, 0x1d2a, 0xd54, 0xd5aa, 0x156a, 0x96c, 0x94ae, 0x14ae, 0xa4c, 0x7d26, 0x1b2a, 0xeb55, 0xad4, 0x12da, 0xa95d, 0x95a, 0x149a, 0x9a4d, 0x1a4a, 0x11aa5, 0x16a8, 0x16d4, 0xd2da, 0x12b6, 0x936, 0x9497, 0x1496, 0x1564b, 0xd4a, 0xda8, 0xd5b4, 0x156c, 0x12ae, 0xa92f, 0x92e, 0xc96, 0x6d4a, 0x1d4a, 0x10d65, 0xb58, 0x156c, 0xb26d, 0x125c, 0x192c, 0x9a95, 0x1a94, 0x1b4a, 0x4b55, 0xad4, 0xf55b, 0x4ba, 0x125a, 0xb92b, 0x152a, 0x1694, 0x96aa, 0x15aa, 0x12ab5, 0x974, 0x14b6, 0xca57, 0xa56, 0x1526, 0x8e95, 0xd54, 0x15aa, 0x49b5, 0x96c, 0xd4ae, 0x149c, 0x1a4c, 0xbd26, 0x1aa6, 0xb54, 0x6d6a, 0x12da, 0x1695d, 0x95a, 0x149a, 0xda4b, 0x1a4a, 0x1aa4, 0xbb54, 0x16b4, 0xada, 0x495b, 0x936, 0xf497, 0x1496, 0x154a, 0xb6a5, 0xda4, 0x15b4, 0x6ab6, 0x126e, 0x1092f, 0x92e, 0xc96, 0xcd4a, 0x1d4a, 0xd64, 0x956c, 0x155c, 0x125c, 0x792e, 0x192c, 0xfa95, 0x1a94, 0x1b4a, 0xab55, 0xad4, 0x14da, 0x8a5d, 0xa5a, 0x1152b, 0x152a, 0x1694, 0xd6aa, 0x15aa, 0xab4, 0x94ba, 0x14b6, 0xa56, 0x7527, 0xd26, 0xee53, 0xd54, 0x15aa, 0xa9b5, 0x96c, 0x14ae, 0x8a4e, 0x1a4c, 0x11d26, 0x1aa4, 0x1b54, 0xcd6a, 0xada, 0x95c, 0x949d, 0x149a, 0x1a2a, 0x5b25, 0x1aa4, 0xfb52};
+
+    private static final int[] DAYS_AND_LEAP_MONTH_OF_LUNAR = {1897, 0xed436, 0xed64a, 0xed83f, 0xeda53, 0xedc48, 0xede3d, 0xee050, 0xee244, 0xee439, 0xee64d, 0xee842, 0xeea36, 0xeec4a, 0xeee3e, 0xef052, 0xef246, 0xef43a, 0xef64e, 0xef843, 0xefa37, 0xefc4b, 0xefe41, 0xf0054, 0xf0248, 0xf043c, 0xf0650, 0xf0845, 0xf0a38, 0xf0c4d, 0xf0e42, 0xf1037, 0xf124a, 0xf143e, 0xf1651, 0xf1846, 0xf1a3a, 0xf1c4e, 0xf1e44, 0xf2038, 0xf224b, 0xf243f, 0xf2653, 0xf2848, 0xf2a3b, 0xf2c4f, 0xf2e45, 0xf3039, 0xf324d, 0xf3442, 0xf3636, 0xf384a, 0xf3a3d, 0xf3c51, 0xf3e46, 0xf403b, 0xf424e, 0xf4443, 0xf4638, 0xf484c, 0xf4a3f, 0xf4c52, 0xf4e48, 0xf503c, 0xf524f, 0xf5445, 0xf5639, 0xf584d, 0xf5a42, 0xf5c35, 0xf5e49, 0xf603e, 0xf6251, 0xf6446, 0xf663b, 0xf684f, 0xf6a43, 0xf6c37, 0xf6e4b, 0xf703f, 0xf7252, 0xf7447, 0xf763c, 0xf7850, 0xf7a45, 0xf7c39, 0xf7e4d, 0xf8042, 0xf8254, 0xf8449, 0xf863d, 0xf8851, 0xf8a46, 0xf8c3b, 0xf8e4f, 0xf9044, 0xf9237, 0xf944a, 0xf963f, 0xf9853, 0xf9a47, 0xf9c3c, 0xf9e50, 0xfa045, 0xfa238, 0xfa44c, 0xfa641, 0xfa836, 0xfaa49, 0xfac3d, 0xfae52, 0xfb047, 0xfb23a, 0xfb44e, 0xfb643, 0xfb837, 0xfba4a, 0xfbc3f, 0xfbe53, 0xfc048, 0xfc23c, 0xfc450, 0xfc645, 0xfc839, 0xfca4c, 0xfcc41, 0xfce36, 0xfd04a, 0xfd23d, 0xfd451, 0xfd646, 0xfd83a, 0xfda4d, 0xfdc43, 0xfde37, 0xfe04b, 0xfe23f, 0xfe453, 0xfe648, 0xfe83c, 0xfea4f, 0xfec44, 0xfee38, 0xff04c, 0xff241, 0xff436, 0xff64a, 0xff83e, 0xffa51, 0xffc46, 0xffe3a, 0x10004e, 0x100242, 0x100437, 0x10064b, 0x100841, 0x100a53, 0x100c48, 0x100e3c, 0x10104f, 0x101244, 0x101438, 0x10164c, 0x101842, 0x101a35, 0x101c49, 0x101e3d, 0x102051, 0x102245, 0x10243a, 0x10264e, 0x102843, 0x102a37, 0x102c4b, 0x102e3f, 0x103053, 0x103247, 0x10343b, 0x10364f, 0x103845, 0x103a38, 0x103c4c, 0x103e42, 0x104036, 0x104249, 0x10443d, 0x104651, 0x104846, 0x104a3a, 0x104c4e, 0x104e43, 0x105038, 0x10524a, 0x10543e, 0x105652, 0x105847, 0x105a3b, 0x105c4f, 0x105e45, 0x106039, 0x10624c, 0x106441, 0x106635, 0x106849, 0x106a3d};
+
+    private static final String[] NUMBER_CAPITAL = {"零", "一", "二", "三", "四", "五", "六", "七", "八", "九"};
+
+    private static final String[] LUNAR_HEADER = {"初", "十", "廿", "卅", "正", "腊", "冬", "闰"};
+
+    private static final String[][] FESTIVAL_G = {
+            {"元旦"},
+            {"世界湿地日", "情人节"},
+            {"全国爱耳日", "青年志愿者服务日", "国际妇女节", "保护母亲河日", "中国植树节", "白色情人节&国际警察日", "世界消费者权益日", "世界森林日&世界睡眠日", "世界水日", "世界气象日", "世界防治结核病日"},
+            {"愚人节", "清明节", "世界卫生日", "世界地球日", "世界知识产权日"},
+            {"国际劳动节", "世界哮喘日", "中国青年节", "世界红十字日", "国际护士节", "国际家庭日", "世界电信日", "全国学生营养日", "国际生物多样性日", "国际牛奶日", "世界无烟日"},
+            {"国际儿童节", "世界环境日", "全国爱眼日", "世界防治荒漠化日", "国际奥林匹克日", "全国土地日", "国际禁毒日"},
+            {"中国共产党诞生日&国际建筑日", "中国抗战纪念日", "世界人口日"},
+            {"中国解放军建军节", "国际青年节"},
+            {"抗战胜利日", "国际扫盲日", "中国教师节", "中国脑健康日&臭氧层保护日", "全国爱牙日", "世界停火日", "世界旅游日"},
+            {"国庆节&国际老年人日", "世界动物日", "世界教师日", "全国高血压日", "世界邮政日", "世界精神卫生日", "世界标准日", "国际盲人节&世界农村妇女日", "世界粮食日", "国际消除贫困日", "联合国日&世界发展新闻日", "中国男性健康日", "万圣节"},
+            {"中国记者节", "消防宣传日", "世界糖尿病日", "国际大学生节", "消除对妇女暴力日"},
+            {"世界爱滋病日", "世界残疾人日", "全国法制宣传日", "世界足球日", "圣诞节"}};
+
+    private static final int[][] FESTIVAL_G_DATE = {
+            {1},
+            {2, 14},
+            {3, 5, 8, 9, 12, 14, 15, 21, 22, 23, 24},
+            {1, 5, 7, 22, 26},
+            {1, 3, 4, 8, 12, 15, 17, 20, 22, 23, 31},
+            {1, 5, 6, 17, 23, 25, 26},
+            {1, 7, 11},
+            {1, 12},
+            {3, 8, 10, 16, 20, 21, 27},
+            {1, 4, 5, 8, 9, 10, 14, 15, 16, 17, 24, 29, 31},
+            {8, 9, 14, 17, 25},
+            {1, 3, 4, 9, 25}};
+
+    private static final String[][] FESTIVAL_L = {{"春节", "元宵节"},
+            {},
+            {},
+            {},
+            {"端午节"},
+            {},
+            {"乞巧节"},
+            {"中秋节"},
+            {"重阳节"},
+            {},
+            {},
+            {"腊八节", "扫房日"}};
+
+    private static final int[][] FESTIVAL_L_DATE = {
+            {1, 15},
+            {},
+            {},
+            {},
+            {5},
+            {},
+            {7},
+            {15},
+            {9},
+            {},
+            {},
+            {8, 24}};
+
+    private static final String[][] HOLIDAY = {{"1", "2", "3"}, {"18", "19", "20", "21", "22", "23", "24"}, {""}, {"4", "5", "6"}, {"1", "2", "3"}, {"20", "21", "22"}, {""}, {""}, {"3", "4", "5", "26", "27"}, {"1", "2", "3", "4", "5", "6", "7"}, {""}, {""}};
+
+    private static final String[][] DEFERRED = {{"4"}, {"15", "16", "17", "25", "26", "27", "28"}, {""}, {""}, {""}, {""}, {""}, {""}, {"6", "28", "29", "30"}, {"8", "9", "10"}, {""}, {""}};
+
+    private static final String SOLAR_TERM[][] = {{"小寒", "大寒"}, {"立春", "雨水"}, {"惊蛰", "春分"}, {"清明", "谷雨"}, {"立夏", "小满"}, {"芒种", "夏至"}, {"小暑", "大暑"}, {"立秋", "处暑"}, {"白露", "秋分"}, {"寒露", "霜降"}, {"立冬", "小雪"}, {"大雪", "冬至"}};
+
+    private final HashMap<Integer, String[][]> CACHE_SOLAR_TERM = new HashMap<>();
+
+    private SolarTerm mSolarTerm = new SolarTerm();
+
+    private class G {
+        int d;
+        int m;
+        int y;
+    }
+
+    private class L {
+        int d;
+        int m;
+        int y;
+
+        boolean isLeap;
+    }
+
+    @Override
+    public String[][] buildMonthFestival(int year, int month) {
+        return buildMonthL(year, month);
+    }
+
+    @Override
+    public Set<String> buildMonthHoliday(int year, int month) {
+        Set<String> tmp = new HashSet<>();
+        if (year == 2015) {
+            Collections.addAll(tmp, HOLIDAY[month - 1]);
+        }
+        return tmp;
+    }
+
+    private String[][] buildMonthL(int year, int month) {
+        String[][] gregorianMonth = buildMonthG(year, month);
+        G g = new G();
+        String tmp[][] = new String[6][7];
+        for (int i = 0; i < tmp.length; i++) {
+            for (int j = 0; j < tmp[0].length; j++) {
+                tmp[i][j] = "";
+                if (!TextUtils.isEmpty(gregorianMonth[i][j])) {
+                    g.y = year;
+                    g.m = month;
+                    g.d = Integer.valueOf(gregorianMonth[i][j]);
+                    L l = null;
+                    String result = "";
+                    if (year >= 1900 && year <= 2100) {
+                        l = GTL(g);
+                        result = getFestivalL(l.m, l.d);
+                    }
+                    if (TextUtils.isEmpty(result)) {
+                        result = getFestivalG(g.m, g.d);
+                        if (TextUtils.isEmpty(result)) {
+                            result = getSolarTerm(year, month, g.d);
+                            if (null != l && TextUtils.isEmpty(result)) {
+                                char[] c = String.valueOf(l.d).toCharArray();
+                                tmp[i][j] = lNumToStr(c);
+                            } else {
+                                tmp[i][j] = result;
+                            }
+                        } else {
+                            tmp[i][j] = result + "F";
+                        }
+                    } else {
+                        tmp[i][j] = result + "F";
+                    }
+                }
+            }
+        }
+        return tmp;
+    }
+
+    /**
+     * 判断某年某月某日是否为节气
+     *
+     * @param year  公历年
+     * @param month 公历月
+     * @param day   公历日
+     * @return ...
+     */
+    public boolean isSolarTerm(int year, int month, int day) {
+        return null == getSolarTerm(year, month, day);
+    }
+
+    /**
+     * 判断某月某日是否为补休
+     *
+     * @param year  公历年
+     * @param month 公历月
+     * @param day   公历日
+     * @return ...
+     */
+    public boolean isDeferred(int year, int month, int day) {
+        if (year == 2015) {
+            String[] deferredOfMonth = DEFERRED[month - 1];
+            for (String s : deferredOfMonth) {
+                if (!TextUtils.isEmpty(s) && Integer.valueOf(s) == day) return true;
+            }
+        }
+        return false;
+    }
+
+    private String getSolarTerm(int year, int month, int day) {
+        String[][] tmp = CACHE_SOLAR_TERM.get(year);
+        if (null == tmp) {
+            tmp = mSolarTerm.buildSolarTerm(year);
+            CACHE_SOLAR_TERM.put(year, tmp);
+        }
+        String[] STOfMonth = tmp[month - 1];
+        if (Integer.valueOf(STOfMonth[0]) == day) {
+            return SOLAR_TERM[month - 1][0];
+        } else if (Integer.valueOf(STOfMonth[1]) == day) {
+            return SOLAR_TERM[month - 1][1];
+        }
+        return "";
+    }
+
+    private String getFestivalL(int month, int day) {
+        String tmp = "";
+        int[] daysInMonth = FESTIVAL_L_DATE[month - 1];
+        for (int i = 0; i < daysInMonth.length; i++) {
+            if (day == daysInMonth[i]) {
+                tmp = FESTIVAL_L[month - 1][i];
+            }
+        }
+        return tmp;
+    }
+
+    private String getFestivalG(int month, int day) {
+        String tmp = "";
+        int[] daysInMonth = FESTIVAL_G_DATE[month - 1];
+        for (int i = 0; i < daysInMonth.length; i++) {
+            if (day == daysInMonth[i]) {
+                tmp = FESTIVAL_G[month - 1][i];
+            }
+        }
+        return tmp;
+    }
+
+    private L GTL(G g) {
+        int index = g.y - DAYS_AND_LEAP_MONTH_OF_LUNAR[0];
+        int data = (g.y << 9) | (g.m << 5) | (g.d);
+        int lunarFirstDayInGregorian;
+        if (DAYS_AND_LEAP_MONTH_OF_LUNAR[index] > data) {
+            index--;
+        }
+        lunarFirstDayInGregorian = DAYS_AND_LEAP_MONTH_OF_LUNAR[index];
+
+        int y = getBitInt(lunarFirstDayInGregorian, 12, 9);
+        int m = getBitInt(lunarFirstDayInGregorian, 4, 5);
+        int d = getBitInt(lunarFirstDayInGregorian, 5, 0);
+
+        long offset = GToNum(g.y, g.m, g.d) - GToNum(y, m, d);
+        int days = FIRST_DAY_OF_LUNAR_IN_GREGORIAN[index];
+        int leap = getBitInt(days, 4, 13);
+
+        int lunarY = index + DAYS_AND_LEAP_MONTH_OF_LUNAR[0];
+        int lunarM = 1;
+        int lunarD;
+        offset += 1;
+
+        for (int i = 0; i < 13; i++) {
+            int dm = getBitInt(days, 1, 12 - i) == 1 ? 30 : 29;
+            if (offset > dm) {
+                lunarM++;
+                offset -= dm;
+            } else {
+                break;
+            }
+        }
+        lunarD = (int) (offset);
+        L l = new L();
+        l.y = lunarY;
+        l.m = lunarM;
+        l.isLeap = false;
+        if (leap != 0 && lunarM > leap) {
+            l.m = lunarM - 1;
+            if (lunarM == leap + 1) {
+                l.isLeap = true;
+            }
+        }
+        l.d = lunarD;
+        return l;
+    }
+
+    private String lNumToStr(char[] c) {
+        String result = "";
+        if (c.length == 1) {
+            for (int i = 1; i < 10; i++) {
+                if (c[0] == String.valueOf(i).charAt(0)) {
+                    result = LUNAR_HEADER[0] + NUMBER_CAPITAL[i];
+                }
+            }
+        } else {
+            if (c[0] == '1') {
+                if (c[1] == '0') {
+                    result = LUNAR_HEADER[0] + LUNAR_HEADER[1];
+                } else {
+                    for (int i = 1; i < 10; i++) {
+                        if (c[1] == String.valueOf(i).charAt(0)) {
+                            result = LUNAR_HEADER[1] + NUMBER_CAPITAL[i];
+                        }
+                    }
+                }
+            } else if (c[0] == '2') {
+                if (c[1] == '0') {
+                    result = LUNAR_HEADER[2] + LUNAR_HEADER[1];
+                } else {
+                    for (int i = 1; i < 10; i++) {
+                        if (c[1] == String.valueOf(i).charAt(0)) {
+                            result = LUNAR_HEADER[2] + NUMBER_CAPITAL[i];
+                        }
+                    }
+                }
+            } else {
+                if (c[1] == '0') {
+                    result = LUNAR_HEADER[3] + LUNAR_HEADER[1];
+                } else {
+                    for (int i = 1; i < 10; i++) {
+                        if (c[1] == String.valueOf(i).charAt(0)) {
+                            result = LUNAR_HEADER[3] + NUMBER_CAPITAL[i];
+                        }
+                    }
+                }
+            }
+        }
+        return result;
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/ImageUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/ImageUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/ImageUtils.java	(revision )
@@ -0,0 +1,1779 @@
+package com.baselib.utilcode.util;
+
+import android.annotation.TargetApi;
+import android.content.res.Resources;
+import android.graphics.Bitmap;
+import android.graphics.Bitmap.CompressFormat;
+import android.graphics.BitmapFactory;
+import android.graphics.BitmapShader;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.ColorMatrix;
+import android.graphics.ColorMatrixColorFilter;
+import android.graphics.LinearGradient;
+import android.graphics.Matrix;
+import android.graphics.Paint;
+import android.graphics.PixelFormat;
+import android.graphics.PorterDuff;
+import android.graphics.PorterDuffColorFilter;
+import android.graphics.PorterDuffXfermode;
+import android.graphics.Rect;
+import android.graphics.RectF;
+import android.graphics.Shader;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+import android.media.ExifInterface;
+import android.os.Build;
+import android.renderscript.Allocation;
+import android.renderscript.Element;
+import android.renderscript.RenderScript;
+import android.renderscript.ScriptIntrinsicBlur;
+import android.support.annotation.ColorInt;
+import android.support.annotation.DrawableRes;
+import android.support.annotation.FloatRange;
+import android.support.annotation.IntRange;
+import android.support.v4.content.ContextCompat;
+import android.view.View;
+
+import java.io.BufferedOutputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileDescriptor;
+import java.io.FileInputStream;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/12
+ *     desc  : 图片相关工具类
+ * </pre>
+ */
+public final class ImageUtils {
+
+    private ImageUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * bitmap转byteArr
+     *
+     * @param bitmap bitmap对象
+     * @param format 格式
+     * @return 字节数组
+     */
+    public static byte[] bitmap2Bytes(final Bitmap bitmap, final CompressFormat format) {
+        if (bitmap == null) return null;
+        ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        bitmap.compress(format, 100, baos);
+        return baos.toByteArray();
+    }
+
+    /**
+     * byteArr转bitmap
+     *
+     * @param bytes 字节数组
+     * @return bitmap
+     */
+    public static Bitmap bytes2Bitmap(final byte[] bytes) {
+        return (bytes == null || bytes.length == 0) ? null : BitmapFactory.decodeByteArray(bytes, 0, bytes.length);
+    }
+
+    /**
+     * drawable转bitmap
+     *
+     * @param drawable drawable对象
+     * @return bitmap
+     */
+    public static Bitmap drawable2Bitmap(final Drawable drawable) {
+        if (drawable instanceof BitmapDrawable) {
+            BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;
+            if (bitmapDrawable.getBitmap() != null) {
+                return bitmapDrawable.getBitmap();
+            }
+        }
+        Bitmap bitmap;
+        if (drawable.getIntrinsicWidth() <= 0 || drawable.getIntrinsicHeight() <= 0) {
+            bitmap = Bitmap.createBitmap(1, 1,
+                    drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565);
+        } else {
+            bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(),
+                    drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565);
+        }
+        Canvas canvas = new Canvas(bitmap);
+        drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
+        drawable.draw(canvas);
+        return bitmap;
+    }
+
+    /**
+     * bitmap转drawable
+     *
+     * @param bitmap bitmap对象
+     * @return drawable
+     */
+    public static Drawable bitmap2Drawable(final Bitmap bitmap) {
+        return bitmap == null ? null : new BitmapDrawable(Utils.getApp().getResources(), bitmap);
+    }
+
+    /**
+     * drawable转byteArr
+     *
+     * @param drawable drawable对象
+     * @param format   格式
+     * @return 字节数组
+     */
+    public static byte[] drawable2Bytes(final Drawable drawable, final CompressFormat format) {
+        return drawable == null ? null : bitmap2Bytes(drawable2Bitmap(drawable), format);
+    }
+
+    /**
+     * byteArr转drawable
+     *
+     * @param bytes 字节数组
+     * @return drawable
+     */
+    public static Drawable bytes2Drawable(final byte[] bytes) {
+        return bitmap2Drawable(bytes2Bitmap(bytes));
+    }
+
+    /**
+     * view转bitmap
+     *
+     * @param view 视图
+     * @return bitmap
+     */
+    public static Bitmap view2Bitmap(final View view) {
+        if (view == null) return null;
+        Bitmap ret = Bitmap.createBitmap(view.getWidth(), view.getHeight(), Bitmap.Config.ARGB_8888);
+        Canvas canvas = new Canvas(ret);
+        Drawable bgDrawable = view.getBackground();
+        if (bgDrawable != null) {
+            bgDrawable.draw(canvas);
+        } else {
+            canvas.drawColor(Color.WHITE);
+        }
+        view.draw(canvas);
+        return ret;
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param file 文件
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(final File file) {
+        if (file == null) return null;
+        return BitmapFactory.decodeFile(file.getAbsolutePath());
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param file      文件
+     * @param maxWidth  最大宽度
+     * @param maxHeight 最大高度
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(final File file, final int maxWidth, final int maxHeight) {
+        if (file == null) return null;
+        BitmapFactory.Options options = new BitmapFactory.Options();
+        options.inJustDecodeBounds = true;
+        BitmapFactory.decodeFile(file.getAbsolutePath(), options);
+        options.inSampleSize = calculateInSampleSize(options, maxWidth, maxHeight);
+        options.inJustDecodeBounds = false;
+        return BitmapFactory.decodeFile(file.getAbsolutePath(), options);
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param filePath 文件路径
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(final String filePath) {
+        if (isSpace(filePath)) return null;
+        return BitmapFactory.decodeFile(filePath);
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param filePath  文件路径
+     * @param maxWidth  最大宽度
+     * @param maxHeight 最大高度
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(final String filePath, final int maxWidth, final int maxHeight) {
+        if (isSpace(filePath)) return null;
+        BitmapFactory.Options options = new BitmapFactory.Options();
+        options.inJustDecodeBounds = true;
+        BitmapFactory.decodeFile(filePath, options);
+        options.inSampleSize = calculateInSampleSize(options, maxWidth, maxHeight);
+        options.inJustDecodeBounds = false;
+        return BitmapFactory.decodeFile(filePath, options);
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param is 输入流
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(final InputStream is) {
+        if (is == null) return null;
+        return BitmapFactory.decodeStream(is);
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param is        输入流
+     * @param maxWidth  最大宽度
+     * @param maxHeight 最大高度
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(final InputStream is, final int maxWidth, final int maxHeight) {
+        if (is == null) return null;
+        BitmapFactory.Options options = new BitmapFactory.Options();
+        options.inJustDecodeBounds = true;
+        BitmapFactory.decodeStream(is, null, options);
+        options.inSampleSize = calculateInSampleSize(options, maxWidth, maxHeight);
+        options.inJustDecodeBounds = false;
+        return BitmapFactory.decodeStream(is, null, options);
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param data   数据
+     * @param offset 偏移量
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(final byte[] data, final int offset) {
+        if (data.length == 0) return null;
+        return BitmapFactory.decodeByteArray(data, offset, data.length);
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param data      数据
+     * @param offset    偏移量
+     * @param maxWidth  最大宽度
+     * @param maxHeight 最大高度
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(final byte[] data, final int offset, final int maxWidth, final int maxHeight) {
+        if (data.length == 0) return null;
+        BitmapFactory.Options options = new BitmapFactory.Options();
+        options.inJustDecodeBounds = true;
+        BitmapFactory.decodeByteArray(data, offset, data.length, options);
+        options.inSampleSize = calculateInSampleSize(options, maxWidth, maxHeight);
+        options.inJustDecodeBounds = false;
+        return BitmapFactory.decodeByteArray(data, offset, data.length, options);
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param resId 资源id
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(@DrawableRes final int resId) {
+        Drawable drawable = ContextCompat.getDrawable(Utils.getApp(), resId);
+        Canvas canvas = new Canvas();
+        Bitmap bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(), Bitmap.Config.ARGB_8888);
+        canvas.setBitmap(bitmap);
+        drawable.setBounds(0, 0, drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight());
+        drawable.draw(canvas);
+        return bitmap;
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param resId     资源id
+     * @param maxWidth  最大宽度
+     * @param maxHeight 最大高度
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(@DrawableRes final int resId, final int maxWidth, final int maxHeight) {
+        BitmapFactory.Options options = new BitmapFactory.Options();
+        final Resources resources = Utils.getApp().getResources();
+        options.inJustDecodeBounds = true;
+        BitmapFactory.decodeResource(resources, resId, options);
+        options.inSampleSize = calculateInSampleSize(options, maxWidth, maxHeight);
+        options.inJustDecodeBounds = false;
+        return BitmapFactory.decodeResource(resources, resId, options);
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param fd 文件描述
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(final FileDescriptor fd) {
+        if (fd == null) return null;
+        return BitmapFactory.decodeFileDescriptor(fd);
+    }
+
+    /**
+     * 获取bitmap
+     *
+     * @param fd        文件描述
+     * @param maxWidth  最大宽度
+     * @param maxHeight 最大高度
+     * @return bitmap
+     */
+    public static Bitmap getBitmap(final FileDescriptor fd, final int maxWidth, final int maxHeight) {
+        if (fd == null) return null;
+        BitmapFactory.Options options = new BitmapFactory.Options();
+        options.inJustDecodeBounds = true;
+        BitmapFactory.decodeFileDescriptor(fd, null, options);
+        options.inSampleSize = calculateInSampleSize(options, maxWidth, maxHeight);
+        options.inJustDecodeBounds = false;
+        return BitmapFactory.decodeFileDescriptor(fd, null, options);
+    }
+
+    /**
+     * 缩放图片
+     *
+     * @param src       源图片
+     * @param newWidth  新宽度
+     * @param newHeight 新高度
+     * @return 缩放后的图片
+     */
+    public static Bitmap scale(final Bitmap src, final int newWidth, final int newHeight) {
+        return scale(src, newWidth, newHeight, false);
+    }
+
+    /**
+     * 缩放图片
+     *
+     * @param src       源图片
+     * @param newWidth  新宽度
+     * @param newHeight 新高度
+     * @param recycle   是否回收
+     * @return 缩放后的图片
+     */
+    public static Bitmap scale(final Bitmap src, final int newWidth, final int newHeight, final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        Bitmap ret = Bitmap.createScaledBitmap(src, newWidth, newHeight, true);
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 缩放图片
+     *
+     * @param src         源图片
+     * @param scaleWidth  缩放宽度倍数
+     * @param scaleHeight 缩放高度倍数
+     * @return 缩放后的图片
+     */
+    public static Bitmap scale(final Bitmap src, final float scaleWidth, final float scaleHeight) {
+        return scale(src, scaleWidth, scaleHeight, false);
+    }
+
+    /**
+     * 缩放图片
+     *
+     * @param src         源图片
+     * @param scaleWidth  缩放宽度倍数
+     * @param scaleHeight 缩放高度倍数
+     * @param recycle     是否回收
+     * @return 缩放后的图片
+     */
+    public static Bitmap scale(final Bitmap src, final float scaleWidth, final float scaleHeight, final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        Matrix matrix = new Matrix();
+        matrix.setScale(scaleWidth, scaleHeight);
+        Bitmap ret = Bitmap.createBitmap(src, 0, 0, src.getWidth(), src.getHeight(), matrix, true);
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 裁剪图片
+     *
+     * @param src    源图片
+     * @param x      开始坐标x
+     * @param y      开始坐标y
+     * @param width  裁剪宽度
+     * @param height 裁剪高度
+     * @return 裁剪后的图片
+     */
+    public static Bitmap clip(final Bitmap src, final int x, final int y, final int width, final int height) {
+        return clip(src, x, y, width, height, false);
+    }
+
+    /**
+     * 裁剪图片
+     *
+     * @param src     源图片
+     * @param x       开始坐标x
+     * @param y       开始坐标y
+     * @param width   裁剪宽度
+     * @param height  裁剪高度
+     * @param recycle 是否回收
+     * @return 裁剪后的图片
+     */
+    public static Bitmap clip(final Bitmap src, final int x, final int y, final int width, final int height, final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        Bitmap ret = Bitmap.createBitmap(src, x, y, width, height);
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 倾斜图片
+     *
+     * @param src 源图片
+     * @param kx  倾斜因子x
+     * @param ky  倾斜因子y
+     * @return 倾斜后的图片
+     */
+    public static Bitmap skew(final Bitmap src, final float kx, final float ky) {
+        return skew(src, kx, ky, 0, 0, false);
+    }
+
+    /**
+     * 倾斜图片
+     *
+     * @param src     源图片
+     * @param kx      倾斜因子x
+     * @param ky      倾斜因子y
+     * @param recycle 是否回收
+     * @return 倾斜后的图片
+     */
+    public static Bitmap skew(final Bitmap src, final float kx, final float ky, final boolean recycle) {
+        return skew(src, kx, ky, 0, 0, recycle);
+    }
+
+    /**
+     * 倾斜图片
+     *
+     * @param src 源图片
+     * @param kx  倾斜因子x
+     * @param ky  倾斜因子y
+     * @param px  平移因子x
+     * @param py  平移因子y
+     * @return 倾斜后的图片
+     */
+    public static Bitmap skew(final Bitmap src, final float kx, final float ky, final float px, final float py) {
+        return skew(src, kx, ky, px, py, false);
+    }
+
+    /**
+     * 倾斜图片
+     *
+     * @param src     源图片
+     * @param kx      倾斜因子x
+     * @param ky      倾斜因子y
+     * @param px      平移因子x
+     * @param py      平移因子y
+     * @param recycle 是否回收
+     * @return 倾斜后的图片
+     */
+    public static Bitmap skew(final Bitmap src, final float kx, final float ky, final float px, final float py, final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        Matrix matrix = new Matrix();
+        matrix.setSkew(kx, ky, px, py);
+        Bitmap ret = Bitmap.createBitmap(src, 0, 0, src.getWidth(), src.getHeight(), matrix, true);
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 旋转图片
+     *
+     * @param src     源图片
+     * @param degrees 旋转角度
+     * @param px      旋转点横坐标
+     * @param py      旋转点纵坐标
+     * @return 旋转后的图片
+     */
+    public static Bitmap rotate(final Bitmap src, final int degrees, final float px, final float py) {
+        return rotate(src, degrees, px, py, false);
+    }
+
+    /**
+     * 旋转图片
+     *
+     * @param src     源图片
+     * @param degrees 旋转角度
+     * @param px      旋转点横坐标
+     * @param py      旋转点纵坐标
+     * @param recycle 是否回收
+     * @return 旋转后的图片
+     */
+    public static Bitmap rotate(final Bitmap src, final int degrees, final float px, final float py, final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        if (degrees == 0) return src;
+        Matrix matrix = new Matrix();
+        matrix.setRotate(degrees, px, py);
+        Bitmap ret = Bitmap.createBitmap(src, 0, 0, src.getWidth(), src.getHeight(), matrix, true);
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 获取图片旋转角度
+     *
+     * @param filePath 文件路径
+     * @return 旋转角度
+     */
+    public static int getRotateDegree(final String filePath) {
+        int degree = 0;
+        try {
+            ExifInterface exifInterface = new ExifInterface(filePath);
+            int orientation = exifInterface.getAttributeInt(
+                    ExifInterface.TAG_ORIENTATION,
+                    ExifInterface.ORIENTATION_NORMAL);
+            switch (orientation) {
+                default:
+                case ExifInterface.ORIENTATION_ROTATE_90:
+                    degree = 90;
+                    break;
+                case ExifInterface.ORIENTATION_ROTATE_180:
+                    degree = 180;
+                    break;
+                case ExifInterface.ORIENTATION_ROTATE_270:
+                    degree = 270;
+                    break;
+            }
+        } catch (IOException e) {
+            e.printStackTrace();
+        }
+        return degree;
+    }
+
+    /**
+     * 转为圆形图片
+     *
+     * @param src 源图片
+     * @return 圆形图片
+     */
+    public static Bitmap toRound(final Bitmap src) {
+        return toRound(src, 0, 0, false);
+    }
+
+    /**
+     * 转为圆形图片
+     *
+     * @param src     源图片
+     * @param recycle 是否回收
+     * @return 圆形图片
+     */
+    public static Bitmap toRound(final Bitmap src, final boolean recycle) {
+        return toRound(src, 0, 0, recycle);
+    }
+
+    /**
+     * 转为圆形图片
+     *
+     * @param src         源图片
+     * @param borderSize  边框尺寸
+     * @param borderColor 边框颜色
+     * @return 圆形图片
+     */
+    public static Bitmap toRound(final Bitmap src,
+                                 @IntRange(from = 0) int borderSize,
+                                 @ColorInt int borderColor) {
+        return toRound(src, borderSize, borderColor, false);
+    }
+
+    /**
+     * 转为圆形图片
+     *
+     * @param src         源图片
+     * @param recycle     是否回收
+     * @param borderSize  边框尺寸
+     * @param borderColor 边框颜色
+     * @return 圆形图片
+     */
+    public static Bitmap toRound(final Bitmap src,
+                                 @IntRange(from = 0) int borderSize,
+                                 @ColorInt int borderColor,
+                                 final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        int width = src.getWidth();
+        int height = src.getHeight();
+        int size = Math.min(width, height);
+        Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        Bitmap ret = Bitmap.createBitmap(width, height, src.getConfig());
+        float center = size / 2f;
+        RectF rectF = new RectF(0, 0, width, height);
+        rectF.inset((width - size) / 2f, (height - size) / 2f);
+        Matrix matrix = new Matrix();
+        matrix.setTranslate(rectF.left, rectF.top);
+        matrix.preScale((float) size / width, (float) size / height);
+        BitmapShader shader = new BitmapShader(src, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);
+        shader.setLocalMatrix(matrix);
+        paint.setShader(shader);
+        Canvas canvas = new Canvas(ret);
+        canvas.drawRoundRect(rectF, center, center, paint);
+        if (borderSize > 0) {
+            paint.setShader(null);
+            paint.setColor(borderColor);
+            paint.setStyle(Paint.Style.STROKE);
+            paint.setStrokeWidth(borderSize);
+            float radius = center - borderSize / 2f;
+            canvas.drawCircle(width / 2f, height / 2f, radius, paint);
+        }
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 转为圆角图片
+     *
+     * @param src    源图片
+     * @param radius 圆角的度数
+     * @return 圆角图片
+     */
+    public static Bitmap toRoundCorner(final Bitmap src, final float radius) {
+        return toRoundCorner(src, radius, 0, 0, false);
+    }
+
+    /**
+     * 转为圆角图片
+     *
+     * @param src     源图片
+     * @param radius  圆角的度数
+     * @param recycle 是否回收
+     * @return 圆角图片
+     */
+    public static Bitmap toRoundCorner(final Bitmap src,
+                                       final float radius,
+                                       final boolean recycle) {
+        return toRoundCorner(src, radius, 0, 0, recycle);
+    }
+
+    /**
+     * 转为圆角图片
+     *
+     * @param src         源图片
+     * @param radius      圆角的度数
+     * @param borderSize  边框尺寸
+     * @param borderColor 边框颜色
+     * @return 圆角图片
+     */
+    public static Bitmap toRoundCorner(final Bitmap src,
+                                       final float radius,
+                                       @IntRange(from = 0) int borderSize,
+                                       @ColorInt int borderColor) {
+        return toRoundCorner(src, radius, borderSize, borderColor, false);
+    }
+
+    /**
+     * 转为圆角图片
+     *
+     * @param src         源图片
+     * @param radius      圆角的度数
+     * @param borderSize  边框尺寸
+     * @param borderColor 边框颜色
+     * @param recycle     是否回收
+     * @return 圆角图片
+     */
+    public static Bitmap toRoundCorner(final Bitmap src,
+                                       final float radius,
+                                       @IntRange(from = 0) int borderSize,
+                                       @ColorInt int borderColor,
+                                       final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        int width = src.getWidth();
+        int height = src.getHeight();
+        Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        Bitmap ret = Bitmap.createBitmap(width, height, src.getConfig());
+        BitmapShader shader = new BitmapShader(src, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);
+        paint.setShader(shader);
+        Canvas canvas = new Canvas(ret);
+        RectF rectF = new RectF(0, 0, width, height);
+        float halfBorderSize = borderSize / 2f;
+        rectF.inset(halfBorderSize, halfBorderSize);
+        canvas.drawRoundRect(rectF, radius, radius, paint);
+        if (borderSize > 0) {
+            paint.setShader(null);
+            paint.setColor(borderColor);
+            paint.setStyle(Paint.Style.STROKE);
+            paint.setStrokeWidth(borderSize);
+            paint.setStrokeCap(Paint.Cap.ROUND);
+            canvas.drawRoundRect(rectF, radius, radius, paint);
+        }
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 添加圆角边框
+     *
+     * @param src          源图片
+     * @param borderSize   边框尺寸
+     * @param color        边框颜色
+     * @param cornerRadius 圆角半径
+     * @return 圆角边框图
+     */
+    public static Bitmap addCornerBorder(final Bitmap src,
+                                         @IntRange(from = 1) final int borderSize,
+                                         @ColorInt final int color,
+                                         @FloatRange(from = 0) final float cornerRadius) {
+        return addBorder(src, borderSize, color, false, cornerRadius, false);
+    }
+
+    /**
+     * 添加圆角边框
+     *
+     * @param src          源图片
+     * @param borderSize   边框尺寸
+     * @param color        边框颜色
+     * @param cornerRadius 圆角半径
+     * @param recycle      是否回收
+     * @return 圆角边框图
+     */
+    public static Bitmap addCornerBorder(final Bitmap src,
+                                         @IntRange(from = 1) final int borderSize,
+                                         @ColorInt final int color,
+                                         @FloatRange(from = 0) final float cornerRadius,
+                                         final boolean recycle) {
+        return addBorder(src, borderSize, color, false, cornerRadius, recycle);
+    }
+
+    /**
+     * 添加圆形边框
+     *
+     * @param src        源图片
+     * @param borderSize 边框尺寸
+     * @param color      边框颜色
+     * @return 圆形边框图
+     */
+    public static Bitmap addCircleBorder(final Bitmap src,
+                                         @IntRange(from = 1) final int borderSize,
+                                         @ColorInt final int color) {
+        return addBorder(src, borderSize, color, true, 0, false);
+    }
+
+    /**
+     * 添加圆形边框
+     *
+     * @param src        源图片
+     * @param borderSize 边框尺寸
+     * @param color      边框颜色
+     * @param recycle    是否回收
+     * @return 圆形边框图
+     */
+    public static Bitmap addCircleBorder(final Bitmap src,
+                                         @IntRange(from = 1) final int borderSize,
+                                         @ColorInt final int color,
+                                         final boolean recycle) {
+        return addBorder(src, borderSize, color, true, 0, recycle);
+    }
+
+    /**
+     * 添加边框
+     *
+     * @param src          源图片
+     * @param borderSize   边框尺寸
+     * @param color        边框颜色
+     * @param isCircle     是否画圆
+     * @param cornerRadius 圆角半径
+     * @param recycle      是否回收
+     * @return 边框图
+     */
+    private static Bitmap addBorder(final Bitmap src,
+                                    @IntRange(from = 1) final int borderSize,
+                                    @ColorInt final int color,
+                                    final boolean isCircle,
+                                    final float cornerRadius,
+                                    final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        Bitmap ret = recycle ? src : src.copy(src.getConfig(), true);
+        int width = ret.getWidth();
+        int height = ret.getHeight();
+        Canvas canvas = new Canvas(ret);
+        Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        paint.setColor(color);
+        paint.setStyle(Paint.Style.STROKE);
+        paint.setStrokeWidth(borderSize);
+        if (isCircle) {
+            float radius = Math.min(width, height) / 2f - borderSize / 2f;
+            canvas.drawCircle(width / 2f, height / 2f, radius, paint);
+        } else {
+            int halfBorderSize = borderSize >> 1;
+            RectF rectF = new RectF(halfBorderSize, halfBorderSize,
+                    width - halfBorderSize, height - halfBorderSize);
+            canvas.drawRoundRect(rectF, cornerRadius, cornerRadius, paint);
+        }
+        return ret;
+    }
+
+    /**
+     * 添加倒影
+     *
+     * @param src              源图片的
+     * @param reflectionHeight 倒影高度
+     * @return 带倒影图片
+     */
+    public static Bitmap addReflection(final Bitmap src, final int reflectionHeight) {
+        return addReflection(src, reflectionHeight, false);
+    }
+
+    /**
+     * 添加倒影
+     *
+     * @param src              源图片的
+     * @param reflectionHeight 倒影高度
+     * @param recycle          是否回收
+     * @return 带倒影图片
+     */
+    public static Bitmap addReflection(final Bitmap src,
+                                       final int reflectionHeight,
+                                       final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        // 原图与倒影之间的间距
+        final int REFLECTION_GAP = 0;
+        int srcWidth = src.getWidth();
+        int srcHeight = src.getHeight();
+        Matrix matrix = new Matrix();
+        matrix.preScale(1, -1);
+        Bitmap reflectionBitmap = Bitmap.createBitmap(src, 0, srcHeight - reflectionHeight,
+                srcWidth, reflectionHeight, matrix, false);
+        Bitmap ret = Bitmap.createBitmap(srcWidth, srcHeight + reflectionHeight, src.getConfig());
+        Canvas canvas = new Canvas(ret);
+        canvas.drawBitmap(src, 0, 0, null);
+        canvas.drawBitmap(reflectionBitmap, 0, srcHeight + REFLECTION_GAP, null);
+        Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        LinearGradient shader = new LinearGradient(
+                0, srcHeight,
+                0, ret.getHeight() + REFLECTION_GAP,
+                0x70FFFFFF,
+                0x00FFFFFF,
+                Shader.TileMode.MIRROR);
+        paint.setShader(shader);
+        paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_IN));
+        canvas.drawRect(0, srcHeight + REFLECTION_GAP, srcWidth, ret.getHeight(), paint);
+        if (!reflectionBitmap.isRecycled()) reflectionBitmap.recycle();
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 添加文字水印
+     *
+     * @param src      源图片
+     * @param content  水印文本
+     * @param textSize 水印字体大小
+     * @param color    水印字体颜色
+     * @param x        起始坐标x
+     * @param y        起始坐标y
+     * @return 带有文字水印的图片
+     */
+    public static Bitmap addTextWatermark(final Bitmap src,
+                                          final String content,
+                                          final int textSize,
+                                          @ColorInt final int color,
+                                          final float x,
+                                          final float y) {
+        return addTextWatermark(src, content, textSize, color, x, y, false);
+    }
+
+    /**
+     * 添加文字水印
+     *
+     * @param src      源图片
+     * @param content  水印文本
+     * @param textSize 水印字体大小
+     * @param color    水印字体颜色
+     * @param x        起始坐标x
+     * @param y        起始坐标y
+     * @param recycle  是否回收
+     * @return 带有文字水印的图片
+     */
+    public static Bitmap addTextWatermark(final Bitmap src,
+                                          final String content,
+                                          final float textSize,
+                                          @ColorInt final int color,
+                                          final float x,
+                                          final float y,
+                                          final boolean recycle) {
+        if (isEmptyBitmap(src) || content == null) return null;
+        Bitmap ret = src.copy(src.getConfig(), true);
+        Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+        Canvas canvas = new Canvas(ret);
+        paint.setColor(color);
+        paint.setTextSize(textSize);
+        Rect bounds = new Rect();
+        paint.getTextBounds(content, 0, content.length(), bounds);
+        canvas.drawText(content, x, y + textSize, paint);
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 添加图片水印
+     *
+     * @param src       源图片
+     * @param watermark 图片水印
+     * @param x         起始坐标x
+     * @param y         起始坐标y
+     * @param alpha     透明度
+     * @return 带有图片水印的图片
+     */
+    public static Bitmap addImageWatermark(final Bitmap src,
+                                           final Bitmap watermark,
+                                           final int x, final int y,
+                                           final int alpha) {
+        return addImageWatermark(src, watermark, x, y, alpha, false);
+    }
+
+    /**
+     * 添加图片水印
+     *
+     * @param src       源图片
+     * @param watermark 图片水印
+     * @param x         起始坐标x
+     * @param y         起始坐标y
+     * @param alpha     透明度
+     * @param recycle   是否回收
+     * @return 带有图片水印的图片
+     */
+    public static Bitmap addImageWatermark(final Bitmap src,
+                                           final Bitmap watermark,
+                                           final int x,
+                                           final int y,
+                                           final int alpha,
+                                           final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        Bitmap ret = src.copy(src.getConfig(), true);
+        if (!isEmptyBitmap(watermark)) {
+            Paint paint = new Paint(Paint.ANTI_ALIAS_FLAG);
+            Canvas canvas = new Canvas(ret);
+            paint.setAlpha(alpha);
+            canvas.drawBitmap(watermark, x, y, paint);
+        }
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 转为alpha位图
+     *
+     * @param src 源图片
+     * @return alpha位图
+     */
+    public static Bitmap toAlpha(final Bitmap src) {
+        return toAlpha(src, false);
+    }
+
+    /**
+     * 转为alpha位图
+     *
+     * @param src     源图片
+     * @param recycle 是否回收
+     * @return alpha位图
+     */
+    public static Bitmap toAlpha(final Bitmap src, final Boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        Bitmap ret = src.extractAlpha();
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 转为灰度图片
+     *
+     * @param src 源图片
+     * @return 灰度图
+     */
+    public static Bitmap toGray(final Bitmap src) {
+        return toGray(src, false);
+    }
+
+    /**
+     * 转为灰度图片
+     *
+     * @param src     源图片
+     * @param recycle 是否回收
+     * @return 灰度图
+     */
+    public static Bitmap toGray(final Bitmap src, final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        Bitmap ret = Bitmap.createBitmap(src.getWidth(), src.getHeight(), src.getConfig());
+        Canvas canvas = new Canvas(ret);
+        Paint paint = new Paint();
+        ColorMatrix colorMatrix = new ColorMatrix();
+        colorMatrix.setSaturation(0);
+        ColorMatrixColorFilter colorMatrixColorFilter = new ColorMatrixColorFilter(colorMatrix);
+        paint.setColorFilter(colorMatrixColorFilter);
+        canvas.drawBitmap(src, 0, 0, paint);
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * 快速模糊
+     * <p>先缩小原图，对小图进行模糊，再放大回原先尺寸</p>
+     *
+     * @param src    源图片
+     * @param scale  缩放比例(0...1)
+     * @param radius 模糊半径
+     * @return 模糊后的图片
+     */
+    public static Bitmap fastBlur(final Bitmap src,
+                                  @FloatRange(from = 0, to = 1, fromInclusive = false) final float scale,
+                                  @FloatRange(from = 0, to = 25, fromInclusive = false) final float radius) {
+        return fastBlur(src, scale, radius, false);
+    }
+
+    /**
+     * 快速模糊图片
+     * <p>先缩小原图，对小图进行模糊，再放大回原先尺寸</p>
+     *
+     * @param src     源图片
+     * @param scale   缩放比例(0...1)
+     * @param radius  模糊半径(0...25)
+     * @param recycle 是否回收
+     * @return 模糊后的图片
+     */
+    public static Bitmap fastBlur(final Bitmap src,
+                                  @FloatRange(from = 0, to = 1, fromInclusive = false) final float scale,
+                                  @FloatRange(from = 0, to = 25, fromInclusive = false) final float radius,
+                                  final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        int width = src.getWidth();
+        int height = src.getHeight();
+        Matrix matrix = new Matrix();
+        matrix.setScale(scale, scale);
+        Bitmap scaleBitmap = Bitmap.createBitmap(src, 0, 0, src.getWidth(), src.getHeight(), matrix, true);
+        Paint paint = new Paint(Paint.FILTER_BITMAP_FLAG | Paint.ANTI_ALIAS_FLAG);
+        Canvas canvas = new Canvas();
+        PorterDuffColorFilter filter = new PorterDuffColorFilter(
+                Color.TRANSPARENT, PorterDuff.Mode.SRC_ATOP);
+        paint.setColorFilter(filter);
+        canvas.scale(scale, scale);
+        canvas.drawBitmap(scaleBitmap, 0, 0, paint);
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            scaleBitmap = renderScriptBlur(scaleBitmap, radius, recycle);
+        } else {
+            scaleBitmap = stackBlur(scaleBitmap, (int) radius, recycle);
+        }
+        if (scale == 1) return scaleBitmap;
+        Bitmap ret = Bitmap.createScaledBitmap(scaleBitmap, width, height, true);
+        if (scaleBitmap != null && !scaleBitmap.isRecycled()) scaleBitmap.recycle();
+        if (recycle && !src.isRecycled()) src.recycle();
+        return ret;
+    }
+
+    /**
+     * renderScript模糊图片
+     * <p>API大于17</p>
+     *
+     * @param src    源图片
+     * @param radius 模糊半径(0...25)
+     * @return 模糊后的图片
+     */
+    @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR1)
+    public static Bitmap renderScriptBlur(final Bitmap src,
+                                          @FloatRange(from = 0, to = 25, fromInclusive = false) final float radius) {
+        return renderScriptBlur(src, radius, false);
+    }
+
+    /**
+     * renderScript模糊图片
+     * <p>API大于17</p>
+     *
+     * @param src     源图片
+     * @param radius  模糊半径(0...25)
+     * @param recycle 是否回收
+     * @return 模糊后的图片
+     */
+    @TargetApi(Build.VERSION_CODES.JELLY_BEAN_MR1)
+    public static Bitmap renderScriptBlur(final Bitmap src,
+                                          @FloatRange(from = 0, to = 25, fromInclusive = false) final float radius,
+                                          final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        RenderScript rs = null;
+        Bitmap ret = recycle ? src : src.copy(src.getConfig(), true);
+        try {
+            rs = RenderScript.create(Utils.getApp());
+            rs.setMessageHandler(new RenderScript.RSMessageHandler());
+            Allocation input = Allocation.createFromBitmap(rs, ret, Allocation.MipmapControl.MIPMAP_NONE, Allocation
+                    .USAGE_SCRIPT);
+            Allocation output = Allocation.createTyped(rs, input.getType());
+            ScriptIntrinsicBlur blurScript = ScriptIntrinsicBlur.create(rs, Element.U8_4(rs));
+            blurScript.setInput(input);
+            blurScript.setRadius(radius);
+            blurScript.forEach(output);
+            output.copyTo(ret);
+        } finally {
+            if (rs != null) {
+                rs.destroy();
+            }
+        }
+        return ret;
+    }
+
+    /**
+     * stack模糊图片
+     *
+     * @param src    源图片
+     * @param radius 模糊半径
+     * @return stack模糊后的图片
+     */
+    public static Bitmap stackBlur(final Bitmap src, final int radius) {
+        return stackBlur(src, radius, false);
+    }
+
+    /**
+     * stack模糊图片
+     *
+     * @param src     源图片
+     * @param radius  模糊半径
+     * @param recycle 是否回收
+     * @return stack模糊后的图片
+     */
+    public static Bitmap stackBlur(final Bitmap src, final int radius, final boolean recycle) {
+        Bitmap ret = recycle ? src : src.copy(src.getConfig(), true);
+        if (radius < 1) {
+            return null;
+        }
+
+        int w = ret.getWidth();
+        int h = ret.getHeight();
+
+        int[] pix = new int[w * h];
+        ret.getPixels(pix, 0, w, 0, 0, w, h);
+
+        int wm = w - 1;
+        int hm = h - 1;
+        int wh = w * h;
+        int div = radius + radius + 1;
+
+        int r[] = new int[wh];
+        int g[] = new int[wh];
+        int b[] = new int[wh];
+        int rsum, gsum, bsum, x, y, i, p, yp, yi, yw;
+        int vmin[] = new int[Math.max(w, h)];
+
+        int divsum = (div + 1) >> 1;
+        divsum *= divsum;
+        int dv[] = new int[256 * divsum];
+        for (i = 0; i < 256 * divsum; i++) {
+            dv[i] = (i / divsum);
+        }
+
+        yw = yi = 0;
+
+        int[][] stack = new int[div][3];
+        int stackpointer;
+        int stackstart;
+        int[] sir;
+        int rbs;
+        int r1 = radius + 1;
+        int routsum, goutsum, boutsum;
+        int rinsum, ginsum, binsum;
+
+        for (y = 0; y < h; y++) {
+            rinsum = ginsum = binsum = routsum = goutsum = boutsum = rsum = gsum = bsum = 0;
+            for (i = -radius; i <= radius; i++) {
+                p = pix[yi + Math.min(wm, Math.max(i, 0))];
+                sir = stack[i + radius];
+                sir[0] = (p & 0xff0000) >> 16;
+                sir[1] = (p & 0x00ff00) >> 8;
+                sir[2] = (p & 0x0000ff);
+                rbs = r1 - Math.abs(i);
+                rsum += sir[0] * rbs;
+                gsum += sir[1] * rbs;
+                bsum += sir[2] * rbs;
+                if (i > 0) {
+                    rinsum += sir[0];
+                    ginsum += sir[1];
+                    binsum += sir[2];
+                } else {
+                    routsum += sir[0];
+                    goutsum += sir[1];
+                    boutsum += sir[2];
+                }
+            }
+            stackpointer = radius;
+
+            for (x = 0; x < w; x++) {
+
+                r[yi] = dv[rsum];
+                g[yi] = dv[gsum];
+                b[yi] = dv[bsum];
+
+                rsum -= routsum;
+                gsum -= goutsum;
+                bsum -= boutsum;
+
+                stackstart = stackpointer - radius + div;
+                sir = stack[stackstart % div];
+
+                routsum -= sir[0];
+                goutsum -= sir[1];
+                boutsum -= sir[2];
+
+                if (y == 0) {
+                    vmin[x] = Math.min(x + radius + 1, wm);
+                }
+                p = pix[yw + vmin[x]];
+
+                sir[0] = (p & 0xff0000) >> 16;
+                sir[1] = (p & 0x00ff00) >> 8;
+                sir[2] = (p & 0x0000ff);
+
+                rinsum += sir[0];
+                ginsum += sir[1];
+                binsum += sir[2];
+
+                rsum += rinsum;
+                gsum += ginsum;
+                bsum += binsum;
+
+                stackpointer = (stackpointer + 1) % div;
+                sir = stack[(stackpointer) % div];
+
+                routsum += sir[0];
+                goutsum += sir[1];
+                boutsum += sir[2];
+
+                rinsum -= sir[0];
+                ginsum -= sir[1];
+                binsum -= sir[2];
+
+                yi++;
+            }
+            yw += w;
+        }
+        for (x = 0; x < w; x++) {
+            rinsum = ginsum = binsum = routsum = goutsum = boutsum = rsum = gsum = bsum = 0;
+            yp = -radius * w;
+            for (i = -radius; i <= radius; i++) {
+                yi = Math.max(0, yp) + x;
+
+                sir = stack[i + radius];
+
+                sir[0] = r[yi];
+                sir[1] = g[yi];
+                sir[2] = b[yi];
+
+                rbs = r1 - Math.abs(i);
+
+                rsum += r[yi] * rbs;
+                gsum += g[yi] * rbs;
+                bsum += b[yi] * rbs;
+
+                if (i > 0) {
+                    rinsum += sir[0];
+                    ginsum += sir[1];
+                    binsum += sir[2];
+                } else {
+                    routsum += sir[0];
+                    goutsum += sir[1];
+                    boutsum += sir[2];
+                }
+
+                if (i < hm) {
+                    yp += w;
+                }
+            }
+            yi = x;
+            stackpointer = radius;
+            for (y = 0; y < h; y++) {
+                // Preserve alpha channel: ( 0xff000000 & pix[yi] )
+                pix[yi] = (0xff000000 & pix[yi]) | (dv[rsum] << 16) | (dv[gsum] << 8) | dv[bsum];
+
+                rsum -= routsum;
+                gsum -= goutsum;
+                bsum -= boutsum;
+
+                stackstart = stackpointer - radius + div;
+                sir = stack[stackstart % div];
+
+                routsum -= sir[0];
+                goutsum -= sir[1];
+                boutsum -= sir[2];
+
+                if (x == 0) {
+                    vmin[y] = Math.min(y + r1, hm) * w;
+                }
+                p = x + vmin[y];
+
+                sir[0] = r[p];
+                sir[1] = g[p];
+                sir[2] = b[p];
+
+                rinsum += sir[0];
+                ginsum += sir[1];
+                binsum += sir[2];
+
+                rsum += rinsum;
+                gsum += ginsum;
+                bsum += binsum;
+
+                stackpointer = (stackpointer + 1) % div;
+                sir = stack[stackpointer];
+
+                routsum += sir[0];
+                goutsum += sir[1];
+                boutsum += sir[2];
+
+                rinsum -= sir[0];
+                ginsum -= sir[1];
+                binsum -= sir[2];
+
+                yi += w;
+            }
+        }
+        ret.setPixels(pix, 0, w, 0, 0, w, h);
+        return ret;
+    }
+
+    /**
+     * 保存图片
+     *
+     * @param src      源图片
+     * @param filePath 要保存到的文件路径
+     * @param format   格式
+     * @return {@code true}: 成功<br>{@code false}: 失败
+     */
+    public static boolean save(final Bitmap src, final String filePath, final CompressFormat format) {
+        return save(src, getFileByPath(filePath), format, false);
+    }
+
+    /**
+     * 保存图片
+     *
+     * @param src    源图片
+     * @param file   要保存到的文件
+     * @param format 格式
+     * @return {@code true}: 成功<br>{@code false}: 失败
+     */
+    public static boolean save(final Bitmap src, final File file, final CompressFormat format) {
+        return save(src, file, format, false);
+    }
+
+    /**
+     * 保存图片
+     *
+     * @param src      源图片
+     * @param filePath 要保存到的文件路径
+     * @param format   格式
+     * @param recycle  是否回收
+     * @return {@code true}: 成功<br>{@code false}: 失败
+     */
+    public static boolean save(final Bitmap src, final String filePath, final CompressFormat format, final boolean recycle) {
+        return save(src, getFileByPath(filePath), format, recycle);
+    }
+
+    /**
+     * 保存图片
+     *
+     * @param src     源图片
+     * @param file    要保存到的文件
+     * @param format  格式
+     * @param recycle 是否回收
+     * @return {@code true}: 成功<br>{@code false}: 失败
+     */
+    public static boolean save(final Bitmap src, final File file, final CompressFormat format, final boolean recycle) {
+        if (isEmptyBitmap(src) || !createFileByDeleteOldFile(file)) return false;
+        OutputStream os = null;
+        boolean ret = false;
+        try {
+            os = new BufferedOutputStream(new FileOutputStream(file));
+            ret = src.compress(format, 100, os);
+            if (recycle && !src.isRecycled()) src.recycle();
+        } catch (IOException e) {
+            e.printStackTrace();
+        } finally {
+            CloseUtils.closeIO(os);
+        }
+        return ret;
+    }
+
+    /**
+     * 根据文件名判断文件是否为图片
+     *
+     * @param file 　文件
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isImage(final File file) {
+        return file != null && isImage(file.getPath());
+    }
+
+    /**
+     * 根据文件名判断文件是否为图片
+     *
+     * @param filePath 　文件路径
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isImage(final String filePath) {
+        String path = filePath.toUpperCase();
+        return path.endsWith(".PNG") || path.endsWith(".JPG")
+                || path.endsWith(".JPEG") || path.endsWith(".BMP")
+                || path.endsWith(".GIF");
+    }
+
+    /**
+     * 获取图片类型
+     *
+     * @param filePath 文件路径
+     * @return 图片类型
+     */
+    public static String getImageType(final String filePath) {
+        return getImageType(getFileByPath(filePath));
+    }
+
+    /**
+     * 获取图片类型
+     *
+     * @param file 文件
+     * @return 图片类型
+     */
+    public static String getImageType(final File file) {
+        if (file == null) return null;
+        InputStream is = null;
+        try {
+            is = new FileInputStream(file);
+            return getImageType(is);
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        } finally {
+            CloseUtils.closeIO(is);
+        }
+    }
+
+    /**
+     * 流获取图片类型
+     *
+     * @param is 图片输入流
+     * @return 图片类型
+     */
+    public static String getImageType(final InputStream is) {
+        if (is == null) return null;
+        try {
+            byte[] bytes = new byte[8];
+            return is.read(bytes, 0, 8) != -1 ? getImageType(bytes) : null;
+        } catch (IOException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+
+    /**
+     * 获取图片类型
+     *
+     * @param bytes bitmap的前8字节
+     * @return 图片类型
+     */
+    public static String getImageType(final byte[] bytes) {
+        if (isJPEG(bytes)) return "JPEG";
+        if (isGIF(bytes)) return "GIF";
+        if (isPNG(bytes)) return "PNG";
+        if (isBMP(bytes)) return "BMP";
+        return null;
+    }
+
+    private static boolean isJPEG(final byte[] b) {
+        return b.length >= 2
+                && (b[0] == (byte) 0xFF) && (b[1] == (byte) 0xD8);
+    }
+
+    private static boolean isGIF(final byte[] b) {
+        return b.length >= 6
+                && b[0] == 'G' && b[1] == 'I'
+                && b[2] == 'F' && b[3] == '8'
+                && (b[4] == '7' || b[4] == '9') && b[5] == 'a';
+    }
+
+    private static boolean isPNG(final byte[] b) {
+        return b.length >= 8
+                && (b[0] == (byte) 137 && b[1] == (byte) 80
+                && b[2] == (byte) 78 && b[3] == (byte) 71
+                && b[4] == (byte) 13 && b[5] == (byte) 10
+                && b[6] == (byte) 26 && b[7] == (byte) 10);
+    }
+
+    private static boolean isBMP(final byte[] b) {
+        return b.length >= 2
+                && (b[0] == 0x42) && (b[1] == 0x4d);
+    }
+
+    /**
+     * 判断bitmap对象是否为空
+     *
+     * @param src 源图片
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    private static boolean isEmptyBitmap(final Bitmap src) {
+        return src == null || src.getWidth() == 0 || src.getHeight() == 0;
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // 下方和压缩有关
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 按缩放压缩
+     *
+     * @param src       源图片
+     * @param newWidth  新宽度
+     * @param newHeight 新高度
+     * @return 缩放压缩后的图片
+     */
+    public static Bitmap compressByScale(final Bitmap src, final int newWidth, final int newHeight) {
+        return scale(src, newWidth, newHeight, false);
+    }
+
+    /**
+     * 按缩放压缩
+     *
+     * @param src       源图片
+     * @param newWidth  新宽度
+     * @param newHeight 新高度
+     * @param recycle   是否回收
+     * @return 缩放压缩后的图片
+     */
+    public static Bitmap compressByScale(final Bitmap src, final int newWidth, final int newHeight, final boolean recycle) {
+        return scale(src, newWidth, newHeight, recycle);
+    }
+
+    /**
+     * 按缩放压缩
+     *
+     * @param src         源图片
+     * @param scaleWidth  缩放宽度倍数
+     * @param scaleHeight 缩放高度倍数
+     * @return 缩放压缩后的图片
+     */
+    public static Bitmap compressByScale(final Bitmap src, final float scaleWidth, final float scaleHeight) {
+        return scale(src, scaleWidth, scaleHeight, false);
+    }
+
+    /**
+     * 按缩放压缩
+     *
+     * @param src         源图片
+     * @param scaleWidth  缩放宽度倍数
+     * @param scaleHeight 缩放高度倍数
+     * @param recycle     是否回收
+     * @return 缩放压缩后的图片
+     */
+    public static Bitmap compressByScale(final Bitmap src, final float scaleWidth, final float scaleHeight, final boolean recycle) {
+        return scale(src, scaleWidth, scaleHeight, recycle);
+    }
+
+    /**
+     * 按质量压缩
+     *
+     * @param src     源图片
+     * @param quality 质量
+     * @return 质量压缩后的图片
+     */
+    public static Bitmap compressByQuality(final Bitmap src, @IntRange(from = 0, to = 100) final int quality) {
+        return compressByQuality(src, quality, false);
+    }
+
+    /**
+     * 按质量压缩
+     *
+     * @param src     源图片
+     * @param quality 质量
+     * @param recycle 是否回收
+     * @return 质量压缩后的图片
+     */
+    public static Bitmap compressByQuality(final Bitmap src, @IntRange(from = 0, to = 100) final int quality, final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        src.compress(CompressFormat.JPEG, quality, baos);
+        byte[] bytes = baos.toByteArray();
+        if (recycle && !src.isRecycled()) src.recycle();
+        return BitmapFactory.decodeByteArray(bytes, 0, bytes.length);
+    }
+
+    /**
+     * 按质量压缩
+     *
+     * @param src         源图片
+     * @param maxByteSize 允许最大值字节数
+     * @return 质量压缩压缩过的图片
+     */
+    public static Bitmap compressByQuality(final Bitmap src, final long maxByteSize) {
+        return compressByQuality(src, maxByteSize, false);
+    }
+
+    /**
+     * 按质量压缩
+     *
+     * @param src         源图片
+     * @param maxByteSize 允许最大值字节数
+     * @param recycle     是否回收
+     * @return 质量压缩压缩过的图片
+     */
+    public static Bitmap compressByQuality(final Bitmap src, final long maxByteSize, final boolean recycle) {
+        if (isEmptyBitmap(src) || maxByteSize <= 0) return null;
+        ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        src.compress(CompressFormat.JPEG, 100, baos);
+        byte[] bytes;
+        if (baos.size() <= maxByteSize) {// 最好质量的不大于最大字节，则返回最佳质量
+            bytes = baos.toByteArray();
+        } else {
+            baos.reset();
+            src.compress(CompressFormat.JPEG, 0, baos);
+            if (baos.size() >= maxByteSize) { // 最差质量不小于最大字节，则返回最差质量
+                bytes = baos.toByteArray();
+            } else {
+                // 二分法寻找最佳质量
+                int st = 0;
+                int end = 100;
+                int mid = 0;
+                while (st < end) {
+                    mid = (st + end) / 2;
+                    baos.reset();
+                    src.compress(CompressFormat.JPEG, mid, baos);
+                    int len = baos.size();
+                    if (len == maxByteSize) {
+                        break;
+                    } else if (len > maxByteSize) {
+                        end = mid - 1;
+                    } else {
+                        st = mid + 1;
+                    }
+                }
+                if (end == mid - 1) {
+                    baos.reset();
+                    src.compress(CompressFormat.JPEG, st, baos);
+                }
+                bytes = baos.toByteArray();
+            }
+        }
+        if (recycle && !src.isRecycled()) src.recycle();
+        return BitmapFactory.decodeByteArray(bytes, 0, bytes.length);
+    }
+
+    /**
+     * 按采样大小压缩
+     *
+     * @param src        源图片
+     * @param sampleSize 采样率大小
+     * @return 按采样率压缩后的图片
+     */
+
+    public static Bitmap compressBySampleSize(final Bitmap src, final int sampleSize) {
+        return compressBySampleSize(src, sampleSize, false);
+    }
+
+    /**
+     * 按采样大小压缩
+     *
+     * @param src        源图片
+     * @param sampleSize 采样率大小
+     * @param recycle    是否回收
+     * @return 按采样率压缩后的图片
+     */
+    public static Bitmap compressBySampleSize(final Bitmap src, final int sampleSize, final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        BitmapFactory.Options options = new BitmapFactory.Options();
+        options.inSampleSize = sampleSize;
+        ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        src.compress(CompressFormat.JPEG, 100, baos);
+        byte[] bytes = baos.toByteArray();
+        if (recycle && !src.isRecycled()) src.recycle();
+        return BitmapFactory.decodeByteArray(bytes, 0, bytes.length, options);
+    }
+
+    /**
+     * 按采样大小压缩
+     *
+     * @param src       源图片
+     * @param maxWidth  最大宽度
+     * @param maxHeight 最大高度
+     * @return 按采样率压缩后的图片
+     */
+    public static Bitmap compressBySampleSize(final Bitmap src, final int maxWidth, final int maxHeight) {
+        return compressBySampleSize(src, maxWidth, maxHeight, false);
+    }
+
+    /**
+     * 按采样大小压缩
+     *
+     * @param src       源图片
+     * @param maxWidth  最大宽度
+     * @param maxHeight 最大高度
+     * @param recycle   是否回收
+     * @return 按采样率压缩后的图片
+     */
+    public static Bitmap compressBySampleSize(final Bitmap src, final int maxWidth, final int maxHeight, final boolean recycle) {
+        if (isEmptyBitmap(src)) return null;
+        BitmapFactory.Options options = new BitmapFactory.Options();
+        options.inJustDecodeBounds = true;
+        ByteArrayOutputStream baos = new ByteArrayOutputStream();
+        src.compress(CompressFormat.JPEG, 100, baos);
+        byte[] bytes = baos.toByteArray();
+        BitmapFactory.decodeByteArray(bytes, 0, bytes.length, options);
+        options.inSampleSize = calculateInSampleSize(options, maxWidth, maxHeight);
+        options.inJustDecodeBounds = false;
+        if (recycle && !src.isRecycled()) src.recycle();
+        return BitmapFactory.decodeByteArray(bytes, 0, bytes.length, options);
+    }
+
+    private static File getFileByPath(final String filePath) {
+        return isSpace(filePath) ? null : new File(filePath);
+    }
+
+    private static boolean createFileByDeleteOldFile(final File file) {
+        if (file == null) return false;
+        if (file.exists() && !file.delete()) return false;
+        if (!createOrExistsDir(file.getParentFile())) return false;
+        try {
+            return file.createNewFile();
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    private static boolean createOrExistsDir(final File file) {
+        // 如果存在，是目录则返回true，是文件则返回false，不存在则返回是否创建成功
+        return file != null && (file.exists() ? file.isDirectory() : file.mkdirs());
+    }
+
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    /**
+     * 计算采样大小
+     *
+     * @param options   选项
+     * @param maxWidth  最大宽度
+     * @param maxHeight 最大高度
+     * @return 采样大小
+     */
+    private static int calculateInSampleSize(final BitmapFactory.Options options,
+                                             final int maxWidth,
+                                             final int maxHeight) {
+        int height = options.outHeight;
+        int width = options.outWidth;
+        int inSampleSize = 1;
+        while ((width >>= 1) >= maxWidth && (height >>= 1) >= maxHeight) {
+            inSampleSize <<= 1;
+        }
+        return inSampleSize;
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/model/TImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/model/TImage.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/model/TImage.java	(revision )
@@ -0,0 +1,77 @@
+package com.baselib.takephoto.model;
+
+import android.net.Uri;
+
+import java.io.Serializable;
+
+/**
+ * TakePhoto 操作成功返回的处理结果
+ *
+ * Author: JPH
+ * Date: 2016/8/11 17:01
+ */
+public class TImage implements Serializable{
+    private String originalPath;
+    private String compressPath;
+    private FromType fromType;
+    private boolean cropped;
+    private boolean compressed;
+    public static TImage of(String path, FromType fromType){
+        return new TImage(path, fromType);
+    }
+    public static TImage of(Uri uri, FromType fromType){
+        return new TImage(uri, fromType);
+    }
+    private TImage(String path, FromType fromType) {
+        this.originalPath = path;
+        this.fromType = fromType;
+    }
+    private TImage(Uri uri, FromType fromType) {
+        this.originalPath = uri.getPath();
+        this.fromType = fromType;
+    }
+
+    public String getOriginalPath() {
+        return originalPath;
+    }
+
+    public void setOriginalPath(String originalPath) {
+        this.originalPath = originalPath;
+    }
+
+    public String getCompressPath() {
+        return compressPath;
+    }
+
+    public void setCompressPath(String compressPath) {
+        this.compressPath = compressPath;
+    }
+
+    public FromType getFromType() {
+        return fromType;
+    }
+
+    public void setFromType(FromType fromType) {
+        this.fromType = fromType;
+    }
+
+    public boolean isCropped() {
+        return cropped;
+    }
+
+    public void setCropped(boolean cropped) {
+        this.cropped = cropped;
+    }
+
+    public boolean isCompressed() {
+        return compressed;
+    }
+
+    public void setCompressed(boolean compressed) {
+        this.compressed = compressed;
+    }
+
+    public enum FromType {
+        CAMERA, OTHER
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/ClearableEditTextWithIcon.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/ClearableEditTextWithIcon.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/ClearableEditTextWithIcon.java	(revision )
@@ -0,0 +1,118 @@
+package com.baselib.ui.widget;
+
+import android.content.Context;
+import android.graphics.drawable.Drawable;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.util.AttributeSet;
+import android.view.MotionEvent;
+import android.view.View;
+import android.widget.EditText;
+
+import com.baselib.R;
+
+/**
+ * 带有图标和删除符号的可编辑输入框，用户可以自定义传入的显示图标
+ * Created by liuhuaqian on 2017/9/6.
+ */
+
+public class ClearableEditTextWithIcon extends android.support.v7.widget.AppCompatEditText implements View.OnTouchListener, TextWatcher {
+
+    // 删除符号
+    Drawable deleteImage = getResources().getDrawable(R.drawable.close_ico);
+
+    Drawable icon;
+
+    public ClearableEditTextWithIcon(Context context, AttributeSet attrs, int defStyle) {
+        super(context, attrs, defStyle);
+        init();
+    }
+
+    public ClearableEditTextWithIcon(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        init();
+    }
+
+    public ClearableEditTextWithIcon(Context context) {
+        super(context);
+        init();
+    }
+
+    private void init() {
+        ClearableEditTextWithIcon.this.setOnTouchListener(this);
+        ClearableEditTextWithIcon.this.addTextChangedListener(this);
+        ClearableEditTextWithIcon.this.setSingleLine(true);
+        ClearableEditTextWithIcon.this.setMaxLines(1);
+        deleteImage.setBounds(0, 0, deleteImage.getIntrinsicWidth(), deleteImage.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    /**
+     * 传入显示的图标资源id
+     *
+     * @param id
+     */
+    public void setIconResource(int id) {
+        icon = getResources().getDrawable(id);
+        icon.setBounds(0, 0, icon.getIntrinsicWidth(), icon.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    /**
+     * 传入删除图标资源id
+     *
+     * @param id
+     */
+    public void setDeleteImage(int id) {
+        deleteImage = getResources().getDrawable(id);
+        deleteImage.setBounds(0, 0, deleteImage.getIntrinsicWidth(), deleteImage.getIntrinsicHeight());
+        manageClearButton();
+    }
+
+    void manageClearButton() {
+        if (this.getText().toString().equals(""))
+            removeClearButton();
+        else
+            addClearButton();
+    }
+
+    void removeClearButton() {
+        this.setCompoundDrawables(this.icon, this.getCompoundDrawables()[1], null, this.getCompoundDrawables()[3]);
+    }
+
+    void addClearButton() {
+        this.setCompoundDrawables(this.icon, this.getCompoundDrawables()[1], deleteImage,
+                this.getCompoundDrawables()[3]);
+    }
+
+    @Override
+    public boolean onTouch(View v, MotionEvent event) {
+        ClearableEditTextWithIcon et = ClearableEditTextWithIcon.this;
+
+        if (et.getCompoundDrawables()[2] == null)
+            return false;
+        if (event.getAction() != MotionEvent.ACTION_UP)
+            return false;
+        if (event.getX() > et.getWidth() - et.getPaddingRight() - deleteImage.getIntrinsicWidth()) {
+            et.setText("");
+            ClearableEditTextWithIcon.this.removeClearButton();
+        }
+        return false;
+    }
+
+    @Override
+    public void onTextChanged(CharSequence s, int start, int before, int count) {
+        ClearableEditTextWithIcon.this.manageClearButton();
+    }
+
+    @Override
+    public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+
+    }
+
+    @Override
+    public void afterTextChanged(Editable s) {
+
+    }
+
+}
Index: baselib/src/main/java/com/baselib/listview/ViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/listview/ViewHolder.java	(revision )
+++ baselib/src/main/java/com/baselib/listview/ViewHolder.java	(revision )
@@ -0,0 +1,290 @@
+package com.baselib.listview;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.Paint;
+import android.graphics.Typeface;
+import android.graphics.drawable.Drawable;
+import android.os.Build;
+import android.text.util.Linkify;
+import android.util.SparseArray;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.animation.AlphaAnimation;
+import android.widget.Checkable;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.RatingBar;
+import android.widget.TextView;
+
+public class ViewHolder
+{
+    private SparseArray<View> mViews;
+    protected int mPosition;
+    private View mConvertView;
+    private Context mContext;
+    protected int mLayoutId;
+
+    public ViewHolder(Context context, View itemView, ViewGroup parent, int position)
+    {
+        mContext = context;
+        mConvertView = itemView;
+        mPosition = position;
+        mViews = new SparseArray<View>();
+        mConvertView.setTag(this);
+    }
+
+
+    public static ViewHolder get(Context context, View convertView,
+                                 ViewGroup parent, int layoutId, int position)
+    {
+        if (convertView == null)
+        {
+            View itemView = LayoutInflater.from(context).inflate(layoutId, parent,
+                    false);
+            ViewHolder holder = new ViewHolder(context, itemView, parent, position);
+            holder.mLayoutId = layoutId;
+            return holder;
+        } else
+        {
+            ViewHolder holder = (ViewHolder) convertView.getTag();
+            holder.mPosition = position;
+            return holder;
+        }
+    }
+
+
+    /**
+     * 通过viewId获取控件
+     *
+     * @param viewId
+     * @return
+     */
+    public <T extends View> T getView(int viewId)
+    {
+        View view = mViews.get(viewId);
+        if (view == null)
+        {
+            view = mConvertView.findViewById(viewId);
+            mViews.put(viewId, view);
+        }
+        return (T) view;
+    }
+
+    public View getConvertView()
+    {
+        return mConvertView;
+    }
+
+    public int getLayoutId()
+    {
+        return mLayoutId;
+    }
+
+    public void updatePosition(int position)
+    {
+        mPosition = position;
+    }
+
+    public int getItemPosition()
+    {
+        return mPosition;
+    }
+
+
+    /****以下为辅助方法*****/
+
+    /**
+     * 设置TextView的值
+     *
+     * @param viewId
+     * @param text
+     * @return
+     */
+    public ViewHolder setText(int viewId, String text)
+    {
+        TextView tv = getView(viewId);
+        tv.setText(text);
+        return this;
+    }
+
+    public ViewHolder setImageResource(int viewId, int resId)
+    {
+        ImageView view = getView(viewId);
+        view.setImageResource(resId);
+        return this;
+    }
+
+    public ViewHolder setImageBitmap(int viewId, Bitmap bitmap)
+    {
+        ImageView view = getView(viewId);
+        view.setImageBitmap(bitmap);
+        return this;
+    }
+
+    public ViewHolder setImageDrawable(int viewId, Drawable drawable)
+    {
+        ImageView view = getView(viewId);
+        view.setImageDrawable(drawable);
+        return this;
+    }
+
+    public ViewHolder setBackgroundColor(int viewId, int color)
+    {
+        View view = getView(viewId);
+        view.setBackgroundColor(color);
+        return this;
+    }
+
+    public ViewHolder setBackgroundRes(int viewId, int backgroundRes)
+    {
+        View view = getView(viewId);
+        view.setBackgroundResource(backgroundRes);
+        return this;
+    }
+
+    public ViewHolder setTextColor(int viewId, int textColor)
+    {
+        TextView view = getView(viewId);
+        view.setTextColor(textColor);
+        return this;
+    }
+
+    public ViewHolder setTextColorRes(int viewId, int textColorRes)
+    {
+        TextView view = getView(viewId);
+        view.setTextColor(mContext.getResources().getColor(textColorRes));
+        return this;
+    }
+
+    @SuppressLint("NewApi")
+    public ViewHolder setAlpha(int viewId, float value)
+    {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.HONEYCOMB)
+        {
+            getView(viewId).setAlpha(value);
+        } else
+        {
+            // Pre-honeycomb hack to set Alpha value
+            AlphaAnimation alpha = new AlphaAnimation(value, value);
+            alpha.setDuration(0);
+            alpha.setFillAfter(true);
+            getView(viewId).startAnimation(alpha);
+        }
+        return this;
+    }
+
+    public ViewHolder setVisible(int viewId, boolean visible)
+    {
+        View view = getView(viewId);
+        view.setVisibility(visible ? View.VISIBLE : View.GONE);
+        return this;
+    }
+
+    public ViewHolder linkify(int viewId)
+    {
+        TextView view = getView(viewId);
+        Linkify.addLinks(view, Linkify.ALL);
+        return this;
+    }
+
+    public ViewHolder setTypeface(Typeface typeface, int... viewIds)
+    {
+        for (int viewId : viewIds)
+        {
+            TextView view = getView(viewId);
+            view.setTypeface(typeface);
+            view.setPaintFlags(view.getPaintFlags() | Paint.SUBPIXEL_TEXT_FLAG);
+        }
+        return this;
+    }
+
+    public ViewHolder setProgress(int viewId, int progress)
+    {
+        ProgressBar view = getView(viewId);
+        view.setProgress(progress);
+        return this;
+    }
+
+    public ViewHolder setProgress(int viewId, int progress, int max)
+    {
+        ProgressBar view = getView(viewId);
+        view.setMax(max);
+        view.setProgress(progress);
+        return this;
+    }
+
+    public ViewHolder setMax(int viewId, int max)
+    {
+        ProgressBar view = getView(viewId);
+        view.setMax(max);
+        return this;
+    }
+
+    public ViewHolder setRating(int viewId, float rating)
+    {
+        RatingBar view = getView(viewId);
+        view.setRating(rating);
+        return this;
+    }
+
+    public ViewHolder setRating(int viewId, float rating, int max)
+    {
+        RatingBar view = getView(viewId);
+        view.setMax(max);
+        view.setRating(rating);
+        return this;
+    }
+
+    public ViewHolder setTag(int viewId, Object tag)
+    {
+        View view = getView(viewId);
+        view.setTag(tag);
+        return this;
+    }
+
+    public ViewHolder setTag(int viewId, int key, Object tag)
+    {
+        View view = getView(viewId);
+        view.setTag(key, tag);
+        return this;
+    }
+
+    public ViewHolder setChecked(int viewId, boolean checked)
+    {
+        Checkable view = (Checkable) getView(viewId);
+        view.setChecked(checked);
+        return this;
+    }
+
+    /**
+     * 关于事件的
+     */
+    public ViewHolder setOnClickListener(int viewId,
+                                         View.OnClickListener listener)
+    {
+        View view = getView(viewId);
+        view.setOnClickListener(listener);
+        return this;
+    }
+
+    public ViewHolder setOnTouchListener(int viewId,
+                                         View.OnTouchListener listener)
+    {
+        View view = getView(viewId);
+        view.setOnTouchListener(listener);
+        return this;
+    }
+
+    public ViewHolder setOnLongClickListener(int viewId,
+                                             View.OnLongClickListener listener)
+    {
+        View view = getView(viewId);
+        view.setOnLongClickListener(listener);
+        return this;
+    }
+
+
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/FileUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/FileUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/FileUtils.java	(revision )
@@ -0,0 +1,1103 @@
+package com.baselib.utilcode.util;
+
+import android.annotation.SuppressLint;
+
+import java.io.BufferedInputStream;
+import java.io.File;
+import java.io.FileFilter;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.io.InputStream;
+import java.security.DigestInputStream;
+import java.security.MessageDigest;
+import java.security.NoSuchAlgorithmException;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/05/03
+ *     desc  : 文件相关工具类
+ * </pre>
+ */
+public final class FileUtils {
+
+    private FileUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    private static final String LINE_SEP = System.getProperty("line.separator");
+
+    /**
+     * 根据文件路径获取文件
+     *
+     * @param filePath 文件路径
+     * @return 文件
+     */
+    public static File getFileByPath(final String filePath) {
+        return isSpace(filePath) ? null : new File(filePath);
+    }
+
+    /**
+     * 判断文件是否存在
+     *
+     * @param filePath 文件路径
+     * @return {@code true}: 存在<br>{@code false}: 不存在
+     */
+    public static boolean isFileExists(final String filePath) {
+        return isFileExists(getFileByPath(filePath));
+    }
+
+    /**
+     * 判断文件是否存在
+     *
+     * @param file 文件
+     * @return {@code true}: 存在<br>{@code false}: 不存在
+     */
+    public static boolean isFileExists(final File file) {
+        return file != null && file.exists();
+    }
+
+    /**
+     * 重命名文件
+     *
+     * @param filePath 文件路径
+     * @param newName  新名称
+     * @return {@code true}: 重命名成功<br>{@code false}: 重命名失败
+     */
+    public static boolean rename(final String filePath, final String newName) {
+        return rename(getFileByPath(filePath), newName);
+    }
+
+    /**
+     * 重命名文件
+     *
+     * @param file    文件
+     * @param newName 新名称
+     * @return {@code true}: 重命名成功<br>{@code false}: 重命名失败
+     */
+    public static boolean rename(final File file, final String newName) {
+        // 文件为空返回false
+        if (file == null) return false;
+        // 文件不存在返回false
+        if (!file.exists()) return false;
+        // 新的文件名为空返回false
+        if (isSpace(newName)) return false;
+        // 如果文件名没有改变返回true
+        if (newName.equals(file.getName())) return true;
+        File newFile = new File(file.getParent() + File.separator + newName);
+        // 如果重命名的文件已存在返回false
+        return !newFile.exists()
+                && file.renameTo(newFile);
+    }
+
+    /**
+     * 判断是否是目录
+     *
+     * @param dirPath 目录路径
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isDir(final String dirPath) {
+        return isDir(getFileByPath(dirPath));
+    }
+
+    /**
+     * 判断是否是目录
+     *
+     * @param file 文件
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isDir(final File file) {
+        return file != null && file.exists() && file.isDirectory();
+    }
+
+    /**
+     * 判断是否是文件
+     *
+     * @param filePath 文件路径
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isFile(final String filePath) {
+        return isFile(getFileByPath(filePath));
+    }
+
+    /**
+     * 判断是否是文件
+     *
+     * @param file 文件
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isFile(final File file) {
+        return file != null && file.exists() && file.isFile();
+    }
+
+    /**
+     * 判断目录是否存在，不存在则判断是否创建成功
+     *
+     * @param dirPath 目录路径
+     * @return {@code true}: 存在或创建成功<br>{@code false}: 不存在或创建失败
+     */
+    public static boolean createOrExistsDir(final String dirPath) {
+        return createOrExistsDir(getFileByPath(dirPath));
+    }
+
+    /**
+     * 判断目录是否存在，不存在则判断是否创建成功
+     *
+     * @param file 文件
+     * @return {@code true}: 存在或创建成功<br>{@code false}: 不存在或创建失败
+     */
+    public static boolean createOrExistsDir(final File file) {
+        // 如果存在，是目录则返回true，是文件则返回false，不存在则返回是否创建成功
+        return file != null && (file.exists() ? file.isDirectory() : file.mkdirs());
+    }
+
+    /**
+     * 判断文件是否存在，不存在则判断是否创建成功
+     *
+     * @param filePath 文件路径
+     * @return {@code true}: 存在或创建成功<br>{@code false}: 不存在或创建失败
+     */
+    public static boolean createOrExistsFile(final String filePath) {
+        return createOrExistsFile(getFileByPath(filePath));
+    }
+
+    /**
+     * 判断文件是否存在，不存在则判断是否创建成功
+     *
+     * @param file 文件
+     * @return {@code true}: 存在或创建成功<br>{@code false}: 不存在或创建失败
+     */
+    public static boolean createOrExistsFile(final File file) {
+        if (file == null) return false;
+        // 如果存在，是文件则返回true，是目录则返回false
+        if (file.exists()) return file.isFile();
+        if (!createOrExistsDir(file.getParentFile())) return false;
+        try {
+            return file.createNewFile();
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    /**
+     * 判断文件是否存在，存在则在创建之前删除
+     *
+     * @param filePath 文件路径
+     * @return {@code true}: 创建成功<br>{@code false}: 创建失败
+     */
+    public static boolean createFileByDeleteOldFile(final String filePath) {
+        return createFileByDeleteOldFile(getFileByPath(filePath));
+    }
+
+    /**
+     * 判断文件是否存在，存在则在创建之前删除
+     *
+     * @param file 文件
+     * @return {@code true}: 创建成功<br>{@code false}: 创建失败
+     */
+    public static boolean createFileByDeleteOldFile(final File file) {
+        if (file == null) return false;
+        // 文件存在并且删除失败返回false
+        if (file.exists() && !file.delete()) return false;
+        // 创建目录失败返回false
+        if (!createOrExistsDir(file.getParentFile())) return false;
+        try {
+            return file.createNewFile();
+        } catch (IOException e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    /**
+     * 复制或移动目录
+     *
+     * @param srcDirPath  源目录路径
+     * @param destDirPath 目标目录路径
+     * @param listener    是否覆盖监听器
+     * @param isMove      是否移动
+     * @return {@code true}: 复制或移动成功<br>{@code false}: 复制或移动失败
+     */
+    private static boolean copyOrMoveDir(final String srcDirPath, final String destDirPath, final OnReplaceListener listener, final boolean isMove) {
+        return copyOrMoveDir(getFileByPath(srcDirPath), getFileByPath(destDirPath), listener, isMove);
+    }
+
+    /**
+     * 复制或移动目录
+     *
+     * @param srcDir   源目录
+     * @param destDir  目标目录
+     * @param listener 是否覆盖监听器
+     * @param isMove   是否移动
+     * @return {@code true}: 复制或移动成功<br>{@code false}: 复制或移动失败
+     */
+    private static boolean copyOrMoveDir(final File srcDir, final File destDir, final OnReplaceListener listener, final boolean isMove) {
+        if (srcDir == null || destDir == null) return false;
+        // 如果目标目录在源目录中则返回false，看不懂的话好好想想递归怎么结束
+        // srcPath : F:\\MyGithub\\AndroidUtilCode\\utilcode\\src\\test\\res
+        // destPath: F:\\MyGithub\\AndroidUtilCode\\utilcode\\src\\test\\res1
+        // 为防止以上这种情况出现出现误判，须分别在后面加个路径分隔符
+        String srcPath = srcDir.getPath() + File.separator;
+        String destPath = destDir.getPath() + File.separator;
+        if (destPath.contains(srcPath)) return false;
+        // 源文件不存在或者不是目录则返回false
+        if (!srcDir.exists() || !srcDir.isDirectory()) return false;
+        if (destDir.exists()) {
+            if (listener.onReplace()) {// 需要覆盖则删除旧目录
+                if (!deleteAllInDir(destDir)) {// 删除文件失败的话返回false
+                    return false;
+                }
+            } else {// 不需要覆盖直接返回即可true
+                return true;
+            }
+        }
+        // 目标目录不存在返回false
+        if (!createOrExistsDir(destDir)) return false;
+        File[] files = srcDir.listFiles();
+        for (File file : files) {
+            File oneDestFile = new File(destPath + file.getName());
+            if (file.isFile()) {
+                // 如果操作失败返回false
+                if (!copyOrMoveFile(file, oneDestFile, listener, isMove)) return false;
+            } else if (file.isDirectory()) {
+                // 如果操作失败返回false
+                if (!copyOrMoveDir(file, oneDestFile, listener, isMove)) return false;
+            }
+        }
+        return !isMove || deleteDir(srcDir);
+    }
+
+    /**
+     * 复制或移动文件
+     *
+     * @param srcFilePath  源文件路径
+     * @param destFilePath 目标文件路径
+     * @param listener     是否覆盖监听器
+     * @param isMove       是否移动
+     * @return {@code true}: 复制或移动成功<br>{@code false}: 复制或移动失败
+     */
+    private static boolean copyOrMoveFile(final String srcFilePath, final String destFilePath, final OnReplaceListener listener, final boolean isMove) {
+        return copyOrMoveFile(getFileByPath(srcFilePath), getFileByPath(destFilePath), listener, isMove);
+    }
+
+    /**
+     * 复制或移动文件
+     *
+     * @param srcFile  源文件
+     * @param destFile 目标文件
+     * @param listener 是否覆盖监听器
+     * @param isMove   是否移动
+     * @return {@code true}: 复制或移动成功<br>{@code false}: 复制或移动失败
+     */
+    private static boolean copyOrMoveFile(final File srcFile, final File destFile, final OnReplaceListener listener, final boolean isMove) {
+        if (srcFile == null || destFile == null) return false;
+        // 如果源文件和目标文件相同则返回false
+        if (srcFile.equals(destFile)) return false;
+        // 源文件不存在或者不是文件则返回false
+        if (!srcFile.exists() || !srcFile.isFile()) return false;
+        if (destFile.exists()) {// 目标文件存在
+            if (listener.onReplace()) {// 需要覆盖则删除旧文件
+                if (!destFile.delete()) {// 删除文件失败的话返回false
+                    return false;
+                }
+            } else {// 不需要覆盖直接返回即可true
+                return true;
+            }
+        }
+        // 目标目录不存在返回false
+        if (!createOrExistsDir(destFile.getParentFile())) return false;
+        try {
+            return FileIOUtils.writeFileFromIS(destFile, new FileInputStream(srcFile), false)
+                    && !(isMove && !deleteFile(srcFile));
+        } catch (FileNotFoundException e) {
+            e.printStackTrace();
+            return false;
+        }
+    }
+
+    /**
+     * 复制目录
+     *
+     * @param srcDirPath  源目录路径
+     * @param destDirPath 目标目录路径
+     * @param listener    是否覆盖监听器
+     * @return {@code true}: 复制成功<br>{@code false}: 复制失败
+     */
+    public static boolean copyDir(final String srcDirPath, final String destDirPath, final OnReplaceListener listener) {
+        return copyDir(getFileByPath(srcDirPath), getFileByPath(destDirPath), listener);
+    }
+
+    /**
+     * 复制目录
+     *
+     * @param srcDir   源目录
+     * @param destDir  目标目录
+     * @param listener 是否覆盖监听器
+     * @return {@code true}: 复制成功<br>{@code false}: 复制失败
+     */
+    public static boolean copyDir(final File srcDir, final File destDir, final OnReplaceListener listener) {
+        return copyOrMoveDir(srcDir, destDir, listener, false);
+    }
+
+    /**
+     * 复制文件
+     *
+     * @param srcFilePath  源文件路径
+     * @param destFilePath 目标文件路径
+     * @param listener     是否覆盖监听器
+     * @return {@code true}: 复制成功<br>{@code false}: 复制失败
+     */
+    public static boolean copyFile(final String srcFilePath, final String destFilePath, final OnReplaceListener listener) {
+        return copyFile(getFileByPath(srcFilePath), getFileByPath(destFilePath), listener);
+    }
+
+    /**
+     * 复制文件
+     *
+     * @param srcFile  源文件
+     * @param destFile 目标文件
+     * @param listener 是否覆盖监听器
+     * @return {@code true}: 复制成功<br>{@code false}: 复制失败
+     */
+    public static boolean copyFile(final File srcFile, final File destFile, final OnReplaceListener listener) {
+        return copyOrMoveFile(srcFile, destFile, listener, false);
+    }
+
+    /**
+     * 移动目录
+     *
+     * @param srcDirPath  源目录路径
+     * @param destDirPath 目标目录路径
+     * @param listener    是否覆盖监听器
+     * @return {@code true}: 移动成功<br>{@code false}: 移动失败
+     */
+    public static boolean moveDir(final String srcDirPath, final String destDirPath, final OnReplaceListener listener) {
+        return moveDir(getFileByPath(srcDirPath), getFileByPath(destDirPath), listener);
+    }
+
+    /**
+     * 移动目录
+     *
+     * @param srcDir   源目录
+     * @param destDir  目标目录
+     * @param listener 是否覆盖监听器
+     * @return {@code true}: 移动成功<br>{@code false}: 移动失败
+     */
+    public static boolean moveDir(final File srcDir, final File destDir, final OnReplaceListener listener) {
+        return copyOrMoveDir(srcDir, destDir, listener, true);
+    }
+
+    /**
+     * 移动文件
+     *
+     * @param srcFilePath  源文件路径
+     * @param destFilePath 目标文件路径
+     * @param listener     是否覆盖监听器
+     * @return {@code true}: 移动成功<br>{@code false}: 移动失败
+     */
+    public static boolean moveFile(final String srcFilePath, final String destFilePath, final OnReplaceListener listener) {
+        return moveFile(getFileByPath(srcFilePath), getFileByPath(destFilePath), listener);
+    }
+
+    /**
+     * 移动文件
+     *
+     * @param srcFile  源文件
+     * @param destFile 目标文件
+     * @param listener 是否覆盖监听器
+     * @return {@code true}: 移动成功<br>{@code false}: 移动失败
+     */
+    public static boolean moveFile(final File srcFile, final File destFile, final OnReplaceListener listener) {
+        return copyOrMoveFile(srcFile, destFile, listener, true);
+    }
+
+    /**
+     * 删除目录
+     *
+     * @param dirPath 目录路径
+     * @return {@code true}: 删除成功<br>{@code false}: 删除失败
+     */
+    public static boolean deleteDir(final String dirPath) {
+        return deleteDir(getFileByPath(dirPath));
+    }
+
+    /**
+     * 删除目录
+     *
+     * @param dir 目录
+     * @return {@code true}: 删除成功<br>{@code false}: 删除失败
+     */
+    public static boolean deleteDir(final File dir) {
+        if (dir == null) return false;
+        // 目录不存在返回true
+        if (!dir.exists()) return true;
+        // 不是目录返回false
+        if (!dir.isDirectory()) return false;
+        // 现在文件存在且是文件夹
+        File[] files = dir.listFiles();
+        if (files != null && files.length != 0) {
+            for (File file : files) {
+                if (file.isFile()) {
+                    if (!file.delete()) return false;
+                } else if (file.isDirectory()) {
+                    if (!deleteDir(file)) return false;
+                }
+            }
+        }
+        return dir.delete();
+    }
+
+    /**
+     * 删除文件
+     *
+     * @param srcFilePath 文件路径
+     * @return {@code true}: 删除成功<br>{@code false}: 删除失败
+     */
+    public static boolean deleteFile(final String srcFilePath) {
+        return deleteFile(getFileByPath(srcFilePath));
+    }
+
+    /**
+     * 删除文件
+     *
+     * @param file 文件
+     * @return {@code true}: 删除成功<br>{@code false}: 删除失败
+     */
+    public static boolean deleteFile(final File file) {
+        return file != null && (!file.exists() || file.isFile() && file.delete());
+    }
+
+    /**
+     * 删除目录下所有东西
+     *
+     * @param dirPath 目录路径
+     * @return {@code true}: 删除成功<br>{@code false}: 删除失败
+     */
+    public static boolean deleteAllInDir(final String dirPath) {
+        return deleteAllInDir(getFileByPath(dirPath));
+    }
+
+    /**
+     * 删除目录下所有东西
+     *
+     * @param dir 目录
+     * @return {@code true}: 删除成功<br>{@code false}: 删除失败
+     */
+    public static boolean deleteAllInDir(final File dir) {
+        return deleteFilesInDirWithFilter(dir, new FileFilter() {
+            @Override
+            public boolean accept(File pathname) {
+                return true;
+            }
+        });
+    }
+
+    /**
+     * 删除目录下所有文件
+     *
+     * @param dirPath 目录路径
+     * @return {@code true}: 删除成功<br>{@code false}: 删除失败
+     */
+    public static boolean deleteFilesInDir(final String dirPath) {
+        return deleteFilesInDir(getFileByPath(dirPath));
+    }
+
+    /**
+     * 删除目录下所有文件
+     *
+     * @param dir 目录
+     * @return {@code true}: 删除成功<br>{@code false}: 删除失败
+     */
+    public static boolean deleteFilesInDir(final File dir) {
+        return deleteFilesInDirWithFilter(dir, new FileFilter() {
+            @Override
+            public boolean accept(File pathname) {
+                return pathname.isFile();
+            }
+        });
+    }
+
+    /**
+     * 删除目录下所有过滤的文件
+     *
+     * @param dirPath 目录路径
+     * @param filter  过滤器
+     * @return {@code true}: 删除成功<br>{@code false}: 删除失败
+     */
+    public static boolean deleteFilesInDirWithFilter(final String dirPath, final FileFilter filter) {
+        return deleteFilesInDirWithFilter(getFileByPath(dirPath), filter);
+    }
+
+    /**
+     * 删除目录下所有过滤的文件
+     *
+     * @param dir    目录
+     * @param filter 过滤器
+     * @return {@code true}: 删除成功<br>{@code false}: 删除失败
+     */
+    public static boolean deleteFilesInDirWithFilter(final File dir, final FileFilter filter) {
+        if (dir == null) return false;
+        // 目录不存在返回true
+        if (!dir.exists()) return true;
+        // 不是目录返回false
+        if (!dir.isDirectory()) return false;
+        // 现在文件存在且是文件夹
+        File[] files = dir.listFiles();
+        if (files != null && files.length != 0) {
+            for (File file : files) {
+                if (filter.accept(file)) {
+                    if (file.isFile()) {
+                        if (!file.delete()) return false;
+                    } else if (file.isDirectory()) {
+                        if (!deleteDir(file)) return false;
+                    }
+                }
+            }
+        }
+        return true;
+    }
+
+    /**
+     * 获取目录下所有文件
+     * <p>不递归进子目录</p>
+     *
+     * @param dirPath 目录路径
+     * @return 文件链表
+     */
+    public static List<File> listFilesInDir(final String dirPath) {
+        return listFilesInDir(dirPath, false);
+    }
+
+    /**
+     * 获取目录下所有文件
+     * <p>不递归进子目录</p>
+     *
+     * @param dir 目录
+     * @return 文件链表
+     */
+    public static List<File> listFilesInDir(final File dir) {
+        return listFilesInDir(dir, false);
+    }
+
+    /**
+     * 获取目录下所有文件
+     *
+     * @param dirPath     目录路径
+     * @param isRecursive 是否递归进子目录
+     * @return 文件链表
+     */
+    public static List<File> listFilesInDir(final String dirPath, final boolean isRecursive) {
+        return listFilesInDir(getFileByPath(dirPath), isRecursive);
+    }
+
+    /**
+     * 获取目录下所有文件
+     *
+     * @param dir         目录
+     * @param isRecursive 是否递归进子目录
+     * @return 文件链表
+     */
+    public static List<File> listFilesInDir(final File dir, final boolean isRecursive) {
+        return listFilesInDirWithFilter(dir, new FileFilter() {
+            @Override
+            public boolean accept(File pathname) {
+                return true;
+            }
+        }, isRecursive);
+    }
+
+    /**
+     * 获取目录下所有过滤的文件
+     * <p>不递归进子目录</p>
+     *
+     * @param dirPath 目录路径
+     * @param filter  过滤器
+     * @return 文件链表
+     */
+    public static List<File> listFilesInDirWithFilter(final String dirPath,
+                                                      final FileFilter filter) {
+        return listFilesInDirWithFilter(getFileByPath(dirPath), filter, false);
+    }
+
+    /**
+     * 获取目录下所有过滤的文件
+     * <p>不递归进子目录</p>
+     *
+     * @param dir    目录
+     * @param filter 过滤器
+     * @return 文件链表
+     */
+    public static List<File> listFilesInDirWithFilter(final File dir,
+                                                      final FileFilter filter) {
+        return listFilesInDirWithFilter(dir, filter, false);
+    }
+
+    /**
+     * 获取目录下所有过滤的文件
+     *
+     * @param dirPath     目录路径
+     * @param filter      过滤器
+     * @param isRecursive 是否递归进子目录
+     * @return 文件链表
+     */
+    public static List<File> listFilesInDirWithFilter(final String dirPath,
+                                                      final FileFilter filter,
+                                                      final boolean isRecursive) {
+        return listFilesInDirWithFilter(getFileByPath(dirPath), filter, isRecursive);
+    }
+
+    /**
+     * 获取目录下所有过滤的文件
+     *
+     * @param dir         目录
+     * @param filter      过滤器
+     * @param isRecursive 是否递归进子目录
+     * @return 文件链表
+     */
+    public static List<File> listFilesInDirWithFilter(final File dir,
+                                                      final FileFilter filter,
+                                                      final boolean isRecursive) {
+        if (!isDir(dir)) return null;
+        List<File> list = new ArrayList<>();
+        File[] files = dir.listFiles();
+        if (files != null && files.length != 0) {
+            for (File file : files) {
+                if (filter.accept(file)) {
+                    list.add(file);
+                }
+                if (isRecursive && file.isDirectory()) {
+                    //noinspection ConstantConditions
+                    list.addAll(listFilesInDirWithFilter(file, filter, true));
+                }
+            }
+        }
+        return list;
+    }
+
+    /**
+     * 获取文件最后修改的毫秒时间戳
+     *
+     * @param filePath 文件路径
+     * @return 文件最后修改的毫秒时间戳
+     */
+
+    public static long getFileLastModified(final String filePath) {
+        return getFileLastModified(getFileByPath(filePath));
+    }
+
+    /**
+     * 获取文件最后修改的毫秒时间戳
+     *
+     * @param file 文件
+     * @return 文件最后修改的毫秒时间戳
+     */
+    public static long getFileLastModified(final File file) {
+        if (file == null) return -1;
+        return file.lastModified();
+    }
+
+    /**
+     * 简单获取文件编码格式
+     *
+     * @param filePath 文件路径
+     * @return 文件编码
+     */
+    public static String getFileCharsetSimple(final String filePath) {
+        return getFileCharsetSimple(getFileByPath(filePath));
+    }
+
+    /**
+     * 简单获取文件编码格式
+     *
+     * @param file 文件
+     * @return 文件编码
+     */
+    public static String getFileCharsetSimple(final File file) {
+        int p = 0;
+        InputStream is = null;
+        try {
+            is = new BufferedInputStream(new FileInputStream(file));
+            p = (is.read() << 8) + is.read();
+        } catch (IOException e) {
+            e.printStackTrace();
+        } finally {
+            CloseUtils.closeIO(is);
+        }
+        switch (p) {
+            case 0xefbb:
+                return "UTF-8";
+            case 0xfffe:
+                return "Unicode";
+            case 0xfeff:
+                return "UTF-16BE";
+            default:
+                return "GBK";
+        }
+    }
+
+    /**
+     * 获取文件行数
+     *
+     * @param filePath 文件路径
+     * @return 文件行数
+     */
+    public static int getFileLines(final String filePath) {
+        return getFileLines(getFileByPath(filePath));
+    }
+
+    /**
+     * 获取文件行数
+     * <p>比readLine要快很多</p>
+     *
+     * @param file 文件
+     * @return 文件行数
+     */
+    public static int getFileLines(final File file) {
+        int count = 1;
+        InputStream is = null;
+        try {
+            is = new BufferedInputStream(new FileInputStream(file));
+            byte[] buffer = new byte[1024];
+            int readChars;
+            if (LINE_SEP.endsWith("\n")) {
+                while ((readChars = is.read(buffer, 0, 1024)) != -1) {
+                    for (int i = 0; i < readChars; ++i) {
+                        if (buffer[i] == '\n') ++count;
+                    }
+                }
+            } else {
+                while ((readChars = is.read(buffer, 0, 1024)) != -1) {
+                    for (int i = 0; i < readChars; ++i) {
+                        if (buffer[i] == '\r') ++count;
+                    }
+                }
+            }
+        } catch (IOException e) {
+            e.printStackTrace();
+        } finally {
+            CloseUtils.closeIO(is);
+        }
+        return count;
+    }
+
+    /**
+     * 获取目录大小
+     *
+     * @param dirPath 目录路径
+     * @return 文件大小
+     */
+    public static String getDirSize(final String dirPath) {
+        return getDirSize(getFileByPath(dirPath));
+    }
+
+    /**
+     * 获取目录大小
+     *
+     * @param dir 目录
+     * @return 文件大小
+     */
+    public static String getDirSize(final File dir) {
+        long len = getDirLength(dir);
+        return len == -1 ? "" : byte2FitMemorySize(len);
+    }
+
+    /**
+     * 获取文件大小
+     *
+     * @param filePath 文件路径
+     * @return 文件大小
+     */
+    public static String getFileSize(final String filePath) {
+        return getFileSize(getFileByPath(filePath));
+    }
+
+    /**
+     * 获取文件大小
+     *
+     * @param file 文件
+     * @return 文件大小
+     */
+    public static String getFileSize(final File file) {
+        long len = getFileLength(file);
+        return len == -1 ? "" : byte2FitMemorySize(len);
+    }
+
+    /**
+     * 获取目录长度
+     *
+     * @param dirPath 目录路径
+     * @return 目录长度
+     */
+    public static long getDirLength(final String dirPath) {
+        return getDirLength(getFileByPath(dirPath));
+    }
+
+    /**
+     * 获取目录长度
+     *
+     * @param dir 目录
+     * @return 目录长度
+     */
+    public static long getDirLength(final File dir) {
+        if (!isDir(dir)) return -1;
+        long len = 0;
+        File[] files = dir.listFiles();
+        if (files != null && files.length != 0) {
+            for (File file : files) {
+                if (file.isDirectory()) {
+                    len += getDirLength(file);
+                } else {
+                    len += file.length();
+                }
+            }
+        }
+        return len;
+    }
+
+    /**
+     * 获取文件长度
+     *
+     * @param filePath 文件路径
+     * @return 文件长度
+     */
+    public static long getFileLength(final String filePath) {
+        return getFileLength(getFileByPath(filePath));
+    }
+
+    /**
+     * 获取文件长度
+     *
+     * @param file 文件
+     * @return 文件长度
+     */
+    public static long getFileLength(final File file) {
+        if (!isFile(file)) return -1;
+        return file.length();
+    }
+
+    /**
+     * 获取文件的MD5校验码
+     *
+     * @param filePath 文件路径
+     * @return 文件的MD5校验码
+     */
+    public static String getFileMD5ToString(final String filePath) {
+        File file = isSpace(filePath) ? null : new File(filePath);
+        return getFileMD5ToString(file);
+    }
+
+    /**
+     * 获取文件的MD5校验码
+     *
+     * @param file 文件
+     * @return 文件的MD5校验码
+     */
+    public static String getFileMD5ToString(final File file) {
+        return bytes2HexString(getFileMD5(file));
+    }
+
+    /**
+     * 获取文件的MD5校验码
+     *
+     * @param filePath 文件路径
+     * @return 文件的MD5校验码
+     */
+    public static byte[] getFileMD5(final String filePath) {
+        return getFileMD5(getFileByPath(filePath));
+    }
+
+    /**
+     * 获取文件的MD5校验码
+     *
+     * @param file 文件
+     * @return 文件的MD5校验码
+     */
+    public static byte[] getFileMD5(final File file) {
+        if (file == null) return null;
+        DigestInputStream dis = null;
+        try {
+            FileInputStream fis = new FileInputStream(file);
+            MessageDigest md = MessageDigest.getInstance("MD5");
+            dis = new DigestInputStream(fis, md);
+            byte[] buffer = new byte[1024 * 256];
+            while (true) {
+                if (!(dis.read(buffer) > 0)) break;
+            }
+            md = dis.getMessageDigest();
+            return md.digest();
+        } catch (NoSuchAlgorithmException | IOException e) {
+            e.printStackTrace();
+        } finally {
+            CloseUtils.closeIO(dis);
+        }
+        return null;
+    }
+
+    /**
+     * 获取全路径中的最长目录
+     *
+     * @param file 文件
+     * @return filePath最长目录
+     */
+    public static String getDirName(final File file) {
+        if (file == null) return null;
+        return getDirName(file.getPath());
+    }
+
+    /**
+     * 获取全路径中的最长目录
+     *
+     * @param filePath 文件路径
+     * @return filePath最长目录
+     */
+    public static String getDirName(final String filePath) {
+        if (isSpace(filePath)) return filePath;
+        int lastSep = filePath.lastIndexOf(File.separator);
+        return lastSep == -1 ? "" : filePath.substring(0, lastSep + 1);
+    }
+
+    /**
+     * 获取全路径中的文件名
+     *
+     * @param file 文件
+     * @return 文件名
+     */
+    public static String getFileName(final File file) {
+        if (file == null) return null;
+        return getFileName(file.getPath());
+    }
+
+    /**
+     * 获取全路径中的文件名
+     *
+     * @param filePath 文件路径
+     * @return 文件名
+     */
+    public static String getFileName(final String filePath) {
+        if (isSpace(filePath)) return filePath;
+        int lastSep = filePath.lastIndexOf(File.separator);
+        return lastSep == -1 ? filePath : filePath.substring(lastSep + 1);
+    }
+
+    /**
+     * 获取全路径中的不带拓展名的文件名
+     *
+     * @param file 文件
+     * @return 不带拓展名的文件名
+     */
+    public static String getFileNameNoExtension(final File file) {
+        if (file == null) return null;
+        return getFileNameNoExtension(file.getPath());
+    }
+
+    /**
+     * 获取全路径中的不带拓展名的文件名
+     *
+     * @param filePath 文件路径
+     * @return 不带拓展名的文件名
+     */
+    public static String getFileNameNoExtension(final String filePath) {
+        if (isSpace(filePath)) return filePath;
+        int lastPoi = filePath.lastIndexOf('.');
+        int lastSep = filePath.lastIndexOf(File.separator);
+        if (lastSep == -1) {
+            return (lastPoi == -1 ? filePath : filePath.substring(0, lastPoi));
+        }
+        if (lastPoi == -1 || lastSep > lastPoi) {
+            return filePath.substring(lastSep + 1);
+        }
+        return filePath.substring(lastSep + 1, lastPoi);
+    }
+
+    /**
+     * 获取全路径中的文件拓展名
+     *
+     * @param file 文件
+     * @return 文件拓展名
+     */
+    public static String getFileExtension(final File file) {
+        if (file == null) return null;
+        return getFileExtension(file.getPath());
+    }
+
+    /**
+     * 获取全路径中的文件拓展名
+     *
+     * @param filePath 文件路径
+     * @return 文件拓展名
+     */
+    public static String getFileExtension(final String filePath) {
+        if (isSpace(filePath)) return filePath;
+        int lastPoi = filePath.lastIndexOf('.');
+        int lastSep = filePath.lastIndexOf(File.separator);
+        if (lastPoi == -1 || lastSep >= lastPoi) return "";
+        return filePath.substring(lastPoi + 1);
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // copy from ConvertUtils
+    ///////////////////////////////////////////////////////////////////////////
+
+    private static final char hexDigits[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
+
+    /**
+     * byteArr转hexString
+     * <p>例如：</p>
+     * bytes2HexString(new byte[] { 0, (byte) 0xa8 }) returns 00A8
+     *
+     * @param bytes 字节数组
+     * @return 16进制大写字符串
+     */
+    private static String bytes2HexString(final byte[] bytes) {
+        if (bytes == null) return null;
+        int len = bytes.length;
+        if (len <= 0) return null;
+        char[] ret = new char[len << 1];
+        for (int i = 0, j = 0; i < len; i++) {
+            ret[j++] = hexDigits[bytes[i] >>> 4 & 0x0f];
+            ret[j++] = hexDigits[bytes[i] & 0x0f];
+        }
+        return new String(ret);
+    }
+
+    /**
+     * 字节数转合适内存大小
+     * <p>保留3位小数</p>
+     *
+     * @param byteNum 字节数
+     * @return 合适内存大小
+     */
+    @SuppressLint("DefaultLocale")
+    private static String byte2FitMemorySize(final long byteNum) {
+        if (byteNum < 0) {
+            return "shouldn't be less than zero!";
+        } else if (byteNum < 1024) {
+            return String.format("%.3fB", (double) byteNum);
+        } else if (byteNum < 1048576) {
+            return String.format("%.3fKB", (double) byteNum / 1024);
+        } else if (byteNum < 1073741824) {
+            return String.format("%.3fMB", (double) byteNum / 1048576);
+        } else {
+            return String.format("%.3fGB", (double) byteNum / 1073741824);
+        }
+    }
+
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    public interface OnReplaceListener {
+        boolean onReplace();
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/Utils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/Utils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/Utils.java	(revision )
@@ -0,0 +1,130 @@
+package com.baselib.utilcode.util;
+
+import android.annotation.SuppressLint;
+import android.app.Activity;
+import android.app.Application;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+
+import java.lang.ref.WeakReference;
+import java.util.LinkedList;
+import java.util.List;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 16/12/08
+ *     desc  : Utils初始化相关
+ * </pre>
+ * 　　　　　　　　　瓦瓦　　　　　　　　　　　　十
+ * 　　　　　　　　十齱龠己　　　　　　　　　亅瓦車己
+ * 　　　　　　　　乙龍龠毋日丶　　　　　　丶乙己毋毋丶
+ * 　　　　　　　　十龠馬鬼車瓦　　　　　　己十瓦毋毋
+ * 　　　　　　　　　鬼馬龠馬龠十　　　　己己毋車毋瓦
+ * 　　　　　　　　　毋龠龠龍龠鬼乙丶丶乙車乙毋鬼車己
+ * 　　　　　　　　　乙龠龍龍鬼龍瓦　十瓦毋乙瓦龠瓦亅
+ * 　　　　　　　　　　馬齱龍馬鬼十丶日己己己毋車乙丶
+ * 　　　　　　　　　　己齱馬鬼車十十毋日乙己己乙乙
+ * 　　　　　　　　　　　車馬齱齱日乙毋瓦己乙瓦日亅
+ * 　　　　　　　　　　　亅車齺龖瓦乙車龖龍乙乙十
+ * 　　　　　　　　　　　　日龠龠十亅車龍毋十十
+ * 　　　　　　　　　　　　日毋己亅　己己十亅亅
+ * 　　　　　　　　　　　丶己十十乙　　丶丶丶丶丶
+ * 　　　　　　　　　　　亅己十龍龖瓦　　丶　丶　乙十
+ * 　　　　　　　　　　　亅己十龠龖毋　丶丶　　丶己鬼鬼瓦亅
+ * 　　　　　　　　　　　十日十十日亅丶亅丶　丶十日毋鬼馬馬車乙
+ * 　　　　　　　　　　　十日乙十亅亅亅丶　　十乙己毋鬼鬼鬼龍齺馬乙
+ * 　　　　　　　　　　　丶瓦己乙十十亅丶亅乙乙乙己毋鬼鬼鬼龍齱齺齺鬼十
+ * 　　　　　　　　　　　　乙乙十十十亅乙瓦瓦己日瓦毋鬼鬼龠齱齱龍龍齱齱毋丶
+ * 　　　　　　　　　　　　亅十十十十乙瓦車毋瓦瓦日車馬龠龍龍龍龍龍龠龠龠馬亅
+ * 　　　　　　　　　　　　　十十十十己毋車瓦瓦瓦瓦鬼馬龠龍龠龠龍龠龠龠馬龠車
+ * 　　　　　　　　　　　　　　亅十十日毋瓦日日瓦鬼鬼鬼龠龠馬馬龠龍龍龠馬馬車
+ * 　　　　　　　　　　　　　　亅亅亅乙瓦瓦毋車車車馬龍龠鬼鬼馬龠龍龍龠馬馬鬼
+ * 　　　　　　　　　　　　丶丶乙亅亅乙車鬼鬼鬼毋車龍龍龠鬼馬馬龠龍齱齱龍馬鬼
+ * 　　　　　　　　　　　亅己十十己十日鬼鬼車瓦毋龠龍龠馬馬龠龠龠齱齺齺齱龠鬼
+ * 　　　　　　　　　　　　亅乙乙乙十車馬車毋馬齱齱龍龠龠龠馬龠龍齱龍龠龠鬼瓦
+ * 　　　　　　　　　　　　　　　　丶毋龠鬼車瓦車馬龠龍龠龠龍齱齱龠馬馬鬼毋日
+ * 　　　　　　　　　　　　　　　　十乙己日十　　丶己鬼龍齱齺齱龍馬馬馬車毋己
+ * 　　　　　　　　　　　　　　丶十己乙亅丶　　　　　　亅瓦馬龠龍龠龠馬毋瓦乙
+ * 　　　　　　　　　　　　　丶十十乙亅十　　　　　　　　亅己瓦車馬龠鬼車瓦乙
+ * 　　　　　　　　　　　　　丶十乙十十丶　　　　　　　　　丶丶亅十瓦鬼車瓦己
+ * 　　　　　　　　　　　　　　丶亅亅丶　　　　　　　　　　　　　　　亅日瓦日
+ * 　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　丶
+ */
+public final class Utils {
+
+    @SuppressLint("StaticFieldLeak")
+    private static Application sApplication;
+
+    static WeakReference<Activity> sTopActivityWeakRef;
+    static List<Activity> sActivityList = new LinkedList<>();
+
+    private static Application.ActivityLifecycleCallbacks mCallbacks = new Application.ActivityLifecycleCallbacks() {
+        @Override
+        public void onActivityCreated(Activity activity, Bundle bundle) {
+            sActivityList.add(activity);
+            setTopActivityWeakRef(activity);
+        }
+
+        @Override
+        public void onActivityStarted(Activity activity) {
+            setTopActivityWeakRef(activity);
+        }
+
+        @Override
+        public void onActivityResumed(Activity activity) {
+            setTopActivityWeakRef(activity);
+        }
+
+        @Override
+        public void onActivityPaused(Activity activity) {
+
+        }
+
+        @Override
+        public void onActivityStopped(Activity activity) {
+
+        }
+
+        @Override
+        public void onActivitySaveInstanceState(Activity activity, Bundle bundle) {
+
+        }
+
+        @Override
+        public void onActivityDestroyed(Activity activity) {
+            sActivityList.remove(activity);
+        }
+    };
+
+    private Utils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 初始化工具类
+     *
+     * @param app 应用
+     */
+    public static void init(@NonNull final Application app) {
+        Utils.sApplication = app;
+        app.registerActivityLifecycleCallbacks(mCallbacks);
+    }
+
+    /**
+     * 获取Application
+     *
+     * @return Application
+     */
+    public static Application getApp() {
+        if (sApplication != null) return sApplication;
+        throw new NullPointerException("u should init first");
+    }
+
+    private static void setTopActivityWeakRef(Activity activity) {
+        if (sTopActivityWeakRef == null || !activity.equals(sTopActivityWeakRef.get())) {
+            sTopActivityWeakRef = new WeakReference<>(activity);
+        }
+    }
+}
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision )
+++ app/build.gradle	(revision )
@@ -0,0 +1,118 @@
+apply plugin: 'com.android.application'
+apply plugin: 'org.greenrobot.greendao'
+greendao {
+    schemaVersion 2
+    daoPackage 'com.example.anonymous.greendao'
+    targetGenDir 'src/main/java'
+}
+android {
+    compileSdkVersion 25
+    buildToolsVersion '26.0.2'
+    defaultConfig {
+        applicationId "com.b3ad.yuxie.myapplication"
+        minSdkVersion 14
+        targetSdkVersion 25
+        versionCode 1
+        versionName "1.0"
+        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
+        multiDexEnabled true
+
+        aaptOptions {
+            cruncherEnabled = false
+            useNewCruncher = false
+        }
+
+        dexOptions {
+            javaMaxHeapSize "4g"
+            //打开dex增量编译
+            incremental true
+        }
+
+        //添加如下配置就OK了
+        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }
+
+        manifestPlaceholders = [
+                JPUSH_PKGNAME           : applicationId,
+                JPUSH_APPKEY            : "425522f68290bf67f1f390c9", //JPush上注册的包名对应的appkey.
+                JPUSH_CHANNEL           : "developer-default", //暂时填写默认值即可.
+                UMENG_APPKEY            : "5a4ae7c0b27b0a3aab000044",//友盟
+                UMENG_CHANNEL           : "Channel ID",//友盟
+                "com.amap.api.v2.apikey": "caa67d9f01219028370158753e1efce0",//设置高德Key
+        ]
+
+//        ndk {
+//            moduleName "lsqlite3"
+//            // 指定编译平台，更多平台信息 参见https://developer.android.com/ndk/guides/abis.html#sa
+//            abiFilters "armeabi", "armeabi-v7a","arm64-v8a","mips","mips64","X86","X86_64"
+//        }
+    }
+
+//    sourceSets.main {
+//        // 你的源码目录
+//        jni.srcDir 'src/main/jni'
+//        jniLibs.srcDirs = ['libs']
+//    }
+
+    //mvvp需要申明的地方
+    dataBinding {
+        enabled true
+    }
+
+    buildTypes {
+        release {
+            minifyEnabled false
+            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+    }
+
+    packagingOptions {
+        exclude 'META-INF/LICENSE'
+        exclude 'META-INF/NOTICE'
+    }
+
+    useLibrary 'org.apache.http.legacy'
+
+    dependencies {
+        compile fileTree(dir: 'libs', include: ['*.jar'])
+//        androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
+//            exclude group: 'com.android.support', module: 'support-annotations'
+//        })
+
+//        compile 'com.android.support:appcompat-v7:25.3.1'
+//        compile 'com.android.support.constraint:constraint-layout:1.0.2'
+//        compile 'com.android.support:design:25.3.1'
+//        testCompile 'junit:junit:4.12'
+        /*okhttp3封装*/
+//        compile 'com.squareup.okhttp3:okhttp:3.3.0'
+//        compile 'com.squareup.okio:okio:1.6.0'
+        /*okhttp3使用架包 https://github.com/MrZhousf/OkHttp3 */
+//        compile 'com.zhousf.lib:okhttp3:2.8.6'
+        /*picasso图片缓存架包*/
+        compile 'com.squareup.picasso:picasso:2.5.1'
+
+        /*glide图片缓存架包*/
+//        compile 'com.github.bumptech.glide:glide:3.5.2'
+//        compile 'com.android.support:support-v4:25.3.1'
+
+        /*Rxjava框架*/
+//        compile 'io.reactivex.rxjava2:rxjava:2.0.4'
+
+        /*Retrofit2.0框架*/
+//        compile 'com.squareup.retrofit2:retrofit:2.0.2'
+//        compile 'com.squareup.retrofit2:converter-gson:2.0.2'
+//        compile 'com.squareup.retrofit2:adapter-rxjava:2.0.2'
+//        compile 'com.squareup.okhttp3:logging-interceptor:3.2.0'
+
+        //JSOUP 解析html使用
+        compile 'org.jsoup:jsoup:1.10.2'
+
+        compile 'com.alibaba:fastjson:1.2.23'
+        compile 'httpcomponents-httpcore:httpcore:4.0-alpha6'
+
+        compile 'org.greenrobot:greendao:3.2.2' // add library
+        compile project(path: ':baselib')
+
+
+        compile files('src/main/libs/sun.misc.BASE64Decoder.jar')
+    }
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/base/BaseFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/base/BaseFragment.java	(revision )
+++ baselib/src/main/java/com/baselib/base/BaseFragment.java	(revision )
@@ -0,0 +1,104 @@
+package com.baselib.base;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.Fragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.baselib.baserx.RxManager;
+import com.baselib.commonutils.TUtil;
+
+import butterknife.ButterKnife;
+
+/**
+ * 作者: liuhuaqian on 2017/9/19.
+ */
+
+public abstract class BaseFragment
+        <T extends BasePresenter, E extends BaseModel>
+        extends Fragment {
+    public View rootView;
+    protected T mPresenter;
+    public E mModel;
+    protected RxManager mRxManager;
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        if (rootView == null)
+            rootView = inflater.inflate(getLayoutResource(), container, false);
+
+        mRxManager = new RxManager();
+        ButterKnife.bind(this, rootView);
+        mPresenter = TUtil.getT(this, 0);
+        mModel = TUtil.getT(this, 1);
+        initPresenter();
+        initView(savedInstanceState);
+        return rootView;
+    }
+
+    //获取布局文件
+    protected abstract int getLayoutResource();
+
+    //简单页面无需mvp就不用管此方法即可,完美兼容各种实际场景的变通
+    protected void initPresenter() {
+        if (mPresenter != null) {
+            mPresenter.inject(getActivity(), this, mModel);
+        }
+    }
+
+    //初始化view
+    protected abstract void initView(Bundle savedInstanceState);
+
+    /**
+     * 通过Class跳转界面
+     **/
+    public void startActivity(Class<?> cls) {
+        startActivity(cls, null);
+    }
+
+    /**
+     * 通过Class跳转界面
+     **/
+    public void startActivityForResult(Class<?> cls, int requestCode) {
+        startActivityForResult(cls, null, requestCode);
+    }
+
+    /**
+     * 含有Bundle通过Class跳转界面
+     **/
+    public void startActivityForResult(Class<?> cls, Bundle bundle,
+                                       int requestCode) {
+        Intent intent = new Intent();
+        intent.setClass(getActivity(), cls);
+        if (bundle != null) {
+            intent.putExtras(bundle);
+        }
+        startActivityForResult(intent, requestCode);
+    }
+
+    /**
+     * 含有Bundle通过Class跳转界面
+     **/
+    public void startActivity(Class<?> cls, Bundle bundle) {
+        Intent intent = new Intent();
+        intent.setClass(getActivity(), cls);
+        if (bundle != null) {
+            intent.putExtras(bundle);
+        }
+        startActivity(intent);
+    }
+
+    @Override
+    public void onDestroyView() {
+        super.onDestroyView();
+        ButterKnife.unbind(this);
+        if (mPresenter != null)
+            mPresenter.onDestroy();
+        mRxManager.clear();
+    }
+
+}
Index: baselib/src/main/java/com/baselib/uitls/NoDoubleClickListener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/uitls/NoDoubleClickListener.java	(revision )
+++ baselib/src/main/java/com/baselib/uitls/NoDoubleClickListener.java	(revision )
@@ -0,0 +1,32 @@
+package com.baselib.uitls;
+
+import java.util.Calendar;
+
+import android.view.View;
+import android.view.View.OnClickListener;
+
+/**
+ * 防双击监听
+ */
+public abstract class NoDoubleClickListener implements OnClickListener {
+
+    /**
+     * 最近间隔时间
+     */
+    public static final int MIN_CLICK_DELAY_TIME = 1000;
+    /**
+     * 上次点击时间
+     */
+    private long lastClickTime = 0;
+
+    @Override
+    public void onClick(View v) {
+        long currentTime = Calendar.getInstance().getTimeInMillis();
+        if (currentTime - lastClickTime > MIN_CLICK_DELAY_TIME || currentTime - lastClickTime < 0) {
+            lastClickTime = currentTime;
+            onNoDoubleClick(v);
+        }
+    }
+
+    public abstract void onNoDoubleClick(View v);
+}
Index: baselib/src/main/res/layout/item_list.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/layout/item_list.xml	(revision )
+++ baselib/src/main/res/layout/item_list.xml	(revision )
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content">
+
+    <TextView
+        android:id="@+id/item_name"
+        android:layout_width="wrap_content"
+        android:layout_height="30dp"
+        android:layout_centerInParent="true"
+        android:textColor="@color/code_text"
+        android:gravity="center"
+        android:singleLine="true"
+        android:textSize="20sp"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/takephoto/compress/CompressImage.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/compress/CompressImage.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/compress/CompressImage.java	(revision )
@@ -0,0 +1,32 @@
+package com.baselib.takephoto.compress;
+
+import com.baselib.takephoto.model.TImage;
+import java.util.ArrayList;
+
+/**
+ * 压缩照片2.0
+ *
+ * Author JPH
+ * Date 2015-08-26 下午1:44:26
+ */
+public interface CompressImage {
+    void compress();
+
+    /**
+     * 压缩结果监听器
+     */
+    interface CompressListener {
+        /**
+         * 压缩成功
+         * @param images 已经压缩图片
+         */
+        void onCompressSuccess(ArrayList <TImage> images);
+
+        /**
+         * 压缩失败
+         * @param images 压缩失败的图片
+         * @param msg 失败的原因
+         */
+        void onCompressFailed(ArrayList <TImage> images,String msg);
+    }
+}
Index: baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DataUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DataUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/mydatepicker/DataUtils.java	(revision )
@@ -0,0 +1,26 @@
+package com.baselib.ui.widget.mydatepicker;
+
+/**
+ * 作者: liuhuaqian on 2017/9/23.
+ * 数组操作工具类
+ */
+
+public class DataUtils {
+    /**
+     * 一维数组转换为二维数组
+     *
+     * @param src    ...
+     * @param row    ...
+     * @param column ...
+     * @return ...
+     */
+    public static String[][] arraysConvert(String[] src, int row, int column) {
+        String[][] tmp = new String[row][column];
+        for (int i = 0; i < row; i++) {
+            tmp[i] = new String[column];
+            System.arraycopy(src, i * column, tmp[i], 0, column);
+        }
+        return tmp;
+    }
+}
+
Index: app/src/main/java/com/b3ad/yuxie/myapplication/mvp/view/IUserView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/mvp/view/IUserView.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/mvp/view/IUserView.java	(revision )
@@ -0,0 +1,18 @@
+package com.b3ad.yuxie.myapplication.mvp.view;
+
+public interface IUserView {
+    int getID();
+
+    String getFristName();
+
+    String getLastName();
+
+    void setFirstName(String firstName);
+
+    void setLastName(String lastName);
+
+    String getAddress();
+
+    void setAddress(String address);
+
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/mvvp/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/mvvp/User.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/mvvp/User.java	(revision )
@@ -0,0 +1,50 @@
+package com.b3ad.yuxie.myapplication.mvvp;
+
+/**
+ * Created by Administrator on 2017/7/26.
+ */
+
+public class User {
+    private int id;
+    private String username;
+    private String password;
+
+    public User(int id, String username, String password) {
+        this.id = id;
+        this.username = username;
+        this.password = password;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    public String getUsername() {
+        return username;
+    }
+
+    public void setUsername(String username) {
+        this.username = username;
+    }
+
+    public String getPassword() {
+        return password;
+    }
+
+    public void setPassword(String password) {
+        this.password = password;
+    }
+
+    @Override
+    public String toString() {
+        return "User{" +
+                "id=" + id +
+                ", username='" + username + '\'' +
+                ", password='" + password + '\'' +
+                '}';
+    }
+}
Index: app/src/test/java/com/b3ad/yuxie/myapplication/ExampleUnitTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/test/java/com/b3ad/yuxie/myapplication/ExampleUnitTest.java	(revision )
+++ app/src/test/java/com/b3ad/yuxie/myapplication/ExampleUnitTest.java	(revision )
@@ -0,0 +1,17 @@
+package com.b3ad.yuxie.myapplication;
+
+import org.junit.Test;
+
+import static org.junit.Assert.*;
+
+/**
+ * Example local unit test, which will execute on the development machine (host).
+ *
+ * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
+ */
+public class ExampleUnitTest {
+    @Test
+    public void addition_isCorrect() throws Exception {
+        assertEquals(4, 2 + 2);
+    }
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/utilcode/util/ScreenUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/ScreenUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/ScreenUtils.java	(revision )
@@ -0,0 +1,221 @@
+package com.baselib.utilcode.util;
+
+import android.app.Activity;
+import android.app.KeyguardManager;
+import android.content.Context;
+import android.content.pm.ActivityInfo;
+import android.content.res.Configuration;
+import android.content.res.Resources;
+import android.graphics.Bitmap;
+import android.provider.Settings;
+import android.support.annotation.NonNull;
+import android.util.DisplayMetrics;
+import android.view.Surface;
+import android.view.View;
+import android.view.Window;
+import android.view.WindowManager;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/02
+ *     desc  : 屏幕相关工具类
+ * </pre>
+ */
+public final class ScreenUtils {
+
+    private ScreenUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 获取屏幕的宽度（单位：px）
+     *
+     * @return 屏幕宽
+     */
+    public static int getScreenWidth() {
+        return Utils.getApp().getResources().getDisplayMetrics().widthPixels;
+    }
+
+    /**
+     * 获取屏幕的高度（单位：px）
+     *
+     * @return 屏幕高
+     */
+    public static int getScreenHeight() {
+        return Utils.getApp().getResources().getDisplayMetrics().heightPixels;
+    }
+
+    /**
+     * 获取屏幕密度
+     *
+     * @return 屏幕密度
+     */
+    public static float getScreenDensity() {
+        return Utils.getApp().getResources().getDisplayMetrics().density;
+    }
+
+    /**
+     * 获取屏幕密度DPI
+     *
+     * @return 屏幕密度DPI
+     */
+    public static int getScreenDensityDpi() {
+        return Utils.getApp().getResources().getDisplayMetrics().densityDpi;
+    }
+
+    /**
+     * 设置屏幕为全屏
+     * <p>需在 {@code setContentView} 之前调用</p>
+     *
+     * @param activity activity
+     */
+    public static void setFullScreen(@NonNull final Activity activity) {
+        activity.requestWindowFeature(Window.FEATURE_NO_TITLE);
+        activity.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
+                WindowManager.LayoutParams.FLAG_FULLSCREEN);
+    }
+
+    /**
+     * 设置屏幕为横屏
+     * <p>还有一种就是在Activity中加属性android:screenOrientation="landscape"</p>
+     * <p>不设置Activity的android:configChanges时，切屏会重新调用各个生命周期，切横屏时会执行一次，切竖屏时会执行两次</p>
+     * <p>设置Activity的android:configChanges="orientation"时，切屏还是会重新调用各个生命周期，切横、竖屏时只会执行一次</p>
+     * <p>设置Activity的android:configChanges="orientation|keyboardHidden|screenSize"（4.0以上必须带最后一个参数）时
+     * 切屏不会重新调用各个生命周期，只会执行onConfigurationChanged方法</p>
+     *
+     * @param activity activity
+     */
+    public static void setLandscape(@NonNull final Activity activity) {
+        activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
+    }
+
+    /**
+     * 设置屏幕为竖屏
+     *
+     * @param activity activity
+     */
+    public static void setPortrait(@NonNull final Activity activity) {
+        activity.setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
+    }
+
+    /**
+     * 判断是否横屏
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isLandscape() {
+        return Utils.getApp().getResources().getConfiguration().orientation == Configuration.ORIENTATION_LANDSCAPE;
+    }
+
+    /**
+     * 判断是否竖屏
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isPortrait() {
+        return Utils.getApp().getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT;
+    }
+
+    /**
+     * 获取屏幕旋转角度
+     *
+     * @param activity activity
+     * @return 屏幕旋转角度
+     */
+    public static int getScreenRotation(@NonNull final Activity activity) {
+        switch (activity.getWindowManager().getDefaultDisplay().getRotation()) {
+            default:
+            case Surface.ROTATION_0:
+                return 0;
+            case Surface.ROTATION_90:
+                return 90;
+            case Surface.ROTATION_180:
+                return 180;
+            case Surface.ROTATION_270:
+                return 270;
+        }
+    }
+
+    /**
+     * 截屏
+     *
+     * @param activity activity
+     * @return Bitmap
+     */
+    public static Bitmap screenShot(@NonNull final Activity activity) {
+        return screenShot(activity, false);
+    }
+
+    /**
+     * 截屏
+     *
+     * @param activity activity
+     * @return Bitmap
+     */
+    public static Bitmap screenShot(@NonNull final Activity activity, boolean isDeleteStatusBar) {
+        View decorView = activity.getWindow().getDecorView();
+        decorView.setDrawingCacheEnabled(true);
+        decorView.buildDrawingCache();
+        Bitmap bmp = decorView.getDrawingCache();
+        DisplayMetrics dm = new DisplayMetrics();
+        activity.getWindowManager().getDefaultDisplay().getMetrics(dm);
+        Bitmap ret;
+        if (isDeleteStatusBar) {
+            Resources resources = activity.getResources();
+            int resourceId = resources.getIdentifier("status_bar_height", "dimen", "android");
+            int statusBarHeight = resources.getDimensionPixelSize(resourceId);
+            ret = Bitmap.createBitmap(bmp, 0, statusBarHeight, dm.widthPixels, dm.heightPixels - statusBarHeight);
+        } else {
+            ret = Bitmap.createBitmap(bmp, 0, 0, dm.widthPixels, dm.heightPixels);
+        }
+        decorView.destroyDrawingCache();
+        return ret;
+    }
+
+    /**
+     * 判断是否锁屏
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isScreenLock() {
+        KeyguardManager km = (KeyguardManager) Utils.getApp().getSystemService(Context.KEYGUARD_SERVICE);
+        return km.inKeyguardRestrictedInputMode();
+    }
+
+    /**
+     * 设置进入休眠时长
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.WRITE_SETTINGS" />}</p>
+     *
+     * @param duration 时长
+     */
+    public static void setSleepDuration(final int duration) {
+        Settings.System.putInt(Utils.getApp().getContentResolver(), Settings.System.SCREEN_OFF_TIMEOUT, duration);
+    }
+
+    /**
+     * 获取进入休眠时长
+     *
+     * @return 进入休眠时长，报错返回-123
+     */
+    public static int getSleepDuration() {
+        try {
+            return Settings.System.getInt(Utils.getApp().getContentResolver(), Settings.System.SCREEN_OFF_TIMEOUT);
+        } catch (Settings.SettingNotFoundException e) {
+            e.printStackTrace();
+            return -123;
+        }
+    }
+
+    /**
+     * 判断是否是平板
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isTablet() {
+        return (Utils.getApp().getResources().getConfiguration().screenLayout
+                & Configuration.SCREENLAYOUT_SIZE_MASK)
+                >= Configuration.SCREENLAYOUT_SIZE_LARGE;
+    }
+}
Index: app/src/main/res/layout/activity_rxjava.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_rxjava.xml	(revision )
+++ app/src/main/res/layout/activity_rxjava.xml	(revision )
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.constraint.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context="com.b3ad.yuxie.myapplication.activity.RxjavaActivity">
+
+    <Button
+        android:onClick="doClick"
+        android:text="测试Rxjava"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content" />
+
+</android.support.constraint.ConstraintLayout>
Index: baselib/src/main/java/com/baselib/takephoto/model/CropOptions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/model/CropOptions.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/model/CropOptions.java	(revision )
@@ -0,0 +1,94 @@
+package com.baselib.takephoto.model;
+
+import java.io.Serializable;
+
+/**
+ * 裁剪配置类
+ * Author: JPH
+ * Date: 2016/7/27 13:19
+ */
+public class CropOptions implements Serializable{
+    /**使用TakePhoto自带的裁切工具进行裁切*/
+    private boolean withOwnCrop;
+    private int aspectX;
+    private int aspectY;
+    private int outputX;
+    private int outputY;
+    private CropOptions(){}
+
+    public int getAspectX() {
+        return aspectX;
+    }
+
+    public void setAspectX(int aspectX) {
+        this.aspectX = aspectX;
+    }
+
+    public int getAspectY() {
+        return aspectY;
+    }
+
+    public void setAspectY(int aspectY) {
+        this.aspectY = aspectY;
+    }
+
+    public int getOutputX() {
+        return outputX;
+    }
+
+    public void setOutputX(int outputX) {
+        this.outputX = outputX;
+    }
+
+    public int getOutputY() {
+        return outputY;
+    }
+
+    public void setOutputY(int outputY) {
+        this.outputY = outputY;
+    }
+
+    public boolean isWithOwnCrop() {
+        return withOwnCrop;
+    }
+
+    public void setWithOwnCrop(boolean withOwnCrop) {
+        this.withOwnCrop = withOwnCrop;
+    }
+
+    public static class Builder{
+        private CropOptions options;
+
+        public Builder() {
+            options=new CropOptions();
+        }
+
+        public Builder setAspectX(int aspectX) {
+            options.setAspectX(aspectX);
+            return this;
+        }
+
+        public Builder setAspectY(int aspectY) {
+            options.setAspectY(aspectY);
+            return this;
+        }
+
+        public Builder setOutputX(int outputX) {
+            options.setOutputX(outputX);
+            return this;
+        }
+
+        public Builder setOutputY(int outputY) {
+            options.setOutputY(outputY);
+            return this;
+        }
+
+        public Builder setWithOwnCrop(boolean withOwnCrop) {
+            options.setWithOwnCrop(withOwnCrop);
+            return this;
+        }
+        public CropOptions create(){
+            return options;
+        }
+    }
+}
Index: app/src/main/res/layout/activity_web_view_js.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_web_view_js.xml	(revision )
+++ app/src/main/res/layout/activity_web_view_js.xml	(revision )
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context=".activity.MainActivity">
+
+    <ProgressBar
+        android:id="@+id/pb_load_url"
+        style="?android:attr/progressBarStyleHorizontal"
+        android:layout_width="match_parent"
+        android:layout_height="3dp"
+        android:progressDrawable="@drawable/pg" />
+
+    <WebView
+        android:id="@+id/wv_test_js"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@+id/pb_load_url" />
+</LinearLayout>
Index: baselib/src/main/res/drawable/loading_dialog_progressbar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/drawable/loading_dialog_progressbar.xml	(revision )
+++ baselib/src/main/res/drawable/loading_dialog_progressbar.xml	(revision )
@@ -0,0 +1,5 @@
+<?xml version="1.0" encoding="utf-8"?>
+<animated-rotate xmlns:android="http://schemas.android.com/apk/res/android"
+    android:drawable="@drawable/loading_progress"
+    android:pivotX="50%"
+    android:pivotY="50%" />
\ No newline at end of file
Index: app/src/main/java/com/b3ad/yuxie/myapplication/ndk/Android.mk
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/ndk/Android.mk	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/ndk/Android.mk	(revision )
@@ -0,0 +1,7 @@
+LOCAL_PATH := $(call my-dir)
+
+include $(CLEAR_VARS)
+
+LOCAL_MODULE    := print
+LOCAL_SRC_FILES := hello.c
+include $(BUILD_SHARED_LIBRARY)
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/listview/MultiItemTypeAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/listview/MultiItemTypeAdapter.java	(revision )
+++ baselib/src/main/java/com/baselib/listview/MultiItemTypeAdapter.java	(revision )
@@ -0,0 +1,95 @@
+package com.baselib.listview;
+
+import android.content.Context;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.BaseAdapter;
+
+import java.util.List;
+
+public class MultiItemTypeAdapter<T> extends BaseAdapter {
+    protected Context mContext;
+    protected List<T> mDatas;
+
+    private ItemViewDelegateManager mItemViewDelegateManager;
+
+
+    public MultiItemTypeAdapter(Context context, List<T> datas) {
+        this.mContext = context;
+        this.mDatas = datas;
+        mItemViewDelegateManager = new ItemViewDelegateManager();
+    }
+
+    public MultiItemTypeAdapter addItemViewDelegate(ItemViewDelegate<T> itemViewDelegate) {
+        mItemViewDelegateManager.addDelegate(itemViewDelegate);
+        return this;
+    }
+
+    private boolean useItemViewDelegateManager() {
+        return mItemViewDelegateManager.getItemViewDelegateCount() > 0;
+    }
+
+    @Override
+    public int getViewTypeCount() {
+        if (useItemViewDelegateManager())
+            return mItemViewDelegateManager.getItemViewDelegateCount();
+        return super.getViewTypeCount();
+    }
+
+    @Override
+    public int getItemViewType(int position) {
+        if (useItemViewDelegateManager()) {
+            int viewType = mItemViewDelegateManager.getItemViewType(mDatas.get(position), position);
+            return viewType;
+        }
+        return super.getItemViewType(position);
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        ItemViewDelegate itemViewDelegate = mItemViewDelegateManager.getItemViewDelegate(mDatas.get(position), position);
+        int layoutId = itemViewDelegate.getItemViewLayoutId();
+        ViewHolder viewHolder = null ;
+        if (convertView == null)
+        {
+            View itemView = LayoutInflater.from(mContext).inflate(layoutId, parent,
+                    false);
+            viewHolder = new ViewHolder(mContext, itemView, parent, position);
+            viewHolder.mLayoutId = layoutId;
+            onViewHolderCreated(viewHolder,viewHolder.getConvertView());
+        } else
+        {
+            viewHolder = (ViewHolder) convertView.getTag();
+            viewHolder.mPosition = position;
+        }
+
+
+        convert(viewHolder, getItem(position), position);
+        return viewHolder.getConvertView();
+    }
+
+    protected void convert(ViewHolder viewHolder, T item, int position) {
+        mItemViewDelegateManager.convert(viewHolder, item, position);
+    }
+
+    public void onViewHolderCreated(ViewHolder holder , View itemView )
+    {}
+
+    @Override
+    public int getCount() {
+        return mDatas.size();
+    }
+
+    @Override
+    public T getItem(int position) {
+        return mDatas.get(position);
+    }
+
+    @Override
+    public long getItemId(int position) {
+        return position;
+    }
+
+
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/CacheUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/CacheUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/CacheUtils.java	(revision )
@@ -0,0 +1,969 @@
+package com.baselib.utilcode.util;
+
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.PixelFormat;
+import android.graphics.drawable.BitmapDrawable;
+import android.graphics.drawable.Drawable;
+import android.os.Parcel;
+import android.os.Parcelable;
+import android.os.Process;
+import android.support.annotation.NonNull;
+import android.support.v4.util.SimpleArrayMap;
+
+import org.json.JSONArray;
+import org.json.JSONObject;
+
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileOutputStream;
+import java.io.IOException;
+import java.io.ObjectInputStream;
+import java.io.ObjectOutputStream;
+import java.io.RandomAccessFile;
+import java.io.Serializable;
+import java.nio.ByteBuffer;
+import java.nio.MappedByteBuffer;
+import java.nio.channels.FileChannel;
+import java.util.Collections;
+import java.util.HashMap;
+import java.util.Locale;
+import java.util.Map;
+import java.util.Set;
+import java.util.concurrent.atomic.AtomicInteger;
+import java.util.concurrent.atomic.AtomicLong;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2017/05/24
+ *     desc  : 缓存相关工具类
+ * </pre>
+ */
+public class CacheUtils {
+
+    private static final long DEFAULT_MAX_SIZE  = Long.MAX_VALUE;
+    private static final int  DEFAULT_MAX_COUNT = Integer.MAX_VALUE;
+
+    public static final int SEC  = 1;
+    public static final int MIN  = 60;
+    public static final int HOUR = 3600;
+    public static final int DAY  = 86400;
+
+    private static final SimpleArrayMap<String, CacheUtils> CACHE_MAP = new SimpleArrayMap<>();
+    private CacheManager mCacheManager;
+
+    /**
+     * 获取缓存实例
+     * <p>在/data/data/com.xxx.xxx/cache/cacheUtils目录</p>
+     * <p>缓存尺寸不限</p>
+     * <p>缓存个数不限</p>
+     *
+     * @return {@link CacheUtils}
+     */
+    public static CacheUtils getInstance() {
+        return getInstance("", DEFAULT_MAX_SIZE, DEFAULT_MAX_COUNT);
+    }
+
+    /**
+     * 获取缓存实例
+     * <p>在/data/data/com.xxx.xxx/cache/cacheName目录</p>
+     * <p>缓存尺寸不限</p>
+     * <p>缓存个数不限</p>
+     *
+     * @param cacheName 缓存目录名
+     * @return {@link CacheUtils}
+     */
+    public static CacheUtils getInstance(final String cacheName) {
+        return getInstance(cacheName, DEFAULT_MAX_SIZE, DEFAULT_MAX_COUNT);
+    }
+
+    /**
+     * 获取缓存实例
+     * <p>在/data/data/com.xxx.xxx/cache/cacheUtils目录</p>
+     *
+     * @param maxSize  最大缓存尺寸，单位字节
+     * @param maxCount 最大缓存个数
+     * @return {@link CacheUtils}
+     */
+    public static CacheUtils getInstance(final long maxSize, final int maxCount) {
+        return getInstance("", maxSize, maxCount);
+    }
+
+    /**
+     * 获取缓存实例
+     * <p>在/data/data/com.xxx.xxx/cache/cacheName目录</p>
+     *
+     * @param cacheName 缓存目录名
+     * @param maxSize   最大缓存尺寸，单位字节
+     * @param maxCount  最大缓存个数
+     * @return {@link CacheUtils}
+     */
+    public static CacheUtils getInstance(String cacheName, final long maxSize, final int maxCount) {
+        if (isSpace(cacheName)) cacheName = "cacheUtils";
+        File file = new File(Utils.getApp().getCacheDir(), cacheName);
+        return getInstance(file, maxSize, maxCount);
+    }
+
+    /**
+     * 获取缓存实例
+     * <p>在cacheDir目录</p>
+     * <p>缓存尺寸不限</p>
+     * <p>缓存个数不限</p>
+     *
+     * @param cacheDir 缓存目录
+     * @return {@link CacheUtils}
+     */
+    public static CacheUtils getInstance(@NonNull final File cacheDir) {
+        return getInstance(cacheDir, DEFAULT_MAX_SIZE, DEFAULT_MAX_COUNT);
+    }
+
+    /**
+     * 获取缓存实例
+     * <p>在cacheDir目录</p>
+     *
+     * @param cacheDir 缓存目录
+     * @param maxSize  最大缓存尺寸，单位字节
+     * @param maxCount 最大缓存个数
+     * @return {@link CacheUtils}
+     */
+    public static CacheUtils getInstance(@NonNull final File cacheDir, final long maxSize, final int maxCount) {
+        final String cacheKey = cacheDir.getAbsoluteFile() + "_" + Process.myPid();
+        CacheUtils cache = CACHE_MAP.get(cacheKey);
+        if (cache == null) {
+            cache = new CacheUtils(cacheDir, maxSize, maxCount);
+            CACHE_MAP.put(cacheKey, cache);
+        }
+        return cache;
+    }
+
+    private CacheUtils(@NonNull final File cacheDir, final long maxSize, final int maxCount) {
+        if (!cacheDir.exists() && !cacheDir.mkdirs()) {
+            throw new RuntimeException("can't make dirs in " + cacheDir.getAbsolutePath());
+        }
+        mCacheManager = new CacheManager(cacheDir, maxSize, maxCount);
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // bytes 读写
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 缓存中写入字节数组
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, @NonNull final byte[] value) {
+        put(key, value, -1);
+    }
+
+    /**
+     * 缓存中写入字节数组
+     *
+     * @param key      键
+     * @param value    值
+     * @param saveTime 保存时长，单位：秒
+     */
+    public void put(@NonNull final String key, @NonNull byte[] value, final int saveTime) {
+        if (value.length <= 0) return;
+        if (saveTime >= 0) value = CacheHelper.newByteArrayWithTime(saveTime, value);
+        File file = mCacheManager.getFileBeforePut(key);
+        CacheHelper.writeFileFromBytes(file, value);
+        mCacheManager.updateModify(file);
+        mCacheManager.put(file);
+
+    }
+
+    /**
+     * 缓存中读取字节数组
+     *
+     * @param key 键
+     * @return 存在且没过期返回对应值，否则返回{@code null}
+     */
+    public byte[] getBytes(@NonNull final String key) {
+        return getBytes(key, null);
+    }
+
+    /**
+     * 缓存中读取字节数组
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在且没过期返回对应值，否则返回默认值{@code defaultValue}
+     */
+    public byte[] getBytes(@NonNull final String key, final byte[] defaultValue) {
+        final File file = mCacheManager.getFileIfExists(key);
+        if (file == null) return defaultValue;
+        byte[] data = CacheHelper.readFile2Bytes(file);
+        if (CacheHelper.isDue(data)) {
+            mCacheManager.removeByKey(key);
+            return defaultValue;
+        }
+        mCacheManager.updateModify(file);
+        return CacheHelper.getDataWithoutDueTime(data);
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // String 读写
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 缓存中写入String
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, @NonNull final String value) {
+        put(key, value, -1);
+    }
+
+    /**
+     * 缓存中写入String
+     *
+     * @param key      键
+     * @param value    值
+     * @param saveTime 保存时长，单位：秒
+     */
+    public void put(@NonNull final String key, @NonNull final String value, final int saveTime) {
+        put(key, CacheHelper.string2Bytes(value), saveTime);
+    }
+
+    /**
+     * 缓存中读取String
+     *
+     * @param key 键
+     * @return 存在且没过期返回对应值，否则返回{@code null}
+     */
+    public String getString(@NonNull final String key) {
+        return getString(key, null);
+    }
+
+    /**
+     * 缓存中读取String
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在且没过期返回对应值，否则返回默认值{@code defaultValue}
+     */
+    public String getString(@NonNull final String key, final String defaultValue) {
+        byte[] bytes = getBytes(key);
+        if (bytes == null) return defaultValue;
+        return CacheHelper.bytes2String(bytes);
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // JSONObject 读写
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 缓存中写入JSONObject
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, @NonNull final JSONObject value) {
+        put(key, value, -1);
+    }
+
+    /**
+     * 缓存中写入JSONObject
+     *
+     * @param key      键
+     * @param value    值
+     * @param saveTime 保存时长，单位：秒
+     */
+    public void put(@NonNull final String key, @NonNull final JSONObject value, final int saveTime) {
+        put(key, CacheHelper.jsonObject2Bytes(value), saveTime);
+    }
+
+    /**
+     * 缓存中读取JSONObject
+     *
+     * @param key 键
+     * @return 存在且没过期返回对应值，否则返回{@code null}
+     */
+    public JSONObject getJSONObject(@NonNull final String key) {
+        return getJSONObject(key, null);
+    }
+
+    /**
+     * 缓存中读取JSONObject
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在且没过期返回对应值，否则返回默认值{@code defaultValue}
+     */
+    public JSONObject getJSONObject(@NonNull final String key, final JSONObject defaultValue) {
+        byte[] bytes = getBytes(key);
+        if (bytes == null) return defaultValue;
+        return CacheHelper.bytes2JSONObject(bytes);
+    }
+
+
+    ///////////////////////////////////////////////////////////////////////////
+    // JSONArray 读写
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 缓存中写入JSONArray
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, @NonNull final JSONArray value) {
+        put(key, value, -1);
+    }
+
+    /**
+     * 缓存中写入JSONArray
+     *
+     * @param key      键
+     * @param value    值
+     * @param saveTime 保存时长，单位：秒
+     */
+    public void put(@NonNull final String key, @NonNull final JSONArray value, final int saveTime) {
+        put(key, CacheHelper.jsonArray2Bytes(value), saveTime);
+    }
+
+    /**
+     * 缓存中读取JSONArray
+     *
+     * @param key 键
+     * @return 存在且没过期返回对应值，否则返回{@code null}
+     */
+    public JSONArray getJSONArray(@NonNull final String key) {
+        return getJSONArray(key, null);
+    }
+
+    /**
+     * 缓存中读取JSONArray
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在且没过期返回对应值，否则返回默认值{@code defaultValue}
+     */
+    public JSONArray getJSONArray(@NonNull final String key, final JSONArray defaultValue) {
+        byte[] bytes = getBytes(key);
+        if (bytes == null) return defaultValue;
+        return CacheHelper.bytes2JSONArray(bytes);
+    }
+
+
+    ///////////////////////////////////////////////////////////////////////////
+    // Bitmap 读写
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 缓存中写入Bitmap
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, @NonNull final Bitmap value) {
+        put(key, value, -1);
+    }
+
+    /**
+     * 缓存中写入Bitmap
+     *
+     * @param key      键
+     * @param value    值
+     * @param saveTime 保存时长，单位：秒
+     */
+    public void put(@NonNull final String key, @NonNull final Bitmap value, final int saveTime) {
+        put(key, CacheHelper.bitmap2Bytes(value), saveTime);
+    }
+
+    /**
+     * 缓存中读取Bitmap
+     *
+     * @param key 键
+     * @return 存在且没过期返回对应值，否则返回{@code null}
+     */
+    public Bitmap getBitmap(@NonNull final String key) {
+        return getBitmap(key, null);
+    }
+
+    /**
+     * 缓存中读取Bitmap
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在且没过期返回对应值，否则返回默认值{@code defaultValue}
+     */
+    public Bitmap getBitmap(@NonNull final String key, final Bitmap defaultValue) {
+        byte[] bytes = getBytes(key);
+        if (bytes == null) return defaultValue;
+        return CacheHelper.bytes2Bitmap(bytes);
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // Drawable 读写
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 缓存中写入Drawable
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, @NonNull final Drawable value) {
+        put(key, CacheHelper.drawable2Bytes(value));
+    }
+
+    /**
+     * 缓存中写入Drawable
+     *
+     * @param key      键
+     * @param value    值
+     * @param saveTime 保存时长，单位：秒
+     */
+    public void put(@NonNull final String key, @NonNull final Drawable value, final int saveTime) {
+        put(key, CacheHelper.drawable2Bytes(value), saveTime);
+    }
+
+    /**
+     * 缓存中读取Drawable
+     *
+     * @param key 键
+     * @return 存在且没过期返回对应值，否则返回{@code null}
+     */
+    public Drawable getDrawable(@NonNull final String key) {
+        return getDrawable(key, null);
+    }
+
+    /**
+     * 缓存中读取Drawable
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在且没过期返回对应值，否则返回默认值{@code defaultValue}
+     */
+    public Drawable getDrawable(@NonNull final String key, final Drawable defaultValue) {
+        byte[] bytes = getBytes(key);
+        if (bytes == null) return defaultValue;
+        return CacheHelper.bytes2Drawable(bytes);
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // Parcelable 读写
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 缓存中写入Parcelable
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, @NonNull final Parcelable value) {
+        put(key, value, -1);
+    }
+
+    /**
+     * 缓存中写入Parcelable
+     *
+     * @param key      键
+     * @param value    值
+     * @param saveTime 保存时长，单位：秒
+     */
+    public void put(@NonNull final String key, @NonNull final Parcelable value, final int saveTime) {
+        put(key, CacheHelper.parcelable2Bytes(value), saveTime);
+    }
+
+    /**
+     * 缓存中读取Parcelable
+     *
+     * @param key     键
+     * @param creator 建造器
+     * @return 存在且没过期返回对应值，否则返回{@code null}
+     */
+    public <T> T getParcelable(@NonNull final String key, @NonNull final Parcelable.Creator<T> creator) {
+        return getParcelable(key, creator, null);
+    }
+
+    /**
+     * 缓存中读取Parcelable
+     *
+     * @param key          键
+     * @param creator      建造器
+     * @param defaultValue 默认值
+     * @return 存在且没过期返回对应值，否则返回默认值{@code defaultValue}
+     */
+    public <T> T getParcelable(@NonNull final String key, @NonNull final Parcelable.Creator<T> creator, final T defaultValue) {
+        byte[] bytes = getBytes(key);
+        if (bytes == null) return defaultValue;
+        return CacheHelper.bytes2Parcelable(bytes, creator);
+    }
+
+    ///////////////////////////////////////////////////////////////////////////
+    // Serializable 读写
+    ///////////////////////////////////////////////////////////////////////////
+
+    /**
+     * 缓存中写入Serializable
+     *
+     * @param key   键
+     * @param value 值
+     */
+    public void put(@NonNull final String key, @NonNull final Serializable value) {
+        put(key, value, -1);
+    }
+
+    /**
+     * 缓存中写入Serializable
+     *
+     * @param key      键
+     * @param value    值
+     * @param saveTime 保存时长，单位：秒
+     */
+    public void put(@NonNull final String key, @NonNull final Serializable value, final int saveTime) {
+        put(key, CacheHelper.serializable2Bytes(value), saveTime);
+    }
+
+    /**
+     * 缓存中读取Serializable
+     *
+     * @param key 键
+     * @return 存在且没过期返回对应值，否则返回{@code null}
+     */
+    public Object getSerializable(@NonNull final String key) {
+        return getSerializable(key, null);
+    }
+
+    /**
+     * 缓存中读取Serializable
+     *
+     * @param key          键
+     * @param defaultValue 默认值
+     * @return 存在且没过期返回对应值，否则返回默认值{@code defaultValue}
+     */
+    public Object getSerializable(@NonNull final String key, final Object defaultValue) {
+        byte[] bytes = getBytes(key);
+        if (bytes == null) return defaultValue;
+        return CacheHelper.bytes2Object(getBytes(key));
+    }
+
+    /**
+     * 获取缓存大小
+     * <p>单位：字节</p>
+     * <p>调用了Thread.join()，需异步调用，否则可能主线程会卡顿</p>
+     *
+     * @return 缓存大小
+     */
+    public long getCacheSize() {
+        return mCacheManager.getCacheSize();
+    }
+
+    /**
+     * 获取缓存个数
+     * <p>调用了Thread.join()，需异步调用，否则可能主线程会卡顿</p>
+     *
+     * @return 缓存个数
+     */
+    public int getCacheCount() {
+        return mCacheManager.getCacheCount();
+    }
+
+    /**
+     * 根据键值移除缓存
+     *
+     * @param key 键
+     * @return {@code true}: 移除成功<br>{@code false}: 移除失败
+     */
+    public boolean remove(@NonNull final String key) {
+        return mCacheManager.removeByKey(key);
+    }
+
+    /**
+     * 清除所有缓存
+     *
+     * @return {@code true}: 清除成功<br>{@code false}: 清除失败
+     */
+    public boolean clear() {
+        return mCacheManager.clear();
+    }
+
+    private class CacheManager {
+        private final AtomicLong    cacheSize;
+        private final AtomicInteger cacheCount;
+        private final long          sizeLimit;
+        private final int           countLimit;
+        private final Map<File, Long> lastUsageDates = Collections.synchronizedMap(new HashMap<File, Long>());
+        private final File   cacheDir;
+        private final Thread mThread;
+
+        private CacheManager(final File cacheDir, final long sizeLimit, final int countLimit) {
+            this.cacheDir = cacheDir;
+            this.sizeLimit = sizeLimit;
+            this.countLimit = countLimit;
+            cacheSize = new AtomicLong();
+            cacheCount = new AtomicInteger();
+            mThread = new Thread(new Runnable() {
+                @Override
+                public void run() {
+                    int size = 0;
+                    int count = 0;
+                    final File[] cachedFiles = cacheDir.listFiles();
+                    if (cachedFiles != null) {
+                        for (File cachedFile : cachedFiles) {
+                            size += cachedFile.length();
+                            count += 1;
+                            lastUsageDates.put(cachedFile, cachedFile.lastModified());
+                        }
+                        cacheSize.getAndAdd(size);
+                        cacheCount.getAndAdd(count);
+                    }
+                }
+            });
+            mThread.start();
+        }
+
+        private long getCacheSize() {
+            try {
+                mThread.join();
+            } catch (InterruptedException e) {
+                e.printStackTrace();
+            }
+            return cacheSize.get();
+        }
+
+        private int getCacheCount() {
+            try {
+                mThread.join();
+            } catch (InterruptedException e) {
+                e.printStackTrace();
+            }
+            return cacheCount.get();
+        }
+
+        private File getFileBeforePut(final String key) {
+            File file = new File(cacheDir, String.valueOf(key.hashCode()));
+            if (file.exists()) {
+                cacheCount.addAndGet(-1);
+                cacheSize.addAndGet(-file.length());
+            }
+            return file;
+        }
+
+        private File getFileIfExists(final String key) {
+            File file = new File(cacheDir, String.valueOf(key.hashCode()));
+            if (!file.exists()) return null;
+            return file;
+        }
+
+        private void put(final File file) {
+            cacheCount.addAndGet(1);
+            cacheSize.addAndGet(file.length());
+            while (cacheCount.get() > countLimit || cacheSize.get() > sizeLimit) {
+                cacheSize.addAndGet(-removeOldest());
+                cacheCount.addAndGet(-1);
+            }
+        }
+
+        private void updateModify(final File file) {
+            Long millis = System.currentTimeMillis();
+            file.setLastModified(millis);
+            lastUsageDates.put(file, millis);
+        }
+
+        private boolean removeByKey(final String key) {
+            File file = getFileIfExists(key);
+            if (file == null) return true;
+            if (!file.delete()) return false;
+            cacheSize.addAndGet(-file.length());
+            cacheCount.addAndGet(-1);
+            lastUsageDates.remove(file);
+            return true;
+        }
+
+        private boolean clear() {
+            File[] files = cacheDir.listFiles();
+            if (files == null || files.length <= 0) return true;
+            boolean flag = true;
+            for (File file : files) {
+                if (!file.delete()) {
+                    flag = false;
+                    continue;
+                }
+                cacheSize.addAndGet(-file.length());
+                cacheCount.addAndGet(-1);
+                lastUsageDates.remove(file);
+            }
+            if (flag) {
+                lastUsageDates.clear();
+                cacheSize.set(0);
+                cacheCount.set(0);
+            }
+            return flag;
+        }
+
+        /**
+         * 移除旧的文件
+         *
+         * @return 移除的字节数
+         */
+        private long removeOldest() {
+            if (lastUsageDates.isEmpty()) return 0;
+            Long oldestUsage = Long.MAX_VALUE;
+            File oldestFile = null;
+            Set<Map.Entry<File, Long>> entries = lastUsageDates.entrySet();
+            synchronized (lastUsageDates) {
+                for (Map.Entry<File, Long> entry : entries) {
+                    Long lastValueUsage = entry.getValue();
+                    if (lastValueUsage < oldestUsage) {
+                        oldestUsage = lastValueUsage;
+                        oldestFile = entry.getKey();
+                    }
+                }
+            }
+            if (oldestFile == null) return 0;
+            long fileSize = oldestFile.length();
+            if (oldestFile.delete()) {
+                lastUsageDates.remove(oldestFile);
+                return fileSize;
+            }
+            return 0;
+        }
+    }
+
+    private static class CacheHelper {
+
+        static final int timeInfoLen = 14;
+
+        private static byte[] newByteArrayWithTime(final int second, final byte[] data) {
+            byte[] time = createDueTime(second).getBytes();
+            byte[] content = new byte[time.length + data.length];
+            System.arraycopy(time, 0, content, 0, time.length);
+            System.arraycopy(data, 0, content, time.length, data.length);
+            return content;
+        }
+
+        /**
+         * 创建过期时间
+         *
+         * @param second 秒
+         * @return _$millis$_
+         */
+        private static String createDueTime(final int second) {
+            return String.format(Locale.getDefault(), "_$%010d$_", System.currentTimeMillis() / 1000 + second);
+        }
+
+        private static boolean isDue(final byte[] data) {
+            long millis = getDueTime(data);
+            return millis != -1 && System.currentTimeMillis() > millis;
+        }
+
+        private static long getDueTime(final byte[] data) {
+            if (hasTimeInfo(data)) {
+                String millis = new String(copyOfRange(data, 2, 12));
+                try {
+                    return Long.parseLong(millis) * 1000;
+                } catch (NumberFormatException e) {
+                    return -1;
+                }
+            }
+            return -1;
+        }
+
+        private static byte[] getDataWithoutDueTime(final byte[] data) {
+            if (hasTimeInfo(data)) {
+                return copyOfRange(data, timeInfoLen, data.length);
+            }
+            return data;
+        }
+
+        private static byte[] copyOfRange(final byte[] original, final int from, final int to) {
+            int newLength = to - from;
+            if (newLength < 0) throw new IllegalArgumentException(from + " > " + to);
+            byte[] copy = new byte[newLength];
+            System.arraycopy(original, from, copy, 0, Math.min(original.length - from, newLength));
+            return copy;
+        }
+
+        private static boolean hasTimeInfo(final byte[] data) {
+            return data != null
+                    && data.length >= timeInfoLen
+                    && data[0] == '_'
+                    && data[1] == '$'
+                    && data[12] == '$'
+                    && data[13] == '_';
+        }
+
+        private static void writeFileFromBytes(final File file, final byte[] bytes) {
+            FileChannel fc = null;
+            try {
+                fc = new FileOutputStream(file, false).getChannel();
+                fc.write(ByteBuffer.wrap(bytes));
+                fc.force(true);
+            } catch (IOException e) {
+                e.printStackTrace();
+            } finally {
+                CloseUtils.closeIO(fc);
+            }
+        }
+
+        private static byte[] readFile2Bytes(final File file) {
+            FileChannel fc = null;
+            try {
+                fc = new RandomAccessFile(file, "r").getChannel();
+                int size = (int) fc.size();
+                MappedByteBuffer mbb = fc.map(FileChannel.MapMode.READ_ONLY, 0, size).load();
+                byte[] data = new byte[size];
+                mbb.get(data, 0, size);
+                return data;
+            } catch (IOException e) {
+                e.printStackTrace();
+                return null;
+            } finally {
+                CloseUtils.closeIO(fc);
+            }
+        }
+
+        private static byte[] string2Bytes(final String string) {
+            if (string == null) return null;
+            return string.getBytes();
+        }
+
+        private static String bytes2String(final byte[] bytes) {
+            if (bytes == null) return null;
+            return new String(bytes);
+        }
+
+        private static byte[] jsonObject2Bytes(final JSONObject jsonObject) {
+            if (jsonObject == null) return null;
+            return jsonObject.toString().getBytes();
+        }
+
+        private static JSONObject bytes2JSONObject(final byte[] bytes) {
+            if (bytes == null) return null;
+            try {
+                return new JSONObject(new String(bytes));
+            } catch (Exception e) {
+                e.printStackTrace();
+                return null;
+            }
+        }
+
+        private static byte[] jsonArray2Bytes(final JSONArray jsonArray) {
+            if (jsonArray == null) return null;
+            return jsonArray.toString().getBytes();
+        }
+
+        private static JSONArray bytes2JSONArray(final byte[] bytes) {
+            if (bytes == null) return null;
+            try {
+                return new JSONArray(new String(bytes));
+            } catch (Exception e) {
+                e.printStackTrace();
+                return null;
+            }
+        }
+
+        private static byte[] parcelable2Bytes(final Parcelable parcelable) {
+            if (parcelable == null) return null;
+            Parcel parcel = Parcel.obtain();
+            parcelable.writeToParcel(parcel, 0);
+            byte[] bytes = parcel.marshall();
+            parcel.recycle();
+            return bytes;
+        }
+
+        private static <T> T bytes2Parcelable(final byte[] bytes, final Parcelable.Creator<T> creator) {
+            if (bytes == null) return null;
+            Parcel parcel = Parcel.obtain();
+            parcel.unmarshall(bytes, 0, bytes.length);
+            parcel.setDataPosition(0);
+            T result = creator.createFromParcel(parcel);
+            parcel.recycle();
+            return result;
+        }
+
+        private static byte[] serializable2Bytes(final Serializable serializable) {
+            if (serializable == null) return null;
+            ByteArrayOutputStream baos;
+            ObjectOutputStream oos = null;
+            try {
+                oos = new ObjectOutputStream(baos = new ByteArrayOutputStream());
+                oos.writeObject(serializable);
+                return baos.toByteArray();
+            } catch (Exception e) {
+                e.printStackTrace();
+                return null;
+            } finally {
+                CloseUtils.closeIO(oos);
+            }
+        }
+
+        private static Object bytes2Object(final byte[] bytes) {
+            if (bytes == null) return null;
+            ObjectInputStream ois = null;
+            try {
+                ois = new ObjectInputStream(new ByteArrayInputStream(bytes));
+                return ois.readObject();
+            } catch (Exception e) {
+                e.printStackTrace();
+                return null;
+            } finally {
+                CloseUtils.closeIO(ois);
+            }
+        }
+
+        private static byte[] bitmap2Bytes(final Bitmap bitmap) {
+            if (bitmap == null) return null;
+            ByteArrayOutputStream baos = new ByteArrayOutputStream();
+            bitmap.compress(Bitmap.CompressFormat.PNG, 100, baos);
+            return baos.toByteArray();
+        }
+
+        private static Bitmap bytes2Bitmap(final byte[] bytes) {
+            return (bytes == null || bytes.length == 0) ? null : BitmapFactory.decodeByteArray(bytes, 0, bytes.length);
+        }
+
+        private static byte[] drawable2Bytes(final Drawable drawable) {
+            return drawable == null ? null : bitmap2Bytes(drawable2Bitmap(drawable));
+        }
+
+        private static Drawable bytes2Drawable(final byte[] bytes) {
+            return bytes == null ? null : bitmap2Drawable(bytes2Bitmap(bytes));
+        }
+
+        private static Bitmap drawable2Bitmap(final Drawable drawable) {
+            if (drawable instanceof BitmapDrawable) {
+                BitmapDrawable bitmapDrawable = (BitmapDrawable) drawable;
+                if (bitmapDrawable.getBitmap() != null) {
+                    return bitmapDrawable.getBitmap();
+                }
+            }
+            Bitmap bitmap;
+            if (drawable.getIntrinsicWidth() <= 0 || drawable.getIntrinsicHeight() <= 0) {
+                bitmap = Bitmap.createBitmap(1, 1,
+                        drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565);
+            } else {
+                bitmap = Bitmap.createBitmap(drawable.getIntrinsicWidth(), drawable.getIntrinsicHeight(),
+                        drawable.getOpacity() != PixelFormat.OPAQUE ? Bitmap.Config.ARGB_8888 : Bitmap.Config.RGB_565);
+            }
+            Canvas canvas = new Canvas(bitmap);
+            drawable.setBounds(0, 0, canvas.getWidth(), canvas.getHeight());
+            drawable.draw(canvas);
+            return bitmap;
+        }
+
+        private static Drawable bitmap2Drawable(final Bitmap bitmap) {
+            return bitmap == null ? null : new BitmapDrawable(Utils.getApp().getResources(), bitmap);
+        }
+    }
+
+    private static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+}
Index: baselib/src/main/java/com/baselib/base/BaseActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/base/BaseActivity.java	(revision )
+++ baselib/src/main/java/com/baselib/base/BaseActivity.java	(revision )
@@ -0,0 +1,259 @@
+package com.baselib.base;
+
+import android.content.Context;
+import android.content.DialogInterface;
+import android.content.Intent;
+import android.content.pm.ActivityInfo;
+import android.graphics.Color;
+import android.os.Build;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.annotation.RequiresApi;
+import android.support.v4.content.ContextCompat;
+import android.support.v4.view.ViewCompat;
+import android.support.v7.app.AlertDialog;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.TextView;
+
+import com.baselib.R;
+import com.baselib.baseapp.AppManager;
+import com.baselib.baserx.RxManager;
+import com.baselib.commonutils.TUtil;
+import com.baselib.commonwidget.StatusBarCompat;
+import com.baselib.daynightmodeutils.ChangeModeController;
+import com.baselib.uitls.StatusBarUtil;
+import com.zhy.autolayout.AutoLayoutActivity;
+
+import butterknife.Bind;
+import butterknife.ButterKnife;
+import rx.Subscription;
+
+/**
+ * 基类
+ * Created by liuhuaqian on 2017/9/5.
+ */
+
+public abstract class BaseActivity<T extends BasePresenter, E extends BaseModel> extends AutoLayoutActivity {
+    protected T mPresenter;
+    protected E mModel;
+    protected Context context;
+    protected RxManager mRxManager;
+    protected Subscription subscription;
+    private AlertDialog mAlertDialog;
+
+    protected boolean isSetStatusBarColor = true;
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        context = this;
+        mRxManager = new RxManager();
+        onBeforeSetContentView();
+        setContentView(getLayoutId());
+        ButterKnife.bind(this);
+        mPresenter = TUtil.getT(this, 0);
+        mModel = TUtil.getT(this, 1);
+        initPresenter();
+        initView(savedInstanceState);
+
+        if (isSetStatusBarColor) {
+            // 默认着色状态栏
+            setStatusBarColor();
+        }
+
+//        //toolBar使用
+//        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+//        if (toolbar != null) {
+//            setSupportActionBar(toolbar);
+//            // 默认不显示原生标题
+//            getSupportActionBar().setDisplayShowTitleEnabled(false);
+//            initToolbar(new ToolbarHelper(toolbar));
+//        }
+    }
+
+//    protected abstract void initToolbar(ToolbarHelper toolbarHelper);
+
+    //简单页面无需mvp就不用管此方法即可,完美兼容各种实际场景的变通
+    protected void initPresenter() {
+        if (mPresenter != null) {
+            mPresenter.inject(this, this, mModel);
+        }
+    }
+
+    /*********************
+     * 子类实现
+     *****************************/
+    //获取布局文件
+    public abstract int getLayoutId();
+
+    //初始化view
+    protected abstract void initView(Bundle savedInstanceState);
+
+    /**
+     * 设置layout前配置
+     */
+    protected void onBeforeSetContentView() {
+
+        //设置昼夜主题
+//        initTheme();
+        // 把actvity放到application栈中管理
+        AppManager.getAppManager().addActivity(this);
+        // 无标题
+//        requestWindowFeature(Window.FEATURE_NO_TITLE);
+        // 无标题
+//        supportRequestWindowFeature(Window.FEATURE_NO_TITLE);
+        // 设置竖屏
+        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);
+
+        //设置全屏
+//        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
+//                WindowManager.LayoutParams.FLAG_FULLSCREEN);
+    }
+    /**
+     * 设置主题
+     */
+//    private void initTheme() {
+//        ChangeModeController.setTheme(this, R.style.DayTheme, R.style.NightTheme);
+//    }
+
+    /**
+     * 设置状态栏的颜色和透明度（4.4以上系统有效）
+     */
+    protected void setStatusBarColor() {
+        int mStatusBarColor = getResources().getColor(R.color.status_bar_color);
+        StatusBarUtil.setColor(this, mStatusBarColor, 50);
+    }
+
+    /**
+     * 沉浸状态栏（4.4以上系统有效）
+     */
+    protected void translucentStatusBar() {
+        StatusBarCompat.translucentStatusBar(this);
+    }
+
+    /**
+     * 通过Class跳转界面
+     **/
+    public void startActivity(Class<?> cls) {
+        startActivity(cls, null);
+    }
+
+    /**
+     * 通过Class跳转界面
+     **/
+    public void startActivityForResult(Class<?> cls, int requestCode) {
+        startActivityForResult(cls, null, requestCode);
+    }
+
+    /**
+     * 含有Bundle通过Class跳转界面
+     **/
+    public void startActivityForResult(Class<?> cls, Bundle bundle,
+                                       int requestCode) {
+        Intent intent = new Intent();
+        intent.setClass(this, cls);
+        if (bundle != null) {
+            intent.putExtras(bundle);
+        }
+        startActivityForResult(intent, requestCode);
+    }
+
+    /**
+     * 含有Bundle通过Class跳转界面
+     **/
+    public void startActivity(Class<?> cls, Bundle bundle) {
+        Intent intent = new Intent();
+        intent.setClass(this, cls);
+        if (bundle != null) {
+            intent.putExtras(bundle);
+        }
+        startActivity(intent);
+    }
+
+    protected void unsubscribe() {
+        if (subscription != null && !subscription.isUnsubscribed()) {
+            subscription.unsubscribe();
+        }
+    }
+
+    /**
+     * 请求权限
+     * <p>
+     * 如果权限被拒绝过，则提示用户需要权限
+     */
+    @RequiresApi(api = Build.VERSION_CODES.M)
+    protected void requestPermission(final String permission, String rationale, final int requestCode) {
+        if (shouldShowRequestPermissionRationale(permission)) {
+            showAlertDialog("权限需求", rationale,
+                    new DialogInterface.OnClickListener() {
+                        @RequiresApi(api = Build.VERSION_CODES.M)
+                        @Override
+                        public void onClick(DialogInterface dialog, int which) {
+                            requestPermissions(new String[]{permission}, requestCode);
+                        }
+                    }, "确定", null, "取消");
+        } else {
+            requestPermissions(new String[]{permission}, requestCode);
+        }
+    }
+
+    /**
+     * 显示指定标题和信息的对话框
+     *
+     * @param title                         - 标题
+     * @param message                       - 信息
+     * @param onPositiveButtonClickListener - 肯定按钮监听
+     * @param positiveText                  - 肯定按钮信息
+     * @param onNegativeButtonClickListener - 否定按钮监听
+     * @param negativeText                  - 否定按钮信息
+     */
+    protected void showAlertDialog(@Nullable String title, @Nullable String message,
+                                   @Nullable DialogInterface.OnClickListener onPositiveButtonClickListener,
+                                   @NonNull String positiveText,
+                                   @Nullable DialogInterface.OnClickListener onNegativeButtonClickListener,
+                                   @NonNull String negativeText) {
+        showAlertDialog(title, message, onPositiveButtonClickListener, positiveText, onNegativeButtonClickListener, negativeText, false);
+    }
+
+    /**
+     * 显示指定标题和信息的对话框
+     *
+     * @param title                         - 标题
+     * @param message                       - 信息
+     * @param onPositiveButtonClickListener - 肯定按钮监听
+     * @param positiveText                  - 肯定按钮信息
+     * @param onNegativeButtonClickListener - 否定按钮监听
+     * @param negativeText                  - 否定按钮信息
+     * @param isCancal                      - 点击范围外和back键是否取消
+     */
+    protected void showAlertDialog(@Nullable String title, @Nullable String message,
+                                   @Nullable DialogInterface.OnClickListener onPositiveButtonClickListener,
+                                   @NonNull String positiveText,
+                                   @Nullable DialogInterface.OnClickListener onNegativeButtonClickListener,
+                                   @NonNull String negativeText, boolean isCancal) {
+        AlertDialog.Builder builder = new AlertDialog.Builder(this);
+        builder.setTitle(title);
+        builder.setMessage(message);
+        builder.setCancelable(isCancal);
+        builder.setPositiveButton(positiveText, onPositiveButtonClickListener);
+        builder.setNegativeButton(negativeText, onNegativeButtonClickListener);
+        mAlertDialog = builder.show();
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        if (mPresenter != null)
+            mPresenter.onDestroy();
+        mRxManager.clear();
+        ButterKnife.unbind(this);
+        unsubscribe();
+        AppManager.getAppManager().finishActivity(this);
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/NetworkUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/NetworkUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/NetworkUtils.java	(revision )
@@ -0,0 +1,344 @@
+package com.baselib.utilcode.util;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.content.Intent;
+import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
+import android.net.wifi.WifiManager;
+import android.telephony.TelephonyManager;
+import android.util.Log;
+
+import java.lang.reflect.Method;
+import java.net.InetAddress;
+import java.net.NetworkInterface;
+import java.net.SocketException;
+import java.net.UnknownHostException;
+import java.util.Enumeration;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/02
+ *     desc  : 网络相关工具类
+ * </pre>
+ */
+public final class NetworkUtils {
+
+    private NetworkUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    public enum NetworkType {
+        NETWORK_WIFI,
+        NETWORK_4G,
+        NETWORK_3G,
+        NETWORK_2G,
+        NETWORK_UNKNOWN,
+        NETWORK_NO
+    }
+
+    /**
+     * 打开网络设置界面
+     */
+    public static void openWirelessSettings() {
+        Utils.getApp().startActivity(new Intent(android.provider.Settings.ACTION_WIRELESS_SETTINGS).setFlags(Intent.FLAG_ACTIVITY_NEW_TASK));
+    }
+
+    /**
+     * 获取活动网络信息
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>}</p>
+     *
+     * @return NetworkInfo
+     */
+    private static NetworkInfo getActiveNetworkInfo() {
+        return ((ConnectivityManager) Utils.getApp().getSystemService(Context.CONNECTIVITY_SERVICE)).getActiveNetworkInfo();
+    }
+
+    /**
+     * 判断网络是否连接
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>}</p>
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isConnected() {
+        NetworkInfo info = getActiveNetworkInfo();
+        return info != null && info.isConnected();
+    }
+
+    /**
+     * 判断网络是否可用
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.INTERNET"/>}</p>
+     * <p>需要异步ping，如果ping不通就说明网络不可用</p>
+     * <p>ping的ip为阿里巴巴公共ip：223.5.5.5</p>
+     *
+     * @return {@code true}: 可用<br>{@code false}: 不可用
+     */
+    public static boolean isAvailableByPing() {
+        return isAvailableByPing(null);
+    }
+
+    /**
+     * 判断网络是否可用
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.INTERNET"/>}</p>
+     * <p>需要异步ping，如果ping不通就说明网络不可用</p>
+     *
+     * @param ip ip地址（自己服务器ip），如果为空，ip为阿里巴巴公共ip
+     * @return {@code true}: 可用<br>{@code false}: 不可用
+     */
+    public static boolean isAvailableByPing(String ip) {
+        if (ip == null || ip.length() <= 0) {
+            ip = "223.5.5.5";// 阿里巴巴公共ip
+        }
+        ShellUtils.CommandResult result = ShellUtils.execCmd(String.format("ping -c 1 %s", ip), false);
+        boolean ret = result.result == 0;
+        if (result.errorMsg != null) {
+            Log.d("NetworkUtils", "isAvailableByPing() called" + result.errorMsg);
+        }
+        if (result.successMsg != null) {
+            Log.d("NetworkUtils", "isAvailableByPing() called" + result.successMsg);
+        }
+        return ret;
+    }
+
+    /**
+     * 判断移动数据是否打开
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean getDataEnabled() {
+        try {
+            TelephonyManager tm = (TelephonyManager) Utils.getApp().getSystemService(Context.TELEPHONY_SERVICE);
+            Method getMobileDataEnabledMethod = tm.getClass().getDeclaredMethod("getDataEnabled");
+            if (null != getMobileDataEnabledMethod) {
+                return (boolean) getMobileDataEnabledMethod.invoke(tm);
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return false;
+    }
+
+    /**
+     * 打开或关闭移动数据
+     * <p>需系统应用 需添加权限{@code <uses-permission android:name="android.permission.MODIFY_PHONE_STATE"/>}</p>
+     *
+     * @param enabled {@code true}: 打开<br>{@code false}: 关闭
+     */
+    public static void setDataEnabled(final boolean enabled) {
+        try {
+            TelephonyManager tm = (TelephonyManager) Utils.getApp().getSystemService(Context.TELEPHONY_SERVICE);
+            Method setMobileDataEnabledMethod = tm.getClass().getDeclaredMethod("setDataEnabled", boolean.class);
+            if (null != setMobileDataEnabledMethod) {
+                setMobileDataEnabledMethod.invoke(tm, enabled);
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+    }
+
+    /**
+     * 判断网络是否是4G
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>}</p>
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean is4G() {
+        NetworkInfo info = getActiveNetworkInfo();
+        return info != null && info.isAvailable() && info.getSubtype() == TelephonyManager.NETWORK_TYPE_LTE;
+    }
+
+    /**
+     * 判断wifi是否打开
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>}</p>
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean getWifiEnabled() {
+        @SuppressLint("WifiManagerLeak")
+        WifiManager wifiManager = (WifiManager) Utils.getApp().getSystemService(Context.WIFI_SERVICE);
+        return wifiManager.isWifiEnabled();
+    }
+
+    /**
+     * 打开或关闭wifi
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.CHANGE_WIFI_STATE"/>}</p>
+     *
+     * @param enabled {@code true}: 打开<br>{@code false}: 关闭
+     */
+    public static void setWifiEnabled(final boolean enabled) {
+        @SuppressLint("WifiManagerLeak")
+        WifiManager wifiManager = (WifiManager) Utils.getApp().getSystemService(Context.WIFI_SERVICE);
+        if (enabled) {
+            if (!wifiManager.isWifiEnabled()) {
+                wifiManager.setWifiEnabled(true);
+            }
+        } else {
+            if (wifiManager.isWifiEnabled()) {
+                wifiManager.setWifiEnabled(false);
+            }
+        }
+    }
+
+    /**
+     * 判断wifi是否连接状态
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>}</p>
+     *
+     * @return {@code true}: 连接<br>{@code false}: 未连接
+     */
+    public static boolean isWifiConnected() {
+        ConnectivityManager cm = (ConnectivityManager) Utils.getApp()
+                .getSystemService(Context.CONNECTIVITY_SERVICE);
+        return cm != null && cm.getActiveNetworkInfo() != null
+                && cm.getActiveNetworkInfo().getType() == ConnectivityManager.TYPE_WIFI;
+    }
+
+    /**
+     * 判断wifi数据是否可用
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.ACCESS_WIFI_STATE"/>}</p>
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.INTERNET"/>}</p>
+     *
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isWifiAvailable() {
+        return getWifiEnabled() && isAvailableByPing();
+    }
+
+    /**
+     * 获取网络运营商名称
+     * <p>中国移动、如中国联通、中国电信</p>
+     *
+     * @return 运营商名称
+     */
+    public static String getNetworkOperatorName() {
+        TelephonyManager tm = (TelephonyManager) Utils.getApp().getSystemService(Context.TELEPHONY_SERVICE);
+        return tm != null ? tm.getNetworkOperatorName() : null;
+    }
+
+    private static final int NETWORK_TYPE_GSM = 16;
+    private static final int NETWORK_TYPE_TD_SCDMA = 17;
+    private static final int NETWORK_TYPE_IWLAN = 18;
+
+    /**
+     * 获取当前网络类型
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE"/>}</p>
+     *
+     * @return 网络类型
+     * <ul>
+     * <li>{@link NetworkUtils.NetworkType#NETWORK_WIFI   } </li>
+     * <li>{@link NetworkUtils.NetworkType#NETWORK_4G     } </li>
+     * <li>{@link NetworkUtils.NetworkType#NETWORK_3G     } </li>
+     * <li>{@link NetworkUtils.NetworkType#NETWORK_2G     } </li>
+     * <li>{@link NetworkUtils.NetworkType#NETWORK_UNKNOWN} </li>
+     * <li>{@link NetworkUtils.NetworkType#NETWORK_NO     } </li>
+     * </ul>
+     */
+    public static NetworkType getNetworkType() {
+        NetworkType netType = NetworkType.NETWORK_NO;
+        NetworkInfo info = getActiveNetworkInfo();
+        if (info != null && info.isAvailable()) {
+
+            if (info.getType() == ConnectivityManager.TYPE_WIFI) {
+                netType = NetworkType.NETWORK_WIFI;
+            } else if (info.getType() == ConnectivityManager.TYPE_MOBILE) {
+                switch (info.getSubtype()) {
+
+                    case NETWORK_TYPE_GSM:
+                    case TelephonyManager.NETWORK_TYPE_GPRS:
+                    case TelephonyManager.NETWORK_TYPE_CDMA:
+                    case TelephonyManager.NETWORK_TYPE_EDGE:
+                    case TelephonyManager.NETWORK_TYPE_1xRTT:
+                    case TelephonyManager.NETWORK_TYPE_IDEN:
+                        netType = NetworkType.NETWORK_2G;
+                        break;
+
+                    case NETWORK_TYPE_TD_SCDMA:
+                    case TelephonyManager.NETWORK_TYPE_EVDO_A:
+                    case TelephonyManager.NETWORK_TYPE_UMTS:
+                    case TelephonyManager.NETWORK_TYPE_EVDO_0:
+                    case TelephonyManager.NETWORK_TYPE_HSDPA:
+                    case TelephonyManager.NETWORK_TYPE_HSUPA:
+                    case TelephonyManager.NETWORK_TYPE_HSPA:
+                    case TelephonyManager.NETWORK_TYPE_EVDO_B:
+                    case TelephonyManager.NETWORK_TYPE_EHRPD:
+                    case TelephonyManager.NETWORK_TYPE_HSPAP:
+                        netType = NetworkType.NETWORK_3G;
+                        break;
+
+                    case NETWORK_TYPE_IWLAN:
+                    case TelephonyManager.NETWORK_TYPE_LTE:
+                        netType = NetworkType.NETWORK_4G;
+                        break;
+                    default:
+
+                        String subtypeName = info.getSubtypeName();
+                        if (subtypeName.equalsIgnoreCase("TD-SCDMA")
+                                || subtypeName.equalsIgnoreCase("WCDMA")
+                                || subtypeName.equalsIgnoreCase("CDMA2000")) {
+                            netType = NetworkType.NETWORK_3G;
+                        } else {
+                            netType = NetworkType.NETWORK_UNKNOWN;
+                        }
+                        break;
+                }
+            } else {
+                netType = NetworkType.NETWORK_UNKNOWN;
+            }
+        }
+        return netType;
+    }
+
+    /**
+     * 获取IP地址
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.INTERNET"/>}</p>
+     *
+     * @param useIPv4 是否用IPv4
+     * @return IP地址
+     */
+    public static String getIPAddress(final boolean useIPv4) {
+        try {
+            for (Enumeration<NetworkInterface> nis = NetworkInterface.getNetworkInterfaces(); nis.hasMoreElements(); ) {
+                NetworkInterface ni = nis.nextElement();
+                // 防止小米手机返回10.0.2.15
+                if (!ni.isUp()) continue;
+                for (Enumeration<InetAddress> addresses = ni.getInetAddresses(); addresses.hasMoreElements(); ) {
+                    InetAddress inetAddress = addresses.nextElement();
+                    if (!inetAddress.isLoopbackAddress()) {
+                        String hostAddress = inetAddress.getHostAddress();
+                        boolean isIPv4 = hostAddress.indexOf(':') < 0;
+                        if (useIPv4) {
+                            if (isIPv4) return hostAddress;
+                        } else {
+                            if (!isIPv4) {
+                                int index = hostAddress.indexOf('%');
+                                return index < 0 ? hostAddress.toUpperCase() : hostAddress.substring(0, index).toUpperCase();
+                            }
+                        }
+                    }
+                }
+            }
+        } catch (SocketException e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 获取域名ip地址
+     * <p>需添加权限 {@code <uses-permission android:name="android.permission.INTERNET"/>}</p>
+     *
+     * @param domain 域名
+     * @return ip地址
+     */
+    public static String getDomainAddress(final String domain) {
+        InetAddress inetAddress;
+        try {
+            inetAddress = InetAddress.getByName(domain);
+            return inetAddress.getHostAddress();
+        } catch (UnknownHostException e) {
+            e.printStackTrace();
+            return null;
+        }
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/KeyboardUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/KeyboardUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/KeyboardUtils.java	(revision )
@@ -0,0 +1,126 @@
+package com.baselib.utilcode.util;
+
+import android.app.Activity;
+import android.content.Context;
+import android.util.Log;
+import android.view.View;
+import android.view.inputmethod.InputMethodManager;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/02
+ *     desc  : 键盘相关工具类
+ * </pre>
+ */
+public final class KeyboardUtils {
+
+    private KeyboardUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /*
+      避免输入法面板遮挡
+      <p>在manifest.xml中activity中设置</p>
+      <p>android:windowSoftInputMode="adjustPan"</p>
+     */
+
+    /**
+     * 动态显示软键盘
+     *
+     * @param activity activity
+     */
+    public static void showSoftInput(final Activity activity) {
+        View view = activity.getCurrentFocus();
+        if (view == null) view = new View(activity);
+        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
+        if (imm == null) return;
+        imm.showSoftInput(view, InputMethodManager.SHOW_FORCED);
+    }
+
+    /**
+     * 动态显示软键盘
+     *
+     * @param view 视图
+     */
+    public static void showSoftInput(final View view) {
+        view.setFocusable(true);
+        view.setFocusableInTouchMode(true);
+        view.requestFocus();
+        InputMethodManager imm = (InputMethodManager) Utils.getApp().getSystemService(Context.INPUT_METHOD_SERVICE);
+        if (imm == null) return;
+        imm.showSoftInput(view, InputMethodManager.SHOW_FORCED);
+    }
+
+    /**
+     * 动态隐藏软键盘
+     *
+     * @param activity activity
+     */
+    public static void hideSoftInput(final Activity activity) {
+        View view = activity.getCurrentFocus();
+        if (view == null) view = new View(activity);
+        InputMethodManager imm = (InputMethodManager) activity.getSystemService(Activity.INPUT_METHOD_SERVICE);
+        if (imm == null) return;
+        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
+    }
+
+    /**
+     * 动态隐藏软键盘
+     *
+     * @param view 视图
+     */
+    public static void hideSoftInput(final View view) {
+        InputMethodManager imm = (InputMethodManager) Utils.getApp().getSystemService(Context.INPUT_METHOD_SERVICE);
+        if (imm == null) return;
+        imm.hideSoftInputFromWindow(view.getWindowToken(), 0);
+    }
+
+    /**
+     * 切换键盘显示与否状态
+     */
+    public static void toggleSoftInput() {
+        InputMethodManager imm = (InputMethodManager) Utils.getApp().getSystemService(Context.INPUT_METHOD_SERVICE);
+        if (imm == null) return;
+        imm.toggleSoftInput(InputMethodManager.SHOW_FORCED, 0);
+    }
+
+    /**
+     * 点击屏幕空白区域隐藏软键盘
+     * <p>根据EditText所在坐标和用户点击的坐标相对比，来判断是否隐藏键盘</p>
+     * <p>需重写dispatchTouchEvent</p>
+     * <p>参照以下注释代码</p>
+     */
+    public static void clickBlankArea2HideSoftInput() {
+        Log.d("tips", "U should copy the following code.");
+        /*
+        @Override
+        public boolean dispatchTouchEvent(MotionEvent ev) {
+            if (ev.getAction() == MotionEvent.ACTION_DOWN) {
+                View v = getCurrentFocus();
+                if (isShouldHideKeyboard(v, ev)) {
+                    InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
+                    imm.hideSoftInputFromWindow(v.getWindowToken(), InputMethodManager.HIDE_NOT_ALWAYS);
+                }
+            }
+            return super.dispatchTouchEvent(ev);
+        }
+
+        // 根据EditText所在坐标和用户点击的坐标相对比，来判断是否隐藏键盘
+        private boolean isShouldHideKeyboard(View v, MotionEvent event) {
+            if (v != null && (v instanceof EditText)) {
+                int[] l = {0, 0};
+                v.getLocationInWindow(l);
+                int left = l[0],
+                        top = l[1],
+                        bottom = top + v.getHeight(),
+                        right = left + v.getWidth();
+                return !(event.getX() > left && event.getX() < right
+                        && event.getY() > top && event.getY() < bottom);
+            }
+            return false;
+        }
+        */
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/activity/GlideAndPicassoActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/activity/GlideAndPicassoActivity.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/activity/GlideAndPicassoActivity.java	(revision )
@@ -0,0 +1,57 @@
+package com.b3ad.yuxie.myapplication.activity;
+
+import android.content.Context;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.widget.ImageView;
+
+import com.b3ad.yuxie.myapplication.R;
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.load.engine.DiskCacheStrategy;
+import com.squareup.picasso.Picasso;
+
+public class GlideAndPicassoActivity extends AppCompatActivity {
+
+    ImageView iv_glide;
+    ImageView iv_picasso;
+    Context mContext = this;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_glide_and_picasso);
+
+        iv_glide = (ImageView) findViewById(R.id.iv_glide);
+        iv_picasso = (ImageView) findViewById(R.id.iv_picasso);
+
+        //Glide加载图片
+        Glide.with(mContext)
+                .load("http://inthecheesefactory.com/uploads/source/glidepicasso/cover.jpg")//图片的下载地址
+//                .diskCacheStrategy(DiskCacheStrategy.ALL)//不同尺寸的图片,各下载(缓存)一份
+                .into(iv_glide);//下载的图标加载到对应的ImageView
+
+//       Glide 是 Google 员工的开源项目，被一些 Google App 使用，在Google I/O 上被推荐
+
+        //Picasso加载图片
+        Picasso.with(mContext)
+                .load("http://inthecheesefactory.com/uploads/source/glidepicasso/cover.jpg")//图片的下载地址
+//                .resize(768, 432)//指定图片大小
+                .into(iv_picasso);//下载的图标加载到对应的ImageView
+
+//      Picasso 是 Square 开源的项目，且他的主导者是 JakeWharton，所以广为人知。
+
+//      虽然两者看起来一样，但是Glide更易用，因为Glide的with方法不光接受Context，还接受Activity 和 Fragment，Context会自动的从他们获取。
+//      同时将Activity/Fragment作为with()参数的好处是：图片加载会和Activity/Fragment的生命周期保持一致，
+//      比如Paused状态在暂停加载，在Resumed的时候又自动重新加载。所以我建议传参的时候传递Activity 和 Fragment给Glide，而不是Context。
+//      Glide远比Picasso快，虽然需要更大的空间来缓存。推荐使用Glide
+
+        //可以加载网络图片,本地文件,本地资源等...
+//        .load(String string) string可以为一个文件路径、uri或者url
+//        .load(Uri uri) uri类型
+//        .load(File file) 文件
+//        .load(Integer resourceId) 资源Id, R.drawable.xxx或者R.mipmap.xxx
+//        .load( byte[] model)byte[] 类型
+//        .load(T model) 自定义类型
+
+    }
+}
Index: baselib/src/main/java/com/baselib/uitls/AlipayUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/uitls/AlipayUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/uitls/AlipayUtils.java	(revision )
@@ -0,0 +1,46 @@
+package com.baselib.uitls;
+
+import android.app.Activity;
+import android.text.TextUtils;
+
+import com.alipay.sdk.app.PayTask;
+import com.baselib.basebean.StudentEvent;
+import com.baselib.baserx.RxBus;
+import com.baselib.enums.StudentEnum;
+
+/**
+ * Created by luo on 2018/2/7.
+ */
+
+public class AlipayUtils {
+
+    /**
+     * 支付宝支付
+     *
+     * @param activity
+     * @param payInfo
+     */
+    public static void alipayPay(final Activity activity, final String payInfo) {
+
+        //防双击
+        if (CommonUtils.isDoubleClick(200)) return;
+
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                PayTask alipay = new PayTask(activity);
+                // 调用支付接口，获取支付结果
+                String result = alipay.pay(payInfo, true);
+
+                if (!TextUtils.isEmpty(result) && result.contains("out_trade_no\":\"")) {
+                    String str1 = result.substring(result.indexOf("out_trade_no\":\"") + 15);
+                    String outTradeNo = str1.substring(0, str1.indexOf("\"}"));
+                    RxBus.getInstance().post(new StudentEvent(StudentEnum.ALIPAYPAY, "支付成功!"));
+                } else {
+                    RxBus.getInstance().post(new StudentEvent(StudentEnum.ALIPAYPAY, "操作已取消"));
+                }
+
+            }
+        }).start();
+    }
+}
Index: app/src/main/java/com/b3ad/yuxie/myapplication/mvp/view/UserActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/mvp/view/UserActivity.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/mvp/view/UserActivity.java	(revision )
@@ -0,0 +1,98 @@
+package com.b3ad.yuxie.myapplication.mvp.view;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.view.View;
+import android.view.View.OnClickListener;
+import android.widget.Button;
+import android.widget.EditText;
+
+import com.b3ad.yuxie.myapplication.R;
+import com.b3ad.yuxie.myapplication.mvp.persenter.UserPresenter;
+
+
+public class UserActivity extends Activity implements OnClickListener,
+        IUserView {
+
+    private EditText mFirstNameEditText, mLastNameEditText, mIdEditText,mAddressEditText;
+    private Button mSaveButton, mLoadButton;
+    private UserPresenter mUserPresenter;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        // TODO Auto-generated method stub
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_mvp_user);
+        findWidgets();
+        mUserPresenter = new UserPresenter(this);
+        mSaveButton.setOnClickListener(this);
+        mLoadButton.setOnClickListener(this);
+
+    }
+
+    @Override
+    public void onClick(View v) {
+        // TODO Auto-generated method stub
+        switch (v.getId()) {
+            case R.id.saveButton:
+                mUserPresenter.saveUser(getID(), getFristName(),
+                        getLastName(),getAddress());
+                break;
+            case R.id.loadButton:
+                mUserPresenter.loadUser(getID());
+                break;
+            default:
+                break;
+        }
+    }
+
+    @Override
+    public void setFirstName(String firstName) {
+        // TODO Auto-generated method stub
+        mFirstNameEditText.setText(firstName);
+    }
+
+    @Override
+    public void setLastName(String lastName) {
+        // TODO Auto-generated method stub
+        mLastNameEditText.setText(lastName);
+    }
+
+    @Override
+    public int getID() {
+        // TODO Auto-generated method stub
+        return Integer.parseInt(mIdEditText.getText().toString());
+    }
+
+    @Override
+    public String getFristName() {
+        // TODO Auto-generated method stub
+        return mFirstNameEditText.getText().toString();
+    }
+
+    @Override
+    public String getLastName() {
+        // TODO Auto-generated method stub
+        return mLastNameEditText.getText().toString();
+    }
+
+    @Override
+    public String getAddress() {
+        return mAddressEditText.getText().toString();
+    }
+
+    @Override
+    public void setAddress(String address) {
+        mAddressEditText.setText(address);
+    }
+
+    void findWidgets() {
+        mFirstNameEditText = (EditText) findViewById(R.id.first_name_edt);
+        mLastNameEditText = (EditText) findViewById(R.id.last_name_edt);
+        mIdEditText = (EditText) findViewById(R.id.id_edt);
+        mAddressEditText = (EditText) findViewById(R.id.address_edt);
+
+        mSaveButton = (Button) findViewById(R.id.saveButton);
+        mLoadButton = (Button) findViewById(R.id.loadButton);
+    }
+}
Index: baselib/src/main/java/com/baselib/commonutils/LogUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/commonutils/LogUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/commonutils/LogUtils.java	(revision )
@@ -0,0 +1,94 @@
+package com.baselib.commonutils;
+
+import com.orhanobut.logger.LogLevel;
+import com.orhanobut.logger.Logger;
+
+/**
+ * Created by liuhuaqian on 2017/9/8.
+ *   如果用于android平台，将信息记录到“LogCat”。如果用于java平台，将信息记录到“Console”
+ * 使用logger封装
+ */
+
+public class LogUtils {
+    public static boolean DEBUG_ENABLE = true;// 是否调试模式
+
+    /**
+     * 在application调用初始化
+     */
+    public static void logInit(boolean debug) {
+        DEBUG_ENABLE = debug;
+        if (DEBUG_ENABLE) {
+            Logger.init("Times")                 // default PRETTYLOGGER or use just init()
+                    .methodCount(2)                 // default 2
+                    .logLevel(LogLevel.FULL)        // default LogLevel.FULL
+                    .methodOffset(0);                // default 0
+        } else {
+            Logger.init()                 // default PRETTYLOGGER or use just init()
+                    .methodCount(3)                 // default 2
+                    .hideThreadInfo()               // default shown
+                    .logLevel(LogLevel.NONE)        // default LogLevel.FULL
+                    .methodOffset(2);
+        }
+    }
+
+    public static void logd(String tag, String message) {
+        if (DEBUG_ENABLE) {
+            Logger.d(tag, message);
+        }
+    }
+
+    public static void logd(String message) {
+        if (DEBUG_ENABLE) {
+            Logger.d(message);
+        }
+    }
+
+    public static void loge(Throwable throwable, String message, Object... args) {
+        if (DEBUG_ENABLE) {
+            Logger.e(throwable, message, args);
+        }
+    }
+
+    public static void loge(String message, Object... args) {
+        if (DEBUG_ENABLE) {
+            Logger.e(message, args);
+        }
+    }
+
+    public static void logi(String message, Object... args) {
+        if (DEBUG_ENABLE) {
+            Logger.i(message, args);
+        }
+    }
+
+    public static void logv(String message, Object... args) {
+        if (DEBUG_ENABLE) {
+            Logger.v(message, args);
+        }
+    }
+
+    public static void logw(String message, Object... args) {
+        if (DEBUG_ENABLE) {
+            Logger.v(message, args);
+        }
+    }
+
+    public static void logwtf(String message, Object... args) {
+        if (DEBUG_ENABLE) {
+            Logger.wtf(message, args);
+        }
+    }
+
+    public static void logjson(String message) {
+        if (DEBUG_ENABLE) {
+            Logger.json(message);
+        }
+    }
+
+    public static void logxml(String message) {
+        if (DEBUG_ENABLE) {
+            Logger.xml(message);
+        }
+    }
+}
+
Index: app/src/main/java/com/b3ad/yuxie/myapplication/mvp/bean/UserBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/mvp/bean/UserBean.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/mvp/bean/UserBean.java	(revision )
@@ -0,0 +1,29 @@
+package com.b3ad.yuxie.myapplication.mvp.bean;
+
+public class UserBean {
+    private String mFirstName;
+    private String mLastName;
+    private String address;
+
+    public UserBean(String mFirstName, String mLastName, String address) {
+        this.mFirstName = mFirstName;
+        this.mLastName = mLastName;
+        this.address = address;
+    }
+
+    public String getFirstName() {
+        return mFirstName;
+    }
+
+    public String getLastName() {
+        return mLastName;
+    }
+
+    public String getAddress() {
+        return address;
+    }
+
+    public void setAddress(String address) {
+        this.address = address;
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/app/TakePhoto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/app/TakePhoto.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/app/TakePhoto.java	(revision )
@@ -0,0 +1,125 @@
+package com.baselib.takephoto.app;
+
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import com.baselib.takephoto.compress.CompressConfig;
+import com.baselib.takephoto.model.CropOptions;
+import com.baselib.takephoto.model.MultipleCrop;
+import com.baselib.takephoto.model.TException;
+import com.baselib.takephoto.model.TResult;
+import com.baselib.takephoto.model.TakePhotoOptions;
+import com.baselib.takephoto.permission.PermissionManager;
+
+
+/**
+ - 支持通过相机拍照获取图片
+ - 支持从相册选择图片
+ - 支持从文件选择图片
+ - 支持多图选择
+ - 支持批量图片裁切
+ - 支持批量图片压缩
+ - 支持对图片进行压缩
+ - 支持对图片进行裁剪
+ - 支持对裁剪及压缩参数自定义
+ - 提供自带裁剪工具(可选)
+ - 支持智能选取及裁剪异常处理
+ - 支持因拍照Activity被回收后的自动恢复
+ * Author: crazycodeboy
+ * Date: 2016/9/21 0007 20:10
+ * Version:4.0.0
+ * 技术博文：http://www.cboy.me
+ * GitHub:https://github.com/crazycodeboy
+ * Eamil:crazycodeboy@gmail.com
+ */
+public interface TakePhoto {
+    /**
+     * 图片多选
+     * @param limit 最多选择图片张数的限制
+     * */
+    void onPickMultiple(int limit);
+    /**
+     * 图片多选，并裁切
+     * @param limit 最多选择图片张数的限制
+     * @param options  裁剪配置
+     * */
+    void onPickMultipleWithCrop(int limit, CropOptions options);
+    /**
+     * 从文件中获取图片（不裁剪）
+     */
+    void onPickFromDocuments();
+    /**
+     * 从文件中获取图片并裁剪
+     * @param outPutUri 图片裁剪之后保存的路径
+     * @param options 裁剪配置
+     */
+    void onPickFromDocumentsWithCrop(Uri outPutUri, CropOptions options);
+    /**
+     * 从相册中获取图片（不裁剪）
+     */
+    void onPickFromGallery();
+    /**
+     * 从相册中获取图片并裁剪
+     * @param outPutUri 图片裁剪之后保存的路径
+     * @param options 裁剪配置
+     */
+    void onPickFromGalleryWithCrop(Uri outPutUri, CropOptions options);
+
+    /**
+     * 从相机获取图片(不裁剪)
+     * @param outPutUri 图片保存的路径
+     */
+    void onPickFromCapture(Uri outPutUri);
+    /**
+     * 从相机获取图片并裁剪
+     * @param outPutUri 图片裁剪之后保存的路径
+     * @param options 裁剪配置             
+     */
+    void onPickFromCaptureWithCrop(Uri outPutUri, CropOptions options);
+
+    /**
+     * 裁剪图片
+     * @param imageUri 要裁剪的图片
+     * @param outPutUri 图片裁剪之后保存的路径
+     * @param options 裁剪配置
+     */
+    void onCrop(Uri imageUri, Uri outPutUri, CropOptions options)throws TException;
+    /**
+     * 裁剪多张图片
+     * @param multipleCrop 要裁切的图片的路径以及输出路径
+     * @param options 裁剪配置
+     */
+    void onCrop(MultipleCrop multipleCrop, CropOptions options)throws TException;
+    void permissionNotify(PermissionManager.TPermissionType type);
+    /**
+     * 启用图片压缩
+     * @param config 压缩图片配置
+     * @param showCompressDialog 压缩时是否显示进度对话框
+     */
+    void onEnableCompress(CompressConfig config,boolean showCompressDialog);
+
+    /**
+     * 设置TakePhoto相关配置
+     * @param options
+     */
+    void setTakePhotoOptions(TakePhotoOptions options);
+    void onCreate(Bundle savedInstanceState);
+    void onSaveInstanceState(Bundle outState);
+    /**
+     * 处理拍照或从相册选择的图片或裁剪的结果
+     * @param requestCode
+     * @param resultCode
+     * @param data
+     */
+    void onActivityResult(int requestCode, int resultCode, Intent data);
+    /**
+     * 拍照结果监听接口
+     */
+    interface TakeResultListener {
+        void takeSuccess(TResult result);
+
+        void takeFail(TResult result,String msg);
+
+        void takeCancel();
+    }
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/ui/widget/LoadingRightView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/ui/widget/LoadingRightView.java	(revision )
+++ baselib/src/main/java/com/baselib/ui/widget/LoadingRightView.java	(revision )
@@ -0,0 +1,97 @@
+package com.baselib.ui.widget;
+
+import android.content.Context;
+import android.graphics.Bitmap;
+import android.graphics.BitmapFactory;
+import android.graphics.Canvas;
+import android.graphics.Color;
+import android.graphics.Paint;
+import android.util.AttributeSet;
+import android.view.View;
+
+import com.baselib.R;
+
+/**
+ * 作者: liuhuaqian on 2017/10/7.
+ */
+
+public class LoadingRightView extends View {
+    private Bitmap bitmap;
+    private Paint paint1;
+    private Paint paint2;
+    private Paint paint3;
+    private Canvas canvas;
+    private  int h;
+    public LoadingRightView(Context context) {
+        this(context, null);
+    }
+
+    public LoadingRightView(Context context, AttributeSet attrs) {
+        this(context, attrs, 0);
+    }
+
+    public LoadingRightView(Context context, AttributeSet attrs, int defStyleAttr) {
+        super(context, attrs, defStyleAttr);
+        paint1 = new Paint();
+        // 设置paint为无锯齿
+        paint1.setAntiAlias(true);
+        paint1.setColor(Color.rgb(248, 110, 12));
+        paint2 = new Paint();
+        paint2.setAntiAlias(true);
+        paint2.setColor(Color.BLACK);
+        paint3 = new Paint();
+        paint3.setColor(Color.WHITE);
+        Bitmap bitmap1 = BitmapFactory.decodeResource(context.getResources(), R.drawable.history_foot_right_empty);
+        bitmap = bitmap1.extractAlpha();// 获取一个透明图片
+        h = bitmap.getHeight();//初始化y轴坐标
+    }
+    @Override
+    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)
+    {
+        int widthMode = MeasureSpec.getMode(widthMeasureSpec);
+        int widthSize = MeasureSpec.getSize(widthMeasureSpec);
+        int heightMode = MeasureSpec.getMode(heightMeasureSpec);
+        int heightSize = MeasureSpec.getSize(heightMeasureSpec);
+        int width;
+        int height ;
+        if (widthMode == MeasureSpec.EXACTLY)
+        {
+            width = widthSize;
+        } else
+        {
+            float textWidth = bitmap.getWidth();
+            int desired = (int) (getPaddingLeft() + textWidth + getPaddingRight());
+            width = desired;
+        }
+
+        if (heightMode == MeasureSpec.EXACTLY)
+        {
+            height = heightSize;
+        } else
+        {
+            float textHeight = bitmap.getHeight();
+            int desired = (int) (getPaddingTop() + textHeight + getPaddingBottom());
+            height = desired;
+        }
+        setMeasuredDimension(width, height);
+    }
+
+    @Override
+    protected void onDraw(Canvas canvas)
+    {
+        this.canvas = canvas;
+        canvas.drawColor(Color.WHITE); // 画布颜色
+        canvas.drawBitmap(bitmap, 0, 0, paint2); //画一个灰的图片
+        canvas.save();
+        //按y来裁剪区域
+        canvas.clipRect(0, h +0, bitmap.getWidth()+0,
+                bitmap.getHeight()+0);
+        canvas.drawBitmap(bitmap, 0, 0, paint1);
+        canvas.restore();
+    }
+    public void updateView(int i){
+        h =i;
+        postInvalidate();
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/b3ad/yuxie/myapplication/mvp/persenter/UserPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/mvp/persenter/UserPresenter.java	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/mvp/persenter/UserPresenter.java	(revision )
@@ -0,0 +1,31 @@
+package com.b3ad.yuxie.myapplication.mvp.persenter;
+
+
+import com.b3ad.yuxie.myapplication.mvp.bean.UserBean;
+import com.b3ad.yuxie.myapplication.mvp.model.IUserModel;
+import com.b3ad.yuxie.myapplication.mvp.model.UserModel;
+import com.b3ad.yuxie.myapplication.mvp.view.IUserView;
+
+public class UserPresenter {
+	private IUserView mUserView;
+	private IUserModel mUserModel;
+
+	public UserPresenter(IUserView view) {
+		mUserView = view;
+		mUserModel = new UserModel();
+	}
+
+	public void saveUser(int id, String firstName, String lastName,String address) {
+		mUserModel.setID(id);
+		mUserModel.setFirstName(firstName);
+		mUserModel.setLastName(lastName);
+		mUserModel.setAddress(address);
+	}
+
+	public void loadUser(int id) {
+		UserBean user = mUserModel.load(id);
+		mUserView.setFirstName(user.getFirstName());
+		mUserView.setLastName(user.getLastName());
+		mUserView.setAddress(user.getAddress());
+	}
+}
Index: baselib/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/res/values/strings.xml	(revision )
+++ baselib/src/main/res/values/strings.xml	(revision )
@@ -0,0 +1,39 @@
+<resources>
+    <string name="app_name">baselib</string>
+    <string name="net_error">网络访问错误，请稍后再试!</string>
+    <string name="empty">还没有数据哦</string>
+    <string name="loading">加载中...</string>
+    <string name="reload">重新尝试</string>
+    <string name="no_net">网络不可用,请检查你的网络!</string>
+
+    <!--TakePhoto-->
+    <string name="tip_type_not_image">选择的不是图片</string>
+    <string name="tip_no_camera">没有相机</string>
+    <string name="tip_tips">提示</string>
+    <string name="tip_compress">正在压缩照片...</string>
+    <string name="tip_compress_failed">"%1$s 图片压缩失败:%2$s picturePath:%3$s"</string>
+    <string name="msg_crop_failed">"有裁切失败的图片"</string>
+    <string name="msg_compress_failed">"有压缩失败的图片"</string>
+    <string name="msg_crop_canceled">" 取消裁切"</string>
+    <string name="msg_operation_canceled">"操作被取消"</string>
+    <string name="tip_permission_camera">没有使用相机的权限，请在权限管理中开启</string>
+    <string name="tip_permission_storage">没有使用SD卡的权限，请在权限管理中开启</string>
+    <string name="tip_permission_camera_storage">没有使用相机和SD卡的权限，请在权限管理中开启</string>
+
+    <!--custom multipleimageselect -->
+    <string name="album_view">选择图片</string>
+    <string name="image_view">单击选择</string>
+
+    <string name="add">确定</string>
+    <string name="selected">已选</string>
+    <string name="limit_exceeded">最多能选 %d 张</string>
+
+    <!--TakePhoto-->
+
+    <!--腾讯Bugly初始化 AppId-->
+    <string name="bugly_app_id">9ea9dc4b46</string>
+    <!--微信支付,分享,登录 AppId-->
+    <string name="wx_app_id">wx9d55a4dc0d12ccc5</string>
+
+
+</resources>
Index: baselib/src/main/java/com/baselib/takephoto/model/TakePhotoOptions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/model/TakePhotoOptions.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/model/TakePhotoOptions.java	(revision )
@@ -0,0 +1,61 @@
+package com.baselib.takephoto.model;
+
+import java.io.Serializable;
+
+/**
+ * Author: crazycodeboy
+ * Date: 2016/11/5 0007 20:10
+ * Version:4.0.0
+ * 技术博文：http://www.devio.org/
+ * GitHub:https://github.com/crazycodeboy
+ * Eamil:crazycodeboy@gmail.com
+ */
+public class TakePhotoOptions implements Serializable {
+    /**
+     * 是否使用TakePhoto自带的相册进行图片选择，默认不使用，但选择多张图片会使用
+     */
+    private boolean withOwnGallery;
+    /**
+     * 是对拍的照片进行旋转角度纠正
+     */
+    private boolean correctImage;
+
+    private TakePhotoOptions() {
+    }
+
+    public boolean isWithOwnGallery() {
+        return withOwnGallery;
+    }
+
+    public void setWithOwnGallery(boolean withOwnGallery) {
+        this.withOwnGallery = withOwnGallery;
+    }
+
+    public boolean isCorrectImage() {
+        return correctImage;
+    }
+
+    public void setCorrectImage(boolean correctImage) {
+        this.correctImage = correctImage;
+    }
+
+    public static class Builder {
+        private TakePhotoOptions options;
+
+        public Builder() {
+            this.options = new TakePhotoOptions();
+        }
+
+        public Builder setWithOwnGallery(boolean withOwnGallery) {
+            options.setWithOwnGallery(withOwnGallery);
+            return this;
+        }
+        public Builder setCorrectImage(boolean isCorrectImage) {
+            options.setCorrectImage(isCorrectImage);
+            return this;
+        }
+        public TakePhotoOptions create(){
+            return options;
+        }
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/model/TException.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/model/TException.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/model/TException.java	(revision )
@@ -0,0 +1,16 @@
+package com.baselib.takephoto.model;
+
+/**
+ * Author: JPH
+ * Date: 2016/7/26 10:53
+ */
+public class TException extends Exception{
+    String detailMessage;
+    public TException(TExceptionType exceptionType) {
+        super(exceptionType.getStringValue());
+        this.detailMessage=exceptionType.getStringValue();
+    }
+    public String getDetailMessage() {
+        return detailMessage;
+    }
+}
Index: baselib/src/main/java/com/baselib/takephoto/model/TExceptionType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/model/TExceptionType.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/model/TExceptionType.java	(revision )
@@ -0,0 +1,24 @@
+package com.baselib.takephoto.model;
+
+/**
+ * Author: JPH
+ * Date: 2016/7/26 11:01
+ */
+public enum TExceptionType {
+    TYPE_NOT_IMAGE("选择的文件不是图片"),
+    TYPE_WRITE_FAIL("保存选择的的文件失败"),
+    TYPE_URI_NULL("所选照片的Uri 为null"),
+    TYPE_URI_PARSE_FAIL("从Uri中获取文件路径失败"),
+    TYPE_NO_MATCH_PICK_INTENT("没有匹配到选择图片的Intent"),
+    TYPE_NO_MATCH_CROP_INTENT("没有匹配到裁切图片的Intent"),
+    TYPE_NO_CAMERA("没有相机"),
+    TYPE_NO_FIND("选择的文件没有找到");
+
+    String stringValue;
+    TExceptionType(String stringValue) {
+        this.stringValue=stringValue;
+    }
+    public String getStringValue() {
+        return stringValue;
+    }
+}
Index: baselib/src/main/java/com/baselib/uitls/GPSUtil.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/uitls/GPSUtil.java	(revision )
+++ baselib/src/main/java/com/baselib/uitls/GPSUtil.java	(revision )
@@ -0,0 +1,155 @@
+package com.baselib.uitls;
+
+/**
+ * Created by luo on 2018/1/19.
+ */
+
+public class GPSUtil {
+
+    public static double pi = 3.1415926535897932384626;
+    public static double x_pi = 3.14159265358979324 * 3000.0 / 180.0;
+    public static double a = 6378245.0;
+    public static double ee = 0.00669342162296594323;
+
+    public static double transformLat(double x, double y) {
+        double ret = -100.0 + 2.0 * x + 3.0 * y + 0.2 * y * y + 0.1 * x * y
+                + 0.2 * Math.sqrt(Math.abs(x));
+        ret += (20.0 * Math.sin(6.0 * x * pi) + 20.0 * Math.sin(2.0 * x * pi)) * 2.0 / 3.0;
+        ret += (20.0 * Math.sin(y * pi) + 40.0 * Math.sin(y / 3.0 * pi)) * 2.0 / 3.0;
+        ret += (160.0 * Math.sin(y / 12.0 * pi) + 320 * Math.sin(y * pi / 30.0)) * 2.0 / 3.0;
+        return ret;
+    }
+
+    public static double transformLon(double x, double y) {
+        double ret = 300.0 + x + 2.0 * y + 0.1 * x * x + 0.1 * x * y + 0.1
+                * Math.sqrt(Math.abs(x));
+        ret += (20.0 * Math.sin(6.0 * x * pi) + 20.0 * Math.sin(2.0 * x * pi)) * 2.0 / 3.0;
+        ret += (20.0 * Math.sin(x * pi) + 40.0 * Math.sin(x / 3.0 * pi)) * 2.0 / 3.0;
+        ret += (150.0 * Math.sin(x / 12.0 * pi) + 300.0 * Math.sin(x / 30.0
+                * pi)) * 2.0 / 3.0;
+        return ret;
+    }
+
+    public static double[] transform(double lat, double lon) {
+        if (outOfChina(lat, lon)) {
+            return new double[]{lat, lon};
+        }
+        double dLat = transformLat(lon - 105.0, lat - 35.0);
+        double dLon = transformLon(lon - 105.0, lat - 35.0);
+        double radLat = lat / 180.0 * pi;
+        double magic = Math.sin(radLat);
+        magic = 1 - ee * magic * magic;
+        double sqrtMagic = Math.sqrt(magic);
+        dLat = (dLat * 180.0) / ((a * (1 - ee)) / (magic * sqrtMagic) * pi);
+        dLon = (dLon * 180.0) / (a / sqrtMagic * Math.cos(radLat) * pi);
+        double mgLat = lat + dLat;
+        double mgLon = lon + dLon;
+        return new double[]{mgLat, mgLon};
+    }
+
+    public static boolean outOfChina(double lat, double lon) {
+        if (lon < 72.004 || lon > 137.8347)
+            return true;
+        if (lat < 0.8293 || lat > 55.8271)
+            return true;
+        return false;
+    }
+
+    /**
+     * 84 to 火星坐标系 (GCJ-02) World Geodetic System ==> Mars Geodetic System
+     *
+     * @param lat
+     * @param lon
+     * @return
+     */
+    public static double[] gps84_To_Gcj02(double lat, double lon) {
+        if (outOfChina(lat, lon)) {
+            return new double[]{lat, lon};
+        }
+        double dLat = transformLat(lon - 105.0, lat - 35.0);
+        double dLon = transformLon(lon - 105.0, lat - 35.0);
+        double radLat = lat / 180.0 * pi;
+        double magic = Math.sin(radLat);
+        magic = 1 - ee * magic * magic;
+        double sqrtMagic = Math.sqrt(magic);
+        dLat = (dLat * 180.0) / ((a * (1 - ee)) / (magic * sqrtMagic) * pi);
+        dLon = (dLon * 180.0) / (a / sqrtMagic * Math.cos(radLat) * pi);
+        double mgLat = lat + dLat;
+        double mgLon = lon + dLon;
+        return new double[]{mgLat, mgLon};
+    }
+
+    /**
+     * * 火星坐标系 (GCJ-02) to 84 * * @param lon * @param lat * @return
+     */
+    public static double[] gcj02_To_Gps84(double lat, double lon) {
+        double[] gps = transform(lat, lon);
+        double lontitude = lon * 2 - gps[1];
+        double latitude = lat * 2 - gps[0];
+        return new double[]{latitude, lontitude};
+    }
+
+    /**
+     * 火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换算法 将 GCJ-02 坐标转换成 BD-09 坐标
+     *
+     * @param lat
+     * @param lon
+     */
+    public static double[] gcj02_To_Bd09(double lat, double lon) {
+        double x = lon, y = lat;
+        double z = Math.sqrt(x * x + y * y) + 0.00002 * Math.sin(y * x_pi);
+        double theta = Math.atan2(y, x) + 0.000003 * Math.cos(x * x_pi);
+        double tempLon = z * Math.cos(theta) + 0.0065;
+        double tempLat = z * Math.sin(theta) + 0.006;
+        double[] gps = {tempLat, tempLon};
+        return gps;
+    }
+
+    /**
+     * * 火星坐标系 (GCJ-02) 与百度坐标系 (BD-09) 的转换算法 * * 将 BD-09 坐标转换成GCJ-02 坐标 * * @param
+     * bd_lat * @param bd_lon * @return
+     */
+    public static double[] bd09_To_Gcj02(double lat, double lon) {
+        double x = lon - 0.0065, y = lat - 0.006;
+        double z = Math.sqrt(x * x + y * y) - 0.00002 * Math.sin(y * x_pi);
+        double theta = Math.atan2(y, x) - 0.000003 * Math.cos(x * x_pi);
+        double tempLon = z * Math.cos(theta);
+        double tempLat = z * Math.sin(theta);
+        double[] gps = {tempLat, tempLon};
+        return gps;
+    }
+
+    /**
+     * 将gps84转为bd09
+     *
+     * @param lat
+     * @param lon
+     * @return
+     */
+    public static double[] gps84_To_bd09(double lat, double lon) {
+        double[] gcj02 = gps84_To_Gcj02(lat, lon);
+        double[] bd09 = gcj02_To_Bd09(gcj02[0], gcj02[1]);
+        return bd09;
+    }
+
+    public static double[] bd09_To_gps84(double lat, double lon) {
+        double[] gcj02 = bd09_To_Gcj02(lat, lon);
+        double[] gps84 = gcj02_To_Gps84(gcj02[0], gcj02[1]);
+        //保留小数点后六位
+        gps84[0] = retain6(gps84[0]);
+        gps84[1] = retain6(gps84[1]);
+        return gps84;
+    }
+
+    /**
+     * 保留小数点后六位
+     *
+     * @param num
+     * @return
+     */
+    private static double retain6(double num) {
+        String result = String.format("%.6f", num);
+        return Double.valueOf(result);
+    }
+
+}
Index: baselib/src/main/java/com/baselib/uitls/CommonUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/uitls/CommonUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/uitls/CommonUtils.java	(revision )
@@ -0,0 +1,304 @@
+package com.baselib.uitls;
+
+import android.bluetooth.BluetoothAdapter;
+import android.bluetooth.BluetoothManager;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.ApplicationInfo;
+import android.net.Uri;
+import android.os.Build;
+import android.os.Bundle;
+import android.text.TextUtils;
+
+import com.baselib.baseapp.BaseApplication;
+import com.baselib.utilcode.util.ActivityUtils;
+import com.baselib.utilcode.util.AppUtils;
+import com.google.gson.JsonParseException;
+import com.google.gson.JsonParser;
+
+import java.net.URISyntaxException;
+import java.net.URLEncoder;
+import java.text.SimpleDateFormat;
+import java.util.Calendar;
+import java.util.Date;
+
+/**
+ * Created by luo on 2017/11/26.
+ */
+
+public class CommonUtils {
+
+    /**
+     * 判断是否是正确的json格式数据
+     *
+     * @param json
+     * @return
+     */
+    public static boolean isGoodJson(String json) {
+        if (TextUtils.isEmpty(json)) {
+            return false;
+        }
+        try {
+            new JsonParser().parse(json);
+            return true;
+        } catch (JsonParseException e) {
+            return false;
+        }
+    }
+
+    /**
+     * 判断是否是double字符串
+     *
+     * @param doubleString
+     * @return
+     */
+    public static boolean isDouble(String doubleString) {
+        if (TextUtils.isEmpty(doubleString)) {
+            return false;
+        }
+        try {
+            Double.parseDouble(doubleString);
+            return true;
+        } catch (Exception e) {
+            return false;
+        }
+    }
+
+    /**
+     * 判断是否是int字符串
+     *
+     * @param intString
+     * @return
+     */
+    public static boolean isInteger(String intString) {
+        if (TextUtils.isEmpty(intString)) {
+            return false;
+        }
+        try {
+            Integer.parseInt(intString);
+            return true;
+        } catch (Exception e) {
+            return false;
+        }
+    }
+
+    /**
+     * 判断是否是long字符串
+     *
+     * @param longString
+     * @return
+     */
+    public static boolean isLong(String longString) {
+        if (TextUtils.isEmpty(longString)) {
+            return false;
+        }
+        try {
+            Long.parseLong(longString);
+            return true;
+        } catch (Exception e) {
+            return false;
+        }
+    }
+
+    /**
+     * 字符串转int
+     *
+     * @param intString
+     * @return
+     */
+    public static int string2Int(String intString) {
+        try {
+            return Integer.parseInt(intString);
+        } catch (Exception e) {
+            return 0;
+        }
+    }
+
+    /**
+     * 字符串转double
+     *
+     * @param doubleString
+     * @return
+     */
+    public static double string2Double(String doubleString) {
+        try {
+            return Double.parseDouble(doubleString);
+        } catch (Exception e) {
+            return 0d;
+        }
+    }
+
+    /**
+     * 字符串转long
+     *
+     * @param longString
+     * @return
+     */
+    public static long string2Long(String longString) {
+        try {
+            return Long.parseLong(longString);
+        } catch (Exception e) {
+            return 0l;
+        }
+    }
+
+    public static BluetoothAdapter getDefaultAdapter() {
+        BluetoothAdapter adapter = null;
+        if (Build.VERSION.SDK_INT <= Build.VERSION_CODES.JELLY_BEAN_MR1) {
+            adapter = BluetoothAdapter.getDefaultAdapter();
+        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {
+            final BluetoothManager bluetoothManager = (BluetoothManager) BaseApplication.getAppContext().getSystemService(Context.BLUETOOTH_SERVICE);
+            adapter = bluetoothManager.getAdapter();
+        }
+        return adapter;
+    }
+
+    /**
+     * 蓝牙是否可用
+     *
+     * @return
+     */
+    public static boolean isBluetoothEnabled() {
+        //获取蓝牙适配器
+        BluetoothAdapter adapter = BluetoothAdapter.getDefaultAdapter();
+        if (null == adapter) {
+            return false;
+        } else {
+            if (!adapter.isEnabled()) {
+                return false;
+            } else {
+                return true;
+            }
+        }
+    }
+
+
+    /**
+     * 上次点击时间
+     */
+    private static long lastClickTime = 0;
+
+    /**
+     * 检测是连续点击,连续点击事件间隔太小不处理
+     *
+     * @return
+     */
+    public static boolean isDoubleClick() {
+        /**
+         * 最小间隔时间
+         */
+        int MIN_CLICK_DELAY_TIME = 1000;
+        return isDoubleClick(MIN_CLICK_DELAY_TIME);
+    }
+
+    /**
+     * @param delayTime 间隔时间(自定义间隔时间)
+     * @return
+     */
+    public static boolean isDoubleClick(long delayTime) {
+        long currentTime = Calendar.getInstance().getTimeInMillis();
+        if (currentTime - lastClickTime > delayTime || currentTime - lastClickTime < 0) {
+            lastClickTime = currentTime;
+            return false;
+        }
+        return true;
+    }
+
+    /**
+     * 但是当我们没在AndroidManifest.xml中设置其debug属性时:
+     * 使用Eclipse运行这种方式打包时其debug属性为true,使用Eclipse导出这种方式打包时其debug属性为法false.
+     * 在使用ant打包时，其值就取决于ant的打包参数是release还是debug.
+     * 因此在AndroidMainifest.xml中最好不设置android:debuggable属性置，而是由打包方式来决定其值.
+     *
+     * @return
+     */
+    public static boolean isApkDebugable() {
+        try {
+            ApplicationInfo info = BaseApplication.getAppContext().getApplicationInfo();
+            return (info.flags & ApplicationInfo.FLAG_DEBUGGABLE) != 0;
+        } catch (Exception e) {
+        }
+        return false;
+    }
+
+    /**
+     * 将String型格式化,比如想要将2011-11-11格式化成2011年11月11日,就StringPattern("2011-11-11","yyyy-MM-dd","yyyy年MM月dd日").
+     *
+     * @param date       String 想要格式化的日期
+     * @param oldPattern String 想要格式化的日期的现有格式
+     * @param newPattern String 想要格式化成什么格式
+     * @return String
+     */
+    public static String stringPattern(String date, String oldPattern, String newPattern) {
+        if (date == null || oldPattern == null || newPattern == null)
+            return "";
+        SimpleDateFormat sdf1 = new SimpleDateFormat(oldPattern);        // 实例化模板对象
+        SimpleDateFormat sdf2 = new SimpleDateFormat(newPattern);        // 实例化模板对象
+        Date d = null;
+        try {
+            d = sdf1.parse(date);   // 将给定的字符串中的日期提取出来
+        } catch (Exception e) {            // 如果提供的字符串格式有错误，则进行异常处理
+            e.printStackTrace();       // 打印异常信息
+        }
+        return sdf2.format(d);
+    }
+
+    public static void toSelfSetting() {
+        Intent mIntent = new Intent();
+        mIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        if (Build.VERSION.SDK_INT >= 9) {
+            mIntent.setAction("android.settings.APPLICATION_DETAILS_SETTINGS");
+            mIntent.setData(Uri.fromParts("package", BaseApplication.getAppContext().getPackageName(), null));
+        } else if (Build.VERSION.SDK_INT <= 8) {
+            mIntent.setAction(Intent.ACTION_VIEW);
+            mIntent.setClassName("com.android.settings", "com.android.setting.InstalledAppDetails");
+            mIntent.putExtra("com.android.settings.ApplicationPkgName", BaseApplication.getAppContext().getPackageName());
+        }
+        BaseApplication.getAppContext().startActivity(mIntent);
+    }
+
+    public static void baiduGuide(String latitude, String longitude, String addrees) {
+        try {
+            Intent intent = Intent.getIntent("intent://map/direction?" +
+                    //"origin=latlng:"+"34.264642646862,108.95108518068&" +   //起点  此处不传值默认选择当前位置
+                    "destination=latlng:" + latitude + "," + longitude + "|name:" + addrees +        //终点
+                    "&mode=driving&" +          //导航路线方式
+                    "region=北京" +           //
+                    "&src=" + AppUtils.getAppName() + "#Intent;scheme=bdapp;package=com.baidu.BaiduMap;end");
+            BaseApplication.getAppContext().startActivity(intent); //启动调用
+        } catch (URISyntaxException e) {
+        }
+    }
+
+    public static void gaodeGuide(String latitudeStr, String longitudeStr, String addrees, String latitudeStart, String longitudeStart) {
+
+        if (!CommonUtils.isDouble(latitudeStr) || !CommonUtils.isDouble(longitudeStr)) {
+            return;
+        }
+
+        double latitude = Double.parseDouble(latitudeStr);
+        double longitude = Double.parseDouble(longitudeStr);
+
+
+        double[] lng = GPSUtil.bd09_To_Gcj02(latitude, longitude);
+
+
+        try {
+            Uri uri = Uri.parse("androidamap://navi?" +
+                    "sourceApplication=" + URLEncoder.encode(AppUtils.getAppName(), "utf-8") +
+                    "&poiname=" + URLEncoder.encode(addrees, "utf-8") +
+                    "&slat=" + latitudeStart +
+                    "&slon=" + longitudeStart +
+                    "&lat=" + lng[0] +
+                    "&lon=" + lng[1] + "&dev=0&stype=0");
+
+            Intent intent = new Intent("android.intent.action.VIEW");
+            intent.setData(uri);
+            intent.setPackage("com.autonavi.minimap");
+            BaseApplication.getAppContext().startActivity(intent);
+
+        } catch (Exception e) {
+        }
+    }
+
+}
Index: baselib/src/main/java/com/baselib/basebean/WxBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/basebean/WxBean.java	(revision )
+++ baselib/src/main/java/com/baselib/basebean/WxBean.java	(revision )
@@ -0,0 +1,100 @@
+package com.baselib.basebean;
+
+import com.google.gson.annotations.SerializedName;
+
+/**
+ * Created by luo on 2017/12/20.
+ */
+
+public class WxBean {
+
+
+    /**
+     * package : Sign=WXPay
+     * appid : wx4829dd54efe9c7d3
+     * sign : 2EBAE2C987BAE22A0AFD39A226DFEC1E
+     * prepayid : wx201711212042306e51956c240542859316
+     * partnerid : 1482712842
+     * noncestr : hMTdNO0lcmxX0tbR
+     * timestamp : 1511268152
+     */
+
+    //package是关键字
+    @SerializedName("package")
+    private String packageX;
+    private String appid;
+    private String sign;
+    private String prepayid;
+    private String partnerid;
+    private String noncestr;
+    private String timestamp;
+
+    public String getPackageX() {
+        return packageX;
+    }
+
+    public void setPackageX(String packageX) {
+        this.packageX = packageX;
+    }
+
+    public String getAppid() {
+        return appid;
+    }
+
+    public void setAppid(String appid) {
+        this.appid = appid;
+    }
+
+    public String getSign() {
+        return sign;
+    }
+
+    public void setSign(String sign) {
+        this.sign = sign;
+    }
+
+    public String getPrepayid() {
+        return prepayid;
+    }
+
+    public void setPrepayid(String prepayid) {
+        this.prepayid = prepayid;
+    }
+
+    public String getPartnerid() {
+        return partnerid;
+    }
+
+    public void setPartnerid(String partnerid) {
+        this.partnerid = partnerid;
+    }
+
+    public String getNoncestr() {
+        return noncestr;
+    }
+
+    public void setNoncestr(String noncestr) {
+        this.noncestr = noncestr;
+    }
+
+    public String getTimestamp() {
+        return timestamp;
+    }
+
+    public void setTimestamp(String timestamp) {
+        this.timestamp = timestamp;
+    }
+
+    @Override
+    public String toString() {
+        return "WxBean{" +
+                "packageX='" + packageX + '\'' +
+                ", appid='" + appid + '\'' +
+                ", sign='" + sign + '\'' +
+                ", prepayid='" + prepayid + '\'' +
+                ", partnerid='" + partnerid + '\'' +
+                ", noncestr='" + noncestr + '\'' +
+                ", timestamp='" + timestamp + '\'' +
+                '}';
+    }
+}
Index: baselib/src/main/java/com/baselib/uitls/ViewFindUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/uitls/ViewFindUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/uitls/ViewFindUtils.java	(revision )
@@ -0,0 +1,49 @@
+package com.baselib.uitls;
+
+import android.util.SparseArray;
+import android.view.View;
+
+@SuppressWarnings({ "unchecked" })
+public class ViewFindUtils
+{
+	/**
+	 * ViewHolder简洁写法,避免适配器中重复定义ViewHolder,减少代码量 用法:
+	 *
+	 * <pre>
+	 * if (convertView == null)
+	 * {
+	 * 	convertView = View.inflate(context, R.layout.ad_demo, null);
+	 * }
+	 * TextView tv_demo = ViewHolderUtils.get(convertView, R.id.tv_demo);
+	 * ImageView iv_demo = ViewHolderUtils.get(convertView, R.id.iv_demo);
+	 * </pre>
+	 */
+	public static <T extends View> T hold(View view, int id)
+	{
+		SparseArray<View> viewHolder = (SparseArray<View>) view.getTag();
+
+		if (viewHolder == null)
+		{
+			viewHolder = new SparseArray<View>();
+			view.setTag(viewHolder);
+		}
+
+		View childView = viewHolder.get(id);
+
+		if (childView == null)
+		{
+			childView = view.findViewById(id);
+			viewHolder.put(id, childView);
+		}
+
+		return (T) childView;
+	}
+
+	/**
+	 * 替代findviewById方法
+	 */
+	public static <T extends View> T find(View view, int id)
+	{
+		return (T) view.findViewById(id);
+	}
+}
Index: baselib/src/main/java/com/baselib/commonutils/PackageUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/commonutils/PackageUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/commonutils/PackageUtils.java	(revision )
@@ -0,0 +1,76 @@
+package com.baselib.commonutils;
+
+import android.content.Context;
+import android.content.pm.ApplicationInfo;
+import android.content.pm.PackageInfo;
+import android.content.pm.PackageManager;
+
+/**
+ * 作者: liuhuaqian on 2017/10/16.
+ * 获取版本工具
+ */
+
+public class PackageUtils {
+    /**
+     * 获取版本名称
+     *
+     * @param context 上下文
+     * @return 版本名称
+     */
+    public static String getVersionName(Context context) {
+        //获取包管理器
+        PackageManager pm = context.getPackageManager();
+        //获取包信息
+        try {
+            PackageInfo packageInfo = pm.getPackageInfo(context.getPackageName(), 0);
+        //返回版本名称
+            return packageInfo.versionName;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+
+    /**
+     * 获取版本号
+     *
+     * @param context 上下文
+     * @return 版本号
+     */
+    public static int getVersionCode(Context context) {
+        //获取包管理器
+        PackageManager pm = context.getPackageManager();
+        //获取包信息
+        try {
+            PackageInfo packageInfo = pm.getPackageInfo(context.getPackageName(), 0);
+            //返回版本号
+            return packageInfo.versionCode;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+        }
+        return 0;
+    }
+
+    /**
+     * 获取App的名称
+     *
+     * @param context 上下文
+     * @return 名称
+     */
+    public static String getAppName(Context context) {
+        PackageManager pm = context.getPackageManager();
+            //获取包信息
+        try {
+            PackageInfo packageInfo = pm.getPackageInfo(context.getPackageName(), 0);
+            //获取应用 信息
+            ApplicationInfo applicationInfo = packageInfo.applicationInfo;
+            //获取albelRes
+            int labelRes = applicationInfo.labelRes;
+            //返回App的名称
+            return context.getResources().getString(labelRes);
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+        }
+        return null;
+    }
+}
\ No newline at end of file
Index: baselib/src/main/java/com/baselib/recycleview/ItemViewDelegateManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/recycleview/ItemViewDelegateManager.java	(revision )
+++ baselib/src/main/java/com/baselib/recycleview/ItemViewDelegateManager.java	(revision )
@@ -0,0 +1,131 @@
+package com.baselib.recycleview;
+
+import android.support.v4.util.SparseArrayCompat;
+
+public class ItemViewDelegateManager<T>
+{
+    SparseArrayCompat<ItemViewDelegate<T>> delegates = new SparseArrayCompat();
+
+    public int getItemViewDelegateCount()
+    {
+        return delegates.size();
+    }
+
+    public ItemViewDelegateManager<T> addDelegate(ItemViewDelegate<T> delegate)
+    {
+        int viewType = delegates.size();
+        if (delegate != null)
+        {
+            delegates.put(viewType, delegate);
+            viewType++;
+        }
+        return this;
+    }
+
+    public ItemViewDelegateManager<T> addDelegate(int viewType, ItemViewDelegate<T> delegate)
+    {
+        if (delegates.get(viewType) != null)
+        {
+            throw new IllegalArgumentException(
+                    "An ItemViewDelegate is already registered for the viewType = "
+                            + viewType
+                            + ". Already registered ItemViewDelegate is "
+                            + delegates.get(viewType));
+        }
+        delegates.put(viewType, delegate);
+        return this;
+    }
+
+    public ItemViewDelegateManager<T> removeDelegate(ItemViewDelegate<T> delegate)
+    {
+        if (delegate == null)
+        {
+            throw new NullPointerException("ItemViewDelegate is null");
+        }
+        int indexToRemove = delegates.indexOfValue(delegate);
+
+        if (indexToRemove >= 0)
+        {
+            delegates.removeAt(indexToRemove);
+        }
+        return this;
+    }
+
+    public ItemViewDelegateManager<T> removeDelegate(int itemType)
+    {
+        int indexToRemove = delegates.indexOfKey(itemType);
+
+        if (indexToRemove >= 0)
+        {
+            delegates.removeAt(indexToRemove);
+        }
+        return this;
+    }
+
+    public int getItemViewType(T item, int position)
+    {
+        int delegatesCount = delegates.size();
+        for (int i = delegatesCount - 1; i >= 0; i--)
+        {
+            ItemViewDelegate<T> delegate = delegates.valueAt(i);
+            if (delegate.isForViewType(item, position))
+            {
+                return delegates.keyAt(i);
+            }
+        }
+        throw new IllegalArgumentException(
+                "No ItemViewDelegate added that matches position=" + position + " in data source");
+    }
+
+    public void convert(ViewHolder holder, T item, int position)
+    {
+        int delegatesCount = delegates.size();
+        for (int i = 0; i < delegatesCount; i++)
+        {
+            ItemViewDelegate<T> delegate = delegates.valueAt(i);
+
+            if (delegate.isForViewType(item, position))
+            {
+                delegate.convert(holder, item, position);
+                return;
+            }
+        }
+        throw new IllegalArgumentException(
+                "No ItemViewDelegateManager added that matches position=" + position + " in data source");
+    }
+
+    public int getItemViewLayoutId(int viewType)
+    {
+        return delegates.get(viewType).getItemViewLayoutId();
+    }
+
+    public int getItemViewType(ItemViewDelegate itemViewDelegate)
+    {
+        return delegates.indexOfValue(itemViewDelegate);
+    }
+
+    public ItemViewDelegate getItemViewDelegate(T item, int position)
+    {
+        int delegatesCount = delegates.size();
+        for (int i = delegatesCount - 1; i >= 0; i--)
+        {
+            ItemViewDelegate<T> delegate = delegates.valueAt(i);
+            if (delegate.isForViewType(item, position))
+            {
+                return delegate;
+            }
+        }
+        throw new IllegalArgumentException(
+                "No ItemViewDelegate added that matches position=" + position + " in data source");
+    }
+
+    public int getItemViewLayoutId(T item, int position)
+    {
+        return getItemViewDelegate(item,position).getItemViewLayoutId();
+    }
+
+    public ItemViewDelegate getItemViewDelegate(int viewType)
+    {
+        return delegates.get(viewType);
+    }
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/ActivityUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/ActivityUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/ActivityUtils.java	(revision )
@@ -0,0 +1,1113 @@
+package com.baselib.utilcode.util;
+
+import android.app.Activity;
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.content.pm.PackageManager;
+import android.content.pm.ResolveInfo;
+import android.os.Build;
+import android.os.Bundle;
+import android.support.annotation.AnimRes;
+import android.support.annotation.NonNull;
+import android.support.v4.app.ActivityOptionsCompat;
+import android.support.v4.util.Pair;
+import android.view.View;
+
+import java.util.List;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/09/23
+ *     desc  : Activity相关工具类
+ * </pre>
+ */
+public final class ActivityUtils {
+
+    private ActivityUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 判断Activity是否存在
+     *
+     * @param packageName 包名
+     * @param className   activity全路径类名
+     * @return {@code true}: 是<br>{@code false}: 否
+     */
+    public static boolean isActivityExists(@NonNull final String packageName,
+                                           @NonNull final String className) {
+        Intent intent = new Intent();
+        intent.setClassName(packageName, className);
+        return !(Utils.getApp().getPackageManager().resolveActivity(intent, 0) == null ||
+                intent.resolveActivity(Utils.getApp().getPackageManager()) == null ||
+                Utils.getApp().getPackageManager().queryIntentActivities(intent, 0).size() == 0);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param clz activity类
+     */
+    public static void startActivity(@NonNull final Class<?> clz) {
+        Context context = getActivityOrApp();
+        startActivity(context, null, context.getPackageName(), clz.getName(), null);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param clz     activity类
+     * @param options 跳转动画
+     */
+    public static void startActivity(@NonNull final Class<?> clz,
+                                     @NonNull final Bundle options) {
+        Context context = getActivityOrApp();
+        startActivity(context, null, context.getPackageName(), clz.getName(), options);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param clz       activity类
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivity(@NonNull final Class<?> clz,
+                                     @AnimRes final int enterAnim,
+                                     @AnimRes final int exitAnim) {
+        Context context = getActivityOrApp();
+        startActivity(context, null, context.getPackageName(), clz.getName(),
+                getOptionsBundle(context, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN && context instanceof Activity) {
+            ((Activity) context).overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity activity
+     * @param clz      activity类
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final Class<?> clz) {
+        startActivity(activity, null, activity.getPackageName(), clz.getName(), null);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity activity
+     * @param clz      activity类
+     * @param options  跳转动画
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final Class<?> clz,
+                                     @NonNull final Bundle options) {
+        startActivity(activity, null, activity.getPackageName(), clz.getName(), options);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity       activity
+     * @param clz            activity类
+     * @param sharedElements 共享元素
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final Class<?> clz,
+                                     @NonNull final View... sharedElements) {
+        startActivity(activity, null, activity.getPackageName(), clz.getName(),
+                getOptionsBundle(activity, sharedElements));
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity  activity
+     * @param clz       activity类
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final Class<?> clz,
+                                     @AnimRes final int enterAnim,
+                                     @AnimRes final int exitAnim) {
+
+        startActivity(activity, null, activity.getPackageName(), clz.getName(),
+                getOptionsBundle(activity, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
+            activity.overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras extras
+     * @param clz    activity类
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final Class<?> clz) {
+        Context context = getActivityOrApp();
+        startActivity(context, extras, context.getPackageName(), clz.getName(), null);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras  extras
+     * @param clz     activity类
+     * @param options 跳转动画
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final Class<?> clz,
+                                     @NonNull final Bundle options) {
+        Context context = getActivityOrApp();
+        startActivity(context, extras, context.getPackageName(), clz.getName(), options);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras    extras
+     * @param clz       activity类
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final Class<?> clz,
+                                     @AnimRes final int enterAnim,
+                                     @AnimRes final int exitAnim) {
+        Context context = getActivityOrApp();
+        startActivity(context, extras, context.getPackageName(), clz.getName(),
+                getOptionsBundle(context, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN && context instanceof Activity) {
+            ((Activity) context).overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras   extras
+     * @param activity activity
+     * @param clz      activity类
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final Activity activity,
+                                     @NonNull final Class<?> clz) {
+        startActivity(activity, extras, activity.getPackageName(), clz.getName(), null);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras   extras
+     * @param activity activity
+     * @param clz      activity类
+     * @param options  跳转动画
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final Activity activity,
+                                     @NonNull final Class<?> clz,
+                                     @NonNull final Bundle options) {
+        startActivity(activity, extras, activity.getPackageName(), clz.getName(), options);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras         extras
+     * @param activity       activity
+     * @param clz            activity类
+     * @param sharedElements 共享元素
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final Activity activity,
+                                     @NonNull final Class<?> clz,
+                                     @NonNull final View... sharedElements) {
+        startActivity(activity, extras, activity.getPackageName(), clz.getName(),
+                getOptionsBundle(activity, sharedElements));
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras    extras
+     * @param activity  activity
+     * @param clz       activity类
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final Activity activity,
+                                     @NonNull final Class<?> clz,
+                                     @AnimRes final int enterAnim,
+                                     @AnimRes final int exitAnim) {
+        startActivity(activity, extras, activity.getPackageName(), clz.getName(),
+                getOptionsBundle(activity, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
+            activity.overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param pkg 包名
+     * @param cls 全类名
+     */
+    public static void startActivity(@NonNull final String pkg,
+                                     @NonNull final String cls) {
+        startActivity(getActivityOrApp(), null, pkg, cls, null);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param pkg     包名
+     * @param cls     全类名
+     * @param options 动画
+     */
+    public static void startActivity(@NonNull final String pkg,
+                                     @NonNull final String cls,
+                                     @NonNull final Bundle options) {
+        startActivity(getActivityOrApp(), null, pkg, cls, options);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param pkg       包名
+     * @param cls       全类名
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivity(@NonNull final String pkg,
+                                     @NonNull final String cls,
+                                     @AnimRes final int enterAnim,
+                                     @AnimRes final int exitAnim) {
+        Context context = getActivityOrApp();
+        startActivity(context, null, pkg, cls, getOptionsBundle(context, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN && context instanceof Activity) {
+            ((Activity) context).overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity activity
+     * @param pkg      包名
+     * @param cls      全类名
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final String pkg,
+                                     @NonNull final String cls) {
+        startActivity(activity, null, pkg, cls, null);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity activity
+     * @param pkg      包名
+     * @param cls      全类名
+     * @param options  动画
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final String pkg,
+                                     @NonNull final String cls,
+                                     @NonNull final Bundle options) {
+        startActivity(activity, null, pkg, cls, options);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity       activity
+     * @param pkg            包名
+     * @param cls            全类名
+     * @param sharedElements 共享元素
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final String pkg,
+                                     @NonNull final String cls,
+                                     @NonNull final View... sharedElements) {
+        startActivity(activity, null, pkg, cls, getOptionsBundle(activity, sharedElements));
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity  activity
+     * @param pkg       包名
+     * @param cls       全类名
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final String pkg,
+                                     @NonNull final String cls,
+                                     @AnimRes final int enterAnim,
+                                     @AnimRes final int exitAnim) {
+        startActivity(activity, null, pkg, cls, getOptionsBundle(activity, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
+            activity.overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras extras
+     * @param pkg    包名
+     * @param cls    全类名
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final String pkg,
+                                     @NonNull final String cls) {
+        startActivity(getActivityOrApp(), extras, pkg, cls, null);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras  extras
+     * @param pkg     包名
+     * @param cls     全类名
+     * @param options 动画
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final String pkg,
+                                     @NonNull final String cls,
+                                     @NonNull final Bundle options) {
+        startActivity(getActivityOrApp(), extras, pkg, cls, options);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras    extras
+     * @param pkg       包名
+     * @param cls       全类名
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final String pkg,
+                                     @NonNull final String cls,
+                                     @AnimRes final int enterAnim,
+                                     @AnimRes final int exitAnim) {
+        Context context = getActivityOrApp();
+        startActivity(context, extras, pkg, cls, getOptionsBundle(context, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN && context instanceof Activity) {
+            ((Activity) context).overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity activity
+     * @param extras   extras
+     * @param pkg      包名
+     * @param cls      全类名
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final Activity activity,
+                                     @NonNull final String pkg,
+                                     @NonNull final String cls) {
+        startActivity(activity, extras, pkg, cls, null);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras   extras
+     * @param activity activity
+     * @param pkg      包名
+     * @param cls      全类名
+     * @param options  动画
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final Activity activity,
+                                     @NonNull final String pkg,
+                                     @NonNull final String cls,
+                                     @NonNull final Bundle options) {
+        startActivity(activity, extras, pkg, cls, options);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras         extras
+     * @param activity       activity
+     * @param pkg            包名
+     * @param cls            全类名
+     * @param sharedElements 共享元素
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final Activity activity,
+                                     @NonNull final String pkg,
+                                     @NonNull final String cls,
+                                     @NonNull final View... sharedElements) {
+        startActivity(activity, extras, pkg, cls, getOptionsBundle(activity, sharedElements));
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param extras    extras
+     * @param pkg       包名
+     * @param cls       全类名
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivity(@NonNull final Bundle extras,
+                                     @NonNull final Activity activity,
+                                     @NonNull final String pkg,
+                                     @NonNull final String cls,
+                                     @AnimRes final int enterAnim,
+                                     @AnimRes final int exitAnim) {
+        startActivity(activity, extras, pkg, cls, getOptionsBundle(activity, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
+            activity.overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param intent 意图
+     */
+    public static void startActivity(@NonNull final Intent intent) {
+        startActivity(intent, getActivityOrApp(), null);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param intent  意图
+     * @param options 跳转动画
+     */
+    public static void startActivity(@NonNull final Intent intent,
+                                     @NonNull final Bundle options) {
+        startActivity(intent, getActivityOrApp(), options);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param intent    意图
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivity(@NonNull final Intent intent,
+                                     @AnimRes final int enterAnim,
+                                     @AnimRes final int exitAnim) {
+        Context context = getActivityOrApp();
+        startActivity(intent, context, getOptionsBundle(context, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN && context instanceof Activity) {
+            ((Activity) context).overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity activity
+     * @param intent   意图
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final Intent intent) {
+        startActivity(intent, activity, null);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity activity
+     * @param intent   意图
+     * @param options  跳转动画
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final Intent intent,
+                                     @NonNull final Bundle options) {
+        startActivity(intent, activity, options);
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity       activity
+     * @param intent         意图
+     * @param sharedElements 共享元素
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final Intent intent,
+                                     @NonNull final View... sharedElements) {
+        startActivity(intent, activity, getOptionsBundle(activity, sharedElements));
+    }
+
+    /**
+     * 启动Activity
+     *
+     * @param activity  activity
+     * @param intent    意图
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivity(@NonNull final Activity activity,
+                                     @NonNull final Intent intent,
+                                     @AnimRes final int enterAnim,
+                                     @AnimRes final int exitAnim) {
+        startActivity(intent, activity, getOptionsBundle(activity, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
+            activity.overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 启动多个Activity
+     *
+     * @param intents 意图
+     */
+    public static void startActivities(@NonNull final Intent[] intents) {
+        startActivities(intents, getActivityOrApp(), null);
+    }
+
+    /**
+     * 启动多个Activity
+     *
+     * @param intents 意图
+     * @param options 跳转动画
+     */
+    public static void startActivities(@NonNull final Intent[] intents,
+                                       @NonNull final Bundle options) {
+        startActivities(intents, getActivityOrApp(), options);
+    }
+
+    /**
+     * 启动多个Activity
+     *
+     * @param intents   意图
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivities(@NonNull final Intent[] intents,
+                                       @AnimRes final int enterAnim,
+                                       @AnimRes final int exitAnim) {
+        Context context = getActivityOrApp();
+        startActivities(intents, context, getOptionsBundle(context, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN && context instanceof Activity) {
+            ((Activity) context).overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 启动多个Activity
+     *
+     * @param activity activity
+     * @param intents  意图
+     */
+    public static void startActivities(@NonNull final Activity activity,
+                                       @NonNull final Intent[] intents) {
+        startActivities(intents, activity, null);
+    }
+
+    /**
+     * 启动多个Activity
+     *
+     * @param activity activity
+     * @param intents  意图
+     * @param options  跳转动画
+     */
+    public static void startActivities(@NonNull final Activity activity,
+                                       @NonNull final Intent[] intents,
+                                       @NonNull final Bundle options) {
+        startActivities(intents, activity, options);
+    }
+
+    /**
+     * 启动多个Activity
+     *
+     * @param activity  activity
+     * @param intents   意图
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void startActivities(@NonNull final Activity activity,
+                                       @NonNull final Intent[] intents,
+                                       @AnimRes final int enterAnim,
+                                       @AnimRes final int exitAnim) {
+        startActivities(intents, activity, getOptionsBundle(activity, enterAnim, exitAnim));
+        if (Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {
+            activity.overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    /**
+     * 回到桌面
+     */
+    public static void startHomeActivity() {
+        Intent homeIntent = new Intent(Intent.ACTION_MAIN);
+        homeIntent.addCategory(Intent.CATEGORY_HOME);
+        startActivity(homeIntent);
+    }
+
+    /**
+     * 获取Activity栈链表
+     *
+     * @return Activity栈链表
+     */
+    public static List<Activity> getActivityList() {
+        return Utils.sActivityList;
+    }
+
+    /**
+     * 获取启动项Activity
+     *
+     * @return 启动项Activity
+     */
+    public static String getLauncherActivity() {
+        return getLauncherActivity(Utils.getApp().getPackageName());
+    }
+
+    /**
+     * 获取启动项Activity
+     *
+     * @param packageName 包名
+     * @return 启动项Activity
+     */
+    public static String getLauncherActivity(@NonNull final String packageName) {
+        Intent intent = new Intent(Intent.ACTION_MAIN, null);
+        intent.addCategory(Intent.CATEGORY_LAUNCHER);
+        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        PackageManager pm = Utils.getApp().getPackageManager();
+        List<ResolveInfo> info = pm.queryIntentActivities(intent, 0);
+        for (ResolveInfo aInfo : info) {
+            if (aInfo.activityInfo.packageName.equals(packageName)) {
+                return aInfo.activityInfo.name;
+            }
+        }
+        return "no " + packageName;
+    }
+
+    /**
+     * 获取栈顶Activity
+     *
+     * @return 栈顶Activity
+     */
+    public static Activity getTopActivity() {
+        if (Utils.sTopActivityWeakRef != null) {
+            Activity activity = Utils.sTopActivityWeakRef.get();
+            if (activity != null) {
+                return activity;
+            }
+        }
+        List<Activity> activities = Utils.sActivityList;
+        int size = activities.size();
+        return size > 0 ? activities.get(size - 1) : null;
+    }
+
+    /**
+     * 判断Activity是否存在栈中
+     *
+     * @param activity activity
+     * @return {@code true}: 存在<br>{@code false}: 不存在
+     */
+    public static boolean isActivityExistsInStack(@NonNull final Activity activity) {
+        List<Activity> activities = Utils.sActivityList;
+        for (Activity aActivity : activities) {
+            if (aActivity.equals(activity)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 判断Activity是否存在栈中
+     *
+     * @param clz activity类
+     * @return {@code true}: 存在<br>{@code false}: 不存在
+     */
+    public static boolean isActivityExistsInStack(@NonNull final Class<?> clz) {
+        List<Activity> activities = Utils.sActivityList;
+        for (Activity aActivity : activities) {
+            if (aActivity.getClass().equals(clz)) {
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 结束Activity
+     *
+     * @param activity activity
+     */
+    public static void finishActivity(@NonNull final Activity activity) {
+        finishActivity(activity, false);
+    }
+
+    /**
+     * 结束Activity
+     *
+     * @param activity   activity
+     * @param isLoadAnim 是否启动动画
+     */
+    public static void finishActivity(@NonNull final Activity activity, final boolean isLoadAnim) {
+        activity.finish();
+        if (!isLoadAnim) {
+            activity.overridePendingTransition(0, 0);
+        }
+    }
+
+    /**
+     * 结束Activity
+     *
+     * @param activity  activity
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void finishActivity(@NonNull final Activity activity,
+                                      @AnimRes final int enterAnim,
+                                      @AnimRes final int exitAnim) {
+        activity.finish();
+        activity.overridePendingTransition(enterAnim, exitAnim);
+    }
+
+    /**
+     * 结束Activity
+     *
+     * @param clz activity类
+     */
+    public static void finishActivity(@NonNull final Class<?> clz) {
+        finishActivity(clz, false);
+    }
+
+    /**
+     * 结束Activity
+     *
+     * @param clz        activity类
+     * @param isLoadAnim 是否启动动画
+     */
+    public static void finishActivity(@NonNull final Class<?> clz, final boolean isLoadAnim) {
+        List<Activity> activities = Utils.sActivityList;
+        for (Activity activity : activities) {
+            if (activity.getClass().equals(clz)) {
+                activity.finish();
+                if (!isLoadAnim) {
+                    activity.overridePendingTransition(0, 0);
+                }
+            }
+        }
+    }
+
+    /**
+     * 结束Activity
+     *
+     * @param clz       activity类
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void finishActivity(@NonNull final Class<?> clz,
+                                      @AnimRes final int enterAnim,
+                                      @AnimRes final int exitAnim) {
+        List<Activity> activities = Utils.sActivityList;
+        for (Activity activity : activities) {
+            if (activity.getClass().equals(clz)) {
+                activity.finish();
+                activity.overridePendingTransition(enterAnim, exitAnim);
+            }
+        }
+    }
+
+    /**
+     * 结束到指定Activity
+     *
+     * @param activity      activity
+     * @param isIncludeSelf 是否结束该activity自己
+     */
+    public static boolean finishToActivity(@NonNull final Activity activity,
+                                           final boolean isIncludeSelf) {
+        return finishToActivity(activity, isIncludeSelf, false);
+    }
+
+    /**
+     * 结束到指定Activity
+     *
+     * @param activity      activity
+     * @param isIncludeSelf 是否结束该activity自己
+     * @param isLoadAnim    是否启动动画
+     */
+    public static boolean finishToActivity(@NonNull final Activity activity,
+                                           final boolean isIncludeSelf,
+                                           final boolean isLoadAnim) {
+        List<Activity> activities = Utils.sActivityList;
+        for (int i = activities.size() - 1; i >= 0; --i) {
+            Activity aActivity = activities.get(i);
+            if (aActivity.equals(activity)) {
+                if (isIncludeSelf) {
+                    finishActivity(aActivity, isLoadAnim);
+                }
+                return true;
+            }
+            finishActivity(aActivity, isLoadAnim);
+        }
+        return false;
+    }
+
+    /**
+     * 结束到指定Activity
+     *
+     * @param activity      activity
+     * @param isIncludeSelf 是否结束该activity自己
+     * @param enterAnim     入场动画
+     * @param exitAnim      出场动画
+     */
+    public static boolean finishToActivity(@NonNull final Activity activity,
+                                           final boolean isIncludeSelf,
+                                           @AnimRes final int enterAnim,
+                                           @AnimRes final int exitAnim) {
+        List<Activity> activities = Utils.sActivityList;
+        for (int i = activities.size() - 1; i >= 0; --i) {
+            Activity aActivity = activities.get(i);
+            if (aActivity.equals(activity)) {
+                if (isIncludeSelf) {
+                    finishActivity(aActivity, enterAnim, exitAnim);
+                }
+                return true;
+            }
+            finishActivity(aActivity, enterAnim, exitAnim);
+        }
+        return false;
+    }
+
+    /**
+     * 结束到指定Activity
+     *
+     * @param clz           activity类
+     * @param isIncludeSelf 是否结束该activity自己
+     */
+    public static boolean finishToActivity(@NonNull final Class<?> clz,
+                                           final boolean isIncludeSelf) {
+        return finishToActivity(clz, isIncludeSelf, false);
+    }
+
+    /**
+     * 结束到指定Activity
+     *
+     * @param clz           activity类
+     * @param isIncludeSelf 是否结束该activity自己
+     * @param isLoadAnim    是否启动动画
+     */
+    public static boolean finishToActivity(@NonNull final Class<?> clz,
+                                           final boolean isIncludeSelf,
+                                           final boolean isLoadAnim) {
+        List<Activity> activities = Utils.sActivityList;
+        for (int i = activities.size() - 1; i >= 0; --i) {
+            Activity aActivity = activities.get(i);
+            if (aActivity.getClass().equals(clz)) {
+                if (isIncludeSelf) {
+                    finishActivity(aActivity, isLoadAnim);
+                }
+                return true;
+            }
+            finishActivity(aActivity, isLoadAnim);
+        }
+        return false;
+    }
+
+    /**
+     * 结束到指定Activity
+     *
+     * @param clz           activity类
+     * @param isIncludeSelf 是否结束该activity自己
+     * @param enterAnim     入场动画
+     * @param exitAnim      出场动画
+     */
+    public static boolean finishToActivity(@NonNull final Class<?> clz,
+                                           final boolean isIncludeSelf,
+                                           @AnimRes final int enterAnim,
+                                           @AnimRes final int exitAnim) {
+        List<Activity> activities = Utils.sActivityList;
+        for (int i = activities.size() - 1; i >= 0; --i) {
+            Activity aActivity = activities.get(i);
+            if (aActivity.getClass().equals(clz)) {
+                if (isIncludeSelf) {
+                    finishActivity(aActivity, enterAnim, exitAnim);
+                }
+                return true;
+            }
+            finishActivity(aActivity, enterAnim, exitAnim);
+        }
+        return false;
+    }
+
+    /**
+     * 结束除最新之外的同类型Activity
+     * <p>也就是让栈中最多只剩下一种类型的Activity</p>
+     *
+     * @param clz activity类
+     */
+    public static void finishOtherActivitiesExceptNewest(@NonNull final Class<?> clz) {
+        finishOtherActivitiesExceptNewest(clz, false);
+    }
+
+    /**
+     * 结束除最新之外的同类型Activity
+     * <p>也就是让栈中最多只剩下一种类型的Activity</p>
+     *
+     * @param clz        activity类
+     * @param isLoadAnim 是否启动动画
+     */
+    public static void finishOtherActivitiesExceptNewest(@NonNull final Class<?> clz,
+                                                         final boolean isLoadAnim) {
+        List<Activity> activities = Utils.sActivityList;
+        boolean flag = false;
+        for (int i = activities.size() - 1; i >= 0; i--) {
+            Activity activity = activities.get(i);
+            if (activity.getClass().equals(clz)) {
+                if (flag) {
+                    finishActivity(activity, isLoadAnim);
+                } else {
+                    flag = true;
+                }
+            }
+        }
+    }
+
+    /**
+     * 结束除最新之外的同类型Activity
+     * <p>也就是让栈中最多只剩下一种类型的Activity</p>
+     *
+     * @param clz       activity类
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void finishOtherActivitiesExceptNewest(@NonNull final Class<?> clz,
+                                                         @AnimRes final int enterAnim,
+                                                         @AnimRes final int exitAnim) {
+        List<Activity> activities = Utils.sActivityList;
+        boolean flag = false;
+        for (int i = activities.size() - 1; i >= 0; i--) {
+            Activity activity = activities.get(i);
+            if (activity.getClass().equals(clz)) {
+                if (flag) {
+                    finishActivity(activity, enterAnim, exitAnim);
+                } else {
+                    flag = true;
+                }
+            }
+        }
+    }
+
+    /**
+     * 结束所有activity
+     */
+    public static void finishAllActivities() {
+        finishAllActivities(false);
+    }
+
+    /**
+     * 结束所有activity
+     *
+     * @param isLoadAnim 是否启动动画
+     */
+    public static void finishAllActivities(final boolean isLoadAnim) {
+        List<Activity> activityList = Utils.sActivityList;
+        for (int i = activityList.size() - 1; i >= 0; --i) {// 从栈顶开始移除
+            Activity activity = activityList.get(i);
+            activity.finish();// 在onActivityDestroyed发生remove
+            if (!isLoadAnim) {
+                activity.overridePendingTransition(0, 0);
+            }
+        }
+    }
+
+    /**
+     * 结束所有activity
+     *
+     * @param enterAnim 入场动画
+     * @param exitAnim  出场动画
+     */
+    public static void finishAllActivities(@AnimRes final int enterAnim, @AnimRes final int exitAnim) {
+        List<Activity> activityList = Utils.sActivityList;
+        for (int i = activityList.size() - 1; i >= 0; --i) {// 从栈顶开始移除
+            Activity activity = activityList.get(i);
+            activity.finish();// 在onActivityDestroyed发生remove
+            activity.overridePendingTransition(enterAnim, exitAnim);
+        }
+    }
+
+    private static Context getActivityOrApp() {
+        Activity topActivity = getTopActivity();
+        return topActivity == null ? Utils.getApp() : topActivity;
+    }
+
+    private static void startActivity(final Context context,
+                                      final Bundle extras,
+                                      final String pkg,
+                                      final String cls,
+                                      final Bundle options) {
+        Intent intent = new Intent(Intent.ACTION_VIEW);
+        if (extras != null) intent.putExtras(extras);
+        intent.setComponent(new ComponentName(pkg, cls));
+        startActivity(intent, context, options);
+    }
+
+    private static void startActivity(final Intent intent,
+                                      final Context context,
+                                      final Bundle options) {
+        if (!(context instanceof Activity)) {
+            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        }
+        if (options != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
+            context.startActivity(intent, options);
+        } else {
+            context.startActivity(intent);
+        }
+    }
+
+    private static void startActivities(final Intent[] intents,
+                                        final Context context,
+                                        final Bundle options) {
+        if (!(context instanceof Activity)) {
+            for (Intent intent : intents) {
+                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+            }
+        }
+        if (options != null && Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {
+            context.startActivities(intents, options);
+        } else {
+            context.startActivities(intents);
+        }
+    }
+
+    private static Bundle getOptionsBundle(final Context context,
+                                           final int enterAnim,
+                                           final int exitAnim) {
+        return ActivityOptionsCompat.makeCustomAnimation(context, enterAnim, exitAnim).toBundle();
+    }
+
+    private static Bundle getOptionsBundle(final Activity activity,
+                                           final View[] sharedElements) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+            int len = sharedElements.length;
+            @SuppressWarnings("unchecked")
+            Pair<View, String>[] pairs = new Pair[len];
+            for (int i = 0; i < len; i++) {
+                pairs[i] = Pair.create(sharedElements[i], sharedElements[i].getTransitionName());
+            }
+            return ActivityOptionsCompat.makeSceneTransitionAnimation(activity, pairs).toBundle();
+        }
+        return ActivityOptionsCompat.makeSceneTransitionAnimation(activity, null, null).toBundle();
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/b3ad/yuxie/myapplication/ndk/hello.c
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/b3ad/yuxie/myapplication/ndk/hello.c	(revision )
+++ app/src/main/java/com/b3ad/yuxie/myapplication/ndk/hello.c	(revision )
@@ -0,0 +1,27 @@
+#include <jni.h>
+#include <stdio.h>
+
+jclass    gJniClass;
+jmethodID gJinMethod;
+
+JNIEXPORT jstring JNICALL
+Java_com_wzhnsc_test_MainActivity_print(JNIEnv* env,
+										jclass  cls,
+										jstring param)
+{
+     const char* tpParam;
+
+     gJniClass  = cls;
+     gJinMethod = (*env)->GetStaticMethodID(env, gJniClass, "myCallbackFunc", "(Ljava/lang/String;)V");
+
+     if (0 == gJinMethod || NULL == gJinMethod)
+     {
+         return (*env)->NewStringUTF(env, "-2");
+     }
+
+     tpParam =(*env)->GetStringUTFChars(env, param, 0);
+
+     (*env)->CallStaticVoidMethod(env, gJniClass, gJinMethod, (*env)->NewStringUTF(env, tpParam));
+
+     return param;
+}
Index: baselib/src/main/java/com/baselib/utilcode/util/StringUtils.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/utilcode/util/StringUtils.java	(revision )
+++ baselib/src/main/java/com/baselib/utilcode/util/StringUtils.java	(revision )
@@ -0,0 +1,190 @@
+package com.baselib.utilcode.util;
+
+/**
+ * <pre>
+ *     author: Blankj
+ *     blog  : http://blankj.com
+ *     time  : 2016/08/16
+ *     desc  : 字符串相关工具类
+ * </pre>
+ */
+public final class StringUtils {
+
+    private StringUtils() {
+        throw new UnsupportedOperationException("u can't instantiate me...");
+    }
+
+    /**
+     * 判断字符串是否为null或长度为0
+     *
+     * @param s 待校验字符串
+     * @return {@code true}: 空<br> {@code false}: 不为空
+     */
+    public static boolean isEmpty(final CharSequence s) {
+        return s == null || s.length() == 0;
+    }
+
+    /**
+     * 判断字符串是否为null或全为空格
+     *
+     * @param s 待校验字符串
+     * @return {@code true}: null或全空格<br> {@code false}: 不为null且不全空格
+     */
+    public static boolean isTrimEmpty(final String s) {
+        return (s == null || s.trim().length() == 0);
+    }
+
+    /**
+     * 判断字符串是否为null或全为空白字符
+     *
+     * @param s 待校验字符串
+     * @return {@code true}: null或全空白字符<br> {@code false}: 不为null且不全空白字符
+     */
+    public static boolean isSpace(final String s) {
+        if (s == null) return true;
+        for (int i = 0, len = s.length(); i < len; ++i) {
+            if (!Character.isWhitespace(s.charAt(i))) {
+                return false;
+            }
+        }
+        return true;
+    }
+
+    /**
+     * 判断两字符串是否相等
+     *
+     * @param a 待校验字符串a
+     * @param b 待校验字符串b
+     * @return {@code true}: 相等<br>{@code false}: 不相等
+     */
+    public static boolean equals(final CharSequence a, final CharSequence b) {
+        if (a == b) return true;
+        int length;
+        if (a != null && b != null && (length = a.length()) == b.length()) {
+            if (a instanceof String && b instanceof String) {
+                return a.equals(b);
+            } else {
+                for (int i = 0; i < length; i++) {
+                    if (a.charAt(i) != b.charAt(i)) return false;
+                }
+                return true;
+            }
+        }
+        return false;
+    }
+
+    /**
+     * 判断两字符串忽略大小写是否相等
+     *
+     * @param a 待校验字符串a
+     * @param b 待校验字符串b
+     * @return {@code true}: 相等<br>{@code false}: 不相等
+     */
+    public static boolean equalsIgnoreCase(final String a, final String b) {
+        return a == null ? b == null : a.equalsIgnoreCase(b);
+    }
+
+    /**
+     * null转为长度为0的字符串
+     *
+     * @param s 待转字符串
+     * @return s为null转为长度为0字符串，否则不改变
+     */
+    public static String null2Length0(final String s) {
+        return s == null ? "" : s;
+    }
+
+    /**
+     * 返回字符串长度
+     *
+     * @param s 字符串
+     * @return null返回0，其他返回自身长度
+     */
+    public static int length(final CharSequence s) {
+        return s == null ? 0 : s.length();
+    }
+
+    /**
+     * 首字母大写
+     *
+     * @param s 待转字符串
+     * @return 首字母大写字符串
+     */
+    public static String upperFirstLetter(final String s) {
+        if (isEmpty(s) || !Character.isLowerCase(s.charAt(0))) return s;
+        return String.valueOf((char) (s.charAt(0) - 32)) + s.substring(1);
+    }
+
+    /**
+     * 首字母小写
+     *
+     * @param s 待转字符串
+     * @return 首字母小写字符串
+     */
+    public static String lowerFirstLetter(final String s) {
+        if (isEmpty(s) || !Character.isUpperCase(s.charAt(0))) return s;
+        return String.valueOf((char) (s.charAt(0) + 32)) + s.substring(1);
+    }
+
+    /**
+     * 反转字符串
+     *
+     * @param s 待反转字符串
+     * @return 反转字符串
+     */
+    public static String reverse(final String s) {
+        int len = length(s);
+        if (len <= 1) return s;
+        int mid = len >> 1;
+        char[] chars = s.toCharArray();
+        char c;
+        for (int i = 0; i < mid; ++i) {
+            c = chars[i];
+            chars[i] = chars[len - i - 1];
+            chars[len - i - 1] = c;
+        }
+        return new String(chars);
+    }
+
+    /**
+     * 转化为半角字符
+     *
+     * @param s 待转字符串
+     * @return 半角字符串
+     */
+    public static String toDBC(final String s) {
+        if (isEmpty(s)) return s;
+        char[] chars = s.toCharArray();
+        for (int i = 0, len = chars.length; i < len; i++) {
+            if (chars[i] == 12288) {
+                chars[i] = ' ';
+            } else if (65281 <= chars[i] && chars[i] <= 65374) {
+                chars[i] = (char) (chars[i] - 65248);
+            } else {
+                chars[i] = chars[i];
+            }
+        }
+        return new String(chars);
+    }
+
+    /**
+     * 转化为全角字符
+     *
+     * @param s 待转字符串
+     * @return 全角字符串
+     */
+    public static String toSBC(final String s) {
+        if (isEmpty(s)) return s;
+        char[] chars = s.toCharArray();
+        for (int i = 0, len = chars.length; i < len; i++) {
+            if (chars[i] == ' ') {
+                chars[i] = (char) 12288;
+            } else if (33 <= chars[i] && chars[i] <= 126) {
+                chars[i] = (char) (chars[i] + 65248);
+            } else {
+                chars[i] = chars[i];
+            }
+        }
+        return new String(chars);
+    }
+}
Index: baselib/src/main/java/com/baselib/daynightmodeutils/grant/PermissionHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/daynightmodeutils/grant/PermissionHelper.java	(revision )
+++ baselib/src/main/java/com/baselib/daynightmodeutils/grant/PermissionHelper.java	(revision )
@@ -0,0 +1,66 @@
+package com.baselib.daynightmodeutils.grant;
+
+import android.Manifest;
+
+/**
+ * Created by Administrator on 2016/12/22.
+ * 6.0权限申请帮助类
+ */
+public class PermissionHelper {
+
+    /**
+     * sd卡读写
+     */
+    public static String[] file = {Manifest.permission.WRITE_EXTERNAL_STORAGE,
+            Manifest.permission.READ_EXTERNAL_STORAGE};
+
+    /**
+     * 使用录音
+     */
+    public static String[] voice = {Manifest.permission.RECORD_AUDIO,
+            Manifest.permission.WRITE_EXTERNAL_STORAGE,
+            Manifest.permission.READ_EXTERNAL_STORAGE};
+
+    /**
+     * 百度定位
+     */
+    public static String[] baidu = {Manifest.permission.ACCESS_COARSE_LOCATION,
+            Manifest.permission.ACCESS_FINE_LOCATION,
+            Manifest.permission.READ_PHONE_STATE,
+            Manifest.permission.WRITE_EXTERNAL_STORAGE};
+
+    /**
+     * ShareSDK
+     */
+    public static String[] shareSDK = {Manifest.permission.WRITE_EXTERNAL_STORAGE,
+            Manifest.permission.READ_PHONE_STATE};
+
+    /**
+     * 使用相册功能
+     */
+    public static String[] album = {Manifest.permission.READ_EXTERNAL_STORAGE};
+
+    /**
+     * 使用相机功能
+     */
+    public static String[] camera = {Manifest.permission.CAMERA, Manifest.permission.WRITE_EXTERNAL_STORAGE};
+    /**
+     * 录像
+     */
+    public static String[] voideo = { Manifest.permission.RECORD_AUDIO,Manifest.permission.CAMERA,Manifest.permission.MOUNT_UNMOUNT_FILESYSTEMS, Manifest.permission.WRITE_EXTERNAL_STORAGE,
+            Manifest.permission.READ_EXTERNAL_STORAGE};
+    /**
+     * 使用微信支付、支付宝支付所需的权限
+     */
+    public static String[] pay = {Manifest.permission.READ_PHONE_STATE, Manifest.permission.WRITE_EXTERNAL_STORAGE};
+
+    /**
+     * 打电话
+     */
+    public static String[] call_phone = {Manifest.permission.CALL_PHONE};
+
+    /**
+     * 获取通讯录
+     */
+    public static String[] addressBook = {Manifest.permission.READ_CONTACTS};
+}
Index: baselib/src/main/java/com/baselib/takephoto/compress/CompressWithLuBan.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- baselib/src/main/java/com/baselib/takephoto/compress/CompressWithLuBan.java	(revision )
+++ baselib/src/main/java/com/baselib/takephoto/compress/CompressWithLuBan.java	(revision )
@@ -0,0 +1,112 @@
+package com.baselib.takephoto.compress;
+
+import android.content.Context;
+import com.baselib.takephoto.model.LubanOptions;
+import com.baselib.takephoto.model.TImage;
+
+import java.io.File;
+import java.util.ArrayList;
+import java.util.List;
+
+import me.shaohui.advancedluban.Luban;
+import me.shaohui.advancedluban.OnCompressListener;
+import me.shaohui.advancedluban.OnMultiCompressListener;
+
+/**
+ * 压缩照片,采用luban
+ * Author: crazycodeboy
+ * Date: 2016/11/5 0007 20:10
+ * Version:4.0.0
+ * 技术博文：http://www.devio.org/
+ * GitHub:https://github.com/crazycodeboy
+ * Eamil:crazycodeboy@gmail.com
+ */
+public class CompressWithLuBan implements CompressImage {
+  private ArrayList<TImage> images;
+  private CompressListener listener;
+  private Context context;
+  private LubanOptions options;
+  private ArrayList<File> files = new ArrayList<>();
+
+  public CompressWithLuBan(Context context, CompressConfig config, ArrayList<TImage> images,
+      CompressListener listener) {
+    options = config.getLubanOptions();
+    this.images = images;
+    this.listener = listener;
+    this.context = context;
+  }
+
+  @Override public void compress() {
+    if (images == null || images.isEmpty()) {
+      listener.onCompressFailed(images, " images is null");
+      return;
+    }
+    for (TImage image : images) {
+      if (image == null) {
+        listener.onCompressFailed(images, " There are pictures of compress  is null.");
+        return;
+      }
+      files.add(new File(image.getOriginalPath()));
+    }
+    if (images.size() == 1) {
+      compressOne();
+    } else {
+      compressMulti();
+    }
+  }
+
+  private void compressOne() {
+    Luban.compress(context, files.get(0))
+        .putGear(Luban.CUSTOM_GEAR)
+        .setMaxHeight(options.getMaxHeight())
+        .setMaxWidth(options.getMaxWidth())
+        .setMaxSize(options.getMaxSize() / 1000)
+        .launch(new OnCompressListener() {
+          @Override public void onStart() {
+
+          }
+
+          @Override public void onSuccess(File file) {
+            TImage image = images.get(0);
+            image.setCompressPath(file.getPath());
+            image.setCompressed(true);
+            listener.onCompressSuccess(images);
+          }
+
+          @Override public void onError(Throwable e) {
+            listener.onCompressFailed(images, e.getMessage() + " is compress failures");
+          }
+        });
+  }
+
+  private void compressMulti() {
+    Luban.compress(context, files)
+        .putGear(Luban.CUSTOM_GEAR)
+        .setMaxSize(
+            options.getMaxSize() / 1000)                // limit the final image size（unit：Kb）
+        .setMaxHeight(options.getMaxHeight())             // limit image height
+        .setMaxWidth(options.getMaxWidth())
+        .launch(new OnMultiCompressListener() {
+          @Override public void onStart() {
+
+          }
+
+          @Override public void onSuccess(List<File> fileList) {
+            handleCompressCallBack(fileList);
+          }
+
+          @Override public void onError(Throwable e) {
+            listener.onCompressFailed(images, e.getMessage() + " is compress failures");
+          }
+        });
+  }
+
+  private void handleCompressCallBack(List<File> files) {
+    for (int i = 0, j = images.size(); i < j; i++) {
+      TImage image = images.get(i);
+      image.setCompressed(true);
+      image.setCompressPath(files.get(i).getPath());
+    }
+    listener.onCompressSuccess(images);
+  }
+}
diff --git baselib/src/main/res/drawable/history_foot_left_empty.png baselib/src/main/res/drawable/history_foot_left_empty.png
new file mode 100644
index 0000000000000000000000000000000000000000..255330bf9a61c6ea23cd5d456aed607cfb27fb26
GIT binary patch
literal 5312
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
Huf+ckE|XdQ

diff --git baselib/jniLibs/armeabi-v7a/libweibosdkcore.so baselib/jniLibs/armeabi-v7a/libweibosdkcore.so
new file mode 100644
index 0000000000000000000000000000000000000000..ef6434a3e57f206038f515d0bba945074fec370b
GIT binary patch
literal 21752
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

diff --git baselib/jniLibs/x86/libweibosdkcore.so baselib/jniLibs/x86/libweibosdkcore.so
new file mode 100644
index 0000000000000000000000000000000000000000..8cd463230c3cb6afa9a1f70d8f50f02af81871ea
GIT binary patch
literal 21788
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

diff --git baselib/jniLibs/x86_64/libweibosdkcore.so baselib/jniLibs/x86_64/libweibosdkcore.so
new file mode 100644
index 0000000000000000000000000000000000000000..2a5868730f80d5172d26c83dea3e235d621afce1
GIT binary patch
literal 26384
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

diff --git baselib/libs/umeng_social_api.jar baselib/libs/umeng_social_api.jar
new file mode 100644
index 0000000000000000000000000000000000000000..51fc21bab96a5e421f4f6877c7560d430814bddc
GIT binary patch
literal 66320
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
L^rllTemwghy8x8M

diff --git baselib/src/main/res/drawable/back_icon.png baselib/src/main/res/drawable/back_icon.png
new file mode 100644
index 0000000000000000000000000000000000000000..f6c8d63f4fca3b37b330d149e14d1310a7484172
GIT binary patch
literal 1811
zc$|Gz2~ZPP7*0hj(kfKz*{a($QX-Pg0fYo1<{%Ix6q5iEMGeV9R?TiqRtbpHny9U!
z#RD`_f!GQnLTU*&csJex^%%7(YDE}}!Wi*lbm#_zb~=M^<{ke(-}k@&{qKA8Hpj+9
zjPac6Ng|QPh$DqkVvclmk5R-J_tYLiOjGc11unx<@HC|!Ch^o*G7N~d%2ZeiE7j?%
z&cmT3lA8}ASKtasG)IMLsY(}yYSijTt`-_*)G1XfU>rz>QxTL4b~hXc0YuFO69OeP
ziB14(kjM-@EX#<It1?!o*lI9rE)Z(u5COC>t^|zQm8gMZ<bwTiImFuKhCrYng0J9$
z14$_)v48;6!$2T4$X`VZVgW2Rl^)1q1+eA-3>rNUqA?*R&7Z;K1kgAE4B&kOiQV+-
z6pmCVdcPN8aX}4^>o^dUmX=0MV^T4FDnw_q*$|BZF&O>?!rzdN;!2}GYM40~K?oaE
zdPIjK7z(&-WiqxJ=Yrti5wyCYu&CjEnTUcxMx_p-Q)$qDfD*}vp<3+_+JH;pln<i~
z@^l>xNnr!FTCXB5E@h^Rtm6puuoB1gatvEJSjAWkhGPZ|rUL|m{;C1K2?(mj(hQV-
zjzq!{qXt}ws$j8@3lbhGf~YwHRscVU$zll@>|i=QoW*8~MEqdBD3DI)@%ZeZL9P%}
zt=7UQKFC%7%MBiu>ypC&8`dLhV6{k(X@UM@bCBV42^>C`0j_%ZT!Mz>LPRpq|1Nvb
zMJUL%9Fi_!42d5`3B~IPX=h43RuV79EEe+Q#y_9z(`qg+`0{LX)mKq|d8|z=Kd&k>
z)V6U$dJMk+ZBx?6y);ELCQ24agS_a@7D+%hM9!Yo8Y|7I@U@jp*j=(Y=^pl~=E~E8
zd-<%IhQ991PW$zyzAi^<$G1)0`=0kfyQ7L0{}6W6WCDCWJWVDmP;$1|vh=TKM%s>9
zn}uMHm0$1Ja$-r#sAJ}b)}`6C4kx)|grc{(xs(@u?58eXj&8OfCLzA<S+;z;$+u&&
z;t|sAcl2VJRlr8~H&{=XTHjek2<E<`tSPyHSAL~n<kgcAS*Ggs+^CR)Z;<=>4vvNy
zY^|&@Pq|;^;IHxzF01StX+LSm%I%5L@rz%qeB<7}{_BZ*rp}*d2RpnJb7b{(RW~zr
zODHd;Qu30TT1CD))zrFW-?oZT%$mGH&%}8%9_1x2OtIYVvUs3vH%m3==yxOHTa3E#
zJqb2sWJr?G8D=_Tx@{HKwU>RK)s$!5f}VR|k<T*QDZH5nHc{ei`x|Sog*NT9>US^|
zb?u)ifa?`@vc__bBD1BBYQMm_xNuy+$UAPQbDNLlI8qz3bQPm#=N8CpnYOsukAo&X
zQ+rPJ<)*4xXNtWTs_>22eND=?J?U*%$g+CJkqx(iT@p$4bUFF3q4SXQZgRfuMD{Xg
zPD~-t`h9|VMq11l2Wq}MC~{<e6tTEhekLT+Uc7g7mzjP6Y9PBM9=nk=?F}_5i|dn)
zzVP1qGV{l^mkNu{?kzRfpBiyQ>d9YPTfVBL6lfoBdD1h!rQF(D3iwdCltYVUAFokN
z_`T6xroQy7=;Y&X^uk2%=c0_A)xnSK^E%5tlb4)-^78uC>AM`Q%MY6@lc?`-Q3Lpx
ztVoI5zAI|&*w+t`j-U6O{o@k?Iz43F;oP0$z$*uU_Vrg;o#}J#f)96#d7oylok-dF
z+R`0JJ6{TH>gc(c-xs}gktNhtuq@8oaI2`$%_*KrLf5Z~cc*8LElIpJg0f>##i>%D
zcwzjTxnlF;-fQZdI9~KGWzKaE>TXXvSlAGr7<;3>EC%T~@1N#>vCK31we!y0qID(n
zkNd#!-uC$!yP#aD-`)vr>d@uR%HK}B)h2nTR!Z*UyQ`VD6Eo^B-00k%Q#rPAPj~3i
z#u3$%dMD>JzY4!4`#Z_&cAHoC<&MZXZ_Pz5W<vb~kD#ReSCShk|KauWh%R-X>zfjX
L#|UlwWu|`s6|3HY

diff --git baselib/src/main/res/drawable/common_progress_dialog_progressbar3.png baselib/src/main/res/drawable/common_progress_dialog_progressbar3.png
new file mode 100644
index 0000000000000000000000000000000000000000..7bab448e826dd159415375ce94603f71a1728fc1
GIT binary patch
literal 14911
zc%1E<O>g5w7{_Pf!UpY$!vf-9d9~86z!|^9Nn<6hx^YS?ky5om+lmA0*ptL+>@l{}
zq&*=xaorO_@D0#@0S@#4;)uBN34jY{q?MMLyw#2EQp6q~OSa>g`Tu{OXPz0)C139E
zy?>|lb_pSLXLrXsVE0$pdG|GbefG=kkJ;^ZxN{sM^!gk8yoJ90=1qj^-+JAn<f!w3
z;ZVP9yR=8jQ$IxfXlzbH+c_bL&?5scXo`P*|AQ!aZc}`$cjQjkB13QIJR*nZdtK-J
z#HqXDrdeuC4QAkz#1^LhD2R<|Q=Iu4>^CpQqA+WcoHWHPULhQH_JtOWh@h8s$&pn>
zsMX7guGebndx9z}6)Y=Q(IlmAR4Rrn3yVWEOYGW++`e&OZ7*=_sVNSVBs4IdOeW=t
zR;JMaEA@IE%PLk?iM5d8vmmjjQV`#pn=E}S5<8I>CLRq0{%rT?IBAMvNk|=we)-`F
z6vT_zu_)rH9b%;{;{s8qbG^*>bCq#&K>F7!<L+5V@BxYGIC2PUelOpseVY6iqxLBY
zl3Xj-S^0$HXfzA7>tHe>K9j`EOUdm^IHU=UhqNGotLnlqCSJcF7QCiVMy6hYjMvO%
z=B2K|M$2eL#7=0`rF3M@({+FOdP1u;OHbj!V=r*&B!1Yy>ykV-VzJX?%Bm#SB~9)s
zRYTJax%#fW!O}ZrGH<!&(V?!_Kg)R33`I6HCGC-Fx$eOxqH8Dija<@guljU4#%>TN
zcHod*%VY&*&vOk|?(01w_oP}?)1{hH=}Wfl5=qrGMN=JBt@Z4g^;LPs+M>>wC(^>&
zW!9DLM=eXK)HkZ_4Mk~JH`+?uQnuu(RjFHBEqQ61l4fm5<ed_CJEHz<j)!&>6Q1!+
zahdYzEa1Y~<TJc%R~PS7Eq<SjG|$;B>}l=aoZZ}>;!IbwariLu*s^Yq{zsT|EHaoK
zFJ_bBY^~os@Q38ntEJ0|k$1y^Sp|_TX@>3aW!sEx)?*%>R9UeoXH0LFz8QHjV=^Sc
zb(1XBs@No^{bXWCWNX0Ue3O+ZPgZR24DDb*ToW&a%Yw`R;rR%yjVI0y=rT#N3D9sI
zqfaB>PE60Y2Ly+~pn)$7Q!Q8D0;5GoG-4|nF|`KHD^98SSAZuc>$5#e0HuL5W$W#a
zc#@6Av$~opvjZ#qx{#);*QLkTOOLOSURHe+c!{YlBx}Vf75`Mtdws~ZXT+@Px~4bq
zdhxnq-<y)rk>#;z8uRy17n1ezT-|X>r=^9*8R0w=Qv0a+CJirkX>5atS3AVKe0=!_
zKmY;|fB*y_009U<00Izz00bZa0SG_<0uX=z1Rwwb2tWV=5P$##AOHafKmY;|fB*y_
z009U<00Izz00bZ}8B)6Z&m{@mrZ^Ed%?Hx<cL*WD**WMSbbcS9&%QwD?-%U;2SQ^R
zp+BD>WPF9tUHbHspSD@scXq9<?)10bbA12ji;IgNFD~Sbhx{*{FJ8Qgeid(#=fA)8
Plt1sb_pE1+o_zifF&Y=E

diff --git baselib/libs/SocialSDK_WeChat_Simplify.jar baselib/libs/SocialSDK_WeChat_Simplify.jar
new file mode 100644
index 0000000000000000000000000000000000000000..110b0709cf31a5c0c0c7555b8c242b8ab036f2cd
GIT binary patch
literal 30476
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

diff --git baselib/src/main/res/drawable/common_progress_dialog_progressbar2.png baselib/src/main/res/drawable/common_progress_dialog_progressbar2.png
new file mode 100644
index 0000000000000000000000000000000000000000..f62f9e670cde3553c7e81b66c6f215da73077c2c
GIT binary patch
literal 245
zc%17D@N?(olHy`uVBq!ia0y~yV0;H;%W$v($>mltAAl5Nage(c!@6@aFM%AEbVpxD
z28NCO+<y{Tfqc#akH}&M2EM}}%y>M1MG8=`%hSa%q$2L^RYP6|1D*pLKDJ-W?un9_
zSR>JVe|{vx0>?WH0!n!d9D?QyEgjMfPDgkd6d$oQ2oy3qbnIYMaG{oT${9I3bM{MD
TwI`<nUB%$(>gTe~DWM4f?M*_^

diff --git baselib/libs/SocialSDK_QQ_Simplify.jar baselib/libs/SocialSDK_QQ_Simplify.jar
new file mode 100644
index 0000000000000000000000000000000000000000..ca53371016d7933d0732bb79ab5721892dd03c72
GIT binary patch
literal 77880
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

diff --git baselib/libs/umeng_social_shareview.jar baselib/libs/umeng_social_shareview.jar
new file mode 100644
index 0000000000000000000000000000000000000000..4ecdf5b24647a3a0b3a428c2d9fbe348b6a14c4c
GIT binary patch
literal 7032
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
I{papq0CNYI?*IS*

diff --git app/src/main/res/drawable-hdpi/ic_launcher_round.png app/src/main/res/drawable-hdpi/ic_launcher_round.png
new file mode 100644
index 0000000000000000000000000000000000000000..9a078e3e1a42d474c78470a73c7987cf7ac5d9a0
GIT binary patch
literal 4208
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
GLSTY@)Y2*d

diff --git baselib/src/main/res/drawable/nim_icon_edit_delete.png baselib/src/main/res/drawable/nim_icon_edit_delete.png
new file mode 100644
index 0000000000000000000000000000000000000000..7d3a6cb191dd93110fc570c691330fe3e1c98439
GIT binary patch
literal 1360
zc%17D@N?(olHy`uVBq!ia0vp^5+KaM1|%Pp+x`Gjk|nMYCBgY=CFO}lsSJ)O`AMk?
zp1FzXsX?iUDV2pMQ*9U+m=!ZaB1$5BeXNr6bM+EIYV;~{3m8Da#=fE;F*!T6L?J0P
zJu}Z%>HY5gN(z}Nwo2iqz6QPp&Z!xh9#uuD!Bu`C$yM3OmMKd1b_zBXRzL%CQ%e#R
zDspr3imfVamB8j&0ofp7eI*63l9Fs&C5WRUd;=7m^NUgyO!Z84lMM__6wEF43{4G9
zEDUuNj0_Bo^$m>m4UKgTjjRkTtqe^Spg;*|TTx1yRgjAt)Gi>;Rw<*Tq`*pFzr4I$
zuiRKKzbIYb(9+UU-@r)U$VeBcLbtdwuOzWTH?LS3W`av<adJ^+K}lwQo&t!Un3P{y
zVymPC^FnR`+}ONgXfOc-Our(rK;KZ$Kp#n=uP=V3xw&xF#U(+hY4}wahg24%>IbD3
z=a&{G10ya?8Kk+u%DE^tu_V7JBtJg~7K#BG`6c<q8TkbY&dv%N;hA|U`Q^o$VCBBP
zR-SpqC5d^-sh%#jN<b04%*+%kLnC8zBS#|>M^h(5Lqk_{M^i&1H#ajgM`KG<GdDw1
zm|mCs<kH;Kyb_q+6og(=oO(ei0irv#D6=dz#jPkmR{`u}t4!Q(F~aQ@h~5<3ZZXEG
zS0CsYeYALn2>}xihzU=%Kn^_Jr{)0@dl4{ISHJtTnt_4wsHcl#NX4x+)Ao8XJBqYU
zme_FdT!(;1)J2<S0i8E2(!KQ@O{F~wA6Z>=OOo>wCuSrmM|6K=)Ja}>Ea9<#x|QO`
z7z^#!M&)I_J3nkZdG5?k>+<twa<;_ix$8`1@>bwhb6~1z6#u}J=g4c5$yC_=!EOdS
z^S*7427YM=^d`S)m=>>*CNQ6scSDANxoc1D`^v3qCz`ztWPVojG;(QVaEdi7KBJZ6
za!_$=o$7>H^EVu>SN2*v#r&Y$@*C>~)-szrN<Ep<x4xu9bC-k7zXe;mnJ*i5WtZ+x
zt3Ifp_dRT<m`VB5M=>r@I?dJrkLr&r*ZEvu8+|NY)lqH1Jihg+=P&Pm<kw(mG$}#l
zi1%l8PG!A`9It<_Texqbj;`?!hLa2*b?s{B9eTIBfa%Nq$9J43iG6GeD&8LBKJBJS
z$}00|>MJxJeX5@9c~0l?YeT&yeU}os=4k1MyqnvcnYt$9nu?=vOvJfXQ*X``!9LC0
zMK?=gLs;J0y>rdY`j;bEB$O-h=7x94%B!E|vxizO`|STQH%rprr0|T)k2f22v~3F3
zq<<3qzC7#1&5|4Cmr^3%u3mJMdC!ZVIf9LW+x8bWUVAysUHA8P24;p*qZFYHlcMf}
O$~aF~KbLh*2~7ZCuI1eT

diff --git baselib/jniLibs/mips/libweibosdkcore.so baselib/jniLibs/mips/libweibosdkcore.so
new file mode 100644
index 0000000000000000000000000000000000000000..1b92a47e1d0ad4f72c610c51cdacbf3002522e4b
GIT binary patch
literal 72080
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
HLcRY5h)hVs

diff --git baselib/libs/open_sdk_r5788_lite.jar baselib/libs/open_sdk_r5788_lite.jar
new file mode 100644
index 0000000000000000000000000000000000000000..0f0d0863f79d76538ae9a95722872a3501eb4e07
GIT binary patch
literal 240403
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%0Auv|E+90=iW|Bi#$7OW}n}mFZ
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%0Aa(&{
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

diff --git baselib/libs/umeng_social_net.jar baselib/libs/umeng_social_net.jar
new file mode 100644
index 0000000000000000000000000000000000000000..0617e72173a4265f938ca2ce14608cbfe3bc6366
GIT binary patch
literal 182409
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
RXBP06N(Bb<PX+P__J1)iDjfg-

diff --git baselib/libs/alipaySdk-20160802.jar baselib/libs/alipaySdk-20160802.jar
new file mode 100644
index 0000000000000000000000000000000000000000..6a9d55eaed48fbbc0441d88ffec757e5e9eb1c81
GIT binary patch
literal 314136
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%0Ad75
ztx1~{Ev_lzw+EwSJ)M)fxp5gcGMboYOksmpL*m47Wex1Ok#t+{%HkR^tHDgrac?%X
zUQBR<SHt770u4x!Y*)E%MzR>L%Hm=+?K&(b0OcQK%cWn7M_=VKElg)ts1&&X={7cM
zH#q2XMU?WyB4Nb?5PzAjl=5T`!$hB*-#%?pts5!ch}fUebOf{M*PfHRh<GE0T;4)=
z5wCFhzR|Ks3)m-^F~6kW8E;Eh=5>cC<v#qZ$RFq}w#tsJy4Io81BCbzCmu1%6!rDr
zc!tU_uLFM$Z(?_@u^~<3EvOXhl!?~Gi?|ilqRr@e%%U0icoaS)N9%TR@bgHzVhFrX
ze?Vy7L=e<*3P&<bKs;7oNpZ--FBEd05&vCINWx1g$NrHL3B><_oOrvsncM%HXZog#
zJAxe`38gWL+t&!)OFxnWLIOErM2firXje}RB8rVU;4mmbH}Gw#{-eQgy=NeO^Wosr
zX1zsfFP#O0!fEZ(F_Lf<n0#Wr<*5M@hU|f~zLoiQ{qp4@@$<e@T?dNQCy4$E);aIN
zaBeeKl+DZnsysE$)tb0B%LF^O7#C7~GCg4l9uS;Xz3xtLW3w#c=JH*Y=K+qRfRnZt
z54Gt2G70l4c@;|_hL5AZSS(z?ZLIY!#>`pA%evlO2^)sup~Gs)KJxouykw`x1P#mw
z#gREDL&!<kQ}SWBJ+%eg!{dc)IaIbI-k5#}&90o+alO9y1Wq-7xh3`*tX_1t&}zG3
zVa~1BYE}e^-YS(?kZyLpXH9M9Pl!GUVjT{z>ZFCc<V*@Y#9TPPif>&kSp$ulLF}-v
zMQL9EI^--Jk`otwH3{V)4Z;}9Qn`Fr!35O+a5Jo1{JJ<RYO5V5-SD9H$n>wKNg_YR
z)!b8!S@L?*C2KzyJLZ}b{lQkXM=u2Zt{icso>R?PNup|4T=`X48Uk@OA*AS9oU;`w
zDZZc)up-Om5P?!|9R*MK@<4tY-a1`&Pyrgy06n8Xb_Uc|-)RP&%$C_utRZJ`QCu!f
zkD7h3aB#H2@za=OZI^Q1ZPauaO7(8|5);!xF2h?h@{Bv2$=~yin$9|DBQuqHK*b<L
zF_o0mozkIl9ORBG+F})`*&X8j_<6e$;ZT<{i^mA)I()xqcCkE)Ao9?*nlOgSlA!VA
zHrvY7Fd_arCkY<eoY_j#8(ROxcvk7?vT!fo#WocjL7!y0Rj*wI4|mAOd|qofQ}c5n
z0pjRR;^F;P^E07{^gJjE;a;}x@hC3SpsMgfNgoyI<gz@qkSO@85vnfF?X!G1L4F>E
zTK%%$7*Y<l-ioALXq;C^;uEQR%@3~^pzQ5edchM;3vZ!Lw+l0}Xxz4>vdV`(q@Dp&
z3vFj;SS;x;?5TFxR|S5br8>(g*|5wme7HyD<<nx?vs4vN@5MO9SE`R#j4dg9Ve7X_
zB`@Uv4m4+mvd|i~@mTRZy8Kk*6k5622Z`35U)N0IHS*^o+*Fr)%SGJ}i4bK~cEL2p
z&R&*Pwf4#i_Fa3>nAz?G!g|3!K^vS9L#etP<drJ%jA~R7iSy1GeP*=Qwrp?V0epk5
z(=V`H6Q|=D8a;m~<I*tKeDPHD`K(;s4<f%b@z2#E8^*I(++$w1V34hSAZpG1Jvh4I
zP`Z_>AsdWCzv+i~$1OU#;S+|-3QPFlFQaAJb1*|EJT#W#tmH&*Xf}Jf+-e1Mhz+xV
zH$Rc=75Rj_YIB7Rve+XD$s>Q~7^c6WH`K2T*nfYeMc*7imJsL4C6bAeS88|9J3}&e
zXwv4#IG{b~eM$`{kfX_8XqaUQ^Cjd{zgG4YLar-2!wT*g6?WqjRs$=41~^N%Xpsg)
zVWNG??Dl<;tAFDBC5~wJ+h&{3y8P9+^Q^<5;FuCU29~bY9htrwW}cz3LhBS~7hWBn
zYjY@3XQdz$*jb@#&EE>oI3a)iQhoAE9z~dLBE2uVZx&Q`lYzPNt`YH&Ru5^lhrC0|
z&XtDR>6Kn7B+gc2u21zy133W6hOGB&spgOSet)e^IT?KEWl{3-#MhFF`=+njaw0H*
zUe>c)U)<8Mb-B5C_eLEuXGuPWSKWMLKRBjC_<QLgs$9(gJ-(<LmK#@FVpm+?73r|0
zKijUK!(gcq=mzm_JCcGeJyjefAfS)mLXS-Bo<rwYq|lrI+2>~W)xLS^$>9a{X=|((
z<vH%brM@jp(!qE~?9?d`8lN^&ul-k9)GTs5#37Xnq<v!A9!mThV}jUoIudR|ijxhs
zn?+ROm6%}s?c+)imV{SD)q_dy2!nyA*F`|HOG{kh&At_)hbiOp9l>!6=!Z84pAatO
z9hPN$Bb8|Ph!a-%>~yFyB)}`77*^WNG;KZ|X-{C|WXU)z&HvFOO{JiGf-Aza9tD0=
zXGfZzum<9eA(pjP)lX(t2EWE`5RBrDO}wV(cE=pX9R>ounJQL|>Qs(~3&+mXI={~i
zJUwtBXXrx8pDqO^mvJwIYLCA`w}fKk>|QGnG?bQ!3s-J=M9a{326piQx#()sMO3aV
z=EWrwg8wz%$vr49-i1x5V}zQ0NCn^0Ib17J_&mqxeo&4N@NgHI?vugchd0H7tYk`<
zuP?Dabr|D!?>&Yuw5893AwrS*SC-1}z8|+odQ3uZ<b&po{*LAWSG&KcWMbBSGY8hc
zWRHDuYAKPNP<HCgaG<HO<6X)IJYNTJlH~6>JBcUwg9p;>|0c4Nq*e6G#Ur;FA%~c*
z7z(K<7wnAb206qnmI)rUAUVu}9T)m!g+>VB;NlhHAeyPk@xC%g9@Xz>xIQHNGcdV2
z?iHg~Kk8esS&1=FDJf@$-0RIaiQA27K(xpI8zq2cZsUg~KzYE?u>S@u{HyCr7TQAH
zWT-Kd<Wsq^8#tYM-8baG8t~iXk@b&3^drCG{WMG0!=EQ`o2kTD%&7fRcA4?~mbzW_
zI&ofS+`xheqRKCvriVEZsJerM$EB$o+?<Dnko?!LC>IvRZ<5|Jqcz1nLEo<*%+Dpz
zwGpKJk(~@L7|&Zow*P0E(Eq^%M#(^jk03xmNZ>#~wEu+()U55z|CI<-Hxy8n(exu)
z<#Z!-sX4*vXl6mo!Mat%e1Hp|i>xbyGkzDcF7}_vEhxyp0{!%1q8i3A_C`uGXT1Uk
zBr{*LvY~-T+0VOL%xI_gOkXD$8vX^%7*PebhdU5&qSJ0vYeSRIOg9s)%*ql;$TCR2
z*U{cO<ONm;zxIDir8{d>PHOD>u$eP)IxJ4W@~d3V&QV{ARS7Gk%%74}<vq*YRN!dp
zOpbJ5u7?kgZ?|5gTdRj@G|<GajXE)MVnlbJn*C#51Q!kiH{D)YVc=FMDa0wNDN9s4
z(UJv4=z|@WWMh8VIKGP*KAm-o<eCqKxgJGaifvP7u&rM0?X9WVVcSG?0p3w{cVf}t
zKi0bU3p8CEPK1nh8MX$%l=)s)QsG*svGM0{D$EYKkTzoz%H9{bj~&=FFf4<&Lfb}r
z$bGY*J^IN;ot;i0W!WuPRs~HOa|_)|iU5q6oM?#2IWaM;Q<rf~K}^mxTndG`lcbg2
zD9w2HCf3AVUURVumlJy^?PfR#(|Ga$41;QLcg;=|JYc^ylDA#9VJtP;h6--5|EdXd
z4lSzPIUghvOiq8#ejY7_c0>kwx@ibWK=CZ!53ge~5wXMRo@9?|%ahEB##A>4bx54-
zm9B&S0qbxWXBk|{YOB0BRmDPj2qFoMf}O`Ze!;bSq0g5tX~LOX1Vu-wxu+-0Pbd()
z3d6AMNXGTGo4d(?zRDIS@RSd`Qd=R08OH*0N(49jRcyfl3S?95X;odI(LpanDixtB
z%=(BhA%T7N4f|X1xgp^FX&$D?3AH~+9~_^6FIcA8rQY@&N|avf!+9<|a_S2m&J{k^
zs2Mr{k<vf-iLsrh>YdquAmHm5AM6B@3x6Ua!!Kq{^z|=s_fc{@6X$#%{Z0=Ah9s`n
zu5KYbu=R$}C9Fn%oF5rOM9mIjx_xg#XAT7<v(AcC@(1+l+Mfev6_1q*DOF#4H;>@%
zso9O#tA)9)fdG^Em-H4~-+SEu@3C5_|F56N)X~NK|7Q*t!T)-Llevql^*`+G;PxLc
z3@%)ECgCFi0UeS80kQwry%NT*Zd&$ss^%`%#&*^||Cb|_s|D+Yr|B-B`H`_?LpDKM
zXD3aon?{)AL0)6d+h{B6LZ>YgX0F@t8F>}dV-Q!uUcEJS{l~5x3<|n%7D9)BnqhaD
zy2dJ7CC6xNh&Vijf}UJyy;%s_AE-1Xt+n|VhePD+Ozzs;D2_B>Iz5xu^M?OL@W<Q0
z|L(~$kF;pYBt}F$r0DL^OD#eC;oZr^i?z2=hppJ$H7cjJ^wG+Yu6&0#4{yFPN{i(#
zC{2BozT#8Pjs!y<pi(>sT0UdttWR85pv1$A!_S#Fd6+zQDyHi;Eg)=jqcn5fznvW6
z;feSNQ^m#1L~AZJL!na43;x!H`115bz{fq?W%&CPQ*Aw2;pkCIMi52zm>p9YANoF)
zaDMtMBwFDS$|V7@%rzwCu6QkM8Zs3(1of<f8MLAF0P^04qV52Xo`a!cUdJSVL}bTn
zMvE?cfyl3>f#R3Avnhkk_i}c0c|@t+jn|8}{@_{v+A!ZjE+IBE=3_a+uted6Gt^Ba
zC2D2ZHu>n%svFp>FOg*7k}DQ_`>is*hhw*3{<7zL1p$v^Y@8*NUV=StGG9lcWbym7
z3DbN<l8Aut1Oy7TePF<6a~eMyZ|))(IK=#&*1Z&5cwZa$+0}2Z&%+{&R1&p8mLi%|
zmCXEgsM-c>3>PKo(i%5NwkYysq-xQ{D!?~|<dOCvM=Fgqxzo8Rbp0a7t*Z|%E7pWr
z^CFWO+cT5p_qMAueKF-O28=tp(*Ef;=rW_<V=fIn>0iQPhg6>m2)KB%hYscplK7uJ
zu3ESc`Lo{yF@L=c=}c9c8l8I$pI<ofjinuxtRc6q%5`v*tO@(Y{fo00dO!vN-`}YG
zU$Jwk3r&;Vp`kHgYBDyJ%J@=x;U?5)lQN_p*^u~0p$H#mSh-54uX-<Bh_wLq&V+5M
z3a+#%!1TyM=0nJU$F79d^`&P93sT;60+kxXh`Ulc^Wwa9DuRk$C(S-n#nFC4Y%4E&
zx9<9&*7${l8V)(t!4cJ3O;h1}wvSc}>z`rj&!ps-LOv|o^@LqbIBUFC=~X?5`jw1i
zhfCp6OX6|xGA&tr5QUSqt$428p47~;;Nivvg<sP!Rry;>`EoYJ4Tsm4Rsnc<*4}9%
zMm|&B?zhDHO&AT=e@8n>r3k|Sxleo#9I4@%ar<g^dK2a*&T;Yy%!|3ZhX6E$6EhC~
z@`CU+QG{}rH#v&jrItO=$TX~cW8O<-n>{Gj94KHw5HpU#NJNX5iW2l>3nl&x?t_8f
zSZwo2T83T-XMFQZRdaNe-($6qGUnC&$LW_+C+T@H;{MiA#5fmsVZLBR98rKd+IaI=
z<?$emz7gXCF&1jLfc+zKs(=h(XnUd=Nhp$Ivt`EG<$X2{ctr@Op2`{YyFC*1L9l-P
znOIwXKm-N)yS^}OPGgTue!<RQT9Y1`*{eJ5-ikzE!F;k`FJ<1MiMF7Bl0fM!;TkK+
zh#xVjL0P%e{+b<}l5H#zfs+;$aiC5qI@;p`n!dVK=dKLw3RbFs=!{hHU3o!ITznBe
z>g^px1Pnj~(WZlsCNe*-^aSmlj^@SWLakFFA5<_(&ygd0dOXZ2=S84yo^S!vh=-rw
z4B|C9r1X;Euw20>xO$R$`>CAf3wz>$(gl*D`BI9-Kdty+M%^dJX4PzKav@!vru-=2
z9rj)JS1(P4orARH2L7>O7crH?9aA~N#wl>Hc4bV#QjDvK*&{y`y&0QexWA6vjAaWr
z3b{&Ci1>#&TJ`a0?3IZhf<;T>5I0!U;PC;1n(&-5{V;JYdTW{#v-MC9!pQb%m`OlV
zL^Xwk>KR>nbFrz><Ph4V*@82D`e187v-+A}jwnLbv0au1PYC~haUh1<NJg!thZrn$
zVQMmH5{Qeu+t6yhE&jqt@&!tzF_^!s4g_9$RG{)1<YV3C_{)ju*rt3~R(qz>^cUXm
z;XbpW>H?`^*TG}GE{cj_MZuyUjnlug`E+Q;G+&5cSkJi9mhc}f43jm3&$)g>KUI%`
zk2J5c)|OL|=*_jxd-}hYl?#6`n|lkA>H8<Zxz^Hl9A{xaz4S}5Q<P|qmuo1~W`JFq
z@b3#7?B3~g{o*Ajr)faG0v`CxETCC|S<su76xwq=R(CNLX)c8ZPIRsp<k*2SGIM7}
zNXoC>HtR<VFRz;rOgO$akGy8GG(nzAhfU_j66*O?Bl~msA<~hQoQ_Ccd4*_MWX&B}
zb${bxVy@&W6hoB~DIyCumvh!#O;aY_QsoO}Z!I^#25WQn<Gb@Lt<5fXRu<M8MNfx!
z3(Pn66vo%74mOzal)7`g4#Rk*S6~o}7l<1O+~}z<y0mI2;^yCD9HZJQflu3V=WD@+
zme2ntSuWf|ZqI3^ODsGt*givTANImI_i%s19)HM*rt@N|21UMQ7%Q+dS<Zg)n4=h`
zoF#(Z^azV|LG{p@wUA7SkpXTlbQ8c`c}MY6tjO`ywl<Ht4>;fFr9oF^Hyn3bs|94l
z=s^R-hxB0?bX;O-qy36k$2i}y-z1WWcG~&JIC1E@FNkZhY>24C>U>A#KOODga`Q{q
zO^=>}*+oajIU$z!*O0X$EH#Y=XBQTow4<#Cno#PY2K=N(X@OcW4tR7VjXOeq#Odxn
zm`T0dy|S_fCoWF4XV7hq`qkIneyv-ULXiDV^>PR@nZl|`K~Xmqv@bXOZ99i_uom2a
z``2w;l>l73eQDwSw%l6N(&{ZMQ??|$+^X#pP|U98%7y2W-zn1dDwfXY%pOV3W<#(Z
ztJ)gWTSN2*AEiw=`|AFYN3_<PC*fJCj%^a>9P~=u4b!5B%z$(Vy}0Yc!p($G!<U&=
z1GYs_L06=ue0?jqSs-ji^(xPa4DAtYOHqlrmr@$KQ*>})k?_$iJmgxIwNB51e0@vU
z^NPCTZ*zfG7cWW(od)A+UQv&+0gL1yLpww;BY31*fp&PN%(^(e8>Rh#C$GEc3P0A9
zNP@t6%nARZBIOx;d;C=@+$Oy?P7@YZF(@0AJxh2?fb|`--u>$g&}Kfo@gabE$qkAW
z(M*y|)nRPW;l5X5Vh9ey3mpY!3FebDojWfW>7%=gsaH4;x4UJW=<Sv-=_QLS;ggSy
zu!B7bKHRo$z6Vyhn~)4Y=sonc6S5N@Y*@6w3ki)7VpuZx-T=u7u7qF&X0z)qU&66b
zna@O-FXW9y`YuxZZnOxElV0LZ8h4n|9xcCF+0TVwxcpdL8xa6kN`~hwUPc8$nG0_S
zY7Td^pi(YlT3M<Zb;cp?7np0=(?01Y=AE|jhQ`kK^3A~K*{**@pxNb_<U=ZagJyjt
zqg2@=mSI)x0+~9+>!;p}`PM|R{PYhl3?LJL@w0?<JGA<xI%c6Hc!|&AcCxun8E^ez
zewi4m1fGNfN+2PPH9m%$KhCzMC$9_!6zainlfn;L6s&(mme9c~Aso*c@3R&dfpksp
zU*wSO3y3nuMDm%zkHaMei<Q-Ybpeor8FI>nI}wM}f&k5I4&+6NaTnkr_ADP%Tz`SP
zARCh4dlOTzh16ggie|s+X?rA&MrF)1V7g_<#jDAl9zaikbNb26MH;uSE!O$*__vk1
zP;6f0=kugy+gf_Kv|^>0D_+22IB#w>-{j9z3uX$?LJLR^#v#vBol^5FU!diDGe6#7
z9gn~1XRn31-gK46x5Llxk#auqM+Xo^4<!3ecnd#@cfa+G9@6{1y86F-`@R@MKO*|p
zOj8P8LJnS}uUW$_FkVnKjO6=l!Y35^Jn*z&UM*<bo!_yo!4a9PSXR4*OjbpO)mbk0
zK&!6i35L`7Kj#VJ>=4y#X-7+hOT^RG=vBbUc<OO5?tn!pXLFJpJdm685Ox1I*4{bB
z7beOUZ5yX;+cr<zwr!iIZQJ&*?e5dIZQHiH-#2sT-MstdCX-BFQh)4Js!~bqs>-TW
ztM=|ca$R^7JOrnP6&EyX^MT|anBs-&49TNgcwBby<eT|3PV8Ld@)r^46%zPdcvLE`
zsL2<zoF3>|T){{nlJ}lTQfZZQl(-^f+m8GdU4ffY(kcK6g6M<ZGZ1S3B&?b-H>wk~
zv2(~h2A_*vHcqcqDOerGw?7r%XSsl1BN-8`?)+*jM@Q(o!(RD1NqW>5(F>2FUHh<B
z1iyxq<78}N_mfK7`+x}?mh--rGx7t>tQ~DF)aY>)+=V0HrSCndi5~Zr4K5q+5cJbU
zw_wDkW{%p}2qu>|hW~=vY1%x0i^U<v`qVNv#F`h<U`4T$U*3K8p@rTetK^G)LbN4=
z-YHF`U$r}sXAyCWe2IZx$`$Fy)?81~YnE1uZnwlY^3RvXh^PbcNRK1xP1Nvfs}7s;
zqoeWXhq!rT?A*j3XfqFJrf<_ncm3ZtZ>l))LI$V@t*{Nit=!#aEe<n23WYGnW|xN7
zg!IJx0SDmReZIj_Wi|5z2)kb{!N3Ks9Syafku|#crYq$Sn4x)jr2_4-FHsmK2cJXj
z))eM?>=X=gb7|xi*hOiyYs!yk-?@c7MiU#{Dg2&19$2A2)}(zsz?Zd#-#CnqJ0Ra2
z1*0?ySK5?F`r^!A>@X|tlyW<wRG$<Yx84TtAEO`wbzFl3<ZNuG26~|?z@9vWZ`P&4
zV51+(R!XNyFnl=Wo+(l^8HKgN07tG>8$AT{`!Ira;z4uKQ4W9g%|wAO3t&I5QMfJp
zc?>(Gu{gYhPN#_veb>z&x_6$e3mFMXU$blm(lb|_AGaJB;IpD0afV)t?||>SWe;Rg
z>D$MvjVSZQt|8?UcRS^pzrmX~{l@U^dY!OJ#^j9w61(2Yk6*Bd-8M<~gA!P^za}a)
zz`}o$87EwOxhV|p`-}XNbh1<voCgrkcJNf+p}X5A-Nf~Z6RlYTjDHTi+TN(YPEfxN
zVfgqYah~;ya7N-=^{q1s^Zvxz>Ev-B#p)D9r5zplk*O9H?YfJ!T>?+Hi>sjg44IZ_
z$g&y1S0lNqguQTg;@rlDH%sU~HAz+#v3Iuacj4V2)Cagl)v0(@PDX8|&TsVxeanm{
zsGEIaH>E`y&}AK!ul}>woGL$1i6GGSsLjQKcM=ll7e@7#&r7mkiY>_E!q+D+o8vu1
zp&x@YLa3$i$QY1>jG~;OBA97{x9QnXjWQ_R9g0g1?ez&o2pSH1K<S6?K@0m8gD9rn
zk)ZWaXkt~v$1Upto>D5h`TH>SUWuJ(g?3Vl>f!JnauE>8Z)>~^Kk>xe6(TNun>ncH
z9X9^N==tHS#qmXAb0+VOIA~L|fc_Aj02;JAg{pMJYIAelVcPC|agTt~Bgdo)wIWL@
zcAmuh*bptPmrXs<miodl)cP<fQ3BQQj@>19Wr;^+zM4;XBcR;QnNq#V61~b4WNlkM
zn9PuQv~=IJa8BZ5x4;8d6GA=onqO0DC}_}2a#3nH{A+ySLA@Lzru)Bc@qX*zH#aX4
z!OD;R^$xD;5FhRIPKPcQ0@*l(vRQ;nvl2J(fo#KC_Vs@f>-9o0$SG7MHiIp*f>mqI
zU^6EQXMZ-Ye>49-`G$zYfO7$0AfO#kARxj2mT!>t{I?LrnN-$O)Wp)o{{Ky_k~AaN
zFZgS?N7NEn@lN1;2~@}8kTL=?h7>a#({3}>Z7{Jxx&;=x_P7u7wjg=|`=HNj_S&$=
zq~RgU-i*cmhM^W{ozq?MSKIy5X5+l}Iw9P8ZY{hgEVCn~w$d_AmH5oO0we3ANNBSB
z-H?GVMz9(VMixkOhK?jdqSZN{jM<@fz`c>B_;RonHKXNY4}lK^j{wQk_m8d%7%u&)
zvd$Y*kro5Rrm2TMMVHCkjq|*;%#E1Vw^4T%ioW4z%rcT>impMn`(x;_mng^poQIs-
zocWH}?%#wJQu7&M{5!ECuH%B}$NASqc#>z`nNeG^94HlUsf6|z6I|uXeU;t&8TQw(
zo@h>xOQ12TyM5F>LQO)95|xSa;=dtQfQ?m2SBz$rm%6-jV1x{XUPUj0gW%@CVBL`n
z<?nwfgusXD0vG>rO71@n()b@aN8aw=b;1^gcIKus|Jmn%D~RF+tU-SN8rpe1kz;^K
zl}zgw!bw}zf+6aUAc8#O@Gi>LdG5caKCCRc1$`|T<iq)$?4Ude7x%^#=g#?k1spvG
zuSnukzOT(m)j~ftU#}2icsDR?wp{OK^qo~zviG=kn+R_`)Y3D%vhG6n6nVfhKrRwA
zyD^%B+P*ThZ#^)MlpD!oAmxEGm=YtiKM^;WAyZ2}ATN}Rs$KNTHj#1b5rmV1S-`Te
zeaV`(+yH+k=uu%4aQmr`4IH2#u6gKeNqnmfzt`S6`^+NbiBf>l^shg!#}4aJP5;ay
z7Z?x_$Nyv||0{24(vIAsAnI^W(CRgPxqsj*0g~)QNQ@5FN<5`w5?M!ITLk%L%$9Jg
zMwtmW+ul;=EwB&eLB<*;N(%(pbK%b9*^Q66m)Y@0T<s3f<*s8mSAS#EXSPPlqFZ*H
zdtwu7c6MFG{dhym*sTkzV(5rHJVCu-juV<uZk<b2cX_b_w=@DjzOxndl}rCwnVufw
zo)Rhna$xjTWg#K0_+2l>B0EE30rwdU|2RvvjV+j;)APqfpZ!k)Tl@6ijShNA+%o6>
z2MhGfn8C(^v;KFj<<8~ZxwwyDh49~J<E%s<cl-rp619{|1U6odakEIruA1moE-bF6
z?~78>wyHHW{Z^m{@t*i6N*3zaPct|zY`nfCYb6N+ad76btdQ@ttsDuNytn)|Py~gr
z$=ow7I6V|LEAKaHb66?OlAc~Q%Q#m2uJ9zZ&&{{qApmN3F%BpO`faMUB>jP3aZoqk
zeiTqRCq%%%Ymhe^3Ei)mLE1Vn3d!zTL{4TC-aycOKVfRTx<binCp7N7@HjeajHWJR
ztGv5HHuP>d(P}%seGy+o)lD7+0laYQtEgKr>jM9Z8VBN}qQH#`1ms8$1jO^-bF=^3
z6t=fBvov>gGIX)DxBIWfpb71xvef?L=e|6-N%~8OFj%%XK82828riWA3>2C;LeL?=
zkU2PDQYJk^;k2=N2B1QtRo#-PbyfP<TyDUGX{o!eZgVlO)mpQ>yn^1*Y1iGN75pM_
zvMotI28Miv*mg3>b&~rauyg;@eRJQ1632&NkUPlB2zCNyoB%M%2hgmc+hwVvMGpz9
z<`j4kXG??@jsaACw@T_yj~%?#dE?<m3h_C?jawkxzyRDJbI$;2c3XJxq`*rw*J>Os
z?9B5_ZF&nWvQg_x{e|r4u%atAoxy74F+tXL^4U4Gdtzxq9}e^0j)zW0a51OcUV{2*
zJ*@EH#oBibacxSwuklD$(oE1S;W6D!ldfJIP3-U*1n~7m)DG)|J<>ET;;Ed#jF<om
zZC-S{1Gb`fuPJSiJB1B^hlMjGek6o2bicD`rW+f|$68DoI=s56#|BD;H7td(<L|XI
z`7G1wYDI%Aw-UW7ysy4SCHoZ%r1A$hrQ#4_!hcTj<LIW#P1<z#%mJ<a01M(@DpL9@
ziy8#iP)n3}tfbh&5hBV}G5xM9p+$R#$bBJX1GyZF2%)i6`ucxE+ftpB32@U*jku?a
zucf3`JeaioX`!TKO$MsHj>w&=^hzRhq7}QSQH-m%HOcR*w%5pqiS(bQnV9gw0j;xx
zU@|IQL*y__l22ALsD=&aIo3unrGRZu@>0WSL=1xpNDLTqIA;MAi~_m%9egQ-xflb*
zvDpds<k()!FO5(LM0)gW$MqrdRAca~xL?@Db8f$XhbpI~(Z3Wxr+L&R!YX+WBdfa3
z;q7_QV(%@JtL-W2rQj@G$%O9D35v7O(ahpo$w4Hu9Hk{AY^{Zv=^X!#GSK<a*_t*e
zSI&ryV3SH|&(X;`Wbd<Wsw7<MM7ZFyK%2z32%$339di)x=ig^u;&9}u*`*tZ_$yK7
z^nQnBr}=j~sxp~o_%CG@I{~{<5@Y~yv?(1M5?Dn)-ugD$sRZ2m6fs*D4&IRYO$!nJ
z!yI!<I+QWZPJVjmdw4!SO3mCyCL$i;h8UQ$_(x3yri2$bSb6{x7>0Sv_*_yhfum{3
z=6#i7PnF1;sSzYUA!AUz9J9Uj<o?cbferKH<qJ@&OANP5S_I<0z@>23WBqeM(T*b+
z=TZSdKO4S}M?Tv1ehm@|L7yMYFhs|`POc5KxRC5#Y^;M&(vH&*2mzZTUJV6LsKi5H
zWFpe6IQ8GxdK?a~Tc+P*5<5(eDExAW=a&s*hn>+T%-nF^GMj<gXST@>B3prJ+O^Rq
z?5^z_;L=jtL2plC`~ug#WxQ?53SZmqiX1;pyYrJTzImt5@gO(@bF<?$qooR+WOb5E
zqI$-(n5P;j;bBYm-m@8-g^NA6tP}`IxfQ&m=~5s*Sqt}M`iyib_n{w76#ATW`8>!u
zhmM*xPDDpoBDP680FUUh3zMjeVGgr=uarqr%f885;^Mrj`0hVZ=N}|3jE}W8c#xSO
zIq&1+6a<WSg!ub#RMxJvsZGdyebLc6fUy30>MRPxeQSJPnJ_s54o8Wh1|2((zEY8@
zA{s0$GzmM!s`aAzsDS~nU&ln<9@v4|ePwKW;Sse5IDv%)j`xKQ*#RWzW$DAoa3JSH
zD3AUuDChF%zXeS9vmBJ=A{5O1*Q171+urR_c7_${H*urHK~(nl;V2nqepNDq9|xT(
z#@%GT=DPLF%4Nz3!Sh+~bMc|BEu+USZ2LsClmvKW2>~vjAj$O<V$WdQf<YXIgc&kD
zpcx+E$>w4a64lNFsa4b!vsfS1?~D=ui0~n#Gv1+mCX0z1$J|&UkU{oL5OsezfA$Bh
zKy*$(qtqUxjT=y%_{$~2LUe8z#5o6X+*%`khuN{YEDze>YQL+gd<^xn4x{Ho+Ltn?
zqh4#e!qgFr+<K$<Dd3b()IyyV{IK0oupJ)7)0-!+ejDxAzT&t_y*D)xt|tEuD4O{t
zH^zwnNnpC(V-CvK!YAVG1^dHzC*N5OW}&W|>4Ss1>X*S8>+VSvc!ZNtanp4Oe%32D
zAM(zjN;DLPLR^YTeQWCKAUJRjbuqsAo$`cNFE~$u;Fz_KR7=dlHt!eWrT5#X^tBzM
zvor7y$phK>&JG!=xxWiT^w24)VxGwart&Z~2Q!DJF_mz<W9i|9M<F?*x38JS#g4g!
zr!aXsv!dax4K%5m)dzW0UP<0V)4`z4$k@ywyRQ!a>?zmvDmrmYyPF2`49+=|%TNHY
zjk-B?xa_EditSn=wknP}XSG|oPFs3LP<DmKsaFbhXZfGh*`8vRI;&uQwoF=44K@6<
z$VsdjiO816u4Br9s_{<sFUl8g>9zUJN$+ZcAw3l%2WiT->Nnz{N4ILhxpA&iS_Smv
zlCq`p$T9CKBk2&h6tcS6*5|$K#dN0@FB0XFwfqGeO`~xm)i=oj2k^7ZNtBDQta5b}
zrI|!Wll2oTcV5(pD<~=|dX^G7dbNt<57uNJllFBhQ8OAJ{p%{=q~UcJin*nNY_1Ca
zWs`~<ST{i`e10k^0;Ac~rBWT@sf-@sXosY>s+Rp+1SBlyQV7>YZe{wU<vp3g-?mM5
z=`U&8ii_m8(bDHjNH{X>LhK0UxKHQd@T{tKrph&56;sKw)TUE5Rsa~Jr?EP&O?-IL
zj(sAso!=3%W?uV}Q}s0-j3y~xNnvB7C*|%~MA(IM3O<(Ngb4~{Z9Gq7GaEloGbQc6
z%x7P4ft(nj>D%5W2J|61Kd+=eu1<PvzSX{PJEn#(w_=+&csuaIe70i61MDaa3hiLq
z%dDapHCvS#Ra+Mxy}@~{{|>W&I&>jW%mg?#Tr!%a9-#>YB7f1+IP(U=Jf#=mJ5L-U
zO)AH|o!1NUp;w4Edo2RUq{oMOmS_%i0s0l}0ELfaXT@b9_hljbH$~Kx6m@Pdhwk;u
zU&lwDjb4g3gF>w;ANZoi&GrO7OW#6%h-w&423LB~M2Syef`lIm%BK?@4UjmGb&d8O
z=wZUobu1ws1PvehM~2RS_l#NGYcHt;s5#UeUhLXis;c%G*O$-`3ZBacCsZm4?UdE|
zg5R+B-Gm-v-Cc`{dUbcZ4)A4^FBZ{`3B;Uwc|J^H^_)4#D;=9hItNzQ{BC>`t1(=n
ztY2ksOVQ&5$nawZ^Ms5D6m)i{x!KTt`i6NLdn;2BAfX9Vv|aPuG#fK-@W=W}mhl{i
zsg~OSU(bO0<vVrl4R^lCN{sh*w=q4LrcBx8z=>*bI;)wY^ny%19h&lK`pM}Bj8|{R
zAQWrZMsLSPgKF+4O0&vRj64bbCrR%mU7ZpK6M|xAy{N4==&60C792@d90qKAoRPW7
zj4prPIIx@(xWCf;cy7G975+2OF3k}xRYH?SwaN4xVRG*5x^_r8*E-WW;Tdh|jWmwr
zFVw@_lfx;LhKd@IgyXZZPQi)+lp9y&gKXu*iH+f=_;$x~t$Vn+JwW<{LYp(Xhz3mf
z!fd&M@VR1ixkpqC2GA3254YIzAE2rGGi^{m3IuhE4Cl^`5fEd;PGg2VsXY(%LT34j
zW<`<!hloXkl<b-QcaW-7*tMQ?C5vIx24HJa|7K(poMCRsLRJ32CnrAoG#rPJOEW*j
znnZbnpv|C|1_EHNz<k~qc29I7PlPP0R(4P5t9zW_quNz!d&8{HoGV8c%(ZaLkZ^3#
za4hB3X^}D}f{mC5B#!fV#`6T$)cT!ZdSg5{Oxss~q+vN@8aJ$s)t%VN7`)eVN0u5E
zyMd=+-L^gtppF>f*YrCuJJ#Gj+2N>F<4>?w%%0)uVf|a^1KUlz?B23DSzA4E0NK+X
zOB>E?*Nl>Pq4!I?5Byd~8eiD8Z>*O4`S!`0vtf}VL$}~m8xrgFaN6p_zSe<oTO0|$
z)r@G&RZ!k4@hh|Wmq<$7PvMXWiadX}P}bP6x~B^bjGWSw9%6YNEbr=Q53wA+TOyAs
zJib|xSmxFnIJoB8PrvGd`8VuSW0Z6dZt~p-)0XEky4%j4DcqCchLN|9>?<{lECY=|
z^p`A}I8(tT6t@<Qm%}b2e!b<bKkhEJ?K7(rM&4HEtU1)79rnAq<?4&ooowr~R76~t
zw+pHBgH~K&8bxKL=Wkv4r(Hrnf$%UJ(m1B=J2#DcN_=Hbbo{=)<<60<9si=Gf?d{D
zZi3;Ysp^{hWAVG{0S_<JBgI3t=Utwy+XhcFTT||7Ba^!~(d##|Tn~Z}Zvng;e(qI%
z?%A|6M*V`u%ayi?s-zDGhI&Vy_H)mej%X&et=<Crc+dk~l?RAVYe^SKeuJ%`(#u27
zUM7gvom>1Kz^qD9Z@1Q3)J>AXxc8m#o>^`A$c%*WwC}4_K_f;FGH-<OQjL&0!=JKu
zoXRc0k9f@;s#k9RaMx%ptqX=1=Teja52~gsAfolzD3I??4e@(B%KcF%DwAhUz`al$
zuVU1W0Nqgz*VlRf6iL0-<m`pKvi-7qfV4y0$(t<BIhYDO@H(lIhOUKow1c~OkmJne
z0Lb1i9&3DHQmk97i-0(VPYC9Mh!1a=S;`TOsH&)&;{Xc!`hv98-T)E5Y%(vOhIcHZ
z?AF!?Wv8$87PO`I_G`rvwP(n^xkXL;{%T>FiK^I5^o4wmU-i!;$(0mBuCGX>2{Y2N
z!`Byc$Z|(C*_6upiYzI|C~F2nTy_E7M%~KHskT7UMGt^(?SUS^+cpryA!kqzIns2)
z6&V@%9T8!_@CN_117B7bVEthuXl98MzwZ|WKYF=mD>yD^2+EP&4?!(&2<i;E(L04@
zv#YuN&1JRcx!(Iy5k{a;!!Qf+N1~!z;;lzytVagNBZU2y+ICmGDS%)B;*Su{E0yi8
zc~d~%0)$=>{AZwj&v43r^bo~)eX3(um^BA|Yk{XU`g+;uz5ZvslnM4cS4%yhQZ305
zksOy%pWn7fZ-6Rs^cuSLo7J5W^&}TNzi8T5@`v{wrj%E{k?+yl2MXT<5NnQ)VdK3t
zQC>yX23kgj4ARU<6)rpBS5AFJV$JbJ3|?8Y70LPZhHhHPqbq9QWkL*1n&S<cDmY29
zr?3(&YfikAozVb$ruH|UW9E8J411P25Ag%mY7*OQ{iRex)Qa={w#D^c{(&x);&Li=
zE)MkM6VHq)_o77eoXXzBRaIsFHD;rbX>6@QqAA-i|I%}zGhLViFf>18QC`0m%ybe2
zl_(xM#-+y$=@_-{(`{C+83Y+HZl1Uz4yG4LVAu0m2d(@Cx;QCF?k(c=--2YY#)Dx#
zcPQnO`CMR`()pfckmDBYK;?%lzj3-mP7o5x&7S)NGv=g#1LO#2Bfz*L1f!r_&Y}Ec
zvA`B*Xq}P;%{6(G5nNKyav?zZf&|TfoyvgZh~^K0ac2omh~>YR1gZR}w_7v`($FHy
zL24Ne9rp>+K)WCWs3D!|faHkho1>ftB1tUrNff%mm7>pTa}|{v)`PqJfwAxun8k%}
zQa_JDoyLu6RL71kV8lQ%V>4X-Wkwfi3Qc`R997=`2VZLw(zzaf0YaTObr)M1wOCU{
z*E(v5FKJbUV2D$cap_at2qSTRRIA64pi_48QB4~|Q=^9F!!DYp)%uNv&MOl@<D8gc
zbtPN%KDSovG=4@~W7gPYWy00WrCP&ebciC4=h=<V)c}X0u_$B0qpD``m(?(}N+d!j
z5T+f~e8Ot6VV6r?OM_K+xZi@V@zj;pLCcYBBVT74#LPHzy=C=2eR}?ypDqr0TZil;
zb$v8bS)SPpi`%i)$@Qd3jUPI)o=$Y_W#b;8JZ`+?-CZI`)(Wn+pYP?lZF%NXWQL(x
zQF4B^7O+^9WT<8<XBng}G@3F+ne0Z*A#-FmB(xS9MVeT;%l#pwm*|ZiF``r_4xVXr
zg8JP_hIST>$;3iFYGO`@q;Eh}qhRXg?l(DC{-Nm<Acy;R&uKAtm>H0B&JwTe3t=Qz
z%n!=d?8&Qg+SKzYlA_5Qvvj`HFkqp65o@HYSwJ(zNz3VZMnLd9r@bIxT@2af%Wa_C
zVobNTZ5q^!cqPW~ovMnit;RLgFdiXXJ+FF2y)Iu+GlaG(7?Kx%N4l7-%OA>>tV;p<
z;?_nMYa==PlK9v~zkVP$nWn2jsJ?(MAcE$b4*t%jG1eklV@mV~&-UI6eT}28?i;hv
ziNtMOwoQybHg0rkb?R9R{jhbEu1(o)sBCq6YX39J2?sxM<F3vJIc_4yLySM><cPkL
z*85KSY#7Ih;bCfKPyXKXQ@C4jP#-yMlY+~s=db~fK|fXU-k&{<EcM#fnTd0|_yL(C
zNIW%G!#ZP(D$jw~0Hc?FGaUBJUioSgfPCE1S;gWVNo}V&*-(5{X%S}}0*UwS9-k#3
z$rbJJjI3$OGih#{saLgtI*|&as+_C7Nt4DsTikQer|L+UvWcsNJ2r+6iExPaq8`nn
zB1Z+eml$R^zH&+!HVPMK5Xu{=bXI~MTkQF%06{CVELfP!6sy3H#Kyj8{hI4kJ<eL*
zjtwYMU*@jc0ZFd}cCz3LgP;h%2ixP5^pH>J?2fR!r%Rq_UHEKiKvX*tG|DaS-*7@!
zhlzH^WL(A=hMe!y$ipHS^)mRCeuF&u0(FcP=$UGeOOk#QhZ?Ozq@JtB{H@nM9ss$}
z=Rny@^b-`++bO}wfHXM)_5jn@Da9y&&y+6fGL2MD#i=5j#Zqy00``F2_ZeuQN0F|N
zJc&c1wjf;<3pd|*Uq*+$=oSl5$!CREX-OIRQ837IYf&|>tC9KnWd!_A2aHFO&!I@z
zGl2TW_YfygN_JTSit-GiIvLF7UmXoUJM?Hrn}pzwel4g&Y!kPq8u7RB-{NdFC2l@N
zXds}!7(hUp|1Bk{;$&#&Y-s!+G^B>CjF_d3De3=(u9mcQup#|l?=t^k{x8C^S;N*r
zMIGzUwu!sFn=_F#Av6w@Lc~=A5tzkq2_dcUV#&YI1d>VQ`A-e)q_A0AZ5;*R0syqi
zSJCD|C2Q41F>6%-IC6Oja)nmTT`db9Pm#b!5x26d*d=D3^NX3ls8FP&xzi1o_q6xU
zi>JVh_x-saLpPWK$#;H%;4E4s{0dpj-?>9U4+CReN_373vC047EHmd!blo?@$)gpR
zaijQWk!+yFC(mPxbcMw>aaZv;5HlTFu$fV82S^gmb3pe@XlqKbaY1f~4#E{Nm<oej
zI}mW0g(czXe}7F49qq|_QcZ)rIEdR2`Y_rcKuHCn|IC?iDy<ksvpTfW@M5wh7C9={
zQMtD=r2{XdM28gx!S`M4v9TtES+{W+VWX0LeJ0?-Pyjff)`K2QNy!SCaN#Mk!0^7`
zj5|ujcP(P!)9s+pFEso^@KFn8#G%K*L%!Mguv1~sO(*BANJA~K5vdhQyR}M%g%dJW
z&nQD{WN>3MbBYEaCp}sn356O{A&iMg=8Xpj&Re@q70i$~1?<;NL=&AZMlG0+So(l}
zWbrI(t1`gHrUI)9FmHzNu<bBtN1=)E{!|r^MTpf639$H>)l_A)i$H`;6^+NUD8Ocm
zM~_m%|IMed3`S5cH8p^D<r+&SUg>Sq$=1BWj~v05dK(Z8w^c0MOd8R$b!Lu*%(~@=
z&ng2Q+n3Qi&c|A*2iFGAEE%i`3Uu<*ZUMJpKBuxJB^fo4d1ECQf95K*>F2|~MyH*0
zQ0qq>ykgDj;loK^S1ex#7Zq7Tj=<tz)SJLHY|d95=#r^|GndZn7tNx*Yc)A&XhE$*
z4+!gZ8#Jnto%@`9KY^-7>0rAYzpJE^57;Q`T+4%>-d1^{wL=(*WxRGf31Fj8nG9C|
zU~{~kjE)Y~h7CwoB0qc2hWTP^?5*rrjm_5+5Ex`*62VBQ)T+x(Bpu`PLJ1FqfmJ`K
zqNW^z2G086V{3+))LP=U$b%IU^!|o-vDDN9!3)AP+L8~B%SaX7V8zX>5ktRw_Soda
zCM8Dfr(9s<JvcmLPLh(58G+)L`KhCJiZJ=MQPCmJghD>YJ*b(<YhJ^R5|NQs#P=KD
z7kA+e4rAFi4B334&ydcL%t0M-aVgT7;s+cUOC=FI#n9+R-a+wK?4fW$La(^;M#?A9
zXR{uJE-fdYoNk)cCjFG%VZq1UHKn&#9yC(_!c%-OWLL|ZsORrfy-}fzbOh0#y%QBZ
z!)8r-$ylD3#Ea8boGigttw#H<Jzb5W0Bb$rTE7?ZV3OOr!0u+(HKywuKj7{TScrx(
z_LtSt<Tv}0s<%J)fa&6e42>3{a8>yB)*5NO%ZdJBpLUL0tPRedyW{iG&!?Cq1+DiC
zpH)E_xL+<x<}TMW=Kd2-pcwTVEy=VUGNU>ylmPa5+e>vFt?Lh62$6-a@o>}~?VrMf
zvRAAFJ~vRK^%ht5g+rv=T1}%94P1^jc5!c|t1!7VnIJ>`G8Q(JjP4Db$*0!ySz@g7
z#EXWsku(5FAMaenGr|K`;s!zq4;eHIYN;md-=8=X19oj?DNj3TZx@rl)z#f{bG+_Q
zuEvbcXm&mv3e;TiZ!)j3H*C2zs}{T_fX`nllQNmE=QQts>7+cTkVq03QLy!pY}!m+
zPn#xVY?o~QB2B^Hr{uG|0JVUm_OJGSND>iH?3A4M_qS)QtbusE-mZgqbe+Esu(_sD
z1*F}Gexe;>faB7DvYjYkxA~I=NSB{>0PS$qpydwSpV0Bsyy{74?aDg6;-v20XpHG|
zzuj6__1oft-}G5!JxD6?aH@g5bJv3D37Sr=L#tpEawzb4wz%ChXK>f0NB5R(V#Crg
zl`Nav-+dwWe^R(_H;7a>463gdF4FpAOZ$K?JE{3=O{WQ!zD5WKS!kGlMP$~T)FHXA
z@8Y-ish0N95sc`v+@&P7?%y;H+xV=!ek0!XOyyW>zEUszXNjoY9#*fpRh2nNqIH3{
zXqw~uy)7538qn<}4zmq#v}xRX!%Z@Oqx6>pT#ytXPE<3&<}+d!14$SE;-6*#s+|AN
z0_7miF1W)gD30E1*7*~9T!}w2t<9K++DBwZi>}wimAB<{<vFDuA9Bq<d@q~5;Yf2T
z6+SKP5*1!^h?l=$?s~1~vUZA3R@Seg=TbZiZew9hF;kO6$55O-OTC*?;$qtlUcD)`
zo8egilv2`A;J}SD@A22MCx&8t1`X6cpTUD{*I*dZihO2yRd7*2wzq5$yD>loX%wc-
zlnmV=w*p)bN1|F(@(xzPAVPlP`nSDQ%Yba`&|$MacgZ$WEadxn&Nz9=!RxMPaBk=^
zW>AsC#{GhZBeY>^$v{rpuQTZ+5e7oN8-vWYMRQW^#C7bPUc~^_p5zFMTckcPe)@6-
zY~h|-3y=|Th69nV;|20tPd0t^8?^_9gyDk+u-xAnQ{yMOy=kzsJgH{a&L6x~d5VR4
zl~CPMAVbfReM!pZO3V?xCz-fG!!JjRWjj_nZrDRs*PL-T@7c>W&iBl3k4tj9kT&fQ
z>^vh5_O=<$ATy{MZ94qo*dMl*mowCtwY?V$s62VrATvx$Wkj8Bn_Q~LK33=Z4JW77
zW}TrcXK^cc7}kq-_UQDt84Y4#M=LD13mESCf}d4*z^6(<DGlhACFpDo2(C(D)wo$E
zB$-EYO%uAO39_pc+72=;4HUH_l9s(xmL?4C@W%7Oj%%?PrjRv>$8qz40(TodQZ(D~
z?449suW4YI7&-g#x(yO;6EJHeS*EqD5@|L`c9zGh<IP>0H)(%preiBLlE2)tyZR`3
zDvjd$S_Rlhmh$d8$EB>NG99<$@(wVfIm;gR!Ly5&M>N=`4?yH6M;thYGuZ8NwX?9O
zG4>KdswmSm+H#^FI;x7D#>}L=k$Mg>7}ivYhF+X9Zze3edx+5*1=WgNBFUCZl>DX3
zSa}O8kR1?{j7_aH8&Y?Mon((>sW#iS&(nsrL2_EahghCjvv+G!jt}>93YR&|>QL7w
z`BL&$6gY?Oixec;0aW<xE7tj^Wy$-RgD^en$w2PQ002MLoGOeuySrpg33!_k8+Otw
z+Xzqzmm^w_WBb~x{*XNve>neV?2#I$cgoQL*o}FQd;8D7;&{;Kq*yt^0s$r900GJU
z|A^!M3%qH5_@OSL{cLZ^lCMPv1e5;47a|mFkkpCLU@Jh15evi-1nnDa;kF4i8ROr-
zhLC7p*ZK##0pirOs;gU6BGCItjkFXO#H=fqm)FDA!)*QPetv&cl<at$yRod<cszpk
zPIoyIocQ#dWP4v{AliSwl%xSK9uQ#bfLsLDhYMJ~LMCn%TzmO3qH}zGneie?kxp66
z_i)*XpolSIMT*v1!Zro>o0)DHc-JCvbZ`t!U72l0LrjTS7YkJNkuZ9P)i2zJ#aP7o
z9kk$?F;)<%8!X+qnjlfeqa=)j!GKDcP#&k<#DIV&NXHoL2==h$pjbw^HlkI7<Vs}C
zF)&W7GsVM&eBth<e(I6TZAvRR8Kw#96?37d0Kg+bGs4@qaiA$Jf+-nSi0mpYAFElA
zyINMC733Es5C*B9Q!gu*!Q?W$j)pCc(?j?|Djc~F$qUD{QQ*P~3rv#yI{<%!jx9<}
zI~|O>W5LsD;yc8qPJ|5-V%I1WTVO<|;6W2?&3qc`WwDz$f5Bq!A&}rF-aH$KE~zjy
znWeY=6^79T6#Z&6sZ|OK<z-OIml}`?aF%Bqbx|1*mlKOemsF`i=HvktdRkPkXjT*F
zzc;zT#nVHz;8f4IK(4q#VfajEP|qn79?`^}#-N-!=VMUQreRoAjOJpsY~UD-*YE?W
z&HXGW*x}t!CG;kyjy0FW2#K!4%U5wz^G>{zV;#r9UWPf9JIAI!Dx~^0uz>KMGRSik
z!Gzb<(}_mMQ#Zg<eM}#dZXq+;3n*?MlX!+nR#D|K0`OrWih5%or9Lq`)f9UIN@vvF
zN6~D#*>{<TQ`@r+Q4*(*p@2`JS=#OH7d-)g0X(ctu#*|6P3;``8>ZkIMDpb#*3~!Y
zv-@U#t5D<qRhj5EG9Zf1E5#9jeX}@L-%k;7aRck649<jk^h(F-*qOZtR*xSbmWdG6
zg_*O*gmarW3Wn_AjyIX!B?BlO-*<4>SBOH23s}o~J3R6h7O#CX(w3xYy@VkPP1$6c
zAWq!lH@Tr2lAYR7Tx}LUA79xRW~9e4D09Ih<y^L;JuYw0)Ym+I6@Tep3v&!q?NkcF
zKI19rO1sxAkY##&EkJ*}H#WBogCP%Pn->b#sBbD7Xw$VSwb^`_QuY_&Rx<hKTY}mo
zN75Wv$U+MxwTW4PYsa_(EH5fFib@4#3MWdfe4o7F^^dr6vJ;}Z+R$1r+CaT6`WPX}
z(W)tczs(>^uj5fGD#&nI%nX*4whH&~ODo2(n%DnnD?jq(;g9j?#>HGw6*B%x17mWT
z;Lg>oiyajrOOmOpukM-_YA;h?*tH!cep?>v%iMFeQN^TPwh;PkHAXv{Y!X};fyHc=
z1{Z&G>H)H23L{O|tpp)#+0tuXvCq^Y%&LMy^1e7@y|H_=iI)WV{Q+`Sb}<iVDju)F
zkT>k%6%s(T;8C>V3$a!_er+(=WKAs9`R7(LmMz7SDHbew+*ac6Oc#L&J(*>>9tG+l
zSNM}KNrEM`^z_^rE6h3hk)qfXAy_1NA(x|@qUbj|G{7xpQgtZu{#V!$o}ppdiGKZ;
zbju(_;a1uWLgv>zO!SsWB9+niBpBwZN-L*>4i_`QGmQ%`d&fS}gaz&4`=lN8B^qAs
zKHD%w8YYsnGcByHD)Fbv$jqYcwr%JXX_R=tKL|R;yz`aoPr;t-@$$jPYo>$;Y?7VO
z2*VwEkWPUi#4+d1*<>Yej3JD<<vXZ{_(-kEQYH%A2y&IvAG$hT^qaez*x(Pye#4(>
zRi!m@x3lzMEO~9=0q+XtphRsB?#Ubgg(e1sym`~~YlOoU*1VCV{9J{=R9LMv_ctgW
z!-U3d%Lv5&?}f;Z_JyHr5=ExpEn=P(9APmc{W2D>QGx?Md36%D4IPJrrX!nJ<-fj6
zYWmwvj*c0^2q=c`K|}KThVGMoH-8!!TqNd!0glSxHs0=eB)c9!{k^4CdXoJf6hhl^
zGe#1yW5)!*jUC)$3qKjr`D@X0r_AXwfW7N9VnzjE>jt-9>4800*<afxPVmJ-YRxbw
zeApO_-WaWXV8awoDzp66S_!t9Ua5SR7|(r;HKwl3LmdMa57fL;sfpbcxA90_IiN4e
z2EEI#^s<9K9FT70BKpiN550qg7W~DoQ30)?Vh$DC=9Ul~nX9!y7nsz0bA+rqlRIP$
zB(VwU&XXnY*}^RJjc1}%LXnlXUH+yh8jPV)Jf`koX>o;Y3M_%WMWc6c?P2q@<EQw$
zzyF>PJrfKQ>-9(7l?&;aK{qC(B^-%`bV^>KN3CrISK4fGIM-`?Ew8LSXW9eHYV&jx
zv^O7!=bc1{iNJDcOZ=dhreM%4@D86GpnhZW{R9g;I<A`xQFGG{na=ZuI3#tmMzQuU
z{TzEOUt97#-s?(HKDt8a6#-LQ4To6`$5G>|ZKBO?f?MK-z`P}8`$iVYQ^WmrQY?rm
zkSxeYfw39Tj$E_(9ajA$w*g|xhC->RW?-|#QynjkJ|v|SVU<Jgk-46?7YQoz40rIw
z6-G8bpGrBPHm#kSPC=(wMcXHsZWU!cYgx1|Ooy!6F7yaOU(OXALUOv!y~H=90{wjq
zSU$@Y_Q5aRKv3MQ16A?FR^jUQzsSy)vQ=1-2XCf>KW|B{n9mpcH7S@prGj2a;?pg{
zf?H5XFk?^(Co;5#^i-};pC}_i6tyN^t`ZtM2_&K}5Q)cj0I7_mk_?`X_FJ6mgIYX}
zo4A~nB`}hOgfcqZHgzDG!MI?4rTuqiN%t{SA$?~c4mR&mF7#oF_w#_VHpid3>EVXp
z5oP>2Q-CYBW#G(8hVahrWH1SmYH5s01Xv=BF&V_Fv!g4KTf>Q>McTj@6*^TFN7d0y
z`l3Y_z|Rt-qi%!TVU)a%IjJ{aG(UfnB@k!K&~WQjA##BEJPlK=e0gk-j(>+7;LiDw
z8Z<D@8kS;-Kr>b#=txN%rfq|OmN<Y6?&VPJ!05oeJMkJB<ClK!T!O7{9%K#^ppD}+
z?o1kxjkGBSB0bJ`Fmvy&!lWm6yIZT(EC+Mr_}mJY^1}6y8x+VO+m}|lOA^AP%8Q=V
zztYAcTOd@>?OJ`3-q}YBgAW<f;Q^e}3+|0a-<AePeKDNJQxD6(`yh<{L^AE;fK31D
zwGNIb=iay7OdkfTgYb!Xcg_X;Esp!z<2g_C$du<tQrP2se2~;DKoj$$y>KVMYz*a_
z)tVOaBgWI5vRWa#@3$GUepjG{Q>D6xO2wx9FhY_2MIkQWNZOppI*W{Bku**%qGUqB
zcB1)-U&{bH>IrxSxgWVzp}5E)z#U9Rmee^JReEbdPy2kY1NX5YfatNn83>rpROH=g
zA&}-^R3}L8#_WUrh$lhdCU?emvO)w*sO!BHsVEE?*)Ec|2U-yZIzXd<8}XP$;3r4w
z(IOMkq8qA2K%I;91U74d2MEY++pEjcFN=$(f9XChu3;K~yDwlq+@egE&ZknS64t5B
zdlWR_eW5nK9rmW!e3yWAWdkroLUb7}>mtd}B`4OBj^_C%6O5NP=6pFP_)My?cFvP>
z6lK7y^u%MaYs|6UAXd6;=?Hetv0xY#KrJi4E4pZVdCSS#D>V|?8>$kkeRcwO%H7wr
z#H<q(iQW2X+zLc4hn1MZr5sVLhVVG`FZ)FI<ya#-W@)d7(f0LhP+#__9R*s#A!mv3
z`=9m=A0vHZ!`BUQo_uIkN}GtSkeZ~f1SpI94#9I_uHCcPgs3ueMrfbA@h~TjP&aTr
zoy|qiP||fhoTb_Rq?t<l9;a^LY5$26klA346hJT?v?JEt?!YX&e?$5P(@gfhH4mNE
zcYbi>+lX^M`k|;YfJvWOmt%xS{rXo_Eq2<dkr`+pAW9S<Aol+Oxc@K7sJgX>@)6!o
zPRp5Oe}SN=Mt%@6#zHE)EwCwF&{L?0lGet&lB;pqSV0Ua#ob|W|FP-y{^k^y`%uNk
zX7Pe897FLW_qoBqncd$gWA~Og{y%FR0-PN?Kcw)sS|WKPyz<j;JwGpgJzY1RcT?ta
zpcaEYs;E@uh!p$4+K9zh60Gx>P!zNz@vK!Utfn}nc&CjnEG1!A7X6zmSnF6ZSkzLe
zwB4ct#gImSxo}Uh{|-TIz@)mlHM?IDoSs8B-w>QaKf5+Hg>s`({sxELKsFm+mhI4w
zD~U0(D%+<qn|*O<YJzRIp@LyGuk4^$-I+hx&F@9K;WG+FOAdok<)G0(y=jRC4K+<S
zBw505Mol&yD~#}8l}Wt65YnxtEBLb2&B^KO{wk<x*-}Y9$D5-gA>O3QOg5F;nA0#w
z%f&uhOgemg6bqBxlG6?ieAS7xZDb4Cw&Y!L#c#I|nGP}F#j@U(+q$;h(^!mN-#|nC
zsC-9DZXzQN#Te2kFeFQ*q1-yY^u{cFvC;@+79&Ari{U$ajW>Kc6J`<)Ooh6r|Fac2
z&K=e{FF=yq)q=(rmR0#KI;)C}UMMrf4K98BdNHI`^$SqRmV5xi08l6@^iq>GDY0A)
z*V4jdnKbksydx|p?yZ}NPRDSy_+?HldP)u-Ri`n84o*Wqej%CV#%kw+i-02uorAOD
zlow(4j<TFEUT3G43Ekl|TF$yJ`4NthHP>sfMxt2Se1~@uoWKw(ft4}?k2KM~vOEBZ
z6{$nm-1cYo7rSztv*ry$d3d{GuI#QMm=<eOVN8Rvm{O~Y*V1sI!AFy%KM(8WpexK`
zITjOwJ6^u^w}GmH5JvK>Zmq%9QS);p6jM6}M__$AQ`Lx8)t*asz-XBI5I*<>EO=9C
zQGK{!``nZrDqf17OW|+)F6{TZw2I{<$$@Cf@|@b1<9sLNtSw9fZkhq;h2<hMfKsi@
z`Ll#6KWd?o!az)01fC&9!(=w+cRO)b*XmXA9|?IT46?OkS}gX<e(3sD{dfp8VO(Gg
z@aGtfh&i2~c)#J|UrrGB^ZasAj}3*07OQcH(&*x>B95?)9umX(CXPXV*Q{A16dXn_
zCD#tT<RG%}8}-6{%-C!*mkM>(_yd8eX_kSWq+G|^*!|%W3me$;oP*Q(+Y?#2!WEn{
zLEF_Cr$dzdg?mM9F(`jT+>!hEnZjbiS@i5sqi$v$DEP%dEGN|5thh5|R{??O8A(;#
zJ~{&wA|4fv>BA*pPgL;kJmuj?EH>skTSa>;ue8>4PFmdzeK0i1zD2+O=nY^5s~`EF
zGd+e!GRSeL#WGruFR(kCoH{aG52Y1n-Q<bu^kC@st*H2<B=}ueTt|&OJL#0M`rz#-
z?3SEDnWN3Y02m^33Ou-fHBR%@9|ObhB(n^o#gZw78sN|0)=jz~o)s}!BJ};y9&o>f
zl2&m^*z{AjR-KKxLE7ACZFH+d{b9PZkqL;)>f7~M7>gRY1x1T{Aj~@Z$PMmdNnj^=
zJ1gD`Gg>SpeX}t~ZS?PFJ#4G{@%S4yG*ZKxgdsnAoz%$fGki^%yX=6Bbv(|T$TV)e
z@?kzGYDCN)yPxcFj{<HD<Aj<W=0!)&${Ur}z>Q@Gu6=Tr*}5j41hY(0wFgut$cz^S
zj=&}X=zw;+P#dqipJqgK)I&x^ElGr_@q3{s<&EKNj8tYXD`Rkppe9#6i(hadjk%C)
zkDZK#9hz;c6t<th;))2HSJ8G+rXhe3|2Uu3P8DyAXS?@8$t;7*e0W_0?|uCa2)m&b
zE(!Q4-b3SZRpAo!Aa8fnBfpFP6VDgl>4Dz%#8{N9rLONmeN<b%fa=n_ktLyRNHWpx
zV+V2`oU;;{Z;7p@EhArI0$}J7(W(n&k*6P{_Higkrct$9b#T7QsDF0qG8opXvF|+Q
zV!YAusg3_AYCIl_b&<w<m6CEa#!5wbz&ElAPudBDMn#MrctNGkb%0X8quTHL*0?e_
z+@FrpjlEM$=4``TIs{BR<_%&8T0_?eM8LD1>{gET{xFV5RO3`(iGNA5#v1N{u_LDH
zv&2>>6;`b(x}jZx6d-%GK%q7Hu`Mg>f*LnubZpd5Gnr_r(QSv3kKE%~46|cD{ppWV
zWEI^fMvEM064j47^q9)<K_sEBw_SZD<&XdU5o824wayu<OF>@e?EsP!bfkOGW@rq-
zcl70BQfH6LA%7gBBZkzw1lN-XTwNN#R(_-nS2+nYgR|_9I8Qhfz%POlg^LnZKub2N
zEiw%V(uok42ILKA_RV5-V_Q$>mUHn)Hf2g%VUeXARZ}{%g12eQbM9KK;L1unt&1vi
zB~#g%2Px7b<{*21pP;%gU?}P+PN8D&drwipEqvSuE#!{Kqb~NRVo{ZkdTZ^yjwt$r
zC2F1xm5tW>lR4Y6E&Q=o9!o06v~h}X$MGS<D$X4^&0TlaP|4~`fZVNlYM;*C^@F3%
zOOi^OP<Mi9<w$v#VrjdeOodvYfb=Q3|9<r6jd&XUa0Zo1$`szbB8=USh2G>jrNJ8U
zMLpyWVMyvv>6>E`$=qywX7;$%bWa*Nx%Xs#UG4<~K=|ew<(;^^xsTjgB)P-IY#wdD
zjO@+`31ANZ$XjQwc2muW_B%CCgAXb`;BpqMe61klV+;>$TJuK6p`+(RVe+_R@A%eq
z#r87-wDPhX9a!FA(>ttEV;?PY9_-=~iMkQ*@SO<c4*tmO!_8=V{$xUy?&|MpZDTlH
zsC%k(*RWD&rANw+v)xal%^f5okSmz}Bs2NaXtLt0(y{5-@4ZZ@HPt(>JK}MB81F=M
zK{a@|9RLX>cS5=sMBy#T;&IFd>hTWNh8h=h$NpJo@y|0RsKy?&_gwM==Q!Zq*aLw*
z5~%u8r#fPTJLn1Da~-^cNR&ddQ`M<Ub}CLbtxIW^pmFVVup^E^-6COLO13VGidASi
z1@np>QWHT;-7}AtU=rYra*78m9?)`0pU$A#zJo{ofppC!sYzDrj6S)O9^U=av<u!j
ziscghaH8I{DQt!DNBD#9v*VVhQ{<Gl0He)q0Wm<2_%Rc-OGaYd4moN&Iqp;u&GoW_
z3hQ9aleF=#-Cwk_SGS{EO`}~ujp}{9K-jX^=BwQ1tSyB*@87w(MnoRRJ0~@}1P3c`
zcT^eAY3K*Dw?86hIBkKUZyTm!9!JADSx6lgU5{VXSjo)90G3x{JE>1kFR4WgxrhyO
znPSz~C{nw69KWF*C#4lG9)GwHq3usg;n<#&D~%f&j9%5L0)<g0?QehTeu3;0fjfro
zqYuO6A6Sh$zyA{=_6)cFQo;fP(qaF<<yHJQMAWdg`Ts;&tJZ?{NM36H)5F5@Mll9N
z^h?5j6lgp#1W0JGt{iOELc?T-S|)LfcuXc+W>rT~2VgN&k|GM+3_+uY8X}@ItJG}O
zyt1rTY1^FDT>ZSfv8_jy{*n7IlWKyzSmw$4^EPvzbK~9fg;@LN?$H^DeAF5}*}%lK
zu7L8A#tK1wNmZ5-02lfx8uP87tgF0A0EIzkU9OK?Q)%C@i)x~Cu6;rScmcPHJXX~?
zuZ4qEDqRLY?_U6qoik2_$}Z`n_QS@Nc<K#7{hfFJ*Wb_1SvW+XX;fYD2E!y3lE(K*
z+NXf~3qQjp)cPV5tZ1SKmqQt>D{Fa~EtNe?C|m!q5(y4R7awj3)z+fi-lnFOL5oB0
zCU<7fN56cGAhU2yI;**0eh0G#7J^ctbT>LzZtz*_l;PCeq!t!EWh#oU*chmR4h|LW
zEFvC~3zO7g<#m9?vu@d6wG<KYj!>O}3-lWvds3`X-$84pP$AyHd6ghiA&D7&cUWwH
z)!J}Xz1=OgmI=nql(BA_0EXdiiQ@wUd?KPK-@?UHC!wUddsgVjbn08M#BY2&I3#3G
zK{ww_YAv0)dPWgHdKj}|w7T01KuwbnZVRtGT=lDM`K%IbZEK6DF0cg#$|?~SJeS(9
zxwd`VEOUS9t|iuK5(?tts~gDiMlBi5Sgp;GTt3d-IB}R_@zVW(HWr;ugE#8okd5rn
zexEO}8*eNPyq_<DeqlT-)R}hn8j^J9u&<pnjvEouwjS(DJnoFz23v}0qJI*h+qBk`
zQ9Daas!KotrDh3-;Wi%*!wHaxkt2?tQ#3K0e4gTjcx+HZ*j&+GNaduDj*+CxNdQZ$
zBa?ApoxGx7bmc;Xo?vbq0ucmUl!OhYs$n@ntq=flwII28Y6GY&h}3Znp#Fha=LO$0
z38|I5XiEG^gK^>p>EX<ud9C#D#0InGy)6jrfD?y~ItlTV1lJX0Y}0159H<s*2ERVX
z+fl|}TwV5$O|m*YkGK{gTR*!Hb~O~xjpQGNLR(v&WK<a(qdJ;vW31)cT*W<>?5Pdt
z8wPR5c*31F`^fAs{yRIPp`qV8Mj$nyRs0u;)M{$)ynpPh4K7-xpct6^&two|X7lrx
zVHWJ~@6*F*S2U-|MAoViF<2b#Rgu9V-qqlV3j2el2LPKK4e}IqgKgyTqZDFI{}P;#
ztf4+7FN?<7=I)9bD>rnLq(rpl{;*kJ@w!7>eK95Vr3M`*cnypiy6T7Tp4t25>bisQ
z7nH4ffP>*|c-c+QbP!!zZeIfDWJ@dg$^{Hv<E|LuxkHkHm{X3MK`X`USbO)k8KT`B
z6~h)mc_i!&p%XW}TW7$-@9I+Ev1SvK@I?7s1mqg?K~{D^Q3umJQv}G_nq4(3y!!zU
zdiT`p0jx?$psVWh|HIfj25HuG+oIiFc9(4%PuYITwr$(h<u2Q{ZQHhO+q&<*d*3**
zzkR-YPQ=Pskr6Y0tc($3&RjWS4#K$G9XzXICXla37-Y9wrijOpNKuz!2v@!2oCa*s
zF6aiMN&q68%X!8q2-b5a-bOS8Msvh!s)nA)G#Yy2M^^PxL-%>FP?`(0v&7ixO31ak
zTS|@7Off{X9v?@}kPtTdo3m)BsAqkUBFVEiPR)&4NWIq0jy-p8y^`JtI(%@$C|MS5
z_=Msaxj8Fbmna*&`K>pc&!j;)gtc4R)^#|<AgQjzSGC^=z-_9p9`;51b-r-oK675H
zfT89_u)#k}(B+LLQkgSq4+0Nop4{2n=<ZLJ*JwcUqY*SY{hjTC=p!+L&Y)%BG)DWX
zd4;!1oW#Mo+YR8Q7Q%K%TC`n5cV0^|wpPwClRz4mN3A?Qj!Y4W4f(s`j-*b(kFR*^
z%)Iy14Whf@#)g@3P-;EkS&C;xxay%u*Zs!wBiL)fEdMNFj=1hlqUfs&JP{MS|Lb0m
za9cEBqF|QV)XSM<<ArBm7K{@0jhT||OAP$iBwU-zOFW&`k;Y5Co}TF#Anp9D+zII&
z!*}uUo7^R+PFVJ1GT?h?yHr-!kl0&1Syg;29x{mXZGdB~<$Jf6@3y<m3viYaGf*X~
zUtb}oGPP4prVVuRBxF2jThMqx-;eZDNX85mOY(*z5l1R@mQrAi>GK&EpM$eGFz*`M
z=<|v-P_=3s;~l0g9Y`bJh^w*=Dhws<H1ob~H(iGC*1GD)%GE%iJzdZB$iTERIlWHu
zDbPa2G@UJ?zF?M=jq}6v`n#>Mw?H4j%^pfmgGq#eQe2nA@w>|MW>^EaIb+DBG~hVV
zEght7{3bX+r+$Y;#6Niqnf{T!pVJu%3T$|o$se4s7zR525pfec7#59QUVFLrD8k*p
zaGd}z_a~rVS){zF!;M7=O>D#$%ErU5x>Uu~#6+0#Ml3g?(NVYK@{I18l-cCs)F=Zu
zG!B{>^`Y;m-n>j6B5ITeBok+>Z$rx!$~eEhBk5GClcR~xch<?<U><Jcr?GQ3NMMOH
zAyv^u$-t7?=Ok0tWa<>Uh^}OKF)s^Wc?CW;T%ZuSB-VK5a#<)(36?F%lmbo8AkX#r
zGaF@mxpI2VW=uT~yx=@U6N)KrxT%csTIJ~SOtGA0t~ho{823gJG>;&I<Fo%3S5(6+
z*TFuVDP2VtUL#eTIAsBk&f({X@*P{NyiNR`QiC$R$U@7wAm+RF7Pa>%nrV!=(;9PQ
zCtk`sY}942pP6tx`@681<oZezEBNvj%XRj;pnX}e(W|@zRB$(CGRb;V4?g9UFdOsK
zhG<L&eKmURxg_Jw#SZC9@BZrgmf5|Om2npBy_h)QA65!w@O|_3ZA*OG1L+<|GzcfV
z7W69gBfaKRK1g8}j6U0IC^ad1ZTzVnq1zp<wfInnGjQ3cZMA#SV-}pH<N4Syp57js
zpnb)vpWXi89{m<tV%>s&mr{s-^q0>RcWHMghNCqJ^Pn;bOsd)Erlniciu8>UXS_|%
z(4xdhYXR!Ab75HA1R19P6>^_8GK1_NlNAW^)Ix-;GG44_--&kEoONuHTZ9U4GpN;m
z1&`jqa6S~ta2{s^TZPj6C+k1zd_vhhU`U^!ne53lgO+zHBNjItESYh$aFdIrD`y#{
z$sfD?+;D){73<?hWm>G_FG@aPAat!gPHqPy?p87(d%b2TA^pv2t)@C>qtC`s=h=$n
zYDv9ay1G)>o(msjaG;5bn=5fOuek!9<rC&s(tX3g>xKbNDm2{pc=w0*jo|VT1(=Ud
z?iA)WLd>F24t(c!h{`AjZr_h!-L?j8>Q)c>HTvzm{Xx?XfB!rf${TbV|2aes0<GEo
zm03Yn7qqD((_GUQ#IrM_m~)z>vLqqZT{;Bgj5SLdS3QKsA^1fG6Liqgr>ltm*SDVi
zo*F2ieU4`=&B~V2W9nSPA$ORBj>#4`DsNy*06wgyhvH_)l@eHfE-1aL{^&CqJ!#eU
z6g>i4-X7F@Bv<I`lKC~VN&RN(SDQwE^i;>+gHKiY%);`Dd8k$N?w{P)0`g``@a;+%
zbd3fSnNj96y@T)nWQTw@|Hw2TdneB9=6M3=^}J0D+dApj#xzM5)O`R1vN~4KW5h0l
zqira@V$i7ZPPSsF3Mo7__?k>3_~d-bzF~#5n*133wMxS9*9hE@BD;T8{M@pWl_O(F
z-ER2z6f7~d_sEi66v{F`)fp%aM{ao<PDT`f$YFDAUPhYqn)HCPsF?sj&*$1l7_kAb
zdi6yMKRW4aWBXn#^fc^-DQwT*CZixrdg)V;G<a){Vf`{%e|np0Yxj`%BM2OeehAA)
zfkGS+2;Z;HnL!>yb$Z4gG||f*5nbbA2wEy1W$sSj&*J8*Q)FTVQFq5gp5{kRU%z6q
z$WaLs62z@DFw5S;=*N~Ro=Q$iz)Cf=OL51NnoM=Yo=%L-$c96XfdHpNnqmMTT|Vp9
zuz!4ll(bHvO4+Az;SAFT3t`A-Cnc_28Ka=F!|8kVj42Dt)YOV&tRfgUCX=YsQm33M
z<FVs-a-3=nt{=RLfK$KP6dPAdI@}7-(bS?M&R?<UmGfSx1gc{a=b_9!kR(sOi>Rwm
z9~pC4?$4?I){ZeGcbDm9#xkUgv?F_D4v(8CTGZkX9jEvV8Zd)D%nZ3-sZTcexs9ez
zinfnLLzr23V~A-{i}RSV8K~TXw4L*_nvsHzKybjX-5SM~ZLKhSmorPpLh2hUYdL8y
znmpOD0JQ^;nq7hrU%G%ZqGT%fu!_jIxpxzWx)7Imw~0ZTrjGREXPt~*P5~a!LU*nu
z&}&VUY5OEn1!WdUtumZ@VvTZ14zk!$vsA;=vn6wzjMX$xY!%H=OcJ!<ov^v|WF%uw
znQqOK%oUdTsxeAO#X)MQ<&y-+QzBP3r%rTiQlO<;tV^^oFXU`gP;5}h)F`DCEtQ8h
z_lO%m`pm0HP*K`KN!}MUx^v}Ghra8K?a>iEwjr{bbZT=>Fa{x05CGV5Bzl1*dXkRW
zqoR7Upeg9{YK2pk6{4|Wz!qUcm`9aN3HIdlx`j51O3Q5Ruvs|V;$_P#Lfh6X8evvA
z>{=W%hHK18_{%HgMV;B1$KAMciOfl)+JRao<BRrZ_<v0BV`Je`{5GXtYTSi}2UOcP
z?P@^W7383@p)~jv%5k4WG2^vlrmYIJabe!N#AbS$bF`oIKFgPE!V-BRd3pb8Vw&rX
zu<386C`<3yj<POD3E;9bMUrV2Wyf6)YwrS0=8AKC1?}Y)%XW*?c}2PA6t>AG$_P0P
zsC?*d0;L<ioAQK9HYC>KL~g0*m)34Ysidi#kZ$<C_%+&54d;oYW)Y2daAKck6Ru~Y
zkBx_#z~1UGvlai1M0Rso`oW6hVqgv<Go8x~1O?hR3?%MbfH>Cqe8|ZrDh#PU1TTYe
zt!>wirob4OaAtBqxCP*JiZ8!Ik$%zNeF7w&StlRR2flDo_O(URpE09-M7BR!CNI3P
z9z$0CZj+@P6{U2sBGwj?d0G*XVL{Qu-IEtw5KMwa+}PfBy-x7+9ZJ&~rgiR&aD;Nh
zY&YLTEK|6tB7xx_3uLM+JHg<F*bdj6W&S~B{0!3L>=%G}J2Xa2d`4|R?GWUfayYuO
z{vO~>ht2uk@61Nd*#|w@KDdHm+KiIV`)&*ZF%6H;9SU;92phxvKC<sno2${7gX2fG
z&N3{jBLkmFgXA}zZ{TG(b*55ujJ-8&2emsg$_@k;AlQD!{BdO|j&4<j=rH8bziU58
z;bzOU^&PPu1U?NQdUbGLbEsbGe-sKA52MkHjXPwjXT&8MSW`7QWT>l%uIW5X-59G|
zGR>7~>`Y+{?-F{oF;f@PuT^snl9Bb%px18c#`KrGs$+ivF;#q*F`vOA41UvRI3;f}
z;jA+K;$T7|HbSw-m)^K%6o+0}j4+mz4<u!RFE`?*GWu1O1hCJS8VJbnRhkk^&xphq
z6BmT$7S;Y3KiN~0LLVk-OA%&ka%RNWxA=10YmWifGBP-)D%#s8Yf@ow`Ccaxsw|ag
zajY{(Q~DmBo2nVta`Ts8>N7S8%T?i9Z>(#pp!n3<yuUl1alaywt}cg)ATV4TsJb2n
zUF*((!hpckB={80Q+f*xfCsQPk=B(!0lklD-~FRFGjcH#Ul(=<7j}Q0*%3Oo1QO5|
z!Y9jzP?z>AFYJ<1#4oCmSjy4zLi<2@woq9i`ucxsMOW@IbGGvq)t?)3rsL19T3uc3
z@qq~6L2i}1RZ_d1IV+HBmy)~X@9jAEQ8IFN|Czf?DUr7$-A;EEt0*x~m!5UJZzitH
zZaHq+A@?e0vNiYeWV{BuO=;fp@{F^^Jfe-aMX*2ixL?Y)eZILIaCsQx3PXMct7Q6P
zM7k~|)|53e`+QOFdNID-swUfEDBF=w?s5`pt_$=hW^!wVNBkstu7N$w+I`sVcNn?{
zQ&@qsSaX4;eQ&I(kL>6r!goNmKCoCDVHru797#Mk!`Eccr~<}r{6T6(oIfO68<}i~
z)x=P3Hi+B^!)k@IJk&HxTCbIF+U0Bw@bM*Y8r5#myc)83WyOoRW&qy^5URrsF^0&B
z&va9F*+p$dw;l6#1G?;MuLd9((Pv)xe5m8~Y!`x&8{zXj>5C@=js9FD>)(~YCJ!6o
zV1LxVWDr3ZlX1Pm98juLgcSPYzG~D;1}L{h#CTwis)6x@tx*G;I;(;L7_BH7S1_<Q
z|9Nn+d4A)LqC`Ybn72=fZf`JO|Iv9P58&JSN&e8SN{uV_jU}XcoyLKFTTqo(uSwd?
z%_qB7FyiNRTu))02#6k2hcFO{DeXB_wm4uR%UVXJy0PL&mq&R>`YLiZE)~Ej@_Ae@
za_+ih>$n8jdfKJ5;Q~%cBYoL0Nb}8j2v2GFs7<A(FOva42d8L?EfI<iW~ogQTcB}}
zb^NdH$PQZIN5N>a=s5hl5IyOZpEioVH$24XSVcQeUTI9B-$6ZDzhh`jrZwCMe2k!?
z?cVl$>LR+i@SD03&CoJD*VqPSEB|I{pl;*b2TMMX!@lx8)eOh>PWk@HC}3l#q!7qe
zz$nH^DalBw(qhk^hI!>pKGlzP=r2}~FP)pM;BJYX)>N|HD1FmwKMMyck!2kKbgCLf
zd3jG}g<{RtB)Ar7Td*N+NDONN#I6msmS&lg4_{T*>b0vLL(WN<XgvC$U>kSXqc*<s
zOR`xawzMAsq<PuaKqIV2#aVg2PvSSq1&h)Gjj7M+pWV;nzibr}u|S%~fWcG)KUmOO
z%OH!(Z$W*2Ni3wMl#wA`7*y=mOGt}$a$*y*fN3r$ZH$@XY*;heH4pY|qJcc8zqBf0
z+p!JzG$Qpp_L%o%l7YaMuqdRHSR<lnkB!7|7hSWKI_4;2{Zmyn50nO7kw<FuoJfjw
zAMnPTl(j*A(40YjTVV5>I0Za_CfQbT<2L0pA2;qaA&rwEvoaIYpFc?A?7)p`Q3R!B
zWS5L4;2ir!vHioRRsvtD3-qbQKGQsjKAA<$BQerPsnn`9y-&Ge*Kh8a+t#1k(^H@p
zP#&d)BTC~X?}r#=Dl@k#1|-?;XGkceizzu?4M7qa<z)=A%Ja7tH4(DeWg?9R-xYKs
zAlb>Kjb;juYSmaZq0{9`#7$-6b_m(+O2}8L`rJinw}BcV=nEb=ir6=GYkyrA$v%Rn
zyGyBW>77w!$}9__*JxJHuncw6&2Sgo7rNNPR?vY>-nH?4_|lXKA=5<pQdys+GIiXA
zKvhSjK-mK<G$olQH{U3fX403++7T2bpp2SXSVqnG2BKKD?P!sMWEFd_+b7tYS{$tc
zdg}dw31)mI$)NaN&#Fsdkag2f8EnCO$;t8JXM7AnE=)Alqa%_g=7F=CLr%}}M{R3E
z4Vd8RNZSrdOxm?6wDmAsRu>|*;6*FECNiHc`R5)5t{r(UbL4ggxy^9Ef;YzWF-c>(
zOAQ2iNoRu}PlI1bjYcEGkL&y^{GmiI8<prC@JF*g^re9oyAdz_M!R|ety(|!NcL?s
z@te-ryzb8;ID8$G(WQ9?v2VC`>H?Y1pDMtBYbI!JV{Vry+VhRRiFd2#I3&|>4doH4
zsSdss*)HY2A)D~q$@;u5Gy0-KE@-r)79{`6rUD&lWw%F<sB-12ivmb#uLLMssI@m2
zB&OKulfkvvbZg^{{NvHGb-VaYLiolpcnKm`JB~>jQ&PI^^5rG_%4YR(4x+5X+sFPo
zU^V@&hlvwUe*c?Jr_RLVm$vzK^)fiBNmF{E0PD8oJ=3~*+cvE|)<gybGyuUxgKy+9
zDe$qGtFn9YF~soPz6Os_EeOi4y`;p^>H!*gA;Ilnb|lv4PAx7a^)RmwiRfa#c;)h}
z=3OtkJzv8~K74#HBr6P;bAx5GE}A}nme-Hj`M3AtJVrqj!vSwU!#hp?#XW32kWsy}
z2kTfwtH5WZ;hhPsM72iZ6Viv*@>Qo=$N0@VQvcC;qta)B^B9ghXKTQR7k~d<V2-0~
z%fRfDQs`XMP5Kkow!HZ^_Ko8!*M|`PG0LdK)j062FhcQKywpSYs9bl{;?YvQ+=rO(
z(NC+2H=%s-`cUH$qE+Nm{z?viROXR<wepMTxx9Of_zc-y(3=XluzleEnA%bDMR;Ah
zf0z5#>{TW+Vp^vCb^80zjv}$&ln#OzM}}o<SK;{HJ(gHR`=VySB1DtrzE$44%Eqps
zyd4LxaarG&hf_keH~=UF0dzSLQ{-B;J&AtuUevy8IE8aqrNq%E+#LYU#<CmaBi72B
zTQzX9wq@K7;ax^VMh%Ew?=C_f5?wHDXK72}q!XX+VLsFXH(awZTNfHH?k7h;8^UM5
zNji?&Ma{YTla2NNkWQ~4!|E4K=m$84;1B<GS?ZaBFK4&DnaTaIJrUnLU?(wE+O-#q
zA)X#{6i<sb>`?Gc*T(wf%CuzL;N0_N4b0ziDRAFv+BDOzBc9#S6@yjzJb?Jf#An-c
zySCs(=VIEme-P3g=7+U2GE6aK7~%}pD<ejSdC}U#NV{ouGpG4UlZc--aA`t_^c}BD
zb<5N1P&h3t@vJb%Ct7u&)(lKVJT0;~1-Crii%2aRv**O*3W$i5F)L#thHYuJb-ReB
zKwExjl)I~AWpo$uG3v@XsUCShSWH;>U)uctX~}{5KkjCXj9ttPjsL}o13ywQ*ZtRz
zAMD^ieh~h<CBpyj>p$;syyI+bkpzAZWf%6~+BJ$%iuBBBSntm06n;rsltD#`r;F+~
zJbnJe_DBTj$Nf|xOIt~K=|k8FVVb(i1oEI?4^CZ7P1JX1wq|#CegBvl0>D89Ti9M`
zbXiM(cFo&rdixwcv^Y~l29pSV&2`mP=JH^vUAHB790N#jleu7n;?++Uvf1-{yCU3C
z=0S4vd4(h-;$zlR?beS?l`dbK-edi60Y)2BVAtO4nQgGA$x|b@2pDKsla6y|5%1jL
zU>mG8e>FLiFk^o9hxwt*^=Y!?fNkM|c<d;{NyKewgQy<_s<P=34A(gAMZBz+t{=t&
z+PMz)Q1`QVxSPqNRzgC=zx!@Wz7F^{bBB+>H?n7unLEjkH@PKQqXs3Ri5S1${EOKa
zDDK6Ynpe!quqxbrkyNn0hX#%P0#gKIsJR6^Fd~H+rd&7&w;%v>og<T3QN{6izWaZD
z4*V~0?eSSlvSA)z3S)m863`O{6I9}@Ntu;?&SA~bDUia&Es?IZ76^h2Hod~R*UPnt
z%2$!LCLL-p0+vfcjW5GdG>RYbw26HJNkUD;Ic4)m<0@k>z%QF9nglRK31nZ>e{Xwp
zLsmD5i4Q0osaAN01<v2uy^7jXQEd_B=DhrAIeedd(^XTi>!DgqC=?XGnvWIKa1khB
zO(1Aw7gL6sQwmtvBXBNL&jyK0B!DH;K!gnE56d<rNSBBSaYOMV@u!|ZgJXoRlV*wJ
zAfR*y>5oDxK!Gr)6rf=dql7n*pS;5PO$)lJ?4Pht;3*L^Y!TytbHK6KkphwzLSRiQ
zMhah74Z5lrptMI&U2^n@6C(wAC%nY{3HRS|s{sIl+5Cf9BbXmQNdNzF`yY<x|J4Ch
z`PETT8G|Rez}wtQLF#9zG773#+R{qU+OIrwEM`(`zk*nW#;&gCHQo`0_~beY|CZ}_
z|M#v*_5dbiE~c}HiI;$Hf8S8feYY!V3!{?E+RQFb&+F!_Yp?Ck$Lece(3!|;<_e^i
zC7J`GDn!cmBtvH)jb|_8<w%SM(rc<ecy&*j(2zgkDAw!h$jSrZx)WG~ma^zh+5t3~
z3*^fcPUuk4(*QZ>uhF*L1Wl*A`VQOh%V^;IZE3C>8Dh9><iPxFt{Eq1B2M^at6Je%
zI+fq;gPegG74mkr#6O%dI2641%Rp}DPK{94A+jT#vCeqCpBoHh#oQ#bWB&^222=?1
zr)`Das`PKO+1Wp$_)AbuYTf{o=vm8+4O6xGq)on=%}qe3-t<b+>L!<AdeY|Nwk^gG
zzp8HXLZ?Cqcs4#>!&wWoB`B6F75&|v1+MfB3^RFV2am>-^!i`}V`if<FWCHuNkks;
zcQvlZCPy(zjX5caF=L9yc*SMZN|iol6=Hh*WPhoH%ud@*m<S}?yIuYtUq|!P<!D++
zixr6%Rk;O3L9U+#)AsJPHLMtI4Z(A2AyG1vo|wj#KQ-^T^Y%@g7;UqL!<u&2%*jpb
zMO)pKqxAVaYNUm#d(PT+jR^V5^AVb3%wXyg3;|L+>>swr3ZkueGqu`nOD9CJ)EswK
z#Zj8)rmWL8LQ4IY==QBxT~Pu9YMrTqjHWTGAia`+jE;n$@x9-}xL7VQR-G71#I~p~
zQG>pjR;6S-bkCeu!v6A{g>E)mJY+RCn8&#RSSwKH3qj0?99I*-Je4K7C#QGD2$fgN
zMMg696}bk<ChGgmVnaTK#XC4WM{A}DY*=Y{iBo%A%#Fc{@p~gA%9Y<4IIzYCi-A!A
zbp{I3jfjO68r5v+EMv9PT3qzUf8-+r;9|8{`8j@0`2M8|UM-+pW<ZF>xMz84mKyCU
zjWY>d`}Ns-fMjK|s4mRGLzSx=dQtZwYy|FzWwIJJJ{DDsn(NHYKJWvVg~ccs<a^zE
zasmF7iMrPEnQ&U_vkv^8^C}tjY1O^lDS3ZtR48dvB(=um@}q*Q_>F*&KI()Wx-O?w
zDT}Uj52gZv3~Aiq@@K}(&CXyTuZqKEMpTH=XBETvAklvEC+nV3J$(8Xij1Y3T8=lV
z&s8S%!D36P{DTTN(M&56-MFwTbo6MGm$1q{6t3(Z<y5eOH|qz)B0%8_6L(s|y|Q7U
zL-VF13jK!YSj;??WAD&NE{*=&t*}ZR7p(f!O*`vVqLK3G_>Yg`Fqsy8_4eFt6EjUf
zIf7EQ{J2ccBOkKqazeRb?dYc}!v?1XB?lHSS@*el(Q#N1vGNkzCxF73JNq;xc(iAd
zwE0UZSBv>_GYZ9~s{1FKxFu{>#qRx4kS?$O#_NIOfOCMC`+^6ilZ5uvCsjpJ0>Y$P
ze>}CD1K0Gyw1z#rU(cGOnlD~f=ylC5&RUl|*76N@j`vJhvPzm+eh?aKnI><=-E6sf
zxE-n%_L_Na)m91or-Vo~^p1vBu|Me>%i%V~a?d0GJ3R)%#?HH+pW7PsN=Dj^15_~?
zR?9}i->U^-V%N`7sL1iC1tJ&H{%{Nr80=}olwNWmCl$siq-ssGKl3vLIGgw81B<n%
z61O*W1e{bc>fK})v^C_u1+QG?N#OvzD3)QME5i_@Xo^V$rj^QVGc^Ugo`T=zczSzk
zP>vVORd446`(!ue22eM6OzA`1xSPh3Mcy7?dIUPtB#(UB5QexZZadG~;NbX4WCaxm
z?^5X$=K}VCiXub6vADS2KX18APv1%05OLV{R$=$xNz?~_vnogvo7zpwI~%_GS>;Bn
zMY(*Zkil6O4mp>NiXHi?#ja_;@7V03<tCneoB)K~A35TPBC7lmRHm#EdeNss+4&I(
z2Uk1cicE_K)EGPWWZ#z0MgPyKEzrLwQlET?gObeM!Y*zyPX8akAA_IfhVSb&``ah`
zUo&s@wuhlq{Zeu`)#(5_aW}NUT?-i`=6oZ#Es32IdX-?<D8am-zcE|Q?#$Y)<Nt*>
ze>rjO!|x-PG;_Rw9-MEoMSKCn>NX91w-9_XXOfx=nMMjObYh!hu1T(Xsx_ii;F)ZT
z+LuVGNmNeGt*%b%Kc;#>8&eTtQ^Kygt3LXI8T_RG2LJB~3zQIbZ1d-jAAdl8{2=~!
z2}@b&zm-}F|7m$2&u(vEr7>3>$eJLSEAvb342trv<PWIP9ztn^4c4Y~8}W;gRizun
z7ci~eU#S1#dM^#h*rb>nw&a<@2H@hdbusbzeEkCH;l(?l_?@Q1Y@c9vG?x6;wGUA|
z2b0m;Tdy>mi<l%kP--_sgu`JQOzu|<c}UKba7LMH)(j7&L4OAVBBCUnAV)^i$^@%3
zP2Nwy`@7$szoa#md?<t{DYVnh;!JG{a^1!TQCrX$r9{9%+|8_==wV;%Eebt|3NmqC
z@}~2wX~Q@1Ntvc!ez^y(;-rLev=9fgfBc4msWyy7Ffo;heAgaNS%%YOlV1p!S(A!v
zvd3wIq;e^FzST#IE8Vv>2zv}RnTRuuHX9(!RvWnvsy&q@TXY7ZKl#OHeQpir3i+5%
z4d4A-hmVA%>XUVRO|P*qaS76UM!nnVNm_I|;M_o0p{Rn|djh;)fzcT;qO7=Y<&*eT
z3$n#TQrv@Oi!PZ-8xo5ld1+hXC0-4ebhu!?gCz-o(QCjc-?%Cq+^013t6k;ouUmhG
zD!)fPH(mMoD`9<%{4nq_@pF*b98QBuQcWP>*(jWmP;EMHht5SYkMnAmw|L8NT=3Sl
z&I4ORHe_<jMZ@s;U&`=R%Fw<_<R3pYNq+nw`uFHi{*U>8x!<Wnc_l11erHdR05Eyg
z`#6~i%7bCW3H*Kt%#eUW8Uc{`#TaEwc;g7`2U5ieG&IAt?R3kOXPOr1nwG$7$!e9X
z7w4AOI&DuqwJ**+y&s&tuOF@7ayq_S0jVUvOS;QmyWTesHypo?eW!R_KaR4y9+>_(
zxK9M(2<S85(Mp1iy(#3{m2}V;J%<FitVT8AzFqn&GC2F@@X4V;4YZA=aXqj1CiHYR
z*0wbndT!bX2=t%S@FhYHw=KcYl}8T8mGaXx0)C&?Z;qhTAShqKsDP?~sVIR9W)gZ{
zw%y%@P5F3c<3cA@ubDy!J&iS5g822cB_>k03MCLJJPFtwSwjv8hPtsUp)FLYmC*nO
zBFPq;mXw<potc@JZSbolHI!vWWnCUbBAxwT;gai;;_vgg<^YvWhUK`YjmZ9_$yzB{
z#!1UdR?QGCl-TKev;6F2DP8%s{kqFbD%%Z%+q<@wHkDfn$3s@XusPM%*W7B}*Rp2N
z+KnYER2e+|TXChG+c#3iUuUr`HMsUQpB}W<kt(h*PY~JjXdC@mj?K{{$S;^I5@5;U
zbZA$}V%O2H&Llw<cHJVNr*Ej87UA+emDv<p$D#O7i}<N_WCxM`=+Z?q_+qDA4P!kB
zE@3k(e>8yYmCbqi4kra4VbPhDT0Snnub-u@aayFOvo717t|)DLoI;5{B_^ogo+1p7
zCBo7ADUHbtB)|;~dzac3(CE9aLX0yBH4J$xGay9;DPluO&DLf9GPUM5^4#Gs4Ptts
zxTOMQA@oYXpwZ2%1O<(z?Dbjf`SPY(zV*e%WZD@<>PehNv3~!sk0{cA&_i7+-J$B8
z$b;F}Tb=UK3W}t&BFHdd#-U%wiCRIc63t?ozk-`Vy$zHoYmx&YN=84qY&0y;8x<y^
zKN+KF*^1<>+C&O<1t+4i2@k3)Atx(!^B~I9cG|srgzj;HkyOg1gxgKoTtL5UK(_Xq
z`df*JiU3Z;1rl20W6B8=PKOn1QI|954-wz6XrWJa*RW`!j|IJvqgoLF!3C?x<#F*7
zw|%P5>7cbXgvw}Gkj%^JWfRS$AV|x0SDRvC2@VY{e<o5USmgbYT4D)I!lsOFwLW*E
zdHGlX@?EP2xZzHyO5>EPxnr>M5WH9*smJqkUdithEv#lD=&#<RE{Zqa13}S6D2xSN
z)Jc$s_Da3!bX_Lh28G(gaeV?rCxvr>`(kUSq4`LF502CBpPjK=OW=e2eSB)9i`jbL
z4;!NDHjq&pxax4b?yZ35old$9q7+t64cYv*i@>1gU6sA<>S3XK-rkD5x7v*fDb4F%
zLa&~n^&worQ(PLa-}prP&x6RbKPuJP{E#luvmlU#|6qqe4Uzfxs+MtOFb|C2@Pgq&
zabaCIpA#dtQ~%a?kZrSPd)}OFD)mup<-FB_dEWI2c1+I1f@-ARlE0`@ec&_L72qD=
z=^t$~v$fbEa=WtM*B7W-T@w1jt+i7^o^CM8*=GH+4!69rE_L2#JmLdXLf|*wKxHN+
zv-U^ILOYzDZN8vve|coyVZvk&B4-Hx67Hvr=fVtikDZWD!8fnFjPWHvLxF_IKpZ=&
z5Yz7D{q)i~k_GeUiS*l&3bqTGyv1*b)TK+Kq4UNnPb6pNPiuG-fpP6S?jxAalXqHc
zL%s!RE0)1*y2&Fl4~nng>LUzD#3nCo0;WF11tmLgOg^M-pvpK~9;?!Lp;ni*x>Qgv
zT31vr`z_OY!4)%0K0A{EY)GZg$(;-lzQ+34Zlq<dFURY4#-MOGW*K`oJpp>tc>6N(
zo&fS1iw9ho?ZIdE)vj9l-{M)o1VsONAr)JgP5ls2i`0>pX?4RUvpR&AOQkT2m?d9g
zwUk?BN`MG+h7^-*;*~|EX%LG-qT7w@izm8|urmFgD$I8dR35{MHH4=H2qNC7_9Rp{
z?&@+JYMFwM!EW&jrci{vVmjKa1^Irg4{ZzDeMOqw*9l4Am*YoYkS_`iM(SGn-{%l_
zoTNy#MiOs5%fDaodgCG^?4l=J5$oCe$!9mdh*qDHMlvWnbRQNt&FApompVL@YDOZW
zxy0$1_ERyX%|+yxNx{d~w}|nLt_%Idomd3EH8+~l;9)J8TN!_W^Ws9$LEkkuKxrct
z`cs3U(sXgq(*oo^U(FZ%4|+#bMY_%L-mqGfic9#JX||`;h!3c!>7fUryl2*_mK$H>
zjOkQLv?&WwhbtIM!hsz#0Oc^QInL^HACsLhXYp*u!=Mn(uNIPIueW=0!&YDh#i7tf
z(gF2vMWH6qsG_hm{<$hGk>AE~LHKzR#o8vLM*m<dt0+K`_9H6bBys$~u`S5<w0J}c
z<~!KKda}tV$_*@@tL-9XQln>Tps?Od-7^xnMS8EL;MS|o`^7C&ZaC_tU&@>6c28h4
zj^<GxzGg`_rPx_F6DLxa(q0<RlHa&2#eUyF(|7<~nOgi%M{UgHrAd^-;jLjLwKZaP
z9c3hkLgNjQT<Gv--o~Nk@(?%nMB!d6yq0%rmBOlkkQ0mNM?S~&#>i1OikG~mh3Ko2
zDfQdJRJsUI+!;KZk1E*@s^7Fls<ajVDbr?DskbGzs{@FsD@P9P;dj)f%G|%?Um&(j
zU^+JrkgUSeEiAZ?vPvk2Qmdhl&0(_ME!o5{5tT}FG|{A+;EU32EpRbv%ypvP#4Ucn
zO4K1vr(MkpNuVD37~31^N2%E)U3X*bM3H0%XxE7cFc<9$R_+|NRx~GASr)9up|vLQ
zKp^d+<l0lZo+V!{Fm^{ZQUauhWm>05+d&7D*Xj$o@aoSE-}h28T`fm<_NE@?xvZcs
z!;?XfXY5da_E4>kkH>0Nt42e)@i>4fB-+-H<jk^AqE2&4<<psoi<xI{_X1d2Sg;_^
zF1#)DlKXloX5I}<31pn;Y+DNEAAvzAJfleDV_fa+^k^ni^Pq=k%NpAUW=xZbHSsQa
z**PAZ>!QcUu2&;;cENB|ubG<liw*VZW9F)rS=nD*C7N%K=;%*x%_`LoBLc0Xq#&4W
zI5aS1;2w(hMSN*)^&KHa)GMoR=X;4KD}@JNp61UjS4P#i2OL;ZE0jr{K0dXOv6_ie
zI*WTTq|K*r^Lsvvu~qD^^U`BmMEFLtWcU)rxuIjY+FmPh>xb}Q1VyCB6%k3|>9I&M
za0&Lq6BF$;t(sSaX}K>)b~HWjDp?+qLaVV-zbS#yUweBDC8%0vnEkw?!p$|i(-_TL
zD5IlYkc+o3``)2BovRygl~Q|D%0E9Uq8Y81MSqPJOrqE)n9honBZNsE|D-v%J=ZId
z?bkXWiq@s`IqaF_+e%!`D(3^<T+ZSXPhi+i9Zh=HyUR{{O*33`q;QB%(fCYb-d`T#
zSC5HabufP3zjo?PJPUr&PEBYU983+)G48A0L_cdakt;46ys+10=z2!7^wh=MUEm3h
z-m4K#=YNo>T+)@`^sOPQ@%^=gX1!(nJ2`E*?kK7iu*%;|S&(~A(EwRb>4Uf}g0gL9
z;+I}?A!|zt11r{JIJi-)ro&&)TeTR{-J&-Pv!bk3^A6TvIjrODgn|wljOg`q*C2a}
zH#BRr3wcGwE~uX)utbJI8|)qi&BWuWt~l9+Bx0iAo>b$I;)}=yF5eb|?LFkyr+zx5
zp7_!bxCX3T7jOPSYKQdY)yIRGJZ}$k5)))ayW6cgr-MHxAI8$)0HTruPF)*xX?<ZW
z0_Jl6X;aiiS26T19}479j7?1(`q_-_Z*~r^5CXbfE)QO*<3rhnAU_<X*dnV7<_fo$
z1-{LI$NsDO^yNfsSiU9PTgYvow)cT=?5hZAp3l8t-*D<-g)vH*qjQQee^?ZVzdWmD
zdzCUfJZZLzC^a`N;N_9rcfi1Knah}SOJ_yWT}|d%O$b#61sBb|fS52@LPW8+BB6HH
zTJ*CWQV_y?HqzvRT+aJuAFW|mXvMF;1>P001!7bx$ifgS5LRj44x86ht<zum;`o+C
zpezqwS1&ujfo+GfDI>v+Bg=#uecEnO;UG((6eeWKAnV2%{Jw755xOJ%mjFFq_<m~5
z3;SScG*y^v?gQvpcT^s-T5bET@_d#(Qe8TYPgHDQ6e0Ju=Oxs^tBz-o?y&R#J-{Fd
zIp9#e0*&#<AM6s{KLYck>H>M_M7dURrSSu+wpL9MoT$Ml3}{k*`><6`y|tr3=vznN
z9B=soqRaUxC2czSpctI~RJy&%;J1gwDSM7D;J0A_=D*8W4J^)6j3`B~%z#PqC!bHj
z;v&?`{rc<}d_6A&2EUB~vzAm?AB0V>a|}G)_`_Qkw|;h@a*@nEGo?3m`7w|}JARUC
zn=-+1zO#5|J~^0NeECF^_pdGf;6-d#gpKF$IqNn_Lw|xV*KTWo`mqe>JKfOaX5fWS
z{<8lAuX?A-?z?F9>VyiP9`&%<$seVf*M3AWV~!vTQuMv5NibiYzulX1ZYayfde*7G
zmr5NQykQUL3d+H6_kUe8Y*~5yYE_=vL#pBqQ(r|CJ>$D(5}LL@mRMlol*tEMjz=s8
zfU`1A{weJnZHSp}hQK$xdj;*~6&2zW7vd8M;GJBQjk(Uw2k=UAWSe^NNQ)0+f=x3L
zWfe{!A1sH1#~4WDYpe4Mrc&J59d++5izXv|3<=Kyf`3F{WM>#gxwbL$!k=cd%GA3I
zoHk3>y;(0c>h5!H<|<(UtujSWu(JQuQ|>RNuKK}3P8A))#uncwaZi$zBLe&dO7*|W
zalA7zydrh09k(cn?%}4q0^YpC<v+ofz0y5=eIw>2>sgabGO~nPyGJ=cwe7O@gQFUh
ziA4n>=O(_}E5zAuCBddJf#BgAETK=&$AG(G&>eE6r(w{?VyBhqmhp6>4f-JpHuCZf
zoPHrj5y7>eWjLNwC*N{ovs@;k(fyb_Nrn3^w=a%66woWX<PhJT_OFx&Z&Bm7_bBfy
z+1>gW-%06TQLRVM!dD0rY`!@8D|J>rnL*#oVYCO1S|wVeN8wTf`5ZuW6{P4eN$}t|
zo{1x0mN*DoT#>4K%3;N0<Fxt&7x-kxb9YjR@Bx9VL#Bc|H^Z9<`Ff^sUD7Y3g$Kl2
zNB@Yl368B+H3}yGEXP0RcbIG2MQF=q=P#VR+74Jl;FchxD=DE4L~aTh?I9%9v$gUV
zeTFAmhYK^4lNlMV^v|3SgUX4T7n3ZKwAO!z(>*sL)Rf%^x3~ccMZ9-Mv*OBh)#DX(
zG*4~8Mq@#Hn<jM2vgHn^INIHTaFq!U_pt`mj$+VZi%3@{unsmfcyXBdX$csZt!=tn
z9mFH5JT1xc(+w~yMf_!)WIt68-R~o8mT8Nt7WnFY+hFBBhtHJs-?Z97xD4n08`4g3
zH{0^%<EYBxl<bqze4!UJlDTLc7Yk-Fsie^4Qqt{tMT2=^B0#lyC?rSh$fu{=Ne0a;
zjKM39-}SwMIW8M;;+78{W4VdKQ&0&3J8`KsM!ZFJkeReF;`LxOU}&*aG<$)@IF7zS
z2?mV`hLsh4i*;CwUbaaRR>{sc;~ov;%8;X?7s=&_he2Jk7PmU9f$N3v&-WVNHCDrn
ztHIM^AXy129RxldG}dm~E_>+?xLxF)H^k<{vWMUul!PA&Rv$V~yR@f$>QLcAL~-<t
zsYLdvl$}gKg*v6Tg23gWMF)P?J9uS!HgRg(5Kni$26v(JU2A%}W``x~kGCI{-IDP4
zY0k|X)Cl9=cTn#9Sqaf2^>;bk^!SPBhkrYWqQ}nf7&%Dsli3bZpsI^8USZ>;+@uqe
z|Aq&vf>n!%43LM6a1#wyG~)~$6UNJCnjP2f0F+hm+d}p5zB@Bhl5QqB!9;|WG`k0?
z3nnH!!^u-j61mmGrbnUYHKgGlm>ouSXc7~xS`Qhj_S`t$vknj+K<0-p$WR|b#{=IO
zCu*i{xktpw@0`%4`G6`1CJOEB!08Hrnwdo>Rm*Us$v0r$t*mpf!VxWeKGW84NWDU=
zdHUqLp8Wx>qQ1mw)S}688u8aM=w3txH_FL$zzAUgGb7aEJl4K+)1%AFgSdJ>O?{QV
zTA9fR%WOZkj07APE1bmUP=`cuK2x)uS`(Ac<LRCIJ<fqo{Pej*x9LAe{Wp`NJ4!NB
zW`yx5s%PXB-NfqTW<qm(RCbE%qeE$-@Z`*~kJMMH`Tcv32%4h)GVv~fQ;ejkGVv{O
z55m2c!+VVYgY!QsgOMGGms5B%%lAegnfpofdTHE2g6>$!<A90H>AA~cbx7_I2@b!=
z4k?>BdIRig$4I8YOr{Bb4@63i(DcJ`k{QVsA)TSlJ7~Pv>K*%6D%|ff!b2WzY$&DR
z1RHRb=D^ZXW^S_g$yD``o^$<i0gcW6n^2?;k(PJ?6w=kO8v$@2$Eaf1Gh>bz`B<lb
zjS^>UhmKIO*HXh_g{|-85+RvC=&`#U{gGtcJ=w0klmS6fJ%#U3h7iXwq)=Cz_7dc`
zJQD^lM)PzK&^McN`?A7&zR+0QuU)_G_cll*`C-x~=(G1Y#NnsVonO%*X~5m?;b4G6
zvCb4TA0EE%qKOyh0oTS(dkXb7@y7Nr>KzEkVp)TosCO%eM)+ZulzXk(RWbyHF<lV=
zfqSHu8bcYu9uGnCwdATt>K5|h8M=2m6(29?`TJko*}&#4W%NOR{IG%e@q^<3@Uu_M
z*vjtzGcXKFu++o?q6~irh@vb@(y{2ou}aUQ%m$W;)i8?kM~sWK{uRA18ovTXLw8X}
zL)Cp0;S=Z<(0#OCZy=Ms=l=ZhN%r}>GeiBad71gHeo89f_?ZuIJn`{#OyB)01=tIN
z&~Lq10ftMu;=rt(j$rX2r|MqQqK&c-XQQ_9l$WgEP=-S#AXJ(hpjk+ziVJQ_n?_OK
zmcA?TR@u0-;?emLlRK?)mZr{C--NRXd9=w<_e5VFth1bn8jSb-054>_vCx7pWLxl6
zy8!`3j3l~Cd{%eP@?%fpCNEo`q;mPyq+Dh1sY!vUMUGi{a7ErqJ7QBD--BT;`aELy
zbT$ihRT?PKXh-O@0Nsr2+4vCeLXkafIm*)NfD>&F0b}p&==**Ws-8)Wx{&z^x?P(D
zZ`el1HV(9uG4v(I9xa@Flv;r`z4Kh$6swwTdNy=$V^p$C84MWgQ}L+uHdtF5Rk3GO
zU8QbD8XYqzsf|gKWMK*|PD&afjbA*{nzd1~yq}b7%<#tBMo?y=ZN-{AxD=i;6Tz==
ztglTMx4})Mw$PZo!r(?9Et1VEi<@h7DRoie*oeRzzf{_yy2L)ya0XPNA*7FX_CJXe
zwKXUvBu0X8q`^*Ot2hzHs;&GsWh2~0dh<%@lcu-nh~JX=Me6l8nnK$6YG4iCR>A*c
ze%gT7D?+xT#k<OmLcXcg(q=8KH)ZZ%HzttlB|$%BS$XWTX_XM5^~@JOI*-06RjoKH
zekSwwU9M2kg!1@DKf(@u#w(?lhu#G0SvOY!4qXJ;=M7p~LaEknE$<HeI8Hq_rP~nA
zJ_H}zaYr+}!K}4AncRAh6wYGP1cwqM@^U4_#JtkUab?urSHDAf4;NE&$X{|}vlvBU
zt#SrA0kmb78|xf5?cGczQrT3GTEZ@Wpi{WrrocaL&(|*9A8$PAgAwoX4v`E9fZAr_
zb2)4xJ`&1~_jS?jLa~Zz*3#&ZUsC#hbV!9f%dwM?7To-u8seZvl&v3N_~Io8FPfJ%
z!JuMq*o-i6w(Y9cYqCnLKEDFo$n<WYGf?Sz*qwad&m`OYc=Xys&Hd)JfG`_i5X;A`
z3!mPx6!WBK{P>mZYqwd|CYj2xo5lr#6`93h0!3dD@0a{SU}t<`8UgW(PyYiYK3QiM
z4Q|_^Dkpi3(8BuxcL-Eet7w66hmP0r)JMwo6xtm+dmQj932|pt71C<!{R@`!;>tG8
zKZ9rk4jto!-Pteind1m@6*%K=!P77o0CpC-BcygQW^AT110FO33uSDw4gI>&`F=W6
zq#di7S!hZWKtd#AkrVzT$M>Q05O9AY;sDnT@i~b3mK%=O!-VHNt2=8G^nGDjA$O&s
z$TPmZ>!HW|MobqilR@-$$W|<N;WN3iaPrdZ`-#UMMAP7@b;(!;v%{#|PgO`JalJ!T
zI<(0?^mkphS|hCwU4CnTtVxVzJ@gd;*1fi`YEEiuQ}WC9Uz!1tLWPcj{HHXC^8bpa
znEsQeB9(j<u~bobWToVU^NZ3_8bVpHe1(NXNLC8We=bA*x)Wm9(H*~{rlGs2qapA~
z@PS@8$0pA_g*XYZ@Z1*MXSbi5xajC~-S$4t^1SkXU*5j{2HgQJL=py*hsi&$)>T`V
zr=2~QcH~oTB=e2I_-3DzHGkN^0;HA>qAunSMF(Bgs_X|%?3Vi#uKqk@6d|j&bF9x{
zB__i*>zcz&`b_R<sM9jQ0^t%pcluJ$Z6YG{G8j89(I#i?iIl1!9Q|y#R^r1R2hw#2
z(kIJqH`N|#u;gW%^EAqw7Q77?SjRaE<>K6WH%^6_X_v~JTrW+``EbWbB07y`Aj#?n
z*X$|gFVqXgXj*Vf*djkpU9K2v*SXke9zPhmGfUB^ttoXj;hCG^SrO92Pb*6$Qr$Y1
z)+RJ3H8!`Q7pPA0^9%V|R-+dCMk`2-A6#Ar@z~OaM_=@t6_k-A+H&rtC^Fd*sQ<}W
zPh*cZjq%XggB}p-^;&a@n;KMQ2V9kIwewubeOy6aQd@kHLHh#THo?s#=9a!Fu&x~~
zLF;%@yH(ip%L!MOr-SGz`WU5lTyypA;SE~qJfUuO2#z)zrfMx)!mYU)!9{W9r?k4l
zHn(~`;Sg>k487RUjk_Z!#DEP=j?e)WTZ`??z@?p1m(Gbw;?@esS!1EtM}I5xK722n
zrgAJs4GFIyg3w$!cMTO8%&aP}j0bQ$Jnr5&>~PrdY^peLMtWHKEQ3@s#lx^gfVrp;
zTfu9^0IZH8!(o}?PsU}4A*1d<!^x_r#z#He>CF{AwJ(%m-kU!~2;0A<D@hln)9Gd=
zq%9JJLq2t^2zMaKImtPn?9C=HLnuK97d?9I!rR(3><mLp_Nmy5&O3<C^~>j~?t^JF
zDK{Ee@&!m!Wvo?6XB$oxlA6~z%}-8M=}e;aPe}TDM%1J}_?SxBv+Bhw3asFd2IB#1
zNqx`EyBnRn_|srST}52GdAcZvNaz7H=&KLoInD_k4f`MnOIyA5te2l~$d;Df279hj
zZFG#1SJMq#f%N8?LkyLM4N-j{^hXR))hFT2(SLw$7e;BWb<htanJBBnpa=DmG$hOP
zyglwGa2v%v91td5_?&+bm!J{R_=VI+E&pCLBFuElHRRO0fq93T^68soy4e<e^(fiz
z<2KPNT=;9xq>4kZ2^R}r0ZD#lk`|DzsSnW{dPu1sQTG30#o_&lBsK6cY>K!I|H3^W
z88S_?T7847KNbIswH^NmA~I!gg3o#25YWmf673cO`dy>weW3gA<%JOcMF`GL^#48x
z{(lAiZ^eg5R=K><|HPF2Gw}aMtbn<ZkiM0bfxe;TfAR{~qwO*;I5;>lxQq)pnJD<^
z!H3r89MWgPLfyoHlK1cg%JD!(M!~>=l?ynUD7at6K%MYs#z2RY_jf_X!U2*fc<%>y
z4%KqqLI=_@Y>u!6G;u&ma4~|Qv7NZQiB4Oi2?jBUs-2IyyhE9$i44^Y1Ihd&|JW)9
zCI)5-CjTEqGfZj_?7xFO@Fb}i?Em6oT^-L}&-?SokE4GE!T<JKY;7E!^lhB}s~3iI
z%%ns=KT6QF^;>>p<F`dPw(D8nA59U8Q<SjWL6XSvxS{|Vab&aju4L-oAcURxmwWg<
z66L>t(*gIJjtE*)<Hz%WKaNh&BfmLqYUJ|eGH)C0TGvnkv^T1``yu7O>H^O;)Va!z
zUtG`3IFD__%ox+*Dnom1h9(-wiWXUDmWXHm$bE^gN1@w;$?1H952X!B0a&*oC$~+y
zxn|VqpSGYPBiW3WE=O9j82T|VYaazhbfI+vRY4D52FQ#W^@hUbW+-y~sdDpRvJvtJ
z6X<D8&+G-Y5wwQuGYkK|dZxf#4~E&5eCzgu<(h%d&K-Iq0xit%X{sQAF|H#D^=8B&
z9R>acuuUYk#Vr)><b$N6hbY%$_=C@qm7}3)3^82Z!k>id<`R?SLSVF|g_FOYYUp+Q
z1nL&Qe*O2o2N4b%A^Y_YD8YXG!1*70|KCLwg^KGo^ZdVg(#h=8+U(788yfr^rVC5u
zx8;5-paz06Rm#nGJeV6+`)itNXGnwjg3%Z5`62A&|E_m2TObkE`ltbLZE+k=TwFZk
z>vsQK=|u*i3`S+USOqcm+?#L>@?P;k<N}|A9W?YAy8JU<)w#`qR%I~4dtX?c1(-;r
zwhndzJP6}Crm)2dB=tIYQ9glpM*Y?3K!yw^C3kY4If|`*?$^`kynlx+pK^Kv7pkIO
z$i4H5&ed^gdB~f2wqi?=5Hn_L{LH~ZH6^*_7wNiSy=w_J29bm%g{xxUMV^>q4+;H6
z1Kuy4gR$f@E@&K|rd@ex?H*?@aZvqGrN7xj8ys2g!EuOuj7{gRDon;IXP`zvSZ$<h
zf2x3;J#{ug!)#!zwzQB=cD1K7cg>0b9{Bb)ZISU;iZbeLTvqnkjUF$MvKv6fjmT6Q
zesKB3Cy~5+^4-SGsvNj}ATYCgC7wUGB%&&%ByTtZ-23Ezh%dMPG+YI&megL^4cGAQ
zQ-pFrLc~(*yuJC+d|}O7PXbki>EYib<AL;%DgiF6>Y}WQpZ*)B4hkdlX^{aOG&2@t
z5F>PPnahfNv0i?A#kB`}i3jH`h~(8fM+~ckq#E-2=fBDqu_~LV{~ylYF-o&#+ZIjR
zwr$(CZQHhO8<jRIZ5x%gZC9cauhzM1z5CX>`<}D+`!QSlzSicPEn<w`$LKL4VuqtR
zP6<kp4H>y3KKwowl!pXfG;eGU(V@5pj|d-84~wRChz`HFr;2VK%_$Ic`S9)1;R|V(
zE2KT_UUO?G*SNuIoa1Hw|2?L`{)sO`8%qa6PkO`uCj7zw^H#(EPy7SwUXlRYs^+c#
zja%T~xJCOvZ#Mi(PR%MW2w?bbkl9cM0+AXC7JoA;Sb~yJ^;4lHP>U|-;2NV$NsuHb
zVU<+9en<9t+#d$kgPMTZU-}aMf^lW9=}W-Nk<nwj@!t9Mb7T5=^rj9RV5A;rfMl3u
z7&i)MST{;DiZhC57&s~%1vE-DN*qNRMScK*0V6CT+Azc+Q<x~m>@gg1#1k%^115AX
z$PkX$u<2d^#1Rgd)?yG8lHD<M5EhbI!b!q;Ok!-mBV+?3oncn|IU%XOZ;!85$|FV*
zQl3!|K?ddovM_Q_NYb;W7<PDZ{(IOyhqB&fdpJGhp~z>kiDgYOnr`Wt)C*F(&zL;>
z%*{{8GVw;g=#HL(&`pUk7$n#iA7IK0#ti|lpoS&bV8t_YZPO?I<NC|>jtb8a*@cdZ
zPE8=gWi55cw-cJB$m}$1cdDaC(@sZOR#k2K5!4N}7BGmcbk}K>&8X?cxh1jYhygZH
zO?~qs)}Wt-&6#R2-PJZFsD7`MOY*ialw0zt8o=jOQAQjfgtD&PABIePO>C2C6<Kup
z$Uv3coZA3`hl_4VFnG+Kg9@y}V{2Nb$wxE2w3Vjntun`+9g06KU)aCt8UMi7ET=6Z
zFPEh}kEE)#TbzgL7?jzFTf>?&s<gi^J)km6Bz4tjNu%RT^K62#sli<urU<&^0s8?m
z5!VSY5RW&geOVLC3+Ww2+?l`+jK>;$=f!bS0*E{=3<CAbLU&Dc*2t;EApzD5MDz4l
zz;-cBjBHdzMq79s{VDYBaEk!n=WFIVXXE7J6^mN#Mh#ij>2-{X<1w#D<KPr==%TyC
z&5w@w<5aoE=vw;<;gHHx9h3EKn@W3lbMjCFu@q6YCUUYdBPFydj`VfmUwB3vL{+cU
zWH{*EBgdb0!vOY)n4<iidz5bAtMTyufPcrh;^0hN2nYbc4aC31xY1uLv$fT+RZ%{{
zfWVUgCmbkOwT!B4$4VN?RiO(hOVA(-pwgtfWs`(4GNy`|lhMvgR4=ZE(N~;keIEO}
zUIOR=O=ySJKM?s|*{grSfB+@axtf~JX4>C;fByWr<~?)c|Md<X0O+$6@|^XJnTFvI
z0}YcUj5N#?EWBXMA$t#Q5NeQWP&e!ulh5EKVUIY>8|L><vzL%P<uLm9^3iC&7l-k9
zFqmI+A%gr_j+znFLOM^x0nvU<yPSl2XheJBRef4_NeIS%P0+UBwXbuOYFk2&5OdKd
zp&o<)m_>k1d#L~@FrYs|5efBRcR9jLx`HJMx04b_tcAJ=hq8sHpzm5@V2({p9F@UF
zt7E!6SZ_OEkPn!kG7=o2S4=fB(hP}74*-*x_>lLVWyW8Skde-XKa7#Mgg(YepIWe1
zREg2?=TtZFQhs<s<jT<B#T*2d;Yc$(fw-&h78ae|F@|eb8fyjHMPS$Fq&pBT`hU0j
zK8)_-gq5#H>(F=!6}uGU!FD)a%e7ptI3<6#wb&Jg!nzlVpDNP4gQ$!SHO(^i<QN}c
za9e-j+fsV`1&VP$kH;tF17D|EP^%S|vf%*xuFu4M$$@sC*ZllKkIu?FSyL3La(VVb
zT=0d|GVd8HoK?U%h~z_TmL?sc$Jma`B13M04h_2C6f{EwZ}l29^RVd<1YL?c<ru83
zHNr<<;3+kUS*hG)QB|yTQ?W+FsR|8h_d`fZnj?+z!BKSu>fB1FL?1T7y8x8F*t4Ld
zNP$aEGG|Id$Cbi*&`l*6yxlZYjU@vyB{&7QS5?I|`<P-hS7f9BT`?~tl^QCl*n%ij
zn*cH<jgnO!vr%+O?hZ9v$jWV?1@x|IrcTQ&&&|SHnWErIBGK{~K4C5uhCYHV#o-MA
zx9E7P!izMRinwG#LgZTj%9q9Sk13u)d6Jwvwn5h=BC$ic&dKjVT&b4^DoB<a4T~|(
z3{0qComP`d>d9HMg51{A=^<{j&-(~&vd!qaGIxH1R3bVI6_}Geo%Y*WH4X5;a#}dt
zV}ZbWnUC?j!!%xDp1ZJM7j}~u6|YKDqv_X58+I66oZ{NG8Fju<SAe=&fD~QS0w%R#
zOY}(FUp=OPU~TuE<pZEg8N12z%53=T$8C!J+5{6qPQ)G4j*ylRYhfTTgyn7W5EG)p
z+87$A<<Sn$oFD8hy!h2~{Oq%qB1X*XoXC`?;x)<ffQwc9bV`ONpSZDY5|b8RQrKHy
z3oGRUZmaE)MP_eM7?NfSa*SdLEdQ?MKeuv3jNWkLNHu>%eZXVO?N~v$yip$tjq(vF
zPsRJr+>#xjzv(F=L~;x6SXXo+ros6WSnHXBRGK0*b%yC}8Dv>fBctAaK*}BTf{aFJ
zwYz>^x!(&S8mR?GZJk<Uct=L#%%Q<KQI{zZnCXC&g^KoI50}NhFh6E+k12>-!D5Y_
z*ut*JRjy*APq~;wb!3fc268*mwen!)B~9v@9Es{9vRZrZj5i4P5d|c(P$BTm&xN|)
z+5`9n{O@tg#_yY#`)@6u1@tfDmhu0JTegYP@&kXU_%Y*RHBYJ+KjKi)B5jDsxi$h4
zIu^1H?D~WxB?wxQcXIR&z@kXUt9YhuONF^4$(wHH8FqGeF8q9YdjL6w-POI-qtyeB
z!!aiu$3qklM0Erqp|Ij0hBOoh5z~l@)xJg;OVnQy6&wO$p=4D&Y8XJAHT%QZVJ5YO
zs@g^bF4C*A-Rlk6qG1FTCZ$fw%bBD&W#wCp#lB9I`ag3no18VRF<o2BUrEF6VH~8+
zFkz!fKD<_0&DbH*Wj0(US<W?2whbb5GG(>fKJb=g7>3SsTj*%MQ-^hYQ+<{$)wg22
zE#1@0wzWcL&Q%^ww6#uioV#ekEd08ju77;qnXC93^kep2X?k?tn=qsmvJY7*%YrxQ
zvDw9Np`Mz9`Y{P^DPAYxnC#{_5#vO`KQe&4E4iVOzj_feDLkisyD`8mL@Y9*fbZYe
z44Lus4Hz2a4iPQC;9Ur_kt8KYfTtgtc#7Yn56#zE1GER=@2)xp@O?1<?W+8L?W#W)
z%-SaXc9jA`=qxR5sFo)LRL@RGxMWczHAEy~2a{o-<K8t;Xi8J)51|2nrvhviIv8vJ
z6h|nL#H8$*M?dFdlWW`F9)3PR9YSJb`H`L&U`%nQIMW;ogoauHp&@8SP{DG&h)M}#
z;bB4~Dmg@T$Kz0E63nEvP2X_%b~C5Wnx)Mi!`5h+K%471YPv-#GWQ&#>&U(J_z%43
zme!wrL<=c(bt&}nxXjV1R^3JHoBm+VLkfC?It0GmrbzR6V!Xc1g7qe=VcKR0)LW%9
z2(_5D*`2|B-OMux)-JTM*<$hWEOJ$6;$ir%5STNu2Oegw%Dorvv|*?7mY76eHz6Hq
z;>G<oc5@7bt=yfGV4h>sfqJ%kNG<>nO+b(E5luxmQjXbw_@^<&KlmO>W{ytj!O3g8
zSWkukZA8Oc{N+f!nN^*X5;{dV6tb96$Uh3?E>kFj5-DL!%rB41?G&*d^8FvKaVI~H
ze*f(j3$TCbnm@;6sVN&u3koP<Unyx@rGN!cQ76Dwmi<I|mZFG?iNWAh8h0rz4aFfT
zlEK6WF93W2=r2IqL^A=Yn4{EmId`dx&Fh5)XQ8FZ{J*}`erj2pm%V;IOsWI;YTO>=
z;Xi*cd{98}AY>qApm|UvAbF555Z`L-M)oNOngd}5RtJ#X3K5Vepl3i61bk=mi5Ryq
zL8S3Z19&qT<AG{qX<+$&*@uZ)!!hd=Njj61fVgjg?Pc0j#0~*krui1M8VODFA$U2!
znHCK-!Z79}+)omw5vD1oL54!&sN3(nsq$?<D~P3*Dr49blnV?611Dn?6%ux@77?;@
zK-bvwsRWBzg&DmwdBz%(TQ8d2R+`;8WTW-Aum-yUQTw|}r@`>#c<IDj#0gg^9HvzR
zhWRF%8@dsnLO6FsNjC$;aFR5%R+nAf29mn=k=^<IdXVa;K4{UNe|vYM6Xal|NiX-L
ze+^e=G0&&S$Pd{qyo4Va<#1iXq19vs!wr<iUWwk9)q;@?GKPGmSZ_fcD9UGLqu{44
zeZ_gqs@`*jH1jaI@~0}6<V!Yb_sdg?TNGDfnCz9w(#}OW*wY<}*J93gCX0nE?l&t_
zHjY}Ylr<Tu(a7u6+28bh<1MAG@@#}t-9-mxdgI-GG%k|*^&kmd^M{2TUv&y-n_HO0
zU3gDB-7N>DMju6kKFF83V(^-@TU4d#UTsOoPA!Oamp;JCEj*Wo_E<F`eFFV>qT__W
z{sxFEVuy%Ho<w$2aG_#?>|_Evx;;o<^JCY;iiM=6z!?)aF~J;GJbkV)utmiLm%J#y
z!Jib#Y8A@6b>IpIPJO@>6ko?aqtc<<vGSzoVwcJ--61OLl#Y<f5VM=*H0>640z{T~
z{^siJHtokzfkHVs5-s6;z~T^@4=**o-$w#f1$A_XY&6cWfve<AIS9TzJAzcrfyg<s
zoBg-UuyE<qI|HxO?)-PYaP-4xE}w*V!Ek#b|FJ#nad(cc_;<YU^l|+1m-r*MTkOB{
z#g{DYr!O!704w;v<crx~BSLL=<lkypZvBxY`HWUp`&O&LAPbGyBXrrSLR4B=fqFNf
zRgy`DT+V!d3Iv<}_AvgG{+4xL%hGsRDbIu!??Z54+cJOz8J&!JhjYjM=ViC^&ph9+
z9sW-c2dq}(7o|c1#S{h-JBbXW4Wu*?$$f1|?R{=Y`GIr@5-KEi(w_9y)N-kJg1h9Q
zSw|Q{ML`gIDhvY*lL#glL(RZL-55bbiQO0=)Dsk#16ojGk9<Sfeu@Rfu1NuxnAoyg
zHsCqSuEATpK`kK197B$50VHY|d=iF0(lAw2b%(&;qMJ5sR>db2XOL`=6;=Ph7<Fei
z2`aalhflE~_<;(?rrcqzEyfj<e_t52^)|6j#EVXS-u_%u+kNV?vgX%kp+Kc{cM3gb
zC;^E*Xx>o<i9Bx-b)c#F3h>|p@Jdl|;Nxa0n%;rAu%iZFA{_WR_Akq@`0t#ry)d(?
zG@TX>Ny#6V-ptnCH`or1`Gg-gMQ3r^ny$9lJleGjT+(iNw&zD_7}`{;X~v+FK*G{j
z)4P@0EFgu}a=WUai>{-LUCU3HJ$)MC={ZLaywg7=q}zi!lb39(s@1=9`ASDmnxO48
z%80{L;c?3Ay1h%aUwQ>9=2*VwadHzAxK!rq(I~NbwcBtsA$q={QrN}I^U@p*D&>Pm
z8=i@2Fb&STX;6idcB)S}S28X@X!$D(*j;>z8nY8{PwL<K_M~*#<~(oWHhy2Pp<!5G
z=mZ+gqqtDfQf^h}`QB*E(Z6ojPvKlLZfS20Df1;xK40}x>_DAYrrz$QlH<oK0*m6e
z2O`!XP0z5oWTHzLG24=D^}}+juk9jpE$N0UzOE`>%rqAC+VGe|^t(eySnW4LiHGoI
z`Up{nTrsnpl;~m|(jzojIl-#*_VDs@Q@Go%7RAv^K)rQgBIVIL;GAmGQA>91(FWdP
zCU?e$xuKM_HSmguW|PVb2GQ^ZpEiZjs%EmVW-_tn;?>be;ZF5)iJOC?-oAW}_(3;1
zvLhyei>E=I>s<+8dx*nhY!1@;aL@G|w6^HBmhoDwF);}|{V|qXEs*u&od~)`Ki}Kg
zg`g1!O!Rd@f6GviO4%68Ul|L2qlsiF>oY93ULfi>4Dm?*wZZU6{w=|y5xuMZ;1T=_
z{lr7@ZVr;~p~9cq)Lj8$<v+M0QTXtq_(A?oSV8TreBs}OmHXET&ipUJPC6|}pzubS
zwpNcx;@k#!^g0@03kLv5L4*hl5W`Jz^ieRtL@i)|7GO+<8O;K*p$x-C6+*GC)d$3S
zszs@Od!ZPx-2)KI3v_yQd2Vm5n`yUtDx0-G26*gKa!A~x7-S4PfFZ{a!<1wG&8W#+
z_TX`beg{2KXtr_)!(^y1IzUUn4HXIvdV}bI;;8bBidCv_+5%DnVtsCa+$t7E;xO2t
zHg=-ajaXqnsthr}L2wosg7^S~v7Am<7|7Dd=Zf}Fep<aCce1{R>SEmoVUOa$p42N3
z@~_tI0fDi+M++mRk#vfc)m*48H*6ZYjWzJp$q&qf{X9Hmp;rNN=}~IgBATPdI%VoT
zRPb_pH;YteNV()XI0y+*9j|qkWeT^wmU%q_RvM}`1?=ec?u)mP1XE>0&9g|80R73f
z=l}h1d1pgv8~l_1dx5?z{*uA>?I-;W9T}2rCnq6@$j6OZUCeJ!Kc-O95vDgpS1MH|
zS<-3V<fTq2rgWyY;&dDB%xK^42wW*8P=AjHi%TVedexe7;^9OR)k!EqKCx2~%FYb+
z9IBb}@8LllZHHnV($lYkPUAqthB91J%^0(esz~+de70)WwhapUcxUrmC^kPAA_*D!
zpQ{4j)@it`zZ|*F0{x1$8ggxBs1mntF7B94_*TyEu}5|4jM_ox5%MX~zb|aZbglwh
z*_W%7fQR!K@`=3^9ZMWFUfHh4;U=8rSqNevb_AG6>`#*O$W(E}BE{}qr)%5;-BuVr
zE)C+Jy;+vrZE0H^OIOd7SV?3Uv$|k7l`2;lo(c2J9eHjp9kq|P)l8NW&OU_+cPEOF
zAo@jJbmT-lW`Id!DlRA-7o5()8_d(doi*vQFUm=(TfZCx%A0|-7pgCzwuh;5k*?HF
zv7BqKyOI__@x4J^`89iJnX8DZ>ly1pnA?jMuZ41FV(q)eeuq9;nC)%nQgDBY(5YbA
zMz-TJ?uo8{<axqtn0xeQU{)7C(df9ok;;-vtntj~8TaWs+%1$elt7G1!=6j2Z~O_k
zd@AE{mu?+$&z884t$TKnTl99fc{%Vg<zDjZ)D^PCwzw^H1no5wpPT5IA>bdCQ!Z8C
zP7P21fF-DZNjr-_X{UCkj;xOI1xwPE07Du=I#M!H!WLpcwMC<(C8A;_K&=w%hMgpi
z0h7$Zj5ufKw(|_zNq>IE>G!RSR+_VHf5q>V^8@`Yd~y3(C?G+D7sv16`eysr_SUw^
z=lk<BKS0x7A#|AzgYH=SE%Bgcm@~{Q1JC3w&fo)#J!9AOE!<!y%nf7L>@DD6I1E0c
z&(tmCU>Qt4qt6V(`0q3a9Y&AYWAu`>$IYIzdLf32=NN3*i*5JVw$~pJAP6YFS>A64
zxMjEbo4kyGA9fz01JQbbj_f`{+VtN91(E{-0-k`_AXX!Ifqr@_g!2K0^H>ZS0*dqA
z9s~p!<5l+y0>*pQqs3Q@?OFnogBGjC97qB}0(Jx_0vc1z7-$TGv_+xcrbInRRCpi?
zQ|S#jqS7CPM5*8YzJ||PEvWR+JG%(g?4x9R5u@xuec};O`F9;bp9+pw%iXl1OIe9g
zujH)LnxzGW5xpHOQphiny!zN&iA5jRiPjGXEt%rs<V-jzv!Nz(YRZbb+1OdRjgty%
zB^djL0aFW(iIL)|HPEg291m=<g-8vd$^9X>5U*3RYzyXNCdk&jkOzI%JDt6_#zpaB
zk1o&pa!p^fVG16;bfcvd-GU2E(0{2c*Ei%4HWTQC>G#9LWn?<qQcRaPI-ipDkHbA%
zYI5D~)~vg2N<DE|j#k2L{kW0?jk}gfqK3HILt}TPt;s(UT&M5|kOvucO2ft3@AskF
zKsI7RvC*>CV%Qjk-A7&~1D(MeWFto@?*?;pD&}Z^3w<3=${jE85|GEt%4McR6D@ja
zvPr|1L<&RkK+bHS$W31&E5!P^Q?hDH!J;gARI+kmWko4D(A61|Ux_B#D|6Dy3bL1S
z?4&kKCZO6eEp;+B5rsmh?09IdC?r*t3(Q6fZ+0}yWalU>ac(jp&RUwC{n4Yhb>2vm
z$SOOe$IM*XSEStyw)JF4OW5@|Y+d)wZRx3){Rh*6Gg<%lmOMrj8$C1c1<Sno`A`OR
z3{Q1<5yaFRh~{%JclG|Xc}1S$%yo=12TPKq*PM&A6Q^FYScL;<L3+oQF&#mJ;b=O^
zg7cq4N#S*mq#6*iNsL<@<H^#;tfJ`!rvgc>ba1AFOx|NtChe9NMjYxKlOuHwcw-rC
z@)NY`hpZM(bnUj2Iz+}KPNkBTBAw}J(s#B!kp(RG7(QJq^)}N8%DW7QO^c>eDlUr?
z7@>kC){2?ai6f@wP`p*sm}+#{B?iH4tb`G`kI;VDRJ%f~zMLEd5&5zMG?K25Dj?W-
zf)BF+#UuUbOPVT4zzI2{Z!a*{XV#hl{&2WZ$G7!C8k0Eds4|7&XpelFeOVq~IH#db
zu+8WS%<)-mbxvUJdbX*TKvo;LO+FHW{v^8=xx=NLJQ|Tj>2<SWrD<|2=<;8%a8S4}
z6{c9UJ+TWA`T@$Bg&1rjMBi68@!P{XBy-|vzR_*7hv%xqwz!Fl)Z*Cs_N)gSAjKs<
z`(DKb6d_b;Tup!<kf_hnw8#`Tu<qJGa+Epx6BhP95aFWO)DhW!tNfPP4$~_mi&!zP
z8Y;t-AEfQ$tk5kA^`-Dib^5Blirxk?%LAk`(pfgp<3+iY?1C-{t7JuB2`+g-SIBj#
zP0y+6wr`id2{vv^aILrhp7bC&Bd(LuMn=h+xX6Z@c61k3!Q<>9&>uLtGMl&?Ia=yC
zO0pa|cCr`y3x_!(q->5W_KFCeYL)H$L8UrJa1usHy+Tm^7TPaVsy(;#3ksvrHFCJ?
z;*9d%jF11S<td6rW}88BriCV1NZ-j%Lv`uv9~J)ECi0O#X7RTH{$(t-{O9C7of{aO
z8<?CJ7$R)`|DK{h$r;)=vYw_81N%Loz^3J{kHKw>@mEr_a*AY4l2EkLf>V&-FK#4Q
z(n40IBnCEjF!RzglC)H$A_g`lA`TXC@~ibTk~0%DD)A#iFarwx(cA!-%EZ7J0Dufl
z49pEo4Gf%N1{U=_Py|y01LGfMikx*dt-#++ANki^u=@Yo1+2fi&`ef}@IN*h@IPy`
z(!#ea1RwwaN8o?i=sy=txGL$&FDPL6%`C^yp&DWXBM!&E&iQJJii$Rd&=4jCWErqn
zb#d5?uB|n%x{-NY<^PbjZ@UAs53?}3UFP58SKL{^AV67o^z_a<`QY*O|NMNz?SnaX
zS#()+)me6w9d*TJcbPhGt2juD+W^Ce!&Y#Z2#6{SK}M3p8XGGLbc96Kw8)qc8ZC~L
z<}fY{vV=S#(P2>>21RZOq2{pOr;^K7=^9FCnUID7t?Jr5vTwU`sxxNS#S3#cx<VXG
zQT1~ZfEj{TZzB4&H_}0nU)b!z@c5~fF0wybEi!Pg92N<}t8Y0ZH78Y?=yL$^>3@Z@
z7Rh$wA-8CtkmaY%08_(-8!!G5(1Te<>Df8Wuzv5&=AP@?W9aN9lH`=MNG(OL_uP)n
z6yq+^^dst&z*`f7>m%=$2#JYgs7R>`nJ%QDy7xG0xbKEB2B!nwiHiqBn3D4r81FVO
zLS(lK)mAg{n&;=ac$_u6ueuj!&uGF%+0Fg!QRTOg!CyK)Gp~Z9*I_-a?6_AFS!l6@
zqTX3#($=CDbClv~iK^5a7@sghC^c*RYXu0gmk;Lv#Gb|h#`xbFYtHFnj_k*H)<#ad
z*WoR066>ynHUtCx2Bs#+nz}lY@>HXsK#%#1I<!>44j(|*IGgz@t_^5HM{iJCUQg70
zt?O(eC&n8=8ynSm`9<!I%T^0y?4eEqd;gB1*jRReU%#>Q$CoMo1&01SmD@I9R&GE5
zA>3b>61s%w3njl#fy3qz>MXP>5<CLj9$Kw&S_?u2d3!uKj|I;M0Dppkbcuy_?Q-V&
zd3uWM;o;X4>@F5M5N=>?UuIvsz^ou9D>z#vo!nlVMUh<n+cs{&Mla-2bds2;G$*4~
zC$8snh#p`(_-DV4+4L0;4BFioHBpd138OGue~}@Hd8eyGm!N4iG48LBdy^*w1S{q4
z7?t;~J#I=N=LWB&iPPqF$zf@9MGX<M_+zHC)GvJXdJiK~1p8Y6N=)2*S-)luBysOs
zz&kh`1#I#PyJFFjy^UULlblp%*O^c2?8UV~c@;h7=?aHH-v3~B-{>D2RWWPX6!<qk
z2mcj6jsD-+{UmL9WI>FuodVM`@&XiuVdC8a-4s+67D__JA0ZM-LXeT$vKx+=Oj|V@
zlv+0*h##Qa4tuC#vOJq_?C<#JHvLnzv60>nybm+!H@@cPJzwuHn0-jsWe%bHSfR3v
z@{Ym#WWzwA!j92KiAIt8Y{R%wohXwi&rJ0WWWg+C%wu~lXr3}h48hTyI-{XDQ5@OA
zkP9FS!}G^{+y-$bc^4q>?T4;MmoC~}G6@uEd5AJ7#JJW;%^ODwc~}YRmrI{BCN5=4
z8!O1*PnA$1Cu!21AP>X-q7<+k$TaW%?idk$T8McHRUqT6z5S5$s(W5Cu0Ye{xf5QY
z0SrMtTlQQsQD_%jQx%+AjW5w~$+kf;lS^#gm>mcvqTbX9vIRqdda;<Z;XU-64-jHR
zTIy$|cM|oyX!RZYfc>ZXj;>%u)xUDH4jW2G=gp%GmMO56oYKd^12-(4<axbRPiRSf
z=+UePl{aBOh#J^@XJglJ^_8b;J5Io<mR)?z8w5LhED)w(x5v`>%#tshqgJ{QKRIZO
zB=|>evFGU@sAkT%s?_aWNITrFh-01@a(J4ciN!Ja`(yg61+5rN84Pbz`VE66gNytb
z99Q94SK!@x@UP}2n@maG=4^gpSK}%DRM)s+Iq@E|p7HMk=}&I$_45&WvkdGK-;*|3
zHr-|azheyZAF#1Aak95Gp?9#bw=?~37M|e!caPaRIT-&p&l3NS&;HjLPk)EH#F&}w
z)NiPBf&TAvL;r^tNVvE-h<X^CI{a~b=%3%aQTZ<_@EX^p6e>)VL}+yhSoVVsYYR4|
zETNq*KZXrqG&W^-6mQwKM9=vj2E%7TkYv4#1@pZzzr&B%Lur!*@m*$e?r=W%c7A`D
ze%{gV0c;D+i3W2pz?pG$aCC6Kb+~o9b-Z;xy*miQclM+CbvG8C0^bNP@8faqng9A)
zr1;wWBN)1EVowX;qYbAIfD8y?4=J1)rx2$WoG}_BJd*&Ac!m&hh>9$D%z!U~#tyt8
zjuK3r1(P&J)*N%7;cPSRO)M3wQZYTMr3CwFI8MVbVi<(hdR0sJJDU7PyQ^B$ajSb%
zWw!^{!$j?Nxnf-JyIkJaOZd#avhGci-RV!JU~b!Gmav{C%O=~UdTJ}<bPo>WjT(z_
zrC7Jgrpt0O&C=n%(}guG;nV7PcuFTrVttJrsZ{Aq+IEF8bc~T)1Fkv>r;e0qYVG^z
zruUp#3@{u|RZ1@D0Xdp%^qN7rwv3svs-v9C7xB&@o$@hI$LYuv`MOC`MXYnF;T#Nn
zmwi)GRY_CliqssMw#kW(q#cEv^-EITIt%_KHECum7-!Y*lohbuB|XV1MP`{^vR2(}
zu(DQKHI*u?w6go&)V(!UwA$>jVEVe><3EGa&1TnK!Fsnpkb}v&X{#|gT>CJ@J{@5&
zc&3Zqug%E4{k6ZlG%L<kvyoDpt5<xp#jEKDX_n!4)xaOA7waA;xJw%%Ao7TKr86H&
z2l0!0DeTi7x`Eh~<)L(dzXJz)M(QPZz`y$i^o*>J-~oTv2?YN`7<MC5dG>xXn8nI^
zAbV(p`v&516d4>Nvhybciu|SF3v#a)*UXvm30rq(`iK+{W3mgiKH@r$fC=*%B<QoF
zqw!CKy$JF}@rO0vn9!LA0#GmRqF)Hzi1I_eD4U}k^l7W36m{&xi`xB%j@^J*n7t?a
z`HYWy8gj<xFrF{Q;v@Kf=Z70o0?Hq$01D(k;)kk}jfAP8$zS__a+N3T76edulUW*)
zxGa$-iV6gzrLDO`D-sY=m0Xq400T8dV2wgcBU5FL*3+&C`jcq$`;%l71yluvs$T*9
zLQ(hQY=Jy!6l|vt@;INjncdBLzTVzZ`*dxr+bRr|gA4i>4J<7Vw|mRKJbpcFWdmVQ
ziJB<V5ryCL+-oT4s*bACoNEk<;$pWI7(=IHREE92NOYn2U`U4ZBl;!peUh|fXT&-D
z>cRz`zhW;-<h`H5G7C2xd@+AI+e_Sv%{pcos%H*<$*(o$R093u4`(pPV5-SVOr#Wr
z!zhP3Ws0?*dI!_GamL287n`u<j`N^Io1!>}aN`<rSZKxm4!8LkwC$R^C<_e5z1s@+
z@jzma$8hKdG|$?>XP>jJAI^*J_7hNcYvC9_L{1v5mzx0jN-Hr~tXC)l%0eb?2nhV=
z6xzY&{DCcZLdsq<hYN+F>3zt^HxbgU=3Z{=NC$z=qQaP~G?y3QBb<>v?i6LO>;6IT
zVnQ5AXz}@asa9TTT48_OR>$1qmD5<0Z;D0MazCwX>V8-ooI@(~%8WT(f~!<3qtwuk
z@$wJ9lcVqn_`<X*5YrD=CzWJyUJyf(-#H=O1NGxbQ`VqG1Kg__qmb<_MYhIGTJC#I
zP**v`GM{4l3~owh{e-J6?jl9XC}}`>Xqi!%*w;it>;1>btBaJZJ>@s7{C<aB)_)IH
zN)E>Vh`O;Vw!a4mD1LO_mh2NDKuqLR5T_RG(Kq*%ObX^C7$Pu?eiYiwQY|fKQ4{|6
z!DNk?vhQQyeu2IHFW50BZlGivh1%E7*Ssg3vz%93YkN0!JAj)4dP5lz+(g$=ZR7@O
zeZYY5pfqBBB+*{ab@}0pA`X#*5aDwi{jVH_Z5ZJJB;n3DN{$g2`wUZiK;e@}r4FIO
zX@jhASs|7>sSLoW!eRryG16mur6Hu7Y4uZkkYpG_#LUDYXX8AB0$%rPai3}{6CJAa
zdLFfwsb(L$V1q6llxeLzMJ8?EYaUym&c3Efm>#~wZSSk?JAZQfR@uC~p7Y;-nVDy=
zRcUjJ^;<uHM0c9COE8ta;O4)C@UO<nyQZ>z#>tW`;0n)iE--b2hB?g8VZrcnZd7`8
z9NC^8>2fi5sQye5v~#D9Y(8l}dIlZ5liAqs1^St_jIG5*c@bx<AqrMwpw7~5!}XR|
zsx7+07M=CoRy$11F&9WwS6JH_YE%eDX#5uIO2o2NiI(wk-fW3cCzpBo87C_8*fHIg
zmVG3F>#pWXD^HU#iwefo;{Ya6s>rEre??YBPW7q=tF|JY9i~;PC;gRlXK6m$oZW>{
zDw*O3LU`f;@g`7_BUlGQk*M(Djb*h@=V89_P^M7UEm!UcLLogvad{@a#Nu34Icv_E
zcx%#H_#@=|AaV);p{NiKVS&kcLi`wc*LVQCTs6a*i7<z@xIXxiO#-9Lgsw>i@U~b4
z^Ag!H5E+mezNQ#kp^w<?D8c)Sh6G$lAy4-Sg>RgemF&$YLdeNRr8Mjl$5$uRz+^vk
z#wVEL_qfk#)b^^de)S2!H)f}Z7AaU@r;J}rOb24T0yIT$aac2KBzON<iW7Eu;>P}a
zfO7NuqWbq>{+GB;ocv>veb|@f!qD=aT1}P~{Tz|22-v2Yj*1Qn3VKkq8>{R*TZya?
z1StNbD1y!l0AGp+83dH5!|wZ+&P)!c&%@p8Pq<wqS!i%HINF?){=VjF3(cj*Qd8YY
zF;Gz&XPbhFhH%|DuydSWt9u*+Y~e-bqxG0kHQ&j@HkP+Urc-k&9Y~P<Ii9vuwtt;*
z+^=uxi^p3cg%r8<es5b@aGk0mfSI=jJ0QFF0b4dLr#og^{PK&pd%}SFfRjZT4j3@C
z=$MnKv_z;fuMnb-1d<;)pm;o@iPSw4i=<!rnm<;VEBXNo2e~Fs4Id2YYQ!;AFQFI!
zDGW^V5@wdcZ8()HaeVDl7fH^!L~@;7-26TXRX-*_Oii`V6HJJON#mH<kJ6G@Kys-R
zMyklnoT8r)|KF%X(tp$Z|Imjey3Jd=zaQlV{NIO${*SNt%ZCaLQoxD`In%t(WO;fl
zP=N-9#CIrYHmK37P?kevOUGN%T@LN;ID`qajSxYid<6KU*J~P}o2KR(ZU*jd&mYa8
z4)M_l=7b%DGui|=%Rj7$1uzJOxP`#U5#<n(gZihj_ndB-(o-GihGVGNr*n1hFFIV{
z4-9$j`OHLHe26m4^SOlV^K*V+z(bN~ArCY^L8tLhn@%egr_L(T?fC9_D5j>>)Zsu+
z`iG|dc-7{~nsTjcS8@(i6JA)Hc?2$HE2~y7-y<G2zIv;KNI5t}o<4K~PTsV2xDDKS
z`A0~<Pinf~{B0q{|HM*8e_5*kH`)<=jh9E3E#@o9<+~R#pn>(M^}JAdAhug2W3;oj
z5Q28iJt;upKLGfpxG3?Ox;X}?7~)46ZhU?HYXLX+2S)owGvgoVAjEAie(v_eBYZ<A
z5W@HtuN;J~&yQTYAKvb_(DkEbx2%+{CF5NP&-{VMmW=khvw5}UHKf&fV-CY=*$1e9
zEuw_<G(^#2YBhT4{7tp38h5he)49!zscuP52bcNu7g-NN;THO$0*JQ~cv7V*b#1v?
zz09kS3`d$D(MAaaPo`m`5P7?%5a|Ia9DjW*?BA^<H@;zN^V>SU0RMrNjQ?51b8`bz
za|2`hqlzb+|If`r)?#2IB4S|8f9x?D%9#oplKL3xN-2DwLiq@adGAvB*enb(`8a$p
zRQVA3FcAX-bO8=HX8Nz%9WgX9Ff=f81mr&ob{X6zfxExcbsy+|&}x&vvb44GAKGs(
z6(Oi;uOes}y%Z&8H(N;sp}9Fg352>ws56CubiA07xOc?<URAuz)I^M*>45%Donzbf
zO2bkyX?$(VdzSav&aQFC-|rR507hoO74n&sC*f9Vz#7t?1OrJ;bSm0|W<N3l6mgO$
zFH$1PgU(2FXi|*=W8Xnij5>(PL?>Y`EShPZk?a7YcKkGeY%p99ju37TM~p)!buWBo
zuMs9yStZ7)t#Fr+2&a@|^MIj<AkGqw5%hb;F2nd<Z4f7qQbJ!_km#nuElMjY&0bm%
zdRq~}u(@RjsDMBbS`6gre9#@N@#K&1VX1Q`>g*a5(D*FmJS$C1tjEKy>6n&G&lYo5
z-i!AdVeN;fD@M&+%AU;GbnUD)aw@jlyGa3vH7!&AlJ3^7E`>l~7i$-`u7?ssUnIo?
z<QJ<|G<4dN^LmfNw&9@{Ek**|F+EJf$Sl@JiWum-@ZdV+s1BMl4K+B}@E{;fG8t)S
zvQQRTEekRNJBCg`SZbvbqu($F9Wzo(hbsZ}C$<-3tIsetIt1A*PnXE3uhz}9+?Q>m
z&$3hUyXY3sa~7vIP@H)dT28z134?~>rHbd*l|5HX)6_qq&Uj5S&`TOZ<I~6mO2=s?
zk78g{H($*cR8?QC`S{nb``sW<d5f?76RBOB*5lM6FPpYvdJ@0W@}_0vQ@5%JXqWH@
z3WS`OsPajhmGDS<gr(0SPEtc=oe6|=tR7~<VUo_)T10D$vCST@Fi4%qVZSU1^s?e2
zg(zyd7AD#W;6TBm&;4o;xm##(d|)@kH;TNqgvT8(m_4Q17x97bDW*bmbV3gVnnC$d
z$A;!WB{F-Dw`fux@qN5)U8%3#WN7E*0M|>nQl-x`Dkb@&lS3{h&z@wZ!mUf(Tf+8u
z2KQx>`Fd5<o#(LtWjC3!Fy(uslNzef>tdMGejt$Cjj&QEZbZ}N!CMn3K|C#&{@EMo
z-<dLKf?cZz3;?hK_8&0i&&7nXs@Bd6Vko@XArgpEk|;oXb8JmKDBKkjMO{J^81u`!
z2?$96l9rumD=kXeNb^}q{_~$eJuS=z=2@BdHMx7r{v!V3W$vhDj!3|XV&dL6yw8{2
z>$ywW{{COUeVig(r7oKb4c`vDackk^N2B7h;Pl1I_Zq@XVRx)N3Jb~wEhsE0tjjH4
z6os4N@pqj;^(orQcas7?9AGjeuun%r0)gAC3;<SOVD_T`p(#NRpk^pJ>UM*IB!Pvg
zxI(^z!R<E&8v2+Sq3Kh#)$GOvbwW9jp)uC%21b(l81EA@LG>slu--vDklnZ0?{l-h
z0Wy<u*kw@cc0>yFD{q<r3<`SFv<~DumQ8##J_v~A>F1f8wv47>cwIIe!3+{|Z^%u&
zDW!;tR3B^rW3Od)sMC@eZp>US+dWL7sfAFJFUcsog+p#<b}2*#<$DxRCA}}Wfp5vh
z%3emcEe$%5f6i;a$Ge}lnr(gmB+GxCb-8t~J>;EYn~tV6)Adp%KN)UBu3Hc{R>$<J
z^Xwt7TPSTqMFD+ngjv3hYT^D;Kh^RRqRe4KqeqjB2`{*{?1Or2g8{ZvaQ0Y&eytol
zqhsW_qU*%~)tiH)4y4b~Lg_$>4PnObSeVsCl%l`2M7|^p<__&fQcYGVq|2M+#Jj^v
z)rBg=N<XBA&eTjLGGnmdAl}bNkK8#@9QdL3WjhRey}q;fG($h^@ItF?s?4U@nXNda
zz68W{Sx4GDT%;!xy@($|v~M*Kx|DE^318SaD15CJqMXR&vRO&)lUY7Av+rZK?rzB%
z9X(+taaFv+hULt}^K;X?i!9BfneMnv{0Sq`LkqnD2RFBnNo&NG&N9&z)8^;*Iy!0O
zbj&7mD(9Av?=DI|7Z5i^*>M%eBjhN(+!q{KqP0VuO=1(agzcGG`R0c178}$tUSZF%
zii2-1&?co^0=8A&P~&Wd?VI+$zNNba^sX?b*zdd0Jt2vI4$Zm3oYdf%R_|FL8#ABX
zfz9y9Y+|*;U)^45hl{=zp<r3=CWFZ}BUg7VZ45y|;o0pj#K!QMet>SB`vD5aw#ufo
z#IUZy`n+4);hOn<vxmhe<$6ntTUzQHXMwd~BOTHcAbuEhK_1mp_V1g03H@Yr`S^!2
z7Yx_@>G_+VvHwXPHv4BDhWnj_-N4+$z|df)Ey%^d6k-3*Y&^~IpX6hfKk_m0Y5*9+
zUvp{Hz|4Qlr2#?${v#>ZbYc+*{T5rIzY{a{zuAR9m1(L%zubTTN=}IYtr{o@=wcD%
zw{fvL1UfyQ1P_9{U0X|bQ^=<2j*J(1JeIi(k6Yk(iUVszSsHYB`!}we?%Z)7pPp`D
zj?u(eVC-->3^pVOB#P98;H$zQTXfjV4vWI$!cgBZtxo2gDDHl9BAAyk3sf-Pu=6NA
z4Aui-SL+C#>4Xo%VqiL>Jz0``4CDuCN}mdEV6E2m+zS+YjPt8%DJI&Vs^wDwg#L)H
zNiHjyl;$-qU&ce26$B_|1(E@Ym}KQ6DtLnp=+o^P6&jn)h;Lj<eDUOp6t6m?c+W(%
z?cYA`>*}iRRJ_2<Q*7ddS|KP^&YdJ{hptO}bEAk#djxPy<uyurp?oz5-1HTFfRri&
zr>9;pmk(y!-g#^1t0Ju$yzhamUAIG|FLxf^?|m%Iqs3@1s}(7EimhLO{_YAh2ISM+
z-!5PT{P$h)r}V9f6@&|7KoKd6AmFAqEUe0J8*W=bjf9rJrG!lrkj`2js%pOlz?;zE
z0faVxCi7&znSB5?h$j-yGbVLdSDS|$>c)E&w81iW6+W285)H;CmApWCby9crF^AH7
zZeU{KD2pj`zU{A2GI$xCF`N;jh`+0AJ72yffrLO?onmN5)A+jfW~0?Tmy^sF#fL17
zP$3v3x@S@fLiuMe8}K{xRe$$R6X4(P<)6}(wto^bfB^xt58c0gJ>&!wyCKXKHY)*N
z5JdaI01%B-FUNEH0*s+>shkxnR8WcFC)<N0PI}U%kf-#V0)?i865~+e4{p8;p3&6O
zHOw_`&`_ve_`kOfhc(jX=WqK%0ss50`)h-RlCCwfAPR4Coh+O7MrrIwi`7TDES6*6
ziVA4(4*{D3XjC6;cHzb=GqX)x(htg~>F1tugnsaTbo_V4{VkG3jSdFy<4tGI=b59=
z&xa520CEqNp^ji~xNB~YU4zMfVek#Ob2uzGH>oj$HBmHbIwuX+#L=W^AS%3Nhpj=|
z&HMVutnkiqueNZiL96aLUNn4=_>gnwosoj`R*c4{5yZiVHx+2s8=Nj2(D_w`Dz&nz
z13q*y5a4m}Wh^@*Ti0*IJ>u0hsj0*pR$Yb~b+hfQ;6y)<I-iw5oeI(1gDF%Bd`A>k
zb9E=^jeLogN+DxS#+qH@zd5PK%P`o0dX0&qU^z~No)2?fIx_!|x;L}|!aLP)nk$k5
zWF-|!WoYxY)E_57^kvc`*bf&*9`|J=>2VtN#zZ^WMu-fNN&6Iq+s2#h`$W%b8B@p(
zNom?#>5pu3PP49H$+D0{a@@I@iQGs(>8xAm$D0_kNF8gR8ck=m{HCPICtIdS{!?N7
z#U(xrc|4;(TA3@^0-mXfgaw(a*@fR?y3wV~wcrb^!Bj{rW9K!@IzQ15Ms_n}9G7Vf
zk#CE_M~KgR`#o|VQ%YaKFIPJ90g+Dd4hDOgu}i<aRKd`gMz7d(mb^uDv#VSycM(J?
zbqWJoUolT@ME~#bc}boboBa(RHjsZiAsCVT6;74^7k(C+GF@U_wQZNQdX1;9#l+sQ
zp85kcA}FGQdSuCj8%ftR&Bf>P=kp0EVEH0?UUuV=ZmJRSfg0(iFt4ZDpQpAbU+*3s
z&;fp(IyG_FIW%$FIk|8U#d+XTufp{?tPf@e3@`}5X5+O0Rqv@Fr`I1CwnkcWT<qn9
zKj6`MwM{5oh|pss%?M;>CM>X|--J$yEf*6f%FC1vPaR897&l|Igms^y4sK0c_80h2
z5386N-%YKtU_W=QCtJOCmsi3Ft2C30kD|6e^S%n28(eCP=~PCdA)h$iCG1xCeTbpg
zwz_0$AH*;%BrUOLF5Ku;tn1SimsZT=WLUB@78Oo;*e&pv6dfHiF5VPto?kOo|D2X!
zW`S>%+4xjJ3#G$YU;2y*l++RqQ$yujs$qf9Ow~}-U<~p1zV+}ZPbH4@pE?M5vrV1J
zZGdV0tlELeF)MRX+-1wOjMY&EhZeR+zBi1W8IyGJ$}Gf<QnP^HKSaj5V`Ss&^Us#3
zZ{58_E)w(R{)`yGxuD1Q9o2J>J4S3tw%-+BJtfocKY=*r&^!(&h=q=RuMzd*m5X!S
zclQmW4(U9y#^|16#;7Ikv+~?|`G=y9-}*Wg{0$5<p#K0Ef7LY-1?2|>5JGo|8WpIQ
zD<dMD2uu46W7YQ~m5C$4kz==8N-9W8Y}c*!{qKzi0zGcQUy5SB$BqEwd1Y?-zPcUD
zZlA3D0uO+G<bdOh<KV&>#UY2a5l}Xj1`e*BXo*9Eb7^WQD~i^|Ewf<KNaM|&G^Z58
zeBCFL4<5s>qXy14G?Cr%AT+@sxfdO?NE_*wA&GZ9j1<jk8;Dhw=kPV>@i1tkk^N%6
zN-Hp}xoEM{$sJ;j4@@N9iX)=W4Plz>is{$+63j7S@Ehen5~L_?kZ&CPL2sO}SG|dM
z^wtiem5>Ok&qY{c_^#RGcAS^Zd>c}IVi@8K<&b<|)2FgFH?49<Ib5FHDBO_sc#hD2
zY6EvumsSp&zDvERFDclM$*+_CrkbMRkkhtq5jwJ!O%%CCPo@G@2@AU<ROb);cUSx>
zi<C8k0|1yJ{kO}he>!4V3t9*JBrzW_QkUKu8>P2CmX;qWID`h9TMmc~(!hveK!HTY
zgxwX*GLThB$xR)uO){HJ4*!hVGAoTmR=G8HW5g1d8&RRQ=dd<?`)K>-`Kk8#x_c*H
zZy{T=Mt}fv((~Qwi>Gsk{VVgeC-e3AS5K<G_lLGR;5S5lq&<9*7jeW-$q;|EJ$;cE
zb;Re0HuWJfM0?~0$ssdD_{dcvqwI(qga-YgPEnuqh%ylzq`R1i=SU91{o)9Ggu84Y
zJmh-yz5^gQD3A02LqK^552e0epgsb9&k!$qfcPl4zCb<tec>QH<hz4FehPi?kS~US
z_=vZ}Kz=HH@sKZ$fc%8J<e)w(eWM`nDFN}&FP4D$2)E2YerkP`fcYr5&Om%eAyfJ0
zm+0WD^!#n+pf-UgnO$Rtq-4x8W|{AsP!=I|bpd7`azWF#lSqpLtt3V|22P?uwzn}L
z8+%<K+`EM!-0khipJC%WQVzt$neVwE?EUH_tHYbRQ{};yWX>{vQRDi|uYn*>Fcszw
zygtd}q-69A?Nf)X83{n}?~x#SFG(P<x2BLjx8O*dFujw9-bgqB{6_bqGM_p@+Pl$6
zn^3)U{kFH&AhI?^kbdGp!M9k+JL$U!KC(e*FT#*^;rgk&a4(f0H8Iw~JI42AGM_Qy
z&!iUNy$1K`GM|-5Zi96UuhUYugR{)9pk#H7ueN0V`jFnc=+uVvK1E1B`&%=0Oz#(D
z^vv#|lJgDkzsvLt9(Kz3)gb*GtdjAI9Je3ypze|bnaqrkQDaEVP+``bG$BW(Pu^nM
zj&q+_4b5c&b3jd2!}NBDjq%kODGrL9DwY}{=*V=L#2A3X1Ycd}ZcrNWzKw{1!b@We
z^201@QxZefWr8~ZBV(0eV_F+Bp-#4yX<=R?Jb-AK<cOju0^?7)V|nk4F}~Gj8rj`3
z!3qCLV~k@T%Mb{Uk$i#2yb1kER1C)-x9IyCw;1rB$S@kwbeVXudufQtAH_EH!NN9q
z2ihh%V7?5d-{-=dHLi)#7mAP3Hycs+=$U1@24e4>IJDk;=ekb1<Miu{aAo3)e`4|r
zE^~zx96?`QHziYFO{Omlsb9Z(5JgqKqZAWa*xW#5GxZK@YAclQxVg<fko=m-?W~yI
zOfJ~gbDtIPF8k$RUA}~S?&^+f4G)8J-G&V)*<;g*UEr4f%kMeCs2u!fr>~-WG`F}U
z^WEgdc|1{dT@`$e+6;vs?cPlkxw6@hMOD)-Ohef;WaWKgzw_mN;zixmtGKFC|8Kp~
z9c)VKLil&olB7(PZ{o7dXE!RT<(0_J(u8D*acvcu$sns*AV2E1vz1_z5%P`@bsd$L
zh^^*j>brSC`w~TXuI=M3tu}4S)LD(JB0b`f)Wxa^+0c*~%Q<V`ei=of!IKdgS9+Eq
z5i;{!VnaiaqUvI@S2sLq)=j5n$7?@=1QpeOnqY$_;0@!pwAWJa+}TpnrWtZa$U=2q
zbO1^5RFXH9qedDqAgI6wA1}>tWk*ksMQHvYO<t2-zc=dMq+naY)s5RyM~@&G`H+&4
zrb_<2<VY@xY&*waNk+tqseKC{6QQin6)wKFiKMEde<2M?=<Y74-6b+qn+B?4H>Eqa
zt(?45{8e5E&S`vr2nBB%OrO5N?UE(dQa!tZHju9|pC5}$dsQm*QNrmszAGgW5fsd!
zSL}aw`2AzDI!YJxHk7snO^B|w3!NU!+VyJeG^0KZtuAvW#Be0l@u{uSdJro%Lh;vm
zT9wW4`MH51WlIA8%%+e=H3ZhU$fkni_d7Axlg?2sy3gusxrr1Ec`klH#L{iMs#j|j
z`HV;jA~VY(R@+Ksv%Lo1+qBr4h-qt)A>Gwa9}#Hs#H(-|lU}Ry<OfB9il2o_2bG*z
z5oT1Y0kyOw@`2r5&u`5-#sje{HHlXJt4~nf6+XU?SB*c(?pdBnM;}M-nN|9(wd-~9
zXbai29cskqh$n~=RA1|Cmnzpu3FDdWmz5GiThob2Bk4jP*Y*lNf@dw#N_*Ig$L|wk
z4*;Gjy!?qwE7K-E*=wB=H-0T4PJc^U&}r0`XPDP_Z=~g~tZc@A(+-y)wrz}t`;trJ
zm|00kwgrvr4oUFoQM^FtLoZ_5(IcaUfX9PjJ*q2CYxSh(I)x3*($2bwB;xs%j3X2Y
z+J|*2QUUBMeZEVC&-;<g;LF>C2%l8hW~L;iiqoX8)++YGb#@UUj-)st)DhTX7B`XB
zWx9@AaFA0Wwq>%0t3IpXCuRgG97|MfBRfapa#cN0l5A&l6<ID7*`**iuI5d|SgKgJ
ziV5|UyY3xzuXRn-vyG<=Bg}eABron!p{<(Svz*};_N_!Wpn7ut7$^U^%%UN-3KyA&
zyq34R;_$-7R?wm)W=_(xeL;FeHRK+>H+I|gA#dYeZpGyQD(tOuUAT<PJGj8Oh8MRi
z&i&DSYi(&RzMiN&b_kWZBw5~$L$loMn-B#l*7PP`c@S+oWouQ3WEc@jpJ=%MeER>x
z*k6Ukv2|SoXhMJ>O>k*6xI^P^!QI{6-QAnexH|-Qf(7@+U4py21=pPYpYy#JXJ75>
zda9nP8gorsV~!<WBFA{(*wB@$)R=6h5~FHWc|<wr!tVXoI+VPXx7pT&Ut%HR$S}+%
zD+LXKPZp7&Po7d-lNOs>EpuDSy4K3NmPN)2QdMr{Ji0{}Pz-xjeuFGM>5-8nouZ#S
zYwF;Fdn{?AS(Y#p=8M}$Co6_R$;x6r*-1+|D8t6APwvdRR8t!Y=l(5b8b^v3Z2c5d
zW?{>a8YzHSmG7}34Nlc4$@(0+rDMgw@LUl-8H7*5B1v0bM&ICRj>W**2kfTEfjtqF
zh>TH^cI<59EEq`9l2EkR9Z%OL(-6`B^rpWj=fhLeuTs>*;-Vp2ukO==a$dC}=HHP#
z9QFED9(&Jy)b3Bc#cic@h2p4Ew3uxJ?o5-ks{OpXIqQQg97@;pXFymrGJPdIj;ds`
z)^rgzo1v7|ku3d7L5<zf0`8MdQ0?Rn9u|L&B7(>ZC7+2c%B<U)q=MVszFq-()7}kk
z+<NEU^W+!&Bh<arEtLKa=KMJ2oN0CF64CZf<0?BX|0z-+Sa?b6wM#Ke%$bT3dmbjU
zP2UuqlTkG|%IUlys`fmS61Ue=pMat7g6uIn$w0!L)BXm9fhT>1o-xXi=I-li3ElO#
zUG4i&hQ52-JR9V&vd0<R{H{IbGPqiC)K0bTD5FD7OPusW6MKH(82mvkZ&i_rg~Rxb
zMOsudxj@;CfkgS59^SYrdyJIX8VP=JF%}9P^rX+;smteJqW25MdAg3-wocHN{=rFY
zEq=ohKi7c)`<bX74*iKnkr(?se2O2hTOGMK^+83$;4tG0Dep&R7v*9uB(>+5-x+s@
ziG@;N?LAe%Hxw4%<VZMC3C@^uh?!S@Sb4w8helkqPzzDxEt;PN8r}HwZU?%)MZE-l
zuiqU(^)I5jHeOoup=vMXWiHIL8mp4?!+0a^{jE!Lf^_JX2I-w3Bc%z2M33BNoWlvR
zNw?E#a*dtZVL$f-fa;9AsnRaW)QF_H5X!RLcqw)3M)qbJ(QT2>X-6Cqm*c<!TXIlm
zEu6>4KEbje>{m?E4^ppuUj?}SC<foUT{{NdGVJDkJYF6YI-YUuq^!e7LshZOWKW*C
zY2~p(QG~uggU6=1K9Ss~PW625j0HXhH9x2O!V~||D7_!=;c@&$V6kO<fEPW}nG1ZJ
zCS*^zT6TIMT*L9OPY;f)=(0|igSLMb(9lGY-UZxh?q;tGefA9N%(eD1Z1zNPo9qEz
z60Tv?B$jM<0YRPWF>LWJ_HL1EXx)Iz^kCmZBiW_h9Pl*dY3UW~`}*%(u}|^^*|`q0
zo)EwWmWR3mwA~=Y^!Jj23d$Vl5#zSQNczt$*J|Ra^p|7pV`u3a_l7Gi9y8&2*ot2w
z1jC|d<jXf?w;ce+4fYPMN;)m6d6~r%LUlXGP88m6Up3~>GQ#7?!ai-nl|Eo_2uj3U
z*zJ-dqb#<u)2M!(3g(haQiSbDJG(x<BG*0UtshIJB;I7;504+Px`OtlPca&Soljo@
ztT$C=(VjShs;Qq=ST3Vo#uiiAI#3#}%)GzYh_d`Hby3c;Q$yiCV(u9QjB+6>a=RF<
z(hS3;_%CRHC9B0+mcKbR&pgSL5=L!(X7G|%e%y`Peqnf&Am~EOUI-l2vWMCdHe6XB
zk_EqM^!wiv4oUH$z9%1^K-0F5b`^V1c(}1j<op%4U<h+Ua~fUxf_bdA9;u)Lx$JA}
z@nBC@2<tiQN9ad|(9Z`y1kZGYP{?yDt?}HerJ#5pFBC&Ltt{adKQ!AvB0`F#rX=~9
z78&^UB_s^sesU4E_>^@Nd)#<0omAV~xwI@?W6|u+qGiC8?(Vd@bX@IT`s#6wBfIY-
z5Y>k<iF&rYoP4x=3Wof`w#_-T-mk8<vcs@b=lF(SP*nB0(~6{WFCe?`Nr-#6I8Nsq
zJ<l#NDMO8&(4K4Qkn;WGqhXf5Im^dkgDsWRsJ;%+N+0vLOBi2Sa7+$XDUuJdS+hJ8
z#N&+OZ5O|=cxdf^r)N(qw54@gCV(o5zrc$Rm7mo13Tp!Kpol7l{2X+ssn68yU<wZJ
z<d|e%OM;)bX~}-&KK!vfk+{PA_14QEc(v51;n2KA00k8s*9r4dYE*n_zLdA^tN%qd
znas~;+97^Cm)0xV?0&qjkiCg&sPYQ!<qsx;Drm%!q;wtrqUbDg1vs}?<$Q%Fqz%8<
z5lm~fm!IP_DO|g%>rgzZqkzr2Rq-_ue9hiJYzEBg_`ru3P``Tm%|@3-5=`o?zrTPc
zO_roiwgK~VRbkVT5hqCBcIyh8Tj$!o3^}cx6At=C(;al?rVjV>!#T{V)%T&F!e3QC
zqF;V(%Mokt!+|&gTaJOS@7+=vLaVIc_kU3*5urI)!5=?-V1@b5)$0FsOZ}DQ6$x0-
z{HclvQsqg7gG+=}5%YTn$`-#eDbvS?K)zP=&v?l%(A43seti^O;|bO&U*o=&B(?a2
z{+Z%Sz-|WD6v@rI(EHQpExs-d5Q#BqpGlZc7&CgRX>`6$&k){jdbF}cq7lv<+;0rO
zLA4M{ITk;g8qYB4oO#;jT+gbB6kC?$%+qe<CRaKp*h}QO-H2Z6Ia}<zyop$M0VWqx
zwt)sTmo8DKACr?QsMTC%7k0I?_YwN`wjpf*XsDo_bs>}!>a|(|AzkK>X!S7k`pFM%
zb|~>DH&cjgbT(P9Q}8z}U0ru<Ijk%zy+3#YRL*{BIXczTyGGBkT%ZwjYTcXV9iSBb
zRoa(3Z9$P0@OJidSC#UU=-V$hCx;N?GLkfveGy%#5>PLu$o6vFH0}KqDWQ1qy9H^=
z!;)BJM?QLdq-o<Y(ddDdX5lbRDwhL`^Cy5TeY$u4qLfyFR=4Q>$D1(E?={MAQGaFt
z|CHT-t4LoEOd-X_2HyYbdviat$kBZI@Zsw7e+KgZ8q3uwFRF9GXhYqW1C69)1vFh(
z;aWPYj{!=CN+dtT(FrY|cN4NHGpSg3@a}%j0<lwoe?R=C8S11^8q|nkvncUhoUnYj
z=WO=f4D@@0-{Q~RW62r{<tMgjso4gDv+y0PTdIv^L`9+5U`c#p+#lQNvFF?sg{Tqk
z&%P>=ER+hz!@J*OLoj$HQn>RANg~|vxHsZ*@VK0SB^Z_|+&}v%KP7Qj_j7#W&|`P{
zjQ#0BiQS3B5-@Jm*Tc^QN`_#f2-#)uZ!Oe=(ux7&Kn&!adC2#@Dr#}7Na1JWnEbU*
z2lOt>*<^K66-`=bjMRzS1O=4>R%7mA)Du25cKAdW5;ytXCrjU2FR^89YQNf1W2I(q
z=bjH<4H(p3dRyecCd6I}V3DP}<fzxth%$-G!l@ryA9TCH0xOJJ&=ykV(*+*C-WEGP
z)$mM^52-8{$ZL^7b||p_n&lfIDM1z!r}dn7GFCjGe^#kHbAq~AtV8oJmn>?}eEaMo
zg2k`H`}8X0=^yPS9=Td08<t0=2_L+oW|xUTsNQ@KXii)y$FE1Rl7aJd0e!oUt;#jG
z)<xFiPuvETP2x9R$8h0jN&6-Xm}N($>$iWGR$@<M4~Me=tEXLzc+uJ}SPS~Z;$$Xx
zQ>pIogFtYry{F_9D0Sd-bqXB8?((blGKi0Ws@`}C7^|EABlAU+h4oA!ospxrwzP1S
zfo{~Q;H?-L1ZWI9yUnFhb~{POdPy#5Uj;>1K$X<jD{b62G(+T#%rL*3T&94|kqCY!
zHlfe(>KdpA2skM4IdQcu5nX5hY+>DSs>)A%_H|tzmwzI`NB1vdkpKS0M~pUEEl-wS
zWs5<dmv`OJ&Pi#VnEkYH(>(hV6gxBKtE48jQSvAWixRJ@Hni(OY0AKTs7Nics%eH>
zM+f?DvCHP+-xvIc_c^l|6>qrOSm`Y=ZDn3r{+w#0y}q)hu)7tUU}0*ddyMH3*xO4u
zD$0|ITI?!uBQW9zozmCgx@MCLz>5iY-^;>+ZlIXq?>iLzh~I`aZpj?{N$QPsoUS+|
zxbl}myp??B{a?xy-<5<UoBwf~SO48{{*OVSBJYU#kK>$NY#PByY-$u1mCa8!`-FGb
z7A_mVBEtiRNSp2C88J9((Rs#;@tR^Fob4-8P%#=z(i8V>oT{2mIoQN{@cz;J!231e
z?fn|F=Sve&72lH6)pT!asN@Ze5veCv1r2mUzYt7z!jbGWH$a!F&+a@lAW+rX5+{zE
zrR8${fgWZ+<3-r0bN(XZR;oe_PBc-}7V~L^j&IV3mnsm(mwejc4u&m}ZZ`6nLY=Tg
zB7zl|nZ8FO4+Bh3Haj|8>Rk90{c`r4Oi494-0hKBG?>{VhN-pKpDL)+{igAwzS7j*
z5GlEhisEB$*m@{;Nh3iyL!q3JFQ<W@W*rfd-9$(p%3w53?6ATrhq>3Usa5LQq6Wcm
z-r}D7V`w_7Y<9;}_dCMc+d~Ax*{gq<q%=jSl&al6z0c3VgieOmsc~|d>ue4c3q<TC
zEmYyoT-hD6dWbGs%S0vi#$iImB2V~kj`0P-pP6B7*WhK-U~KRE&R$P7nM(!bYhJ}k
zkdT*i^bqmTL6=FPYivaij}1)dI@s$OIR6Xmbq}{cD}7^@n7la>kbsONCuz+4_Aesg
z<46{{@IUb5{df5Pr!J%{FZ<~q_>UuOPj#AqX~YqWJv&QX>!25f7{ZD4`mPZ*>o!R*
z#SFaDpc0E+{qPJ-PG5(7?sWUgHqw!1OniBBdQQ~y(Sy*A*NWGQXNieCs&B{v4o<C-
zreLQ4%z=yY8wfd{WE3qG_%ojz#XV~>84kd}hSQ5np%9dBobpdWLxl%EGzzFl4~OHt
zr#~*?O-$Lfm8j8Y%x;lXV45fY+{xxto1HEMx-sEtd?5#Bkb`HH;QF_6Wu-?zIMy<>
z(03O;7Eo_(Gr*H)ML?8|!d1E`Zr4hJ8Z{D>kO<fi8;6Yx2RzNMhxtLL|5h$&s<>3D
z=qv?1=eU@jVIdtJ>5@Qd3wrsP*+?6Pa`E+6*K3<o{Vj8Bnjc_FUm){`YyG@UweQgD
zKeWQ-k$+TUSMKZ_mIR?>NKt?OMOAF-cjrm}=l{Qb_|G`}Pc$Z40I5$2EzDA0?iCI>
z&L}|*xyeAJwzgrlBP>0>1D9Cj$_9tHM>H~vy$OhCfhTxy<KOv_ur8(!Qb$@O?Za7P
zZe5{}%fR_iGuqnDr|Wde2OWG05m%U7mRs(u|HU6hP)BL#Yq+d(_*L2w7Q?-SGYlFw
zq%xCT`$A$+-v;t8;<LcR0*B$bGKRtRv7{jk>XGBe|0_SMo5$;M|HsZ^KK<wK`=2^T
zlCCU_2-eWwU3>S2S*A>LE~zUVS%DISZB-*&DKZjjeK&DS^Yzg#brDL6+mFvmGa1!K
zy%6A%tA%C2;VWtco8u+(&ky%?)yDczFjyW%7acTyd_`ITMb(%5z&1NBk<j14?re=y
zC}k?0sSY2=>De1UxzJ+8(=^YT+2ka@jjw(z=^$-zSpTbJoy%(q|B7!ni_p!^7~kJ=
zy6Ec=`wFpdS-*!&s}MGD63ewrDcjfFy#5zc_qIe_RFm@g^>#enBM(pKNv1rle%67S
zdVs8_b`6PKo@R;I=$%h_L6sOtw9F21tQrJc;W1|Rofy%W*MQS?IR3e`JHfS*vBmdX
z32zs`N4Ks4W#Bl|Kp`-Wvsh6qoV2R4HnKh}^~YeTr@u}6;Y#8yAOucj<|lpp(7GeW
zJQrieiZDa}K?M^Q|7mCB8n#Qq*)w_?Z@Z6;?7?6d-(Qfz#288cQHF$iYWVX_972G}
zZ=Lc(^}XtU?e>?EG}<@(1D*=(e+JL`f0BI@|8Ev4e2U#Y2XBrl{)0SCaXiT?BET)H
zLM2(9l7deCBxJq64ny-|$)&2I0~49<7pY0_r`vqG3$ZVDRvcQHuJ)T#Y_5_IkM|dc
z%pYEsxMo<kGmbKkGQ2EzIwRvK@yh7RwT-+Sj8U*Drx>bs%fnIl>x>HQOi`Kb8)uaM
z$c+3`f1`Y6Bw+He^XowdgLeZkT(SqZ(_iYwVKT1sA!*uqy~R}|d9LW;k&mOAMyxUB
zJyUc2rH->f$k!xi-<Rm>EO)+LNev?kjm#=39J%*8E2ce%8*i<(GgrG8yt{lsaajpG
zLWt!!oaU!i-x?I5fu6-1`{TuZf`5@3{YoTZ!ij7FAUY>^JhhJrMm$ONwJAFL4xXBx
z)k(`Q@0Gu;Ehok~F-D(fu_%)dv5TirK8j+9-p}J53)H>1IbyhCs}B<K$WMjpv{t=-
zRHBHA|BQm~>m|R;<+k`W4V%Wndz~P;V*>@Ufoi8OqL01bNLZy}h84BJ0deJj&c*z4
z!lOJDDNiPY%%2O@F>)PfU7Bo_nFQLDsArlUZXz#lrouvXRqi}NsZ)>t@=KY1yl;MR
zA3oe8|7Ym`PX-}H<HZn59qX@wR=T^#wD~7MUOFlc4&g5f%#je#A`W97qZ;S<m$B*k
zhKWg}rI%`R^X0J($1ww)wxHynGL=I8e}4p2O#+L8)?e+;4g;ogT)Pf8T&J>m);8by
z-SK<qUQfc$2cirJ?{^58V||?$qVhT(m!qOEHd3!*!#pWFsJHzQNu(Z?`Xn&~Q=Pu`
zNh4|_LNO#LqGh-#jph0tFaqM8bozJ@4=sD*n85A83-f8bHlQ1j)d$bV{INE2n-hq{
zIYuL@Cc#4n@C4bJFAdh_7=IR3k@%3qS`$K9h(QZ}F;}b8#r9x5OJpH<0QH-XiwJ#c
zod_j0CFS)?k6iUn4`&2;vaSu(u0~WEvr_n#NsvJO1;-`jdPVpLuGpc1;5Wb&oflCk
zK#}##bZP4UD+<I+<Mk<yjlXb9{><1bej6RUh}97efYKug_Qr=OUW1@xNU^mSY#kL_
zu7oO1Sf7x(dJNzU$*Q;LxskdKCgSRbngN^JAK@(1AIOPSoPw*nx0Jy{cwZ2Ne{gHz
zdN?Nu>(??B=)P5?f>c-HD=1By%m;s~{Y+v19l%#y*=9~qQNn>cc~0d3=ls$rkeNB1
z=<F`*nU~MUb7CKBPqoW)a^BgLKOiOG+qQx~-G&LTT|vbF9Fi+D9;)RSsvkj1H~F4!
zO)c4KD*2dd@$i}hlWU}}N&gc!w?m!#7|%I$u`=7{k$T6wSHAUmAv)uGtHX>DX$FK#
zQKyg72P2u{7u3n8TFaH&bFpS&vMmSZ9IpDDT~V;Xf$}ceo<Lf1J>Hp>^ALnL?z*$4
z?>&~<SLSVq^TGvxQ{@|etA4OM$NS6s_9^4M_ix6EUQX6oYwvgSA$7*$<4*9(DL1V<
zIX1QU$ik?R<;KYsto~u5ktY3E!2y2oth>dmn*)Vu7B(9!tbgbjQYA*kmR~zU#U@#e
zLH^7i9XfLgQ<x~LM3DOgOLY<N5;q7my=1!l76arnrf^@$<SxhpGu0LZopa4*tbTSU
zA3#PbgKM#qKThIL#hPV<O~v^QM%r`7ZL;qG=@=TbSAujTew_Uo;@&tu(!biuJjxdl
z!5%`9?2%n6F`qSy_c}?HN1W&rW2RhApsJznT9iXC)RcAPgdeFMrf4uLS$$ERM5{J2
zxQK<>=OL-<2`T4Yoh%|G=RCf9D%B*u+yDFMQW{S^i8FjY2g6o+e?*IPF$Htyou!$T
z`a4FfkMTm9W#NFb85Q5h0^jul+lOqQ_1L0zT*mpwUadck_({bpqp;Dnn`n1}f~~Wt
z{rqf+U~i&59b9GLt6spWRB4sjN*T)>$A}ym>6Yu7T1H(a&IzW$Q08z0b&~VuJ~3kg
zOVh0prG6gPRreKH7shne_k+*Zu-me?YM&wlgvI@#uQrPA(mz`2-SF=2@{_cD2wyc7
za1(=_n_9v!o<*`rM7<l|VN+vwEP{>M#mH~fk_JZ6Mh3Lm>-7=`AWA>NEEc1U+;PT4
zgH?RA_9ppvFWfrN*%L|x8(RyV0my~HKys}#@iEYXWj<$16=yKRx0zUEtr-wR7j8Yo
z#=2hlN2pkPkMVfP2z+pZR_(%^);Z}Sd7wVNs5<)=(cm4qR+hLcjxCJ1_8Qu#33jCZ
zE~ye1AZDk8EShW_8MYuH3L&}|_fC~&5w6G>b}D}C*AQ7veRK*LdvqJyj1&%+i&g~w
zq=;bjClpK4c7`41s3vyr1EPJx`&P#f=_2GZrdhs)@Vr)bKkC4PKKKIc9<uVe<XY#R
z11{ZZ;?>>B;xR9vp&ZR*(B$olw$!_}e69>CoW#q5OUGZZ5V5tw5lu<^#^vKDY=&?#
zF8$OYmb6dr|56Lh?H*z|{>OI<|My`b+yAkxV&dc#pdhsHP4@i!-sI_262y2dwK6l)
ze*C)QQF@Ov{h^TL-?52Ek*0Ou<F%YVd<n;sBn(REdXTtp;JA6ad4k)*DMgIMAf)C7
z8V4!Ivkx0U5ZYl(5rPp}gRSF%tlt`20w@5uGUZ*Z^!lxx)cvxCS}?RBN|VbL+Q&`5
z7)h)x2JrgU9%Fv1YoBtJ>(4ya$KN%0YB*%BNbM5P8zN}_jhuMew5vA!Rn_R5h+6rJ
zLwD`!72OecYX;rs`LJOl5@?$D7St{~Ike66S2!`x{rk<$7rrO)h;84$5U1hHden5p
z*?$q#w2m7t#sA56<PiRI*t7lLT*0R5|2v|fY1u5vTo-di2Sd0{96)>gr_hEpA5v!(
zPl8RuA;vytfmog;zs4YQ{&=vtC6`y!<u<s?i_Q0O^?E3pZSv@GD{s32RnUXqb2)4p
z{<FoT=cK>`-$Q`!#l(Kx5NaR{D4Iiv>Mi}+RHH}zV-!pc;xLkzVGkq-71odDD{c_3
zKj8V()wVdiGW?<V)seYVLN7g;vVjSjsZ($;1IA@G!bj$)tKBLD^iKe=c%yNAZ#)8`
zGdwxQ#vmp9E?^@W6hR9=hp{nm3Mj#wcFILLTz2}1h$t&1-7@KNxs8GdjF!=oPzedq
zq^#QEK%`@m9X6E<0n-!m&%8H=%6?&T-6|}9$8xnkP)N$^%J(Z6ZZpB!gBxSO4~PA1
z$eyFnQ1AhH&5L41Oum}_AmsiUY*D7ur*8_SJE<?nZj|?ysQc|cAy><oyAc#=laaR*
zZ<ms%F-EC96NSBBQibQ;pf^62a#x=}LfKF-YP0-%FU|*hg=wSyRoYt<du&#27vwEl
zB{C*AVZzRbN21@#!47)$4&>Zuz?e|zPfK~Uq;HmhmpG-3VC8p87>psU#B=@jIkPX|
z%X?7;ZcKrDhE9&#CqeZ|TSD%Wm}E}Cgxs;ruL^aZu)mVshbv?`yDInA<^uGGsNaPk
z^=G|5NjZ=rVts}f?dK8~M=hl5_6AHMBlRg&kIB{AzF^`+Y!nh=MRXPBP=5~oo>DN`
zG@6ufxCns{-w4s(D0AZWzLKG%y9<XdzuD<5{t78jOb?Gqw9wMzRIfI{9)pkA60~->
z1DEK0R`K-=hGvM?ctimo)XIq3EU>EF6Adep1k_^|92-XG_7#t<Qt134n{-oH?wwi#
zXaZy(eJWx}`-ov6WM^<+FAHA@sd`A|3rUV5uM@kQV|MHC4Ti@TuGZ}Pcl=PME_d9>
zF5E*blbrJ~vw?BQ3ezmUxJj$r+iEe_3d`Z3srFmYrMo7=jbQWFapVhp&zXCK_wg^h
zffq=Ke>X%3wp*x2sELE88c9|~_^N?{L1^0XXBkqKnkdxJj#9AdL(jX|eM@T|3jkGI
zn56vp-XWh{qN8TZNRXyx=&=)IxtP?XE3{b_c((9&SIGn288UomV!(yqeE4UxwoPb6
z%l7j~0CoH2L9ETDAj^9l?S=z{gnghpaeg?!dQ`ye?Sk~>^`Ops)%L}%_kL9*j|l7R
zE8Isunw4J8_Km=1+(m-U$CdMeGzVtWYM%^gSnA8KXo!eDlT@!!ZL)5gI0Yy^T_UBU
zof7pbrC|yG<ZtsMq*I$OXRm^*<+t;wAPT$1sn~bpRv*V%xPy^2{*m-U<k(g6xXWtJ
zdu#=Fo<0J$R%ayBoEVm@b&`Fi=5+VcBbR4Z{q+Q*uuDGHS1;r=J>a^+T#yo9b5!o7
zbI1DbBjzTL^_NTTw&P|wpTn>3{~DiYaI2^`hX3$^5%oViqyJN6s@Bx@#1hAP&xGZj
zv!)1!h1I4)2FZnxw|qpj!h?Z@`3Sb}30F`|U_U<2y}gBnxq!SdF}2W>UDTT=5DExB
zZIN6tKklGj4eWNVqaa$qKlf%QU24p~T~t@-x;rkuzE7nXeyHkCLE_g4E~UQ$M{}8X
zQ10pjFGsi;cm07R!;eaXlB|NM*PYQMX0J569nr|FOrtFnyY<neK&a~W-xRo*dLi<%
z9t|)NfDfnwXb0Z2o>~5r^ll>@7&U~r5Snop8PR#r#@C6Hp2LHg;Lz>Ve*BORhIqiu
z&Ey-ww_&S^Xev!WZ1{_esP1Xg!{q_1cuj0pNH(<wB8-WE9Dpz0EZ{R9u@Z>Do-Q}2
z*ND{&NC=;n-{bUcfZj`cz;>7oz{+2`<IZ2PgY}FTTj@pc24F7p`pjJZ2+M<=x8seS
zx2=txx0?=OTYH9yE8`xkW=>Fc{_<@=le=oi*1<p2Qq6A+a(Pt%LC-bC>ZA+kLx-3B
zrfsJk5ur;VW;({pLBG2sLFKIG_5gGsvtIQFFO_KP#5w6u^nWi{T@JIr=dlMlr{tXe
zVoVt3<q^nVjg@l4`~@zPZ2ZV*Y@?w_w$BTmpWBiDrP+6;H6&&qv5yoO^0Y|r*Kh|1
z9rrqMQAv7=sEdtd6s+FDr;@ihh8sdp&04ZI8z3HY(uGtmW;Ja{GI`>Ni6n2GUATv(
zE|(qGoC8v~&M+jyE+BF*Ecr>3O`NI>aysP9jv97j{qk-r8<S(!$;q~+iy?CFdLF4}
z-sASP=<mOO6vvT>tj3&)X2%?hw>HLga%qsnPh%r<DdMG`%UgxtY27j;W?I{<mmqK$
zcXJv0mLc*Kh+D2{IU&dX5VrV>DpYOkho!SH<L7FEc`;uTV($HNKvW$mKiM?h+SXC#
ze9T_OI9MuP#l#xm)TgA$WhsxoXy8L=gd12D*>qgP^0lD-m!F}Vy_<6hPiA8SkE&9e
zJfR)i1mb$r$BBGEWQj|N6+hN`n_z;8?ifbRg+wdsBgAf_dD5x|XM$iTbo)X?6Bgh2
z&NcYTZsd24S!O9K8HAQlB-Pt6=|SB<^_zI51HM|uf^_-<K6}OE1yY0pYd4e=#Xo*0
zzLD+Qw|$Gn2{>(Lkpi-6k7<+aqVoNlGlc?(K(kq{j26cIl_+|v4Lg`N4MS$lJ+BGc
zB;ReZ;+KH4Ui4iyUiEyW=A1wUgN(LtXqMa9>IUCml*a9ThN61Xb3#HNE=?{(UWv4Q
z<}g~&i;KS5O+|-^n!$zAeXg6y*!jDWb-z6T^UaB!jgXNb)*`%cdE4r3+se(*appK)
zZ^n3Ee`59tz*9kCzP<jLm`CoTkR6|PjDqqBX%_MJ^ZZw9Tn7BA;$Yi>pd=x@pGDWs
zQ*?J!G{puoT?UMsr<SQ^)3`nzAAXU{iN|(tVN_6eN?9Q;1`g4h|J9wWA^0-}#6H0o
zQ0<#7;Od%iZtOiJrY=rTx{>Ouh#wyu*|+FL!Bpyt<|p|WF+BAJso2(Vy_o+;2HcE0
z9{o{@J_@gZj}`r^(;e}j+j`3EK1VIZS>%PJ+wXUK8N#_J6rGyVle>#_BM33mHyIs*
z;sQy;7phVhadAfG9o7gpyT_9m=7n0EVdC<pW%8P|>M0y8cVswm`BeJqY$5ZwGu+_i
zWArtl5DrnTB{v}QSj3FWm;IMAfk3P}|3a;AqO#1>{MAcA@-5*O8M3yQs1{u@MPe?4
z;tY={tlLkIG?|mWx_VH>yP%~Y);Mm<Y;G`wosm1YON?mhM<ze&w8GMsBSeR1q<d#W
z2cy)PvdbROFw0gNy>)S5yv7slYas(|@x-gFAQLL&)nAa)#T#5vUQ3Wkd&zMx)Jl+1
zyyJWD&as|2K2K97;kgss8|E3;2>{OEkF!ZFSXL%u5=-App$MAumY*DTZ<{TsYQ(pf
zEmmYoOz?Kosy1vmvgQY;u|V4IIo=?nlU{QkI-Qvg27)20p$1_-zwIxI7@6$wC2Y}}
zH9J2EorD)se>ZeTJ1XzjXD4RlQ<};r@i3>L-?i3RA+txALH>ArZd=qAq&8N>OEvFY
zng2SChF>$gNqf<ddweHY4ig7$@%UKcWy(guJHSHYmX~Vytxz%9X|}z=-0jjIDs|=R
z!TCn#hmr8_L%fJ9G-t6sefUrT|DOYu{r|FNUB%x@Xzxf;X*yWg1MR0ND*Zce_21L5
z-Lb{t^m}!`tnWJf%4X{PF8I8MdWE?8_K~8EBGb#8^;!~W35i4lHA#2#u)Q7dv7PVT
z9{yA`{6N^7L^yfeQnK3?YfQxDwzkMpWBP6A6A`LA|Lk=O%EZ!G?WQp17uH+g9<fm^
zkPsa3iE+u)2%7;+3>JlV+e6u_jWW&)o<HI+GT{<!jugo@qX7ZZTcQgA;+UFFgZ=7y
z?8<%Gm|PiLA>>pJ*C(8@87-lhR1(fh{dloiEm5je7c9xnGNKLhs<YFkcYyZZWOBcs
zOa?sP)cblWx$ks-6tQ71=ntWMJ4R^!(K|Yb@_j}6x8+W_lV5(t<nSKb@!(irq4QBW
zU3hzH*pQ7eh@8q_TPms}Z6^%g+<bYRnL&!O?od^%RT@tQn@@cErQ8Z9;TXno)spej
z*!v9^bL!`CJmgpP{zUZ>Zq#MnyDD{(P8H%shkK8z0lyTszLGZ(ERv3@CljCYDmQUs
zZqSv?gjjCVg)?;LM^lOk97r|<(5ZxKtH^-G4aE|o*$Id5iP<npBeir|)5fIb#A73m
zo`i9Vi$GF3_Js!Ohzh@dAlexGK2=d4&Y&2=9!=>2zXN<UkM#kaZsr2_FvZ4(;N)_<
z#$!A7cNlCW<#Wa3npp}>N;uar@dUA3;Y0K11RZO4a<W*Bx!RQ|h;?aK(WGwYkqTYI
z%_Vz^np{%+Z&PjU-@6OlVSJI0PTJNZ<3%9}O(+<<B>CWp<WuGXrIu@g*8^lPKfG73
zZ|yEmTSSN`m5Qiao`}eA;iK7c(JsPzC^rhqq4lqvSDbnxk4wp_x);HMbwTbpBG;|T
zq^W+P@t^&>Yt8qc8@Xzo{aS+Mh2k3y>s%)tjQlf<pnQ0pD0aC6oUHnU8Q~%&H$*FE
z2k;9ihhQOcF2T5Ju_cLI36B@wy=6biIR?(_6M{^y&|l^*yrZtND%=YLtj~`=)t<z<
zEsYA<g{-=&zDe&N><pn&=LC(#F@|5+%W^Cj^hB+1XC43l*A{TNU*+MS0$%CAZ=n27
zxk)9^7E=Vxf3?WKMZg|Y_cTt!w(>6VC}&WJ-h}acFr=VhZ)##aQLl4VfRmtjQ$_?6
zwDtK)G_nDAK!)6_*74qAqaz1+@DlfP^FyO^H_WC8RAj8z{<9|`?3X?|oZ5qeu*@h{
z4Mx3Mr;!1&N!^yCK9Tjlwg`JWtri>Ou|9Xy_Lk#q98Ljt=Vhn>f&DI$=!l~mp2pkY
zHhSO`G<huGar8*+{sFQ@07mI{<$d-_E~=Xrqf<@S>Iw|GaiO5REH=3`+c^!!;V+3E
z)H^wbsXEIP+6+7pA;Y|h&lOUtGrHncLGq9Pv#kUG>NHd(NY8>)Sn;hHix69twK2k9
z!jGlMpT&`*lfF*5lA3}g6GmZjsd$9Gu+Gb>pvP0IvVt<ljB6SZ;RpA6RYNTGTxMx5
z98&_QZx_BmQDhJ-F-X(uG^7a+K2eINAM+Q4G$K$!T@2Ixfu3eX;u8BTRj<c)-j`Bh
zdpduI_WqJhNsQGBG@okUBF06}4za)gB}NfdhoE*3q=EZ7rXyz~NmC%o4L(k33k|TD
zUvt{l*>(2ecpD@3mh)Gs80pD%Z55R46}H{RFc|_x_A$>i$s=vM%j^^DM%q;wJako)
z+ub>XS6`z?@#sw%Vz%X-ntYF<oonvuhD(Dn+stqwe@7MnHL&S(7~A=e=^+01hKA$+
z&RjhGe+`Yl>m8gF$YDxI5NsP-`T8x0PO-cga<vM9owXhPR$-c1mL2t3O;*fsUcu%(
zv)>Ok6l@~CH#LjbLc*zaNtw}w-kjx|fOXf4+_#rJp<Ea*+$?Fo%>EdP1xi2C?UFDQ
zL_^s}iN0oxu2WF}CX5`?RqBUBSZ?N?aI78fq;D{)Fng-;u$0C+LEn(1^W}FYu%4Z$
zVz4HW;xUC2>VkNHdAkMCtbz%3A?Cnl*mk<5)fTcsvL)s^irp_vV=YlrW^2$F)~>#)
zXpZsWmN-<rg4S1e@U~vpYy97yc`B}x6P2W99dWR#z%0b{R3fLpFu3LXNd69Df0I+c
z;UdL`TSJ>7-(KSqrAd&v;zTH`zu+a`5QQw>9MsOFXZd~q4?z@Qu9e){(LwNcg#t^U
zUOx!KLdy9-bdMUaoU|(BVudTw2RNp{{kFHAn)Z!>>%D#4;r@E9(ua<0$mJAfz?C2h
zhFYdApAVVBkkuAnl=GJVXL|W_H#M(UziGHGMe7nhZBCIWnTnzKPl7e;RkhnAqIMo{
z?>~OF78!rMk737ptai|y9q~$|`fWMD4Qut8J}G={)@4GI4vvmff}r#2<)-!D(R3Wa
zc1u*9>frK<*5W@U4%b8}1RSfsZ7b$MDDvy|)fGA%_VOHx76+iB%93rTb*uGh51OuF
z(E;kl%he8A8-L+wn(!pXO4UyHm@*2Hhf4DLUR@MN1@xRXHfF=`#0iTG&q1Q#e$ef=
zHaX?;JHVSj;SZRqCYm0WPNnq1JFHT;G+{A2+yXL_-WIR<Lu+WzcBU-ztgLUzm|<~R
z6Us~|g>DajZ`^t~kP-!??-i0CGAq({MV)A?2wLg=kl-)Ywa{xsN^tz+FM2;)*s0g*
z0}0tU!Vq#?!p6<Kc?WJm>O<QG$<qnLKF%^GSp%V%A!5wN-#&lA@i!@Fal^os#nNGa
z;pL&F&K?VFI%@+3maXC|-uqaBlSC4kd_i$U#rWkdV@F%5f^ovF7@D^0vBzmo{=-Gk
z3D4kiu5Dn@HA1ck(iitED(BbnjP;8QnW0Jk4H2s0p?1cs0$Z}Rp?ZdQTnt-fmh@2_
zIl`ZR_#{HYZhu}2I6P@?*;G-;_$qh?D{=Y+Es{SXnr1`>J;-bf9lsQh_j`$o35H?4
zP1rl>42Sw03mr;s{yE);+t=(jZAZHM+NQfS1VS-;#O<Y-LZgpDc0tf4y(J_!yIwNA
zPk39tb4o%~=AACZ<~pU-B)L)9{a06WfjG_9<ewNa_20=JPXDJVsWPU}r-YR~rdlf~
ztSpR0f>1ojj^T-i+w!q*@(8SMPybtZmECH`(Avawrw{e2F#3>P9j8TjbzJT;!<TsE
zc<6AIF9`lb`i$B+J|w8WvA=P=v9ED7*?6=By|*BYe}OW&j@%ek91+`2mb*VSj7~Ks
zj#UPx)TOhO&s3d2yXL;krfHieHNQ=Ch;zQ~@TB6xt7IitZjIjYHzx=5HWNm<HGmN<
zshvUp>5`JSlkZ$aRWegRiJ3ar95wR|2X}0w;mZ)FWvadWWchKpX*x`S=n)e8J6nK9
zQ-pBQW<etUHuwj!+Ckabr001q9X>4aYbxj~!1)_;)N}x5e<Rg1<f;Uw*c?s=<rmJN
zwQZ5}=(uTUi*PC3z;2QFKDPD#u%ry_(|6h-!5taW1M+7;0PC%!9hgUZ6w&AAExbJM
z<+|{;-ta!*@!m7=A!+XQ*Ys38Qm&e}$O&!j^}ps|nLkk?_G5kckPZ6JNIC!ikebjz
z^wS-f$<vk&nEEqjoWM;pnU97LYbG8U44WKEp&&(QHV~79hc1(_kE>f(MNPp|XU($$
zE?iU6k)pBx(RlHZvQewaHd7dN?#1EQf3Cgw*1<Z<(PA@+QPPF%@$SVx@9ie=K0RkW
zCnqN(<#qY5-!0w;_U{pD9r6RK>K&p3mt~Lo*xjW&59+VM5Fw3gYPxr|fxPlZSM0$2
z9cJ~{6v$tt>%0o5iUJ92SG782>@0QXNV>!dsmh%%>ij<-q7_~dA=FqOA;RJa;!9Y@
znqi{onPerjCT(OEG$tiv71-M<{Xj^1@%LrOQq6Z9@eT=eKCGFF?>UgA;_vGaE7g8;
z$ak6@7x6RYer$+WHCc^X|0$Mp3RwZfN>fY@od`0GU8jkj136L=(?fs3N>CQlK<|Vs
z{rvt3a-=HOO;)4ae~Nt#FRoYl{h#|f$sCmW39zrJ#5=UnKVv%=k~z3!*9Oq_M*T|J
z8uA9*0mgtDta|-UEKmt>C%_q837iE0!3?6z(2rn2@FJfvsYK3JuRI`)+Zf%0jUw9#
zhm$QVrxq_1AWfYelg4^x(UQ6iPn{iV58&c8M&!k7Vin7FVp_rT0CkKYy6fpfEJ5QI
z+)2F?PE4U`#wbu?>T^$gC;&_e_(=We#0%vCxB~*f$aqX<T4O)>@`=v@|6GN~g<^n<
z6;|9hpbTJqFb}{LIB9Xk!eGjsXN(Qy1)~6n0Qw4AV745ztzQg>_KZW=04^S5I1P}U
z^S4i3y@-d~K49G(C&A{NxHO(^n2rHN`npX--0P*UaR?^Gm>Rn_V1K}8;KoiE$9O$h
zd*MffF*;Nm5CwGb=+oh!LOiVvHcrD_V7u|TSn5%A*gKIB9E@2Sb%KN1=F}qk;;ASs
zjl0?nN`P&%(GJj!)$r87IRN%5>>Pz9>pp@UCmw^#FafRoFnX<?6syV*+1e!IKy15S
zVz3%^*p&-d3!B{(6WT<#6q^Oq!83q5sbhD*|1|T`$3E*(!anPJ0wCkzur_Lnz&5k#
zO`@5CDz<(-9?*Fa8I*3vU3CH^f$+dw^G6D3DV`woN*jF0@rv7(vTYBDz{@py1VLHA
zmO#O&D{(M0n_tSdEx^$7kqX)j41iwoq5Peoe?$$)+;+_@>lp$H_JhW+SmbFQzknZD
z_<OIE!KMH2$*fRKynsT)lvIf;8Ym{9dr=H~f^@PUn(4HwpP3%@z}Atpjhb1uzoA2D
z^w>aku&tVz9!Ij+5A&Kxg|p-T&wIQVAfmD{_wfPWOClRUrI7<(%~X?vs8&0Ke%(~5
zTcMfUY1$`VO~sG3R2?09B*Zgf0#SclFIk!3uF&NfhAi3ZLbUN)&iTPN-e+)LsL;+#
ztr7dmf6Sx>VY4vutE~3KJO{wGwe8Dhb!3#Y8s@3CEkR2mI*AFM(PI)7r?WM(>_$lU
ze80x)530--dje=Nm7f?UDHF$TJ3IPdw@m@T-?B*9uA)fd*I!fsKW$7}KVeKw*JF!?
zJw`uP$6j>#wbA+2D}v0H9BdD2!P3a~$Ht42B%FsWTy|&Xv<--9W(%rNeq=Mt=IT@Y
z<sk>j;1C{|{rYPF@<%kn+zmGqMi?fE+IdF%#1@qNCI@Sp%rhy1>sVoxDfm90`=Epi
z2bl{F4RS9eAJn7s^=rEyGoZFzA6ItZ`R}=YmwPpa>bH?4*wv?g95x@A88LqBbJRV_
zqPFNF;v?x&li>7(g-^N-%fD;fOe%@b<DsdkTnzZ+8*P8QR>v$kMlH`N7qt7^nA?Q#
zrNokQg3r%iZnc`qS~;>}srjNZJw1x8r+)Jv?pf>#HwxsdPL2Da=FQa*$q&fq_g!}`
zdy&<W=EUAd>;MfUCyH`Qs&Zp3P&DdoRU!ri((q&4EWc(#2HS3haf#%NUbS$NPbikM
z#|InUR6&gvh07aqG`V{dRW!Y5vi)~voYRGt?a{H(=E&DX&-0yadb2!~gGB|$R&gV%
zWKosH=9j5nJRzM9$GI^GH{Y}SCT&}NN7q+QGavhYqtS9_mY8X9+52wneYpwax*x<O
z(s*c6bzd#dN^P&cNZE`lF==0ENC>xQmen$G_f89<T=<>gIuIjl+BbYOOVwJ~RAYo5
zqd((DpQp(x(OL9<Q*tISU)I)!;ls2+uh?Bw^EjH)5ngIa*q!!Xk4HUu*@y9JUSsW{
zA1QCoXI=etKj%;ZYkDj%Kf+yC?pk_~reI>rJ~vM&k8bJeoox$gh3GCMbUY{iDe1_f
zRB!Qx+>ezmE#<1vRnqn@_ZOVXxF;Kkt0FF_G%3ew(*OE{QSXtL+F<0rq3Wt2Mq*J@
zlSLR%wJJ0)<8<jw=|f%6KkFPfn=E%{VeKQZB1)j|b)ro15Tfc59ksrZl@mX<Tf->e
zP${xqY^Er9k42)iGK|kcPTGo(;-c(dJUNq`APpReW|}Kko$Qm<W5<r73|oiB&Rut8
z%F(;v=NB_{to4_L5oy(R8NKk`+O-AJM@nlg?3NW8NjP)$G)e_Aq4L${3na-)nl4K(
zM-WP5U=_&ATRhS^4{4{R(Bo?`>MC^8(@<M$b-fOhItFeZ6ByvNoQF%IzVBRQm90>w
zB`=0{=L^!S{_={jtd96&ovEOIZar_>X`RzweeZ@RFyob|V(*S(&kCHX5iQd)#g1RW
z9WJVx<`!W2Qcf(8!#Nu@+-rCCU^hV`Jeb76Z>=gm#xDVBXlhAVTh5!6UTBn9_@2iI
zvZtWQuwv)60?rjnQ#HKD=bnvwkXk*#6H7vt*U})RcYu(rL#skLDMjC^&?~#9h2SE;
z2d@PzHcHq(3kn20>#Ii6-r7<b(b;9<C6HgN3)2|Kc(X1kGh!hEi<y7ylF8#L)v(e7
zTml3<ZE(NE<(HqW`Cuq_O#~P{(RY4vLo{%1I`b9Rw2<~@ie>2F*vKdn%dPg`m}FW{
zVrR2f<lmLX*G9FbXW~%&82TC&@l6|SNAI{Q#e!GpCSG_h!7IB{Ktxo6T2MNMRU$!}
z4{|SEpdj+|6RKXT{}ob4P5ICW>B~)RoLN-7__{f`^NA19BjIh@J>8Qoit2MfTN;!8
zofTa%HJ?@5`7LfCJ&;_rh#vRUM1I<W@J~|`cJgsC*TcXq*5=cnh-f|!ANG_Rzmol2
z{mHpj{w6VRI|*;Q@;^&8OmU3*#JbF_<66NvGp&Pr+DT)-^rD|ks9#1GcLjW0`4he;
z0ZH?Ot~I9ZqwDo2*pcOPq!Tyr_IEXJ1(EQz>9!46A)S#M03MsOqBL9TtPzGj6#h=Z
zk?c}u*FIi@L_PZj>g%%K3wY-#4Nl5~VHx!l%o>7pa(Py)yWfiKKo7@+%$9PK^3NMq
zj$~ss4l1Hi-U+QDV8I4EADpD?L@(Z?2?C0rR+YcA8KkY%HE0RX^D~IlY)?SCS&12T
z$s6GamP(9f)8-JvLQnS748S_qEa(@fC9k~kfm81Kc;<wLt3N~4fQvN(TUnE6oJF*m
ztfmg}=hOMuus*d#u^gc~(EQ>`-pGkSwU19Azr}=nWNrE7`ivO!uVucUkx2t&)|$r<
zi@sTZ^#)OW3;cK?sK|$Hx#d*OVVG3+bjWR~++~<EKB1z=k^kxlYsF3m3Z|gD0>9~#
zP^YOc?<G=FRgjm3t0F|bW{~a4Pb@~4<R<>NKf=vT`Ssv?l|eE%K6Z%h&pDjIVKjy}
z@3Lh%JKq#Ts8#UylY$3+?Ljf!;VmMDbSs1hDhx)6Y^^ys6&xJa+s4yl*=RRKcHJJ9
zo4wm0n0v9gSOeBk;!gH%;2&wIY6paxO;$Gjck;t$<RMJ32Khp@Y`1W!9;jU7F}i?D
z%{awGnsbE<&Xp!Gq(1XZ0snKNpFL#K=8t8d_Z@E65bZkcI|C??YB%rG!C@9%dwt_7
zHE!|<1x$5ye#ig=)5%^K)g1OY6MtwMSq+Z9;-$>R;@owob7x@?cKdN$4Rhj2O0HF&
z;q!+gVqcXFb~98STImua!{=}r+q`FV=?B*e_PE3_Re|KACw~{uB^ooDC50InB%(>}
zQbkHydwO#EwZ54mD`iSN-Mx#~pENUKWz0L&rOAr3keI(6s&$x>QN|PyNo;0_<bGT~
zzJ8BTcY5A0oZ-*S#pZ{Dlx}v{u`kp7rU_I#0_9=`{se^?UUsv~jJ)Tif|Lt9xhb;V
zaOFJv9Q$ThZsJE5nxj=~w{4s*8^2|qlGfdf*k*m=>I_SZ$bK@O48x9KD?hi9$_m!$
zmoUz;QCp&BM4knYd3Vxe`1M;Ny4d=pGXEe?lIgd0@ddM5LEN-W^-8hY>LoTPR~xKj
zt2sJvbBEo4osnOjep{6eN&XzKesI0oH#+8ykG)ypKOo=mYsVGZ(fkcXx`K)a)nZo|
zGX;7ge(-o#Nudn{(v?HHsp%e9Wu<YqH!1A<g{0fy0_m;s{?b`<y(`bccEReUM+L^;
z{gcZS!FMqn&*OA1pLDCM;C_8a$fNKJwqZ0XGz^m8AoUvLL(-H0Z)t|2mF{4xz3zWK
zyIFznHIib{J0B2{^7RizyYa~jSyG)AL?GID7Mae2Z6$nXT}teNm?0Mk?)-MWx<{Mo
zH2uMf_>>!JU5FOla)8>~FeGX0-_HeW$YX=3e61`y9BNc*7}Rd1md4X^TE>OpgM=~F
zi<6h^7s#fnDgT8SVKJ^3soQn~)bWlc_b`tNB?^tl3j%g2FJYFGgcvHNv|t_#i}F13
zERyB3q;nzhkr#b`K<%9(o9H6!=y^H8|A1RwIDhg)`)im|3ppq1Aq!dECm$yJ12(g=
zr{q%8?1ksVsK`C=YR@Q;LhG84rs<>BdChlNq9F~sCifdl`nVpIX48OAcd@~%`U#<*
zB7S6AZ<3ZZ{%k}Q-WMVGlI<1H^afIk>r4FZj~Clo5wSHfBwyTR3b4>A<}9(_kkZmX
zl?=IO(K>EA+**w=2F_i=5;+VZyy9=8jUUcBqU8oF)%FR&lDKI`_l&{7E4;?rLY=at
zFHCka<sXYS`3DH~_+b7vew@JZoFHA}3i+mC%G2@yoz4hdjo6Ml?G$;Tsfui=0B_AX
zyrB8fe9rSkglW#X<%0S9ZMavnd}9!WpY!uW%jBMnWGxKz0)qH<mpD0S6uC;u(P)JC
z92#rfVqqShm1!CMjeEyqyaq3X1pJn8h4=f}^~y9&f29XN_qWJr`%SVZ*!V9(0g6?h
zl#(}+&)|>I3AYcE?)0Kg>}MKUI5Ce@i+Ml#n!#I=q0{8cA=n*p)D}&I!P+hg6-1O9
zq>mpxGqRk<RB%Q4KYK<<V^^M4W#hkmQ`z)aF~0H)i}$ueC5EBSSV-b&+2Dfd7Uu>u
zD{XuBZ#7I-Oj#1CQ(&k`Zfzo%QU^@75rrJC{k|eu*gMousnV^;1yxq4zcp8>MDl|W
zRrN<daO+9g^E`g5O+0M6D9xf+0|6Yzd$Zsb){gFEeUVn64lf9=aK^CjU}3tc#dioA
zMYSfhbQ6v~a_0~EkNA-l`v_yiRhw;Y*44gXyPkk%e@>z;G(ea|uX?50CSJ?Yf`6Do
z_(&arW;qAl-I^yJf0t$cJ6enXl(4_6|Cf#Z%+%1Vi0wyncKxhhuTnR7*`ljY)1Z!R
z&~F{23QPSZgpLx#rl(kN+2iBmT?XIr^Yr*<po3k*pz4#Web+AOaiy2PAwftSNgjjA
z1_gTfC+f5`v0<CIC$Mq!!{0z!Q;UH>k>S6%z|lYv@N<P(JelEoPg0oLyCYHgHClKC
zg7S+x*5K#&x`#dGCe7B%K4%crBc*yMHRR@_ounNq6hpfEBLT%5(9YE6XQ(Wtyl_&H
z;<v1#z~FT`BHZ4AL<3oC#5v1tR_VWpF>>@wC1H?b5gCT`*egG*5ZmicjT#Wi($Gh>
ztk#f&l;8srgr_w#QsR28x8y9)DcR15R77uv_yLV2N1H8^IYwxF0^`E8xK}BM8w({z
z_QE)+J5fxS%T)(A44w4>K^!{&-*k>2=p^;<ur$HjtvE>?MHzh*aViRREGFJHq>s;E
zDa;!P&-MbBK9PR*oZdnz`2Udh&%u?w+Zrg`vCS3Rwr$(CjTLoln;qM>ZL{N~<8-V}
z(#h?8&fcf${Hnh1cHL8J)%)LDHEYZ<o;m!a#|~QX1YU=AGfW~0U|0*Z#<|37JpGFA
z?|j|xm?XwyT|3@OZcf{Xiyt^2FX32w(5Tz~X@#H9bh3AIQz7eTpc}lllMsB}hTp7e
za_gLzgYr2mJ9_x=%=n(wVRu>TRTbfoXzU9TdTacmg4mlAJlCo$_KMcw&#NM1OgO~q
zi<X;vFo1&Y5@WiE4X+V1=<<C?bpSRlDr(K%Q+56;5+z?p{`NE@wTg;mtcbT4uIAR0
zDd+KCjfz2y9C_T)9;;dKBT8f6^X$DV`d7-IJ6H}+NJCH>>aR!NCHBZ+3$RD?zkyC^
zH}_+4!}8<6bj*$qJm&_k80Xn`YQuiN;1=}u<cD|<r#62#L5y2oOBf{BFF`=;FU=?U
z-M3Wp!$=GA3ulR)YmGxX06#~dYRPlU-ak%d7N(@R17C9Dz<}bdIT7Gkv`DA&Q%^6#
zvO#-_^s~~OF*{;O_+e0)D}C8rb(|N}Uo1k;+m7Bm_MQMF-t#M%eKgqlHA+VJxbO#N
zChf<%B>?4fu7v!Sg*I|Wtz+k6QDScnbec~(E~OL&hR~G{KDBu8nSbZleFodI@=3R{
zD;d40&hUk6<Bo(YoZ(mKYG<GQ%%W8f1!yaK%Z_Qh(6_eMf{mk6==VrbrcGVjzDi^G
zQfZljx7*fWsj1%@<ZwBR5O;pH6oHOy;2OHm8w1b7oe}SIRT|H4QnIiM!Di5HVbYua
zLRv@V8vEAlR?qj5abl~`G78hSPxHp*Wv;C&$3|?|M+&}eqsm^pyo$blNlmz1x6(Qf
zlG0d&Uy~SLmdqSzNfyB^lVBE^{io&f!i-LV5gWc^)+bBj1^U9-M&9%_7qIOLD)$(k
z@h#^~6J9r^v&9vi@{aR<%e?Sw2qJBC_W_wJg{Xv7DnrP87L~#ygmFGS+>5v%YOx~t
znNzv~px;XSL@#vuUIhQa>j5^u)c57fm;1jTjr%tfl6gEo(tr|r*luuV%4@_h1G5pg
zF*^rj<nXBP_Rf5%ceYJPp1Bzl&O6lt2Q&9nGN0otx7Tjo7+OC(eqd<;={%|xr;<oZ
zBqVqNAC4pR?**C!%ZXlNPBuz<&w|_&;Su&+iUcw(8bxSP^Ef(D!8FaZ#B}W4!xtlx
znK3erYPmvgVz*C3RBypHJw^tZu?j~Lk+S-Nn5XU?2%VA)lD8ONX!rGU3~)#QbrGvq
zfk4L)$yRHd$cFYem)?J-ghvBbGCM)Od;$6U0<i0Uiy>5HN&#IMonL%Ti&Z`l{yH5g
zK@zEuJR~+Sfr!}{)m=`Gsgc&(CMztrQehKy>xJ-ZAT9@NCNdU-{*7|TX0SyJnDN5N
zj)40`jxOi(`@sq0m#GB2CA@ep3$9}>0#`a0KI%fa5)zm8iy&j7U|}r8SN$Ig=>rM<
z=mfCSCUQmuNZ@>O&?(Gx^#Le>Wf^7}kCSyN733V%(z{t|*=nN*zchY9(ahJS63b~w
z=bS&S6eK0G1p1~^6u?Aybl-Wvd16!aAePL~5tLMI+`87O=DXDVlE9NJs9T)RimK3U
z1Uz|swD=p_7pE2k4`vaDQpl|VT(VnB0a~G>&i3@G@T8n><4k@&r0}Y3aZ$pT2HXx+
zr)ZC?hnrz)%GgzNch^6Gb2#+4(wE6fg-4QMzWgd6BOgL#_^sq5pKWLMu8wNKF*5j$
zrNYe}>5{#1tkPk<9J<@vYXUvFgcjQx7g~j>2hE=F4y^(y?#3~V&L&q&yO=+*i`wtN
zMs}TGvQN1UtOiT!HmyZ+3KKr>F!-JkxKH4F2o-8=c6i6!nxN*!4-u)+osf$B)nw`A
ziRQ{*d}v3=|F;H^PIRB&{(19Be@}4Z_U{$|#eY$Lpy#C9p=FnTSF5osn5RgGsEfj?
z3*toDY0X|QZQei@DfnCt4kG!l1=P3p(2K$0S9ca3nVew%-Np}#B@iYcp^xkfCkcWF
zBo+ZDhU7v-*$+WhJoK?&RjIjCu`i)nocvKihgCZMqm!m(xpcC4aShxPN08%1?8f1a
zq|OoMV73@w?BWF5kc~bU!z9qJc7M(~mt!f6O}8R3kxFxXXWTmNM$gdkZRi_*?^dMY
zAf{c0o#Cj!r$jZHYl3fna{D!MT|MO>b>~loVLMNr3EZu84S~04>{b*5lBdg))8D38
zT@s`J;FVcvv;;f;BQV~-7o7Wl5ahphcZ*-!%F-$|*W7@R(ZMoMIMX^4>!M;&IOrkR
zgNYiIT1Q3thenPLLlE{$qU=I1Kty|aTFm-*UR@&X@_uPMg_Hu-;}nLr>#!OKBqR}I
z6$`0CW@dnK;PIsZp4}V;&dZj`{-PO?Iqv{g(w3ZfV!oM{sQb<Np(SI5{OFF|(}GIs
zwg?fnSQV*Nquvc!_A*yvm<(MA)zUPlU{S>|5smopBe0wzsaiNGNA&Lxv{b#DZ4%bj
zr@+g#4Oe8QZQzhFwCV=y(`44Md;z<9LTXdwGWLIq672jH;)yr*k7>^k>03~nKT`7f
zd%X4d|H7G)`WHLeS^l-5{il#B0FZ$#6p$F27#JD|7zY2xa&{3;f56<ICpG^2_v`r|
zE}X8YK_z7VqJ?V3RYhbvw`@4wtb|bxBV*)EW|*r~pku^>x!{yc{lARDxml;#Im#<H
zlQn1R(GBt@wl=yoS^*7%%icF%q8w4uRfG$Et=lrSLAyeFbh8F))T4-NiTjh9L)zHA
z@Q%<{rG@%VYot{QqlxpijZ43Fsr>;OP7tT>DHsb?Fsggco&p5zyqBXB9(s0|g1Uft
ziFW9yHX$d233#~9xPSkPw+snY`${8Gt{G)Fp^`F@Y_&J8oZ!ked|pI9YX)i^!r_05
zrOa)yZt{;vsQ!Lz7x<r<>rICxA>^>n*klJ&xojsZ>TneqU0*7lR9U>EQckr>aFsvd
zBreA+s$R#%ICII2YM>Z(VGz__0kWxTB+apjy_ZGL+su1cQ<h<0-zWGDydpOTcPm$}
z6A({8avof?i;2^2x!!6>WJ&^`)1Ix~$P}>+uiB)8i8i$3Vvl(h&u%Xf3`-WV)j4m#
zz2`R-KPpS)*qxdb|MVh|YV=yQW>}dcPAtVjCPpL-Lj>ul0X=e=v>|(Z!b~t#G<6~C
z$h!`}w??Nq(93RSNiLdPZ*A54Ejel1jaEcc@y*4lyf6omr`#!>9jLl}+7~I;BTHp)
zd3MN_<dt)d)%-1F@PoE->5RW_){}Pen*rlx7=d<JheGvX_mtAEe0Y@c)PqiJKXu?t
zFtFJCgShBYZjsYyor$_0;9(Oc55Sb5=~M9z8_DcsYPP5vtJmv^)717BX{4_aNE_nk
zpD2k#_b6|`S@vf4uCSd%VMp|e*3fVczZ8AdEsLv4G`ySJe;EL@`-4;|`ac1V1&e^+
zQ}zjzA^H#u?raA%^{PIFdK@93u*x5QGwy+8{&HpO+kY)%ap_t1Q?h9Ht5~O)8|RFQ
z=)?Z_hoS6`e)u{6(Fpgy_aVIgTO&$T<o~r?*$*xiRs&>2@m+`+lE$n^6FPFg5M~rC
zlAyc286&EMyd<f=Zc&Wwb`R-B5>N&tJ}5ZnU~S^{a@@Ic+YvO_{enkIYpOdM7o!jG
zQD&m*&3@h%fhV3GL6(pchINLpru*d}K0vXGZfBfIoHJ#}vh~9zYiWOwrOTv0w5BVr
z;@)AZ0b$3v3ug^)ZEr@UhW<53chKRklH9vT1^IjZ4_Pb!6soFJ!}4WUwD)L<&H3($
zs9I-R<)}PdgQ*4CwWYmxx2S!x=TDr(M(b>YP~l3R&H*RnYJ8ADQBaDq4@A-PG7lE9
z3yUSpogP^%<DhEcQszsj1RU^SgtLj#ZO<zylG`3a_>Hr$TofI&+_UvEwPhAPyanv=
z39`E+!49_jB*E^K&3r%T3%62kg6p#uDJ8v9)v!V_=8|5bN`g41B20;h@)49Dk}nt0
zdBu#u;s>wQ4_Z(WRf-7{B$}ZItQLf$;J*LZid0RD6*uw6j1yu1`o($wXAIlk6-^!e
zt3%Ta#iqSA9EeIkBz*z}JuS5Il8Qa8NehS_Eq2s_hikUO#^vZtYxB#;M{V9CFUuii
zO@b0HsqY}bKjpB)Iv@qyaz-xK=X&EL$H(BRqs#yEek|`x+(9@prU=z!J6#dcp*^5B
zCJA0~G%3a$plMb;u9fPnKFZ4?kb0XLGiUBgd?*VroOt1h@rZ#2D)irjN<hSfHh|61
zBsj_RhXiSK7YdEC!isR!3JJ>uMl}a1@YUqY3US6!ulK?nf*NQb55R#czyg&A6mH!p
z4Qxb_MeU(YwfZADnj_7jDAe@^n*&@yXW=q1Zo;C(v1#aXP@FXSV*=nnU1;n;5O-8=
z8SZFyhH|2wA+Ev9)O{n?)O<szF$fQvqZAXAZ(}q3XyJV+pI!*+Silc{qroQvKZ_ks
z^v0&G6{NG>a!5SGu@A^NbAn2BEtCycu9TzT;$~WcblKR3oIBDe&k+k5&Zjyp&O8iw
zS=+`D>V)}zc9hbu^Xm>X<h4cA&QxRmQd%i<g;(kJ_lPNo596tH*o-UlDK)h%dM;B}
zq{Ml)c9X)M9sNDBJUjsZjG42glw4ym#sIzfyVtHx?Kc-@9V@HDS;?YOU%V9Q?Xj_a
z;#xQA-NH)|Sf;&6r8dShdy{g_>Se|{DVv>Esl7KT{J{SA5aruqXUZ`E;;SsIsHUg{
zw#UkZ1*Tr@2?f4r+o^QpujKtvXo(2FSHTV0Tx)AU57*@hdaN1(#RVI}7)P33`etsa
zkHP?3^TIiku@9f2eMv6svdRihRQCw1EIA{`m?`-cz6G>mwwLa6nx0G=TQa{-Qh_+$
z*HTpl9Gv7It`D5p-U!<QKStzuHRfTuZM2x9CZm)MOwF|K6Mt0{I=hVQiSOfKOofNl
z0=`Ca_laGlb19|=AsrM7es2`~9wqo)J#3#xXCRZ6zILX|JJ8U1Yf2}wYpQhMBHL%G
z!$|5=@sV0V(rU|@A-i~*YBOe3DAx!6X9!X)Vptsg1*-lm8P|yYRn{na*^;KK@TvJJ
z-!`xPrrf5JS0LhZ`8Qs2x@Q5aNSLVuuk9>~qV6knd@Ccnr>&vx+3@UWhQ?AqnJdAB
zyrM1E%dg8l63_M5tHo1Q_1=t&LegSu(l1KtI_d7Vk%!QJ)NV^<QncQ~ve@txH9Gy)
z_G>jKXNq;l=Q%sGD~Sg4Y>*MIFm-6>%{)>Um^ePD7<h8v4kTGpJHxrdkRBGa*xix2
zyF_30n>WQxk`S}=uM;_N;&%s4Jr|^baBpA3==8(UUr>JHo=$qSsX6U=G<Frm4CA}y
zSWH~mv-N10mK2)-z|J%VfBa&<G%<guGj79%{6xj%Y1*z1>fH>!07f~?4kJ9IICEhX
zOFvM)CrKf~O9Y`%W5`UL8CkH<i~q24BC07KqU1oHyowDgl7V<*HEWJ}(YM20&#5_-
zf-6*MlrbDjR=ZT9k$R<8nXwa^K-}ujWyy^QBaPaFpauHkO9HNl64Go0By@{V&+LR|
zQOknXdDv|5sK0lH^{mZHpoo(n=u7%=&?BTR;HEkxC*ZxLq8ggKX%nU*x0vV`hxA6C
z=}13m!hwo$)PJ*aI`zEl6x{65MtFz&|IIc@_zysIvUfDGwljA%H+6ThcJp#Iv;F@=
zRZ0B+e)*p?l_aP?=^^00eDTNm<6HgB^?%P&mt?{ip&wz4?M@M}X4-+$fop+8QYDx*
z*+l@E#2gZYP)&jcMqC?tVc@d2+q?E}Ku4OwpBzjXZR6FV={2+@ZYygVRt&z&>iVpI
zU)_2Bx$vB~Z3jIuSV;Ev*6VfcckQ#A{p`nzoBQ>5fn;QPprh(pAI)#Y5>0h)`J*N^
z0o@~4H37||5gJBiuh2<ab%QdOrb(1kN2OmBsgBCOG(xk{4eD+nLm8FY_4g4&IjMaM
z2EV~NYP^tyio!Z7znFwFD!-_NGOE6~gw`poE49n+*AM=Ny;cI24R)dL)ZD1U8rIyf
z!x~oIxWisMGYY0(`d=N@Y$#C67cqkEf_>GKv7CRFwPx^xsP_>B`HJ|C`a*l-8CyC}
z7$9h^Cf&DYMe`ftC7Z(F3G5l<8EhB4w`#$y6Y7QLrdvXQ2b>R{uXcg@ftv`7uWA9l
z6ALI&l&LgbJO^e7){EGkzd-j&=fp_#p&)*(_F!Q;Z1)O!!*+wP7mlMYtQ=Zid73X#
zwgA>|yr<jW7D#B#2Ib*;8XW+^2aN|p0Feul3ziFI0R9!S8~hy<2zX(?fxW?vRVb4T
z7z>~bxVB=87eL^H_k{r>0#Sf4KmZWprAA`KO{fS52b`=|=k=R}`-5UE=uKn5SBQ7r
zA|i(12f!Zno*>T3k|MiJKy~0p!9wN(*^T7hTz?;%PKa@|74(ZRV5TgbuiBNG39B6P
zoxos-JOGypf-N630~{DQ(T{FK!-SB5_!0o<movh2qG7_#0Goz524NSXSAwDg#|bFu
zw?V2qVnNEAgX7y8Ec0nk-9fGga{_hf2TK9N=oiaJ<$}n7n+7`%H1BsoatvAG;Iax1
z{_i8k>hS(c18XMV7DAT;RVVSqfH@L_k5fl#6(3$G9qa~2NGn3m&xDZ-{;eqnq%rMV
zry#|9C&DU%UesvmL19>Gg`&3fxtp8EhtBY4=l&tiJ71*TX$K0E1Devs%2)605AnWz
zx!=_zcT+#gYqjm0CXT&J0W0h?5`0N=Vx$A@nTV}fXWt@!Je2}HO<<Pz7Q)bagh?@f
zvU)(p_U?#jvRRZ)JNdI@?R<-}L-K%#J%H~D)*rzM8*wVcc3}0u9<U;5*Ps()GuJ|A
zJ>VaRb7R4|M!8)!cJ}ANfvaUPvEVZy6W_-#(Xubz7fai=c7;o>>a2j#oT|L%hNe8Q
zX3a&c73rewDIPcPVMo$(+yfGfYCldNu6q&~($g9mXz5P}F%RjwptR~&bH_z9%MzqY
zR`C3SIjOwn+8~^p<J!=3QX$|`^awEH1G0dv=1~opO2iPFzv;R%_b!d1aksSTMlW!F
zt;EW^ym@C|svb0LBWnJ&GNR$goVGz?UrtbW18+5^xyM&tEnsto+tr%6f7zR@>GvKq
zoteANls7A+97g+A)DRIVdK)wNBuSW@dYI{snc&!P&#m#*xd8<0`}YoBbu(j3>yDAy
z0Z#porFeoaYg?9vrPHJ_G_~ZaczH9BGfcjmxEc>HinSONOooOAM6=racnr*z%3Ft}
zjxnGO-RP2v4+ie;kNH7c^`Hi^_)8V9u0&2811k4*rM{cX{=v||&`0%OR}tO943&4=
zkQAP#Yy|R*scp>|_V&1|Aq<8~JG~9xCOT+P5<NN7>ir<*FgMsodLX^Vrp(O4Gq;Q>
zs;13Y6056ZvMN5bbka5JOpne!%(i0GM&3-Bz3eX{o`w-nh<PfoIDXWOM2P)4P8G7H
zrDYiOO06M4EwlU{y1q#rx^#+pN=?&CY@G(CTSM%8?Df^vt(>O*+Fndfr-3PyW$2u~
z3c**;u%3lkB;mXrme3!;4vl7x0-r&{%^U%qGt8D(VHc6yE#t?an=Y%yEUcQu6yEXh
zTXb!B+Mc&})#n#hC6Ms-4)$)CmLZaYn2u1q`wU8AFf5U2OR7}*sy46LMUI**q%4y}
zp{3dwY&Z@Rou<VX+ls_z8Z4yB48JZ}WGAL=$pwPXPAjh%P?-46N!7$rG-=A;s(p_L
zAGr|gIA8xJlijo4s2qWgLL8vy=t;;C0%VLXb=jO2liDPEE$SN?Uo!d;qSZue_f%38
z$)!3H(L568a?o%MUL>~BB+lU&c=B##%6q5GdP1lxSGKN_gE<gq<!CrPjAmm`vSB-(
zveU3z6=pgkIP*j3oHdD>Opw}ATEt>8$!}kQHM23jv^b3QNak^*@L(lzw4kIEZD`8r
zv5XX1euw@Ol%76Ns@P_mr>9L*vBZj4zUT`IcRBd(ONnOC^@#`VZeNLdg!T!{phQQO
zDEXZzTgwwuPuptYs%Y^VO}LeG%_lN_@9u}~8rdy+%B{&YP-rw=#z*p}u+HVP!d;{I
z+q*&Cwur@ocQiwJ&0`zenis8|bCqCzmq_Q*Du?4!!J(^mvvHHS-$!S_)vA8yQei2G
z&JWkut)bD@Sn)Nagaf?dF<)*duL-|6;m)x_d9UzqohAzm`j6BCD}}gM%{4i3)sF;u
zv{<#+?Jg)63|c!}LI%y6M^G(8-{{kxvburN9yD#@nidc(UISA3s$<~iZV@e}33-pv
zBADA*1+j~I%^QZE89E}Jwh=hK8{&E4+$H)H!PmuSEbAvLL|Rz|&yk$ZL=_CTr=4rP
z>|5aL&)HTMPg$C8U;>)oYEMZs-7YFMlUx!sqHv>4I_gC`BQ*HME3v*77@8~dRi&tT
z=rnJh+;t!=x<tP&$Y}8{)YhNc<Rwj&0UMIp{m8<PP7N+pp(gC3YcWi(wGM41VxE7*
zh&M}44i@&fWM2x20UCUg8tb>YMVdq~e<t|YFSv)Fu|&7R<Ayj5Ep{eV!Bm@U);rkt
zDqS^Oy%Ev7av-V{DK-jTKtqV`G!8uo=Uou7TbzmlaO%tTlMWuGqTevFd&eqChV<e_
z0qf+23GulF9MKMrt(@Yr<sGT+mi@fMqP7HOlS&uJsgNwq8lJB?qK!_LVXFx9V$CPK
z*OOS*J-dZFAeF*&;b&kU@HMmZUF4W`w75$5D3ve;W>@3$U69gE<)RV-6v+%5@t{tZ
z?w6!}+dC9nC+&b5^kEvGw>)W_kE@K$7siBSHS0V+5d`AvA43oO2(^+{!sGkuydnyY
z*5N7FKBe>8n`QIdPbVHHtM_=amK|56yzfmo-Q)o8KJ>MO<-mL8HT@I;k!Z3@#namF
zTcExQl3<0NW<_)Jl5Wotv(^_mq&(bT1TY6<r{?tq%uRkx!}~3lnVlXcaa0VzZ}SVG
z6;r+{A|_0Ad`dte^(Lmk+j(53^D9YW@&_JmQX2R@bstnDWx!g?HnvHqa48=5Nyim;
zUN#(>>nFz3<f%k+T$l^Ad73=g%@=3$54ds8l2d<iqdQ+Hp_1#_Isp_)3n+%cN9txV
z^q@mfva_IBq<{aF84|%b$8ZVDOhrgCqZ!9cBcmHbsq5BYUuiDy%ojN@L$wRPO%a<_
zpxY!3%w{tOcz3at0KCiCbi#H}Zq~HjjKdsY*y3xYK7$`BP<e<_2ca%q5B_+4xhO;A
z4G}W8SSNbY)rpiKvxzv=!*1mx0)cw&P&P*_--7_J7h&e(otk<F3(5+vBjym_EZWG_
zS0^#J({Hy9#dBeJMP@b@KEUpB&Jfv=luLjL(%*2ECNdM$^-;eQ(VUUllH-zA?sKCQ
zhObWQ9kJ~?R9Tm7C-vm)cUYbr=hD??iEb=urG72k@F#lP<@$vBKY8LN|M0|NB@Od?
zK)!sz1^X*c+~j}A;*(|+HieMKK4o*(nG58%gmm&t5C~mBZ)wWU3xxH!)TE^FXw+%i
zS{i~X?uonU50qbFBZ3RW^ED1YUX>!WH)Y_&LF+6$dOmlj<2>I_Ue_=J)ad{~(|iY`
zo&KOWZu~lTI?Ti|w4+Ii4j42DKK26B!jO~lG^Xe?R09*44nSDW_PUu?Bd+dF{+Kv6
z{0Iux&`v*sh~QmM9aJD+lt-UadNiVFYQNvD{EgB>*Lx8k^y{`l(h*v)g=3}l;s>Gi
zB@?!-0rmq}$E=dp6z2C)qcuw-wV}a78l#|T@_X!aBuS--Pod^S#IRI;>hNoB#iGve
z8jp)@UCGx(H<k6Xx1{IJ@Y&qU1%&MZeB$9AqeBL4>HV;ep382NB3*4&nN+^QNq<Mz
z&FyFYNDg<6GJm5O$j4-j(sPO#2&NT_JH}J{D7Vt(V+fg<E$$fA@-iu9jnNb|(D_-V
zm}K=(7j+i(8JRgw|3R*aAKG#jjj1U@V;q(e6STlk%ghgAxa)e^7=Ov!5t=#YLHcBB
zdD3iBU9zg=4Go4?Ej#N5_EKL^-16Ao$}~Kfm`{n1dx&X5s#3~B$p4cDnf^nAOnX6G
z9zp+T59D8Ikm-LksOH~9>xpS8s9s_Q5P1<=I^R<YiH?Zlg9_=1h@!6T(PW6^S?ra5
z{dn0hEII_2uy_agpc?B!2QS74jF}zVJ#8g-QTkjTkIgymf(#G%W;_^Ah8H8%`2tA~
z0wcmnR7j4+rlYlxZ`Fn?BP>aBqk+m`D7QE-^FJloN$?8s&;{Sy2MTuMb+&#W|Cm1v
z4>1rtclst80VaLEFhYDO31))#N+w4-V4O0f5A*D-I7pW_YZ5cm9>OL;#y1!eA`UO3
zHAoLL)lR?93`thK7Z*Z_oph7b_l6S;$`iy-ZBYp!tC?DD&XaXUrRwW@4G(w9fYx$9
z8Dfv?oyOg1KAUBW34<%uKCr_g-j)K`o{zBMDTcQ=P9ZPL&*m=FMLeUI<V>NquqvH|
zMNd!!PnzDBt_<R*1;q@;;LkNUpo3S$fl1p}R8H3IEU?)!bmith0?-WQtqhI%`#$?K
zZ;5U?BTZdET;NYBfq0eEzF3M+rY)nfSLb|DE)X_u4e0!^;=_p^HuVE*2n6N@oTF?n
ze`8Kk(5{qdVMrg%&Q(+>1BaFqvJLfyJAL;NRN*CvsxE9a6mIOd%hriSHLK|!gx|K<
zG~;kIFV~OO@u<q@-4u6MouFy{y2Pw3VeDp`YL)9VL-PZWSv6-pD^_X+(2Z;D&v8G;
znZ?_9`wh60?ltR5lltl%CEcTxHIpSCo~iwvCDCHaJ2$uZ@J|%;XhnO%imQ{B)TVK2
z0`l_>#X(qm@xHa-wsID)JzX(R*2TE#l48o*HKvZ9@JcPDmF7SzJBzyiM61O7)H%D>
zO-Fqp947~=uX0}0zswjqqhN#bW|#Da82u`?7&W)!0c#w_u`U{pA*;8LncfF=#YJ6Y
zE7+fX?<ay9)UZ@P+K#ZS4U&5mZ#%Zj!e!ym2>CC(!04&2_Txg<p72-ojjmwYlq;J-
zS0W@}y9yQc5QB~<%1gInEG{lT)2dXFP!VTybZgNKFw@D0I>zw-WO-))usp{ip{?^j
z*uD05*lqSd*sbzkwJHAWl<)4_&Fq0`yeZk=mN(X^3&_<=Dv^$ej|yef{Pv7Zb!)SS
zTayq93Hv{9z(L3a0^&ug5yFy+Rl4ssHkw#@n=DVp=IVAq)~&|d$qy6Z^}~pZ$cpGp
z^~1;yGeauDbw%U{!$LYk%1}8lsM-sJM%*FbwB+})g2bz*O<_3I`9}3I(A&`3)B8m+
z6rChTFbR+YjMO=^6qZY>(S|Q$TB*=Pje_&3S`{{UC3xu`&WNue3K&nj9lD8`9x33q
z4ba<{BSo%4bFRqmeReXiTihEy9iKsvcpd^qv|o1F2g0pQ+s0VqS$T^9r7<My%X7Dk
zx@EaTxQ8*!3MiKsq-|LgCt}2KEm8UvSsp8unis9&OkMaPAiF3?O<lGnR%KeU&ZHwe
z1JedSyun?=0|{9KPGPc{f>Pm9$d$D4cq!@Ndk_b{cMupmbJ{@Q*Ijc58}!e;I%IdM
z<*4J?l5u1@kh={$ztA2xXI}Rh=_}7JmOFq?eTw<azEX;C1%-Zwpsz(k4XRF6GK+Il
z#D6z{hP$UC`UMTY@Mb$cfL_%$9u3mXVB07WHlMXy4}1q`#vwKPo}s1n?b#4WUVNWM
zPLG!n{S&<>ainK9=`gUC+!0=wW>u4X;9Y_B{iAl}C0P*z@dv3P!T(ZU{zD6zr0=>Y
zgdVngM5~)+gR6_tS7RvDpZZl~z$P5dUFHIUmB)aAY_TT6Y<!eju%Gbo8)uxl<$qx{
zIkv8_WYR>}95**5@5#*9&)Xy10E|l|y|Q-6#FBC4AJlSDpyG)K0uV)7C0a#5sRsGm
zh=YbO1cYpyNgNuSRyMUICMWh-*Y>1QRED_&zS^_)Xxz@%4}AQK_KKpgO>m+JOIJqd
zs0~QZ>Rwv9RS$e?-lUcAi^S?<obY#gOZ_W1E!C&cr3zHF4}C!zq~g;?{wwjHeWpR4
zOHZp5p1IR@@z+e|Si;;sG@sq>R&D0)EXmn&D0~xf^6WFY{_HI3XmJUf=Yp5ZvIVsv
zojB(@<rf7GA)Npl?qyiv!Ydt)0XbDSJci(2lR+4_E3dAn{2h!*eNg$(w{A|~4GJxX
zF8<N3!9%dop4?4T{mr&bVZ-r2#~x!$+uwbs?7T!;eCo?4zHVsK@w^iCP9|%rSA<kk
z(8nM3O7cG-Dp?ppOCS?^ib{XJ4Z7!6Fk!rS_(M+!=?sd%z-bNNkc?M|_QYTll%J9w
z<lFdtV#wAB5I0%kxI%J|j`%HQAQ{sd<5)_jup#(~Q7>iSCtBcGirD;!cQ$S_8ji|y
zrjAR8AkCE)%V3fUneY{>kYf><iHXQnn>ABGDP{f6_>PRItfC0t7LfP9RjHD)2sa<%
z%a=^}zf`4vQ^kBsgV9q{#~zt8^+^Xomyk2`v4EtCoz3sxOX{$QpeQv4^Z*Ek`k8`<
z@)r#>EZz)SuUj))_f;o7Xg8nzc4s_vo11$b8L-$X_OaftK6CH4edhdJPkNv(+G@1n
z`fDCBv>56&_D}*PAqdcbdV4T|ln}Y7T9h}<{j8vKu+>;Vg*~r8EN}yKp!A-3peDEh
z22g&_J&+T82OTK8XCLSZzJmc&-17@W0vAAkk=ip2R0J2mc#+$44P*rGMSs!Q(+u1N
z|BCe@y2lvU7YbQWa`B=t_RRBj{<bJC&+WbX5KCWnvBgYZcA-U0f66T%x{R9%l#)j&
z<`A2b36pu&h|Yq}IUk&oRlz+Uy^LwrwLkh0K*@~BtYDclz?IyP;f!etb7(ip9pef(
zVP!DV8*h(rW<Eq6Es2@JPG_w((woqlY>#qgKg1briMhaDV|6gvnr;turaj~sWf}b$
z!;9_7a^+!!u7i(F>Wp?+3m-EYn+e3G1^mo>fqZ7tV7fBj8UrR6v#v4`Ob$clHU>&^
zHhv$sL93Fl=4kppZ39<DuTnEPoLAlIVozITU)`Fx$fg3WVqLwcbyn@B5tM3l^yim4
zKohKvSw*MOGe4^Jt>W=m$FbJDY0@Hfh$cKWIW<|GP@_Yu00igt<S6}(G?sxC-Ht_9
zUm#t&PawTcPLu&*CHr1pa~vK@FSWsn2`}Hp#o&Vu!Srr&#z~$Hwc7a?>3#-AT*s($
zACpF_YW~JD_AP{{M$?gFB&2E03_C)tjwbyP`V|fFKrh7htYajEXl;cBntblg;RI>d
z)k+IX7K!D%r<o#2r^XAm?43us;{A&5$G1funqT^|IFLu=5pr%$erWPJMFn)i{0lpY
zR{iR`crab1Y6?}STfJ^;Ri3{pPCn*Z_-C&BOh2YOt;_<?;IwZGniB_{m^iW=4jT@`
zt)++&Q}x4Lr)EjJNH!4Cx1l#MrfS7JN^a>ors<ouSf;j>Q?wm2kJ5-800;j%NGQF{
zA|%6rW)Wqka$&$95ME|!k`{lCGPWIzi4>Adl^=1AOnkE_&X{A`sFuEOE;}ZA#iNS}
z1_1bw87<kAW($>j>+y$BooX#I)GAxH-)e;%`Poq0*DPImV)3fa$u{~LiWDmzg4F$M
zDVs;BmJ|$2*$DzRv0-1?SKsq@D{EU0##HoW8&(iBXt(VmB?c{uR@}>}ZB{s@)FlRq
zJLC=}2*u&%*HEnxlPZfO{AB7ElJvWE>I&wbaQy~F`c}~4BnELBKYwG}j&FRdX4`SB
zEo3W-t|~Z+z}n?w7OqO+PB~@{HbdJd?~x0UHdAy|gs$+}DBH{|k4I~X3B;S}GQkfq
zqrQu_Vg6?BA(VcBl_G$~2P|7|QZYJ?l~<}q$kW#|w+1n-WQ*h+%agx$TMzTpDO5j3
z4Z7a|s5wgMLW}AV4%3KNq;5;GE54Q7>d8Eo;#hwxfzgw>F9mp8T9c%^)j34WE|M|8
z)LBV7rwT_x&TtOX;HfApoyyl$YK1HDj?Ra+s(Inh8cXol?}q(qLI_`)vG5JQt<Rh{
zhHT1QHx6seB$LO*1TK9Goh6p&j1`6Z#&9BBO~DAJ|2!a?BP}s$Lnk+SNjytOsy^}6
z4OWuI^-E?^DnRTQ+Z>V1wVK6CA}i^aTAeb*2C~dz;H(mlyA!Sjjp!PStTj(JP087E
zoJv-$ckLo#S*clA0d1!A<|^&dltjy7kF`-N%f{x~@j6qg$6^jQ2cl{((l64KiI#<Y
zH$z;M63?cEYBzt}SQ%W7W9pu+*nmZ!b!eI%O8fcZX#=yu$xC^P>S+NEx{~LXeNAt{
zEVp(RuyHk-roLF%5~%MPwQeBtu<jYD4>@#ejc0-_EZ!EqrD-8h0sjAR7=AYvEad)i
z7-S&+66MYQ)BN<N@+Y(#?Q@z^2@(+(9>LwwK^C3bCV`D8#1vMh0m^5qfZD5Uq7Q8P
zynugP7`9KwAnl2A=O%NI>Nwe*y!~vmoXefbvHSY|{)8`tP6&PsaRo;Q&4&&otEWmp
z2GZ4&)zjUG?N#)%2A+U2f*ZhMgGythMX_UC&_vPbVUT0sf;1CPMnE`W|Be9}MK;Y~
z9>g}+GX{E@##F^PkFt-tkAj;fF=GhvlEes)x_!ZqVB4p1umT2b;w-jLw2x%0)CX}R
z0H&?9M(`1|J-EYWoUpw{X(a-0vl=GWO}dS{&AW&A5w4kw@=4L-%5riX{=`BJC6w;L
zAJY7QP0xwq5)K_5Rt|W6+jW570KJw+*kDV+P2re1#CAcuaW=#l%VUaZm-XgK8F0(Z
zG_{9(ZSuTHB9~+K)ALU2v129CnP%fxe9{Auv_OCJILY=b1-B|Lq)HUlTXcm|qs_F@
z%zVZz@GezAMND`o!(8`@i`~j3tJHnC_f9EOd`i^c3!4fl*x;)dHO?)?ZvrU3wDfR3
zL?66cE*acXJl2|g=Yh%fFkPAiO?Yp3(mcgY3i+hsl%QID#*OiloZ?h@tfdN-0hhL@
z<4%Y3l&#h^@(teU5^didSZYxna_wSv2zviEHQ_gb8P)mMx1%}i5%tb5uvwq&$ZBri
zQpk^_I3@}Zf5@t7wkvcHkZ^^N?&SqB`6+lR2cyepDN7<okt}2;aHXvak1b-I%HA5)
z3{TXZR*4r<Vy_GHhB8X$yh5W?{|b4{Z;ais*LzZJmXT>2j{NPCMXvDn5iktcB}_TJ
z^NSwV-ffe~x%X2#=)S%nV|eK`I4HcvB@^k@Bp>X>Lf!6lOgX*vOCG+B`n+TxBU>Rt
zeE&yZ&}c;1X7V5X9{5{N=HJ{+EoqVds^Z9F{&n0t90<+Ziz0z8s*BC!Y}N&wX&fdc
z5!m2hQN0}TuS8_*@_~g15K+M0AWj<KR6$8W5GU2nf!_z^`Q;`NHA0@^O)z7gucaj`
zD=+VxM-$}-k1u)vmOsldwm0C)xIKMeAnXl5U<6FqCk_h-5Euhf_L;-R03IxtCcvP5
z>98{FTnk{>zINCNwg)TU+zseZG`tV?6HE8-4a*QMd>u>o=nc;hF1+J^5hOST>=O;?
z!aK6UGvS$Fn@KU@Szwz0!}p<wlri$kU(`lmF!Cy1^hU5~dNpoiqa4+9)Na2;U8}$6
zA4p;dninAw2RcC6<a0A=8WGew=WFCEl)Imzwyy?yyYbA2tblg*yCbr}wE%3vrM|^i
z;kSR`M{G86N7Sj;Aj%4cU;<x-34vIJ6U%AG#f5P2JRp65(_?hX?)M0M&UwMsg=pn=
zh9~54#^dC=C3kQ>ptVD7--yg>7>G1<szU2KP@w!Ox)r(W9FFFnuLy!pRRT*_+vovd
zs%MUG+k%iqSuNhl9|)X|aO0#J7hKuK;vCEkAaG>DPot%BYbo=lJJYN3j5OS?MWjcK
z5|2$Nqs585NNg`tAD6!kTULs0Az*Rf>$(NBS~pekYCfkFOtC(fY<O7MY;&>9CGyXl
zl{NkR1pL73L8s&2^-=<n)h9JfYra-A<{3(bwOM+w#CBO<pQv7B5E7RNgL_@AUNAK?
z$SmkULCky_sZF_Skr*<TnTwE^enl_-ST%kao!L37m1_kdG#0P@S$qF%(l}aMkHUN~
z1A7@e5w<8sDJ(0SDqSa?H(`^^9#mt|6>C>L%&kJkUWYC~U0G6|Xi|&bQrgD$Amdo~
z@Fc@o=XNjSbInI>Q&P^_Q&OPl{Z`zj81^u6IW4z&oRwp#5@-ARCXduNy=|Df+^zCb
zT%I-<bI3`%|F8eyn|U8#*KzbY`}Q~b?spu7Gguc%JO%bo=MxL4n5ziP>uBZWAoa5}
zl?5w=mRtgURFab9UVYe7ckwl!=K6)AN1x{0#{~t_>gRKPKW5UMU0j_L7_Vlz7#>#U
zNvn1x3JJEcLi8eq__TK=0`7yo#Tcn;lAgTE?V2%+AK$##;4hLe3KP!Sx`G-kH`dk8
zmZDcsqpg3Nye$f+In+JVVDtOt(PFdP)tm`FH}}$&URdP$ecK^KPOg7=K>0bG=9ICM
zZ(!QQAjT%KO-GPgQ4n=Sf#AkC6(qWad0O`Yrs_j@IN~1o-6JK^7UHo-_B(izHkm6@
z{!gxqE?;E)<t?aNsWp11XjzFxV`92e(II4=;P84rAhP|Stud&kd7$2Qu$7{<;e%s#
z3<F#0Z|VWZLc2I)SC$tVEo0ISF>J$b67Jzbup21eI1cSBS&FOC%R5xZo>WjwT{LJ5
zW6G$lk+O$WZK*vOI1RfNDxXgQ=|e`G;e+LkEh`0oQVa?B3`G?_j?hx#dsO$$+-XZF
z`Bep%Dda4wWLcgtCc#q$qtqZ#ElfSWh$-rdDDYaPdfX{m8C0!AadpS)w$9|U1k~y_
z{P4+CZ{1(WS=6(ON%}^58*sRDIQ`}$8lY_vX|YTJ{a@0?0hiQ-{UsG=*I$P8%N8}y
z%MBi=Qb~SySCX=&h4O+5(=tMX+xwajS)HhY38yN;fdldgppQ3x!52<iq5|fKEnF!V
z1|(5jU#tp~Pf#Uq`3|gd6{nAKGRDS`@4bi<?@3HR2xakx#!%qAm>VMEDdUdNA`XEt
z4H=3gaVN=<XfNmoVh-eKPPopfZD^FPsa&C~2Wq+UIis?XOJ3y8ka_Ys6a2#}0^wZI
znkf2PvUG<6h1r^DQ@`j;AUsiMy#US}o@o5tIb7kI;E02a>448K|EJ`d`9G3t(AA51
zYk#gWf&A5X!TdkTHTSq4g%Bm=(77*@@zo?ag#ECUxc2Ou>nLb&XmDL{KB5eFSVCw!
zlc}?VP&WlJU>n00-^`Aur!(bxuk+>@zpQb&?yYmRpmZ`habaza!DtA8;-Lv~#UH$h
z^hzsF@?gb_mR-Du8A;rt4Rp-N=wBGi*I#ADl7zg)on@-Jl!i=ISA@{H(@GL=R!X~9
zc&GMwcw@iKL@Na$1@}=RSr;^dXvSEuGzFR+A2MX3Xv?>EI|EiusExi2y#_q?x-ndT
zc;e#?Y<6JruEALcnJaLuGq8RI`9I0l;vceoD4ZqV`Qul9{9Vbw;(yw|)c?C=AX@-a
zKonL68kOII#70tXgrc<59KZ*Djzu9479zQ5ElMpY{uyAn59ek!O1KyAvXw1iOeAF~
zS7zyWo$GqFvpw;2Qg<!*rCUrztS$lu#g*h(ygEV)qk+OizrQ&E0MZ0{0E!BV3GRzt
zPga1V41=00Q!dOoU>ZaaWQht26hS6~MiV1jCLt>zh==Zk&PAgFX9Rr-_!>kUwD4tg
zL6S*`N$MtT4}SnUP}GaCpX|028WRQ12rvZVD?$i{9aP{X()5JkJ~v)28I`rsrZSqF
zyVMd~ZA^Hy*fm+26vfQuauAoLnaaPirIPlu+SuW?nGxN<92<sQjrChgOmm@jX-#%3
zi-hSwT&nf%2NINl(ZlhX%lm}MEg|L_PFL>j<=3-MKK{y^P{fe#%Ji0KVa1BE!R+pc
zD$XB*tiybF=`3&+`1(ant&O^q3bQP!8%LpDoEO{5nQ-`Yvgg}!7v?`FJyv<tRDC*G
zj|f@hh6pUm@tPKSz*GU1%W~hP?zu+#a75SWb!(~5e-_W&NmXo0>;6~<My9ANFNPN|
z)SMv5=P`5EShKgy5T&6mD-4Yg$f2|Go8qQTDEU9$U{}_}=zr&DxZ{%gXtYF(u*7}y
zp4E6}?T)kmojCqW|M$3*qgmrB1-&2XoFn#reSSrUNT9F_X|4ogANq9w0f_Ne$;bO>
ztC-J9@iSw}Ss~TB?Ft38J7}wz@vj{!7UIp5g>*_zpFzJz&FfrS<Kquc$`x}9__--H
z#S|BSQQ@}yjq%~~CG}C^GYY_{*^ong_nM*~dc)gjWmnJ=$|q`>!?bNO8Eg3+h?1IO
zvMdH-n^?;U-4Q;wQYd!~UF{WpjSiZtF5(&^ag1;jzx)-X=R;v7=PzHqZ^=79^gr0%
z^*|n)z$u&k#1mSHUBcpCxNVY9Iu6j0NE+t`XyPobq<n+(IC1%p2{29r58R@6|F?};
z;E8;N{DVD1e}_L7|C6j$`q!WuvR`(wv~Cdvv+^7PS?r{Vqsr}p`VA3qx46MhK6$ZJ
z<Woi%h3^IAH`Upt&aDw5!?X|Yy@!QY)9dRC`23hLZf&q16cj%8Db*>>`uU*PW@tD*
zmJhUE2rLOWyb<)_&Wsixj6sCU@b!5nog^3}>(w@^-mrhmr<z)wAGNHuA+y%n3X>&t
zR<CgoNy#{NT%*mPIB}WD#E6?pN#pp5S8K+EH#ecc9h3r6&n|J>8P}XmPO@Y&hY@Nr
ze<xtF;8?0joP+-o_0?MyQa#}C2fhMoJ*O6qF3!&%Vi*eQUnS1qmT#@^o=SHqOJ@>4
zU@yE#!(&}8B;#<*-*iWD{<kct4LVNf{>af9^e<)k?`&mF!j#OA5^~t*((&SIxqVFw
z^MbghwOWuvs>4>~o`}=Q!4DH@`=v#R0>_ekXa?UegfcmiFbva+VE4bdPvC}_@(iyD
zzbMojimHy)#`W;fXqjTixQ{}bHU-k)K=N4Ot_!aT#T&EGg~ir>0q2?BbD<+F;Y^$u
z?^3{WX5qmo=LyCQ)IF(ttHZjg`!*t-g9wpwuZ<1UJSBmWG+71<{yJcHJ|WGQPOCUu
z#wwUAHbn*08a}fD?D%*R{3a8jIbVIZ_c)3#A{t?~FO|Vnqqe4gP~Yz{vp%*yvbL<a
zjj9*lD&2(Wu}u+uMsRPVHz+VuW3>T1#;`vJ91(YsYLpI6s!8()D@IdT9r<xX%pLU#
zc}=?4sa1t?$hK%$RjFNsw#vHylsx<gVG?<FvNsyomoL3ge<|^QXAVkIFI1M4kjFmD
zlu%8CW2p@K;i#U1ByJ$lAx7Z7gVID`ipwPj>?gT>|8k`K0P!AWm|w&y5P)>l{s-dO
zL?oBa7&rO5KDYTNa=yNO{Gtso$Y61p9G?U-kW!jTjN$@ZS=<0#fUpo47)3I^)El|M
z;t(uU0~uh=-WN6qW<9fEfF?G7jKQcnguE2Bl|)dYnVyNBh7<BOteT#Y8*?plEvv)u
z4K!FxS4=pw+5BAl47Le8s|5Bl013N@ImUU5%QT941{liAJbhpQ@3_GDC9oDqV%tue
z)oX|KfFRFU-R|YHL8Cotv+%?rbDYFc2e1yrgw<PKbF<g>#B7$Xv*LyOQ5#KJ3K4do
zz0Dk5Yi|>F0ZcozCiP|XIm0>Hd{W8>9r8D<70)Bjy&}FHGxGNqDf55w&mvYYU+4vD
zJ!W|{(6X@?-xe7MF8SZiK^Kd@ck!Y95}(?${E3OxJd$)_6;DYy3g-AC#?JBGP}Syz
zsp&IAx9a0|`&IQi>Z&u>u=TwpOn9@QXA|_1wALC1TA!#AOKy{lSJ6;3-!xCs#_IJ$
z_+iTyhUFPaXU~PcE9frE;I~p&%C4P`ZL2ZA%kj2y&qG`e+gjo`gmy!Y>LAOmxc-9O
zUHHIY+0{`!^#P8P)!IY?pVg@_1DbR{$s*mG$}ZVXVn$Saj!^Z|v99&g4O)$fB~4h+
z#*+`Zm|E`-iYi+&#Z*{v&s?ZSS}NY7dC{?3;~R2fVaj77{IK}5HSOhOh-R`Ci53G4
zjOL0c9P`5mO2OPBsGw5{HO7V}H(D(hsq(lhR>S<`R%Z^*QVA7ZuFlX|tZf_o%(2Q+
zF$>!jJED8wO3DP^ezq=G-ea~jL{D*hDr}tZ9j>2(<Qs9{6ZWF;PjL0)77xL?Ak_{z
z2+N(rFJ+qZxzZX=F058w@0vQ639GNVI%;-T3fQ8C3G;ywc}{fm2+^7^j5HB>L2`ip
z`f-*1Or+DJ8EJ<@y<<3&j$)h*5lNMrd+J|yH`Hit3rW8tAaVFwq`gtjNq#EE{euNI
zY`-#s<PVG~{ap>u;(w^7RrUYdbqWko!calJ(N(ijbste|hPD|&`kv_Qlu^MrO|cQy
zY^}0{eui`-`NH@Lj-PqE@~_b)hu1HxDb~pwu5-CQ4p+1Cch9?ZyI%+j^A9Sb)G=&n
z3@U&%2Q^Xd7}sjPYW3B79YI*IF0dNt-I_PT17VN|ZR}*u@`Lg)o@8`VS}6&uPKcaj
zTZ>Kv_c#>J`XUt6-Z-dNl(*QP<ijyCKq6!6NJ<qSiv5xhPSm@0$pk6OR+!aA@#9V7
zz3<Dg?-6e(GgIw^M=avB<;uq$?yH5>25@p~hX@YrqMSDDmo)TCE^&MJ8;VpK>jXsv
z_xPO{p|#f!N-SmML7@);qh|)AKUp8@z^C{hKy+tv>3%ojLhfds-L`L@MqP9*&<r>U
z)N_Lvn`DAZFWKHvK^Jc0G=-3@`sQWoq&#w_QWFlVT{*g#byc8IBsX5s$JwGyulvrm
zyeMQgl>?%v&OIx;$wwDx51ViVzg32JZ=Gt)Jj%IGMQE8K#&@D&5tc7GjYw_dTtjxq
z;`aqT`bDpia^ApD#I49T4c17ZkD)0-6o}Hs_Lt%6X6JQs(;4HTC8VEHeod;5h#$U!
zLd8bC&Ax>qEw(=;eRYCzEfIlA_czf~JQc;)qrtw_z>Z_mW<hi=aSAazL#|L+m`?@M
z<L_5nonOh2hvUF(iVjN5n1SZNY1**s0{hlH0)nX=8V+}-_W2JYiuDI44gWu%%+9~-
zEwK0xr*%!@)W62P!#+X0L8?R`Fi@IDu!ZD{bP;epM~6crd9jX2s9oUlVH`^$B@X{9
z0y<g7%;t*3<<0!eo8>;qp2&=!YxDdfxxUa)Xe>L_8s>t^OxH-)P^`^DX94R>SC$Z9
zOcb9JD31=0t}UZwUXVIsQbhD6(5}RL$NgHr>;#c#_Q>rLfoBZ#R_0O0sO^rILVj)n
z6~>8v<FgL`xQcS8KYJAdwQNX3w?9Q+p`8tvEgRIsb=`9-m(#^Ej`ti1*PxEyn)7;e
z$Bn~!n}>52;gKw9*=g%q_>n%#P3rX|CR(CxJLe$5J1^f-WxV3BIm&s-j}gKF!r{$9
z>EbL<it}`?z|R{Y#g<X4Jo5k$RaaS;Ro7WJA$c=4av^*Rz^MB1*cWZ<gSU0E4ibI`
zgLst6%_+Jz2dU@Ln_}P-bQiTe#AixB&UE$zyW`wdR76=ui8Q1zCqFDCDJ5SVnw(o0
z4kj%nUlKYkCqEoqS4K(#x-|#c4fP+}s&{WgoWlQr1>)bvS^p-)F8OzBmaMF*h!Pbe
zVR=BgHMNA27xZ0aIW#mY7t>4V28Aq4sWb%wjo^qsh++L{4B_uTfmXLHz?cYsDq}XM
z%jfB8!_{%|_v70p(ic%JX%R&e=16h~G}v6)3^k@IqO!fvAa00z*c~b@C6qCK4CyV6
zg#d;>81Yc9<SZK+mW|p;&SxdY|B90+R2R~PdS#0}kPzl<M#h(PqcvC`Mh$P1kyZpK
zX73i$7^3C&j-|xeIj9ITH^c5vSXqkRY5|>Vg<o<N-47c*=RgW+L5-kCfnGx|>E)h6
z>@mtIh+Xu2k#ykNqQ|Z>HtK>XH1+oWiM`9}c7_G+%JLO)%zRPp@hEySF<jnIf><P3
zF5{C@xo82TCvA8`f3qRP&cR3RLkA<5haczvA?+QbD{HrP(b!2PGiJrMZQHKcPQ~_&
zZQC}hV%w}>#&#-61@~L$tiA8u-`Q)o)z1Aj+8nKq@uQDtc0Rqo{j;k#yr&hZ5w$87
zOt;qJot2F$k?@<XgEBzRnP#YIx+0{Fp7SW;;~Q0(6dWAOlbSmaj`xRknn-;sF>Ak{
zVFy-jmSqJOVSnTW$B&|Z!p&nJnBUO`+wS5r8QnpISE)5$M$%LYgvK*Vdiv>vfN|6t
z%*A&MGE@<a8|vEn+N>>@;y5a*_ts+R_k05-Q!}(XIAZ6g6Wy16e}?W+9`$Z37I1ec
zS$IG{e{@QO*}sCTAb&V$s~AfI4a_4%sI5YMLDGx0rgPs|Wt%CoMycb>RU6kx>Ie#x
zjZOEc9;Q63@GHCOt<HtS|B&!bSk0u(e-FiHsj-Z6$~AsBdJhZ@H168UqLw`kr&{3Y
zf;y*;OL*|A#h@#8GcAm%HcXIi^jnxoN#q?gdy4-h+aHA9PtTJY?w0?1L)4+JQB5tt
z<0=2bPV~??l>%rPN;?eYMIgui_BV@Ey#c%bkK?n$5&lguTm8rQuC3apB!)m#e^QvJ
z>aERUiGr%=8!5smB7%&x^uirNi?II5U~26!T<F0VYv|8~<M<P%6YPv2cVL!#+1EdX
zLRE|1P4az-dLg489<$p%SDoEjSOK5+fAYZ`cBSAwDClLilM<2>(r>~-nJE4WDu0B2
z6~`gXh%iU9C8b9@C$&S1i)e~KM$0D6i&z8PdLdnUib>)F&2##ZaV=Sh_o1z}dS<5e
zSk?8@=Yz6YyKYdpJj`78@wgnnv(fHLY#mv&AR_=faIFWed#0y}x!N&&W4xewubl4_
zvcGib>>i0Z2&yUf<pg8?)E~|WCf(M!$(YrjqNUzTgowZP5BrVj8yges=w#U6p7X%h
zLj?x0a66RZfL~{dr@P%KVBxc|6?MgGx?(;#W$vDr>V1u0cHA)t!8`7!u`|aZ*N(W6
zbDZTKWYh|iF0i<Og*9@Gh7(Ce^x`fftmR9}-XQd$|HL9FcncJJpZyFMD(zhH{NvR&
zG$aFAL2yY9j?PaSkQ8B&Fc;D}$2|$qn#U9Za3t%Qznn!94#pG68{%y5!el%3=y5WH
z+@c^TXfrhcll%HneS0GFO4XZ53XM&a=01&WviPa@c>Q3Zq{+M{TNJL-0#Brwt#MtD
zB+qS#z$ZHF**vBe<R~<YM(I+NsDyq92RD~0EKb%Z<U3?a_|bJYj<hu~rXJQHo><Re
zLomKO?m>X2iBKw6qa`fxOX#I`dIDE^hFv#0ay(XAtJoEo>iBpTO(@csy35)%SXWxi
zV_Q6koF}ZkAIS>%kXF9Oa^4w>!-N+@)n}`_A+kNAn#WIeNnpBTWnim%#teSwAX){u
zzp0_X&a4Q@jTY!?D}|H`3y(JEzF@AdFS%e<m-4*9Qv~AmO`b^%vNug_qY~>W?%lMR
zO8jDItSZoM^sV63?e^;At^6*Nr{;pn<yt*ukv2YfjiH<6YH#@*%$k~UoM;FS`OtO_
z6(BeE7ADq=<L4TKeg|JWGB3(jAXGVFqmD`2(ZQ|LKPeQ1)s3kyt$A~XM&6lC60L@@
z5DDddvb=U2e`8$^v9T#W>8C1=zdqUtNe)G?_z~tJ!y#K!iD1AZ8~~Mh0KNdh>XRv8
zDD{?LS4z{AW-(3)(bQRB6pKwy#L&Uf<kw>Wkwi<;(~}!%M<yylD2;AR<^6t(p!%WB
z;72LVj9x)lr<E;VMcUY=2H+4)3XsIl&$B7<M->C_j2sWlfj;nnxD%TDQ8D5#=4kU(
z>uJ6m0ajX4nU1(kO-sctTr=IBwUMwluew8m29y#NFV=AyzwBKWl5(HY6gD#d>fI8J
z*~6&-zo6dl+GHTh+ftzmgu>J~?>9;4e}-myVNFl6sixJqK3WCyQSM*%8=~V@is)6^
z{!(5}`R8T4?Ccc;MkAXg|NASt2wL}U06=gcgt+_c9OBx+Wc&UYqRGr0PiaxeJzvuF
z^KT7A$W8(-%D?Oq@xN=Atp7=c($LfT$1%5*<eAJ!hyFA+dW8$9^owb21tK>6a)%35
z#2Fh^RLLar8S*Bqg|Y2b%K^J`t9QTB1(&)s!F47NlfQgWr~6o11g2DqC#O2*UpQW0
zU#uTb@dUiTZ(f5j?uO$WnT$;|m>rm}u_CZWu?i;NcE&K7`O@su;TleMQ0?R6?nqK2
zC+_K40b}I;SD%o1@CIfu8zIX{MFeLbDH%xy8cp8_$1=mL;-!vtiZ;STRs^Y@y2MW>
zDC!;w9qF3dYWN&s!>JDXGQ*-{;09}O6KPf5H~1Wh2B=4iM9;cqfl9mLBsR<|sBX+^
z45EZY<N3%Q>_&R<2+@#z7M8%hrzNl;q@?Aqy0JpH#`I{c0rAyTbj%iCH&TNGvOr`m
z0N_3uqBluB{3Lx;6=l?m=tfISQ=yh@nHqy7XA6gdlI%%YU(Omv7R5zP+d+yvUv^Dp
zjWpcov9=xkPvQ&tN+S#QA4Yt@ORHwPYu@p}&QF28vQW0$;%Wt|&Jsz|N8JObw?2KY
z1s*YvB(m^t0PkRk%8GHYfRH3Nmp`+(OUKQ~&@<}tbfzhJb<6RFUcepu3zC3_flDCi
zXMXtOpD$-j_2~#6;v1|s>UOg2@|&(@6yoJQBA#stEaa{*9JSMKngoBDO^HPQ^fLjq
zSPTvYuW31p6)eS4aW$FXwja{zGKLsz78aci#%s-@hE$BSQ4)hQ%F0>(U7-;UxJBf~
zHxbhnwxAQ@jm=o7(^#llE`ZsBPXIA>E&Ok~!mu4J<BdbFV%oxxB-w{2#%wRs`4;-*
zEHY>8j&HUPld6+VKrync-)sKS*kNLEPvtu?yy@LYfY-dn&GV3I^U*Q66NEJ}_2Z8-
zL-a$p4RC<&xjWRdPR-ogd{QElovQ2<O-J({|1WHWZ?r0+ycO0ZH=X*;JhQxcwVr7x
zM!Ys`>?k5q*pk%uyk3G7N_1QC4|3DYk9krGa~v2Hd@Zqw)sge|ND84!kHA>_o~78h
zuK}XuZ#S0W?an=?B&A@G+(D*!V^vhFVp{kv=^lk;ykdGdiv0bVR1vd6k^v^LOyM_R
zqrYy~Q9p#`Z2a-dzY-^TF3||wMHTUlE!x&sg71x<+^y@QZeBJkqHdlyrxLf#T5^S~
z5#|2~fsQ9E(%4hlVI-xgiYY7S&H}cy-2~?w?UFI=A+%D6yT9#hES$x)qH21vcZD=k
z)^s5*%L~YOnGl+Fc1eS@Twh!n6Rw`DsS>VkPi2XJoiAnwx$b-r>E4}06A>!C>G%wx
ztCM6VtHWnv%Op(^mnQMFatYD(T+<-=AV8MPDXBo#4Y<?|+{4<`UD=<pI5xsm+VkO*
zhUgU0108?{KtUKLE@1rc@3YG*(A?kh7n}1tqT80RPQ3p7vU`L4*L@fAf5X-ooBqA6
zr9d{e^!is`hXV};#`AB!K}1>YpSRS^Y{^;vV|?R(lgN`pxt-<l7rxsfmXrqW8>F@L
zL4ubgA<(FHR7emLam}c9I$u(^p}oWWgo$j?CnxgSEk<p&?!+WnYN5O2IbUC2&%8bJ
zeSf-T3#8a$Wp*^`?<)c~-t7vafSmLyan>EgMYdExmBkxTC}A$!%Za2{#7yY-LR`#P
zVm2=fj>en7tJ86E8Xh31)2%QW7(mu1u31Yh!*_r`_4(GxVCF$*=k+rxCHtYrlh4Lu
zNbZ!j@y^U|r)B$UN)VZkR$EO4G|C~mQO8dvzpjAW;#0Va<$yCp8zJ%S{=B2C{d!ZX
zM+(-9T|7beFy9Mp8wtIklg3acaVU?8Xu`ohq6;qw`#N>`fmBiE5#})U0<w?}S@bDx
zbo)14ruUlW#lvso;AOas^Pe%Km}o=<N{XR}BpYHl0?IIjH=Ft72?y(-Q-H;XOAy9|
zzJM!M&g-6@GDQuM)IOX?{KE=789wdDpfZ8$QhGnob8ADLF<Z7*-c|;6EN!-)4EuvW
z>52k;q6SB21p)HZL}e1JZ%UTg2n%v07h~31-=rSbAoYcBkpF7x(U|w%?;s~k@NR}t
za!2&bfP(y$&(6{FP|q{`!+;m;y@29XQD5~IO3m@q3lq*_36}@+9r!SY|4^oR&MqA8
z&-?G1)tlSg{X3i|eE$_tES=0gV}AiD<u6dl{$Bw~#=+WE)!fC+&Q;#p#ns%w{QKW`
zp$WRfD7wQiy2CiQ!w^ZrP$B34e;1zxZ@raF<t%}g4i<{0k|sbYcJD1i2kL&KfkqX|
zPO@#X(*Eu?2Ff<h){2p>7C2-f36=&H@S)eqI{Haj>AFK>efycPCAltu=xDWQT-=UC
zb{1BgBs&_i5X4iI;Uh-9sJF>6;)GP~w2J)XjP$ze{FKxzBn;44_(T&6D>F+2b08QQ
zA{itTBwfUC9}0O`AnTMcCoH5iG8rU3KGokib#BD(C-{Hq3hb}ET<rf!U+Rvw<_`Z`
zVgHOIR3`tin^1tuZ>U6Nzq$)kf2j+Ow&NCjAyr#BrX!!yG?Owjg+J6k4G~TM8Qed`
z6CDE7#Aq?I#rAtDXY%Fs;~B~+SO9&K(p~<60f*VXWzNmWbT}wlL)6ykS)3a`CWQS~
zyynPcFVZVXQJvleHzku6%L~VAmNa4e@yCv`KTfXJz*X2nRR?K{lr=T{Oza9P{xIpR
zxgz)bXmjZFt$Yt06PEYci$vK&%J{Y^p3FP(Ju4#|IUFI&7Y*qK+nRcKO;ozdXuVEi
z0;YGKz3<l3{a;P5>L0tu<zeJ?%oo-M1uf@5`n<a|jU!Y8nj!eeSDGhX8vJh4kOQC}
zqZ;{-FvSA=-eNw_aWizv9z2+nRyVq^?|;*M;x?8x(O-tI6d4SR>;Fdg|D=9toqC{a
zV0`}IJe4mi>}y!UGHd=TEK$I&T}xTf#UM3qgtk%cmtidtTO_AMFX$);rn}<nsP{E*
zM7`wkj`O`C_yl}{3HkJRSil9rWNFGP1zi913Ao<=bJfk}^>UwY=np*?*39}eJ~rm5
zJA%k+kaC+8<7nnfx6g+wH1@1AKnE~Ly~zq)rRX8qO9|zo=%LuNhrgEg)Ee*sY^UD@
zh0gxtNI*GwL$3x5J{%zKlc#cgE>btn6RS9e=PmP~CN$y=@t_zI8NykEPQR#~N<)M(
zOUQ&7CJFEtLYk2}$t)y7nz1rTz!&NcNHL^%YO6j@AoHL*Pzsa1$gp4bVHKpve<Xnd
zi{lCtvX_88yXOp~!hK@nA4avD!$n~w$4UAtI-~)z52`Tbjj}MsvE>+@!xP+s$h&#R
z4HQilqSM#Cfgu60&P+c?S-|0HeshGIo<;_yv9oTN2~WzG6iceko;LcfFjKkQ-U_o9
zKtsb=QV}hgcpEvbMik>k#&caN#-CRj3#2P$^+yF$K&X&1Qh-P<8?dBpD#eY4rtm7E
zDy#jbeW3M!qJBX$96LHtAj4g&GY`HWV@hF_=lju+$o80$hun0%&-HqhojD_~@M%9~
z6wXvr3R-VL`!cjZvydG`LKL6X@0A0&Tz9F7GP&e^$nc!9(>FcM_9GQ}PLS%0yUfwg
z+oNn4w3Ezqv5A8vU#t(u>8^P#)%x6dG4G2m1m3KpOxmE=h0?(nb=hc2x5-mh!%VR?
zs)oXtpZqS-*CT{lO%3|x5e`9JS5I|Macy;RGkI}&b&BAfOlj;D#P1LsesQ~avZHR`
zZWe`5J%t#tVloWri!Knz?I+P!UIIoooe<TBPy4tm0GjD3OPbY<Brftxb#y1&%nmec
z<(hd`wI^N5W`%qLS-h00K=DPwjZlY1)<%}tr?iqomDhNcz>MKyXoz!*^=Pa)3n~dZ
zlGD@#6ivw}Em2u@QM~F<GdS0om#IpXqYostV~3xFN<aI`J|FD)eKbz8Gk!+MNvm98
zb{k@mySg-#2-sQ^$sWoxVD9IY;D$Bhy9NoYS6jMBW>vVc_cDIT#PE@?K7=Mr3(q$n
zy)44drw*c6Rqq~cIwgA>0BHMODl}_M#?Eg7Aq;;%6;6s#DxIg=QEE;}{OH=@+;Gaa
zhOOn~!Bp}u>gdk$Rh$J%pU$}CY0F{vNp_8BitU|a%V_u>7OCuYr*UZB62@O?QBJ2V
z)<m^3q@&s0Dj7d|-He9Bqq=ZI9>nr|AZkCtW-%HmkiT_PtSXpVhibZi8>0P8ZBA%^
zsc(6cEOTjDieA>X<UxN%!s|4$3@8SE1ok4VHGlxV3_`|k;Frc(2BI$YlZL|A*6c6%
z`p|a#A((By9KX~)&1niBYXqlj(8KC3>uO*)1$1aUYKzuaYiQ70^LhQaX1B@YtBSf|
z*OX)|W?DGcw0##cRpXGv->NF_*GNfSDLT=VP;pNk<Dh6N(Omxy{#(&hr=+z1mpksS
z^f}Y?d)#y4BK62GjlCrg1GEC>!`5{|$Li<%q?RPHQ<a*B)gww1IMuT};qG|1xRS>B
zs~|Q0J)H1d^virnf&3i-;{cXOni`j?Uo2tW1h-c-HLc<sMw1v>GXorF$6`-LWWn0t
z^huRFBLtt(xw{SqCgJIc!{DR(j?l0+<@3_Vs67!J$GN`<DeX!w&MM>cOJBa@-E$DV
zN|^e6{B7s*oNcKB#9!_%5d7aaxe^ZU3XW#xVvY_L*8i+Xe@pmZ%M*b+g<-Ts%5T!#
z-fB$v0{F==K2{L5A`3&wI<h3ur4%g*H_iN+o;R@1#WBq}oELkUe%ofvZ1;bDzeDbV
zYhhtqB}gg^E;JD8b9dMc^gAO`SpjOYH#6ou)jO;5;M{vN%0d_Y6Vp?ts<kcfpW42T
z^iv~*`*ZvM=8xaa8gIr%+J^ha7Cj(>`U<OLC>cI(%S@>(+@TaznvkhGo|{l@&Z45D
zTQ+V{TlJ0S9hEJ!WMH;k%psvWyOO7{IYEzxHFH*iU8h7Q%$D7gyC9B;mm4;|h^wzP
zyls!eebp)Yhi%8SzlCS6V+q%Yoipev_p|fQz&zE{@z?)f1T4$HWdVDkrx`|2U|?qO
z|5nYy@;_&`H8<7JEipbBps+Yqh>6p5?W=2n3LtM0aS?h_O=Ku2IXt`4Y%^rUafhz%
zy@lwfqHDk9bitNI!H2?KG3m*eTm#_DL;Tr8j()<}*_<_3^3Kc8``mlJ9iHRONyC88
zH>f@ueyag(bV1a@$T^9B3~wi*C1M&!IEf!f&_`(l8tF|WhNMUZv2G(Hlq9xnfuXj5
zGZy+na7X~2bJ`xnpaeYWD+PO@k|^5@OHTS&ad=_6al{^A&>Tny=;0o`!5XXx#cH$d
zCl(VIrK^*>*>4GrV|`$aVb(W~@SKlp_fux+XP!ni?Kl)e*hk{RDZ|+|j$rE<b=nN)
z%eW<(F6N<RUgsWl_)2;fGHld5`pw`O>6*3Ydhl5K^#;1zZ+zspvm6*y3rv^P@v?-*
zyux8r-ux@HtGWj6vNWAqTq(Y_>MCqkxg0myuB4GVhiY17c}j^jch(;DAboo7M{XS-
zN8Q`_=Sb%yb@HbV2JJ*xfKrynLkw%#k?e;QM5};PJSbqq2AJv>WIwVW>BXRf-duFL
zT?uevZ<x#q^Dy_Mskc<kl6d;Fby1#QT)wz;UF0#@-?A{#V~;oSSb2M*iRZ`k<ga3K
z?0$HbH<h=qM%PwsUODga&=NQT{%bB*1U%1}tyHCb3j(1kaOO;f#ol~Kdx>FjY$1{a
zh9iA321ADeik+OTOo2T-*+Nr=&0F!C%98$yyz;R<LuR|H<**_HwRIRZUmGq3M(bO#
zw1W-BsYU+xav2(U4~|53o5`-rH3;2>EVh(}Y5DDWN_9)cKJbMYdcG|4icFf(mZcVV
zo%V`vWv!yA#mn%^ML91xh*o7@ouUxFn@Zf6&VSe?d2G`HpQ`RQp2xncPV#hFtGAYZ
zcU)`}^ofDG2$<=wWnui?27ElqF=woV-`3n*)O)V7nVq+n*IC|LQO~;&m2I!!zhoRu
z%Pa2WH*T&yRF^C5g1gyJ$C{k7P7{-``95W%fS1PYoD&M`)1Mx`twJNeu*fIUER*FU
z{WOtng^1PoiB^Id8E%ED8CF4n^b$sjGD4>D4UK7BqKDv}C{NoH)9qx4C1->P%BhH4
z1=Opv7eANX9CWbG`g>bhCgLvtrUp%;BckpE=Iz!k6m%?5c%#Iv5uZVDafjh-#n2|n
zetFWL$pBhsZQQN5^HpPX<kj9VicB$ajkPZbksiFYVpi{q%phRgJ+Kl-ksKYM2tPs{
zH;P%L2Bn5~bO)t%^g0j*jjm}4x66M*97tO`yF;q>L@0U@){l@u_k6$^uyU*R;j<)#
zll3S@*GoVlT*OX3o_n$hV$tv7NC?S#4T)x-RK<|7Kiy@7O!nTK;rWUB#yZ|G_&!HT
z?x_3}+Lfx&Jc_4TbhF!qpSHZE^Dlm6hG7Zie6@Qf46s{1b}zk=q4gykkLGwRgjsm&
zTXg@PX|+FUT|E&;Sw9l0QDi+Vf}|WMwq%$laKa?h_3^ikPw&TX>c_wQ2Hd~Lb+G&o
z3S6q%Kj+(r8u#&}nXIYj@KaXY5z73mOC|kI(N)RGg$o|+?du2H>eSXzR6ncqH>AZu
zn33_KQ@mKT)DcGG&7*v5mNOS|y`Rr_n0<`yZg%IMMf;T~N~6tqI7g}0)Xi2&mD$wB
zE8;qZ2uCT_S#wL}Kxjl;ZPlY7Ryr&@{-#}{_26h^L<au0h7by%!saQ|J6pWeU5=sW
z+gr``q;v@>4moSL^q^Y(@e3@H`KH%kgQF7qrK{qz&y@uKl~?@^MR2(I+(-VB2qjrP
z*}fW@yIGdX>x%1XNu%)&_2+;Pnuz-@0UNvHRWHF1%WtwoOPovMq{b-}+^S0m^|;qU
zqlUcEM(H@xyfRYrwT!EVBTB+P(2nkA-ieixs*m(ut5y^Cy<I{A|H!F@Cl2856d8x;
zLvNQ|WJvw<9wT5AuYI_IS%xnp&4Pd2YDD@gvKww$mWU_?N6?F`nDllnfn$+u1~Bb{
z_p(L}rnq$vg=N2q?&Jzi*CS$6i&;=ufP=J0FLd?ZsNfE5d6M8V!K3u%3e78WCG8Kc
z<T;+lHejyTIFp<17n<z1DiajrO4ftUk=h>dU&Kj&pvUQJt0Kyz84=r~eZqWxqSka@
zWLS-mBGr7HRb<M6Sx6c!NnN5>?F*i8j#cG*6a0NX86b1$KJ^!LnEpNbg5`fO{!&%H
zDPgc+2$&m9q7+{ZMC}wruy#kMWn^RsKLi;CXNsG|i0|;SVInqPn(^9h^@6_MWDb3K
z5b?X~@7)bh*#z&$L0_f(@#FW?_Tu7`@B7CdSs=c4QAT-(Y@_ge*@?0%4c7S$^J&O#
zN<12SZsr{e5cnl3jg5**dC)abCkNgM7ds~t(Fyt(GL##C7f%tk<H{X(2CZely=6Mz
zCC#~Y_-b^MlqMa%r{TS#NeNDJ&<%SFp;-Jk&aBxCY|OC$;iNoH;sc@%ihS2#n|99|
z-^QS2*lwkS-b?<9KMfm}Oe@)fG@g`&afkb4V;gBIy`$btH7_Pqf0t^J_H+l!0P572
z5HVryesV4ALi33hWBf41(8hOi%8Wl;L(CHJ;Heh1>FJQcmBn0oK8X=MDY|IvA8*)`
zXVi}c^%(JNKI1Dpd9ej~=k(olh{rw>I}n_))W1K?iW4@R`;#!2GM3elOXi(a8$tMu
zE?8`wKJ(s-obI^2i+&-uGkj3pPQ|C<uFCfh1xI=9;oip_Bfochha1x~c#z@(BrlyG
zpdYV%a)>=2_cuRQhK{a|3bEhsy7FmzB({dETDL1_$U6=))|RVH-k|<<#Dx4`5n=K_
zEI0k~cTwa2K^X1-6#k#Y(f>Q~zpqL)alZ&9garemLIDHA`|lt4XK<FQY3+lrh3P+<
z#DC}6L=$<5%2mQ{eUM1VBa=<(mbKzepw-xe+Noj&IjxPinH*!OZhatLN*}fWVNR1$
zYfhtJ4M`D5LtO0)7+4Wr|NY}8lIab0f`={1ZXF^1>xI<y50@*QZJ(JRmPgB<`dtV{
zOdosUmr^tFOwYFxLV1t-a{l^v`;Me}*tfwE_0iA32wT#hRG>ek{=}egQh#y~CfcgR
zoA!{Bcn>Y8oYbEZbWG|`0!k<KrvR;z`jdg$kvrg7-~rncH=OXXIH|<@g7CIZImS80
zk^{O(EJ$oIY&j;(6g8vS6n4AIU_=QGXo~<&5%Y|cIVd?%wr-mdoWb{hlpSEci6U;c
z5zh!u=p`iFz~m%0V5$LhorCwt2d!bm1~_}dL`<dS*5c5B&OkLJT%aA<c0@@`d7`B!
z_Fy;e_TY^SZvNo0dCurQ($}P0f^C|82tnfgNl)bwts6mH>{}FELsQrtv-S2HYuufY
zax-7p__2)RFjAuATh_b;XZY*X#=bhn{Sel=-D1`{kP7b3uo$a<xDIab=&1P{_?O9N
zGO0i4f@J%%7cWfQRQvT)XV;$HF{_?WczFOY@a^1OpIP`Ds7+Fc71+(9@?{;48oj;Z
zu0l8XHFYf9Djv+Zb=+S$XWt)`5}X_Cd!+hCjAm6!^LnP!wv8M&alRzB8Gtjeckoj3
zSf=J}9h9V<e&-llPcx!;a+*;*wnHeZWc${$($v8zige*A**>0@&dJEgkhqPfFKXop
zYDsJ9-q4JKva2hVZb`+vlSWPydpANpyww1#;p%7Zlt%pkW=*>@Y^ostkhSL3EL}@p
zj7>@Y5a3#wwHYTkWdBOE)THAk%U7giy^g6vx2e36Wi$Q~K~T}yF!6q&n@c0nTMj&W
zj#6htPMW7griHwm&1+NrHc6{9C=n~G8PUejN|-yNZMh8JCC1?<)_*q1oU>=Lbpm`y
zZ*ggJ2!&mCjeW0Y&19S8C)ABCAN&m9H+1R=ca&y}P0Ye8Y96p0%9QB%l4@b56(G&!
z_J^4x(txfMUK>3&CQkCt)ipjZ;FPH7Nu4ehgVWv7W0VLSnZ<8H{Zbz&@Ao^F=#rb*
zXmo8GJ$F<|(IYOGKTU3EHn!~b%Mto*igVA-Sp0A}FVz!a_qV_Tgqv!hF@;8UO?#CE
zt?6myFHLt3`ux_`%*2?~71p*o^V6+#%|T7hEz6lR+{v7I`Rpz=uYMWN_^jop9m#Ih
zMeAvKG%Ai{mHVMZ++@wHqXDS*q>_{zO}1YLgX!!w^eSs9Efxb+h2_h>o}@KhpBUX~
z8Q4$=%K6{x=mio&yr<=Pb@a~_B^lZgdhUc3IjqPA$cMApzpq<Y4V0wfs#>lkSg_H0
z-O5{s`istRo^ma)n^@Q{%O@E?3Uq2k+PS){@QR7*%#M^-vRE$Cp0}iRbNHMb*-K5y
zHe)+2Mje(iLEg1Jyo<lo-s%>}r<PuQOn_RKuPd5bH}R?0Z5CAY+G|YJPakvTY^?R#
z<-PS79T7E(zT0Fw&Usa*=Avt0RxAjgTzV7(H8?9Aa3CP)n4oiaKj#-tO*C4e!8ft;
zzb-BAeKd|qyOEqBPv<n9W<1lces-~^6I)b|vlZi(FFlqJ?dk1Opp$M|>7`aJ&@^Gk
z8#3m8cgSS2RJtR?wA3IgN4_`apBx?}dUdyh_~a-G60FP<Clr)Z;<J93>yYR~G5nJQ
z@Wu^s>i`}N1=3}>#N-tk5(@5R2r3#1*m+BhvzPQh=+NxW3>B8|-5We?Eq6WgXQiw_
zJYhG6o8?8vFTrCQe765C+OGj;(#&CBq-LfojUcS^(mAd643M#Qk*N%lUV#l|rJ=k}
zOq$>%Rg*FeRL2ur{U#+_5y&@jbwqnbAAxd<GwO>VXw0}v1F|Bmg6e@LpfAY3c!j~5
zOUjVaN_i^Q7l^+s6wdvPkOd$rbu&cEZ6rm(aH77lyUaIpUe(vnaFKpy5zWD8zKCI*
zk53K0E}A3oJ%`{-_~YaXevV$~bwQ-Qf!LA#w$;|r-AqvodBfX87zBi-Rp`?in(^AY
z>I_zZzCgFKqutH3)jn3<Rkt6VE}di2czQ?mjmx)gjJQg7asmIL-v$wfF(<~qLiy}W
zG_ecOMzwM5>}XPvlN1yOK`PEn4sg{Ma9bBby`v_&bIpJz8ctm-ZrU~+VsN<?j+6mZ
z0+L0;#?gn0^KhX<EA*fk&mmUGQv&lr)B7vnM{MzJ2<e5$2KrAsr)q7_{Ok<G8Ee<I
zJ}~FJ(hZr~l1x1xOeS76LoKEe1-Uefb?(j^ywvuNMJ*CcefVEkx;Zi=ehytp_;w7{
zrFS^v4hFrFKEa58E#=vRXCDO^Kqz+13c!-X4d)DT&32-kau)n@j`)8$8~>*l#{3sf
z^>2Ro?T}#a`mbp61_lg_;9ouRPfu*Wq@#+jg#oj>sM<~m^@ao}&VUU9W0?&BS3)AP
z4%*}n0SgMtM1ly}M-?)IUJq3B8n*>#C02#rK{P>Fepweb0KG|(AEM$fzgJy%w#TD<
zhWP(EPv;_CV3-!9`7M*HWz(a2oeERW{yNOyg#ck9BO=V7RDD1fCPI@6DiAMWrPcr-
z$hN9Om1+)%SSOK+MHMsLXO9<~`O<YZqZy7}lzVVWA~{RxVIfyWC<b`)x^?`_+c?g3
zdKl!=ODjjZjjeMi^;pPs7UM7e<j+{_wxuDWz}ld~F0-^iaz52qy=x(nOu|m~@u|$^
zaL`=ya`WKJ+mgMePy*529`t_w`7?1sKG#eY7Wljf+Z__(CwBP_xcg4vp~<OMoheru
zJ-_z2{|Vo1;m(AxFpQ%BbD0z<IZ_@7lUDnz10PLdP6`~>BhvhQ)8L<(1!Oofu+I!#
zPyN7kiI<}7P2LFr7}_4#w$CpvI@<JqW&Kva{a!fn5`a=0Ek@@feW*ciraMZ4m|MP$
z&D6`2oKqUzt=Jpc=t#lkPT4Pt-Fpe!2A`S!+B^LefU$r6Qog;P5IL`Q9`LOu-nEet
z`HquMIwQnWac_?v8~JAdw%=#kNxqV7$ulXyg%dv~W546O1CN6|B>}n`{OEw|!0oQh
zz%593;C9b@APAPL0-LMy3)@n>4qhL@bU!~b2y1%SJ}aD${i_F!Q#{tLAj1#@L$E@0
zVgU*L0&|)bJkgvgcMH-NYo4SQ2)Y(PHG43JZWu=G2ybmaOzp6#Za91GD5ZTL`bGr9
zMyUNp3?beyqkTV-{jeI|prHLAxV;q6eK%pmS)A`S#(giteLwVRm*-M~>QW5*Qi_XE
z_zR&p6QSr=LP;UQelWseV!}aGLa7)<;yh1=Z3r)~E0-<CO_ol2#xLpVlcUhTggwR_
z-erZyRf1*flFAS0lo3)yOQmTvMP;>VRAf_GOZ6+2X;ULqOV#N(WNTH+m*|jXix*1R
z=~PN3tTjw<%I#m*>RhRv<=3*T>uWQg*0Zd8Yco;SvQ7*Bx~ylNHq>Uu{q?Kjugko#
zJzG%>t?5JuYoWdh<u9`d@<pu9Gm_PwgRc0kz$-^lM7FsJ`Zre;aNc+VZ$uGq{LTlI
zyOVDRi#}jK;vu>MMQw^BD3#^0(Te2Y7GbFikun9valft16Vc>T=hNoX<kQKdEMlt9
zX{ax7h+83OxDqbALUKH?*jVGaxuQQlz~h}@;hl13ouFi$G8VahVR)d?Jry*00JCQg
zarcfu@ebwo11fsQFnR|&yb=gJAQIk$-Iac?@;z)ajJ_VdxQ=>5{;!7OPp3;hI0P72
z1myo<DE?zuPj%b@T?Ezd(w;Jz63P<NgqR-Q6rZhaFiBvD9>Um+95V5?^72$0orf*W
zl3>`wKbQ`?P7oI{#TU%5KOKxC5*1z^^_Qx~<GI#y>%;1G{ui)=#zGUxVS7wqa8Ixo
zG$H~PCOwU|W<!yYh8UC@o=HcMF&wrZORdOY3De9UP!iBs|3+c}JDta24^Ik<R|>_2
zz{4qbpHY?IcfvtOd^Uk?$3$Zs`zYj=QN)zRy${m9cT)$0d)PdN`yjQC{iFjuTj=8f
zKImlJCdgQxiGT{TE0264=cC=!sAehv4Uw?gdV=%TrTqSz&UFhzy=_lI9Ub0X;&MWr
zlpwl@pd&72h*NLbaA5QqONIJonj2F`L4^Us^JQeMcH3dCN<I;98F|l}D_Jtx`|EP@
z6a*yt5L#_oi-L{ouXPsjMVrVv6}F-IGN=%vV#&B8V|z0@o=ZXz;6_5;j!(LA#*}5-
zIefR`bzDvkGV%r2jb}ZhUf$svQgMK$2Lx|bobg#oKePO&DO5`C@f!l#d5iqsap6Uj
zg;ZMGiJD~LfMJZk3s!Rpo9p)iV)?Edyue<mlt)k@_z2ywI{((_x*+9(UyQ&fMC~1X
z@$iiesoM=W+bMVSg;;H<TI37(ObRT{>HgMHH|n3~eSEJWpX{1&RA|lHq&ytaQ{}~1
z`2PwW{!ZYN)jx<i2>%0g{-aW%`J#och4C?hG=&P=PfZ)_R=7Z4k|;qEtO*cVgen;l
zC3DM^2a=;&ESLoYS87ZD*!=b@6c{zM_E9Vtezl!F6`K242q=B}DI*&e$~Zp$d%N3Z
z$K(3Xwx8qO<X53>=(!+AadGjfsIlk_^xK%fk~stH+tNTUa7XwKid}o~YdBA>J|Bo}
z?3<v#FVMc^yQbjzaL?*}mK+uR@O1rTNQ%0~!x5MO7#x0M35H-zyM7fIKcqMo9J3qh
zkY=QjnhG(d5Pz6`&824C#~YR#HsVdqP+We8Fl5V`wZHN*2qYj5zs0b7js^3S(NYv4
z{e~jJP7F*axqiO{3=0emj1CMB{Hif?2kjn=8H@^y3_Mq2;tl<bj3-J|=yB!_Vh8b_
zguJvTd^&kg3>8JsfOow~R6jf9w*gyeIZw!BBoJU*Ty)^rZUfs>c0fy+f_}Frw4P-U
zoPgdve0B&d+}>TvN;WT5fJP_U=Z%IZ`|_~CFP6j3EJ-(Ks$1@ej))>z3BQY~h8A}j
zuIj}g*)ayv(L)~9EBTk<%<iOuVioRp`?@#w%&5$GFQ2|WCeERbK_WQysS(RB7}Gi$
z<K{_{+k*fd%ZW0L;l=!@b9ULOm@!;0NscA?jHw?neulU*8E#7|I?<<WWznnth7WA>
zG#V`4R1*qu-_c>)fAHT2=ysWkeQHd<kGl>$Jic`^!GD)sUW&0hv6B=l#cdJwf&POx
z4VhIqGF>2mssA|%n0|l#sz&Ds8;*`CO*ujP{PB$I#wwA$hpQSJO2jsKuHRTk>5F+^
zWAbIJFsrpD!$Y;a$>}kCgO9fx<?HFy?bDw(Dp(kv2tQfcN{ZNh@j0zC?N`_V*9tfR
z|NI>`z(e?#__0Qud1YRIfwH9Loh??BHd&s?y~X!Svf{yVZYNfr$<vmqVJp-_W%OzM
zvy7Yx7Ay)9%U5LG+@e{}19eu0V*!<T{a0Fo&<w$hr2~xc>01-)3UvyCk`9|^)h<>-
z#Tm53G2l=(gS&zbk9H+r0Zoe2RE{H5OAU!Ff<i^1ii!!!kMRsnj?6g>2ENS2;wXy;
zSGVIIga$vVC$rDbuDZ4amNQRI5+1eXZ=WhUPt!tbYf&uE!$KIy;nZT&l9ntUtxf9m
z+Pht?-|cZbiYlzhDs2hc(w6D$=U&-5N7Pf&hpK$l=4Tw8RCz8oD*8^+wmJgkD(m?s
z3Glf1TT2fn9Q9HDtnxE6b@g3j;l~Ybf6vzd7D>6uE`ub4#q2dXUNI%6Et2Ok#u?|h
zYno!~#*d2Dlhlg}KTETiCvC2#$Tv>?^bwyd8k;=uAFIZ{6CRJ>vB$nO7@@cRqFV##
z3~U#a)}QiS(C&%|wgp1cRZvwA>I6pDC_ocX2g2C*d&TwoU2`3iu7#u7Pz<mj^r@Zi
z1IHT8abp>6MEfx>Vz}+oC?25f-&lD`2YXzg`ADxIHm)P&P8bUo73#u)4k2G1^+v8F
zOtzqyUK`e9oLx9Z7@|}pE|*n93+MnvG1aPxrXEAalW0GK91Vn{yMsJ5IBwwYJt_l3
z9v>&y)P(QXz4E&Ku01@)PVo>Lhx9E>28V~@?lc_IbjSh>ZDM`#53$T>dD0sKoO4W1
z!M&z3Pg&ezRlSQT;9>03%n4A|tL!x<Z;;mQI1@kNS0cg|{E792(XEyH2Cq1qR+3WX
zubfvkw+fV{q@(J-?j9<qtWA7`)!f}n_#e+!v^hu9RYa@vTvMja;WZK1x^I6A96YqU
z;&<3=k;<s9@3wH*6l2%DjGuKRh4wEcej@FSnC#F7IhJG@<?FWTW;cZT?U=5%m%#`8
zjqEL)kJAtHmvfJS{Fl|Z|8(u&904L20%UWgn;LpiOS+A^tziruZT^KgUv2Ezjb!XF
zS2Hq<Gut-pJmBfuJ}^JQ>ivSn0e<HppCdvA+r|>oyM=7)F2D19u5$Uf?(cuMUxTgO
zk|TWUCxrIEtfA4?a#HH|gZ_fSuYMyf0hdleFD+dKXKFB@fr&=0PMx8~5-A6$lkO-Z
z2|EX*k#D6q$qhsSksNHtCMtsP@xE&>-QYwc-Kuwa_6fNR?p@_IUas1EFwLUMmhL>>
zKn}{&DzD`=TJw=Ik-Y}`9Ij*uQXu$ed}W{*Zic+Y@2@V}Hf^qCIYYB4w&r6EA>on?
zNJB{J`rf8)V*{$Z-1uMv-ni7$;*dIea5nS6jL?kOa_nhFwh+{d^miN*;%znBzD29B
zcsgoHQ^j2ZcZ{ST9DmGj{laupL3WreK%PxDc330Cqf)r~Ops%WV^F!bpEb|;%J%Ai
zdfMMAn+j?C@_tv$cA0)H;r?{KjaEPAUZh^H+w$$@+(!gq#R)}aZ1|+I)+Ey|tB3K&
zAoF@LBjq%TN&UJewy~Pw<!-Q!)jmi|d`$+MBst|lLjFg{DbBf3Sx9BA9scq308LBG
z_K02Q<1sdiF5=`NR@%h68abqph<}anhx%^#<ZHY<{w+H12SpUMNa>G2dwF7+n3n5X
zwET}-tX66->)(5QWN9n^!@lSLw)p$^?fi-pMFOedU|?VV72N)FAAgwYrs9AwssNpl
zb)_m})NelB8&!^584%)a(2$-<(XBH>Du%I~jo3r|4M2hY7V?dHUmf16qa%C9?s)1V
zXFVr=cGUxHQybA#bs#uY0$vWV0AK|)u|h~sz=^0a2X;6D5P~CUFrsM_P&HU$SupQ2
zG#X>zG3jtr3du@MFkO(W1zh?h=G`uejClu|LoJu8M&P;Xy~cSDf@``bnI*l-)Hpnc
z>u&k>7j|350V(7aQ|DV1PAaU50;^aQ2(S-RxPx8W&VJj!+qWH7s|bIv>7Gb664wz_
zA=*34S->4nMKRbp#v3!Q@<ZJ#&YR#|atQa}qmAII3RJL7Jx~oXe_j_a47%+PGV3?>
z2zd-|1ZiH@myj8ho&qj$pBxpckJjUi<~HW{C!5RxkJ7)sJHkCoHb{sjN*g0Z)uZu3
z%ZQWXMorBb#_*GUo%m_=O!SdN<J<yoyF-jAAnedGcT1T?;`RD0{e+9)ho;~Id<}Kl
z=bypbNsuIj84qV!KFcJ9`H1QvalH*Llo}Jt{rmCbX}V&8F!*3#F5Lg}WB${2<nqEB
zr3^1SQg*-mw8N4XoFNY^2sGvz2T~X0P?88sa~g31u$P|Af6FzQHRHQ;1?>hQc&`4T
zt}v?PXnl-W1;`H<W7e;%blbG%)z-Fc==!w3>||e$QLb0KOYBVj-k!?#n9UwO{`fP7
z21dOfkh<<+=B{kfo4D?1{?s_-Pu09Ld4ZnkN82nkb`j6|N8TcT@<NIAPxI8zgmpu+
zr_w2>{T;I>kIZ*5i_etxUb831%y%h^&(!sTDUl=jBmE;>*7kAzq)z&K`b<7^LB*q}
zDXIzIsHyUCex;)q)_lf$T-JP=ds8z(xua%t|C*`z<QLUUrt}xt%=Ag$*eP4HpDIVO
ztUC<%0;~bbN8x54WSK&=_oHSXrkS7ON3-K^*sK96M@-{y=9#^u_gdy3SyP7TFHGhi
zz^R>-mwL00wyB-emp`nZ%16D)FW2TDu$iAKM*&GM`4oauAQuWjCD5o`k22_<;wq^_
z4<rF#O7n~y5&$rzK0`#N%e+BF=2PE>0Sw7+hXFz|ASyZE$RRD69$8Q|h5wHs$Asrt
zK(7plOYUtGutRt22k4amwadP7MqZ~sgGcT#-d;<;6%6&#-SUxt2t@AC+!{m%7=k=x
z-e3Wrg+teA&jNs6Ezob79wm?z#Yc<Z-18_3C_g5?xgeKeESP&!akq{B!~~JhiIQ&>
z+_KRP3J)%4KajF5NSH2&6G9Je2u}YpuvsS=QeE>b(4uV$9K3BFTm*|afq3o^EH;dA
zZeRmmoM3LEig0eE4G_UcJY)l3fwDHRg3i4IZtPAQv<Ux9I45$!r;QBG6vPWFt{n!+
ztFr{Ix2}T{(YOegqaaK+Ct469Tn-7SiRp`kN<-C_-Nk^Vy(D#l2y#U4NbU27fQ8$-
z3UoMf@8i@I?GrQN392S&$Sv8Jse%iI)0Z}ChxFD)3sQyX@PwUqpSvK?ln1js2K2f-
z;x_T-*HSh_3bO@86FPx+$Mh*cJ@M{}wvB>gCw6qNAwZ-;X`*S16@>RmK-Ez=5eA*Z
zZwc>8LU5t4N$q06UQlXw%e4HmLkk*)QY3X^4f+m&jn?<WXH6DXe_(}oSG8>rJiVC>
zF6TIqZp{M15&(w^$Ga=rHVLkU{>N5F0Nl(8@*d5~wJ%n@Bk`Le7(CbfvBHHc#15&G
zDW`9=8+r#jex1oCoPHAWYC|qm-8k@kO&0<iwSyGD&XO;eKUqM2*BW9L)ibW|9?D;K
z7nv%5$R)QY@R!&wbr2WY4FQ$m$SeF?MBhG?fyW)D__zLTmpg=~x@0ZDpVkXYMT6-p
zr#rU`4yyW6Lbr#`y!U}|uDLihorQ6~3rs3Uqp#dvWIp}lN|qixo%z3x53<)ha(&sR
zXA0Icp=L~kobD*y%aijJiYhO_A-?c<vHi(QhP84|c%K{RcuGuepG(plXl*p)^@<?;
ze#h{zKJ%KxKjjZPAiU60BqGsI5vKCl8E;>pmy`ps%guFut63fIK6Swly1e+KxGfe+
zc%eci6z+7~G^prL^rta7Un!q2(i_}od7P<aT_SW-qFGM*R1RK$WR&j(^TM2}H|fX0
z!4Bz`22>rT6LOI4`n%!>n9tn!SIR|-ND-kwbK_r{EpvSX1@;c&n|*TM;31R%o`3xT
zX8jd+B_JHppIeiAg#m9l0;dPpsOg5y?QlK&2iJ{ciXUhy0mUKURG$pff+ROIKB0YJ
zL8CcuYy*CZ!2u%8y{OMgzed4u){fKCa({-3NbbGafUmM-XmR&y#zL9SE6*(wTrB|R
zt%|1AjAtf7Y%E2i8O)vZCkBMsljca_l}ZIyY;UbP^lGxQEi^2{Ekp3EwDdUY@kFH0
zEy{JU7ePcO%b18(&iZNzO_W6x{BF7?dh9C(gw~OyZX<AKZOU?EixGVVUz0_zWkUz@
zGzvW}wJ&dNBDJZ7-^%x*gj)uSfnvEf@#X8qpnMA@wxsU~EfSZS0)-WpZqzj-Hc62P
z)rp$3uSX2J#4HGxV%v$D;>Vd*&aN6I)nd_=k;?4BEi{8x%kV|wrj<QVg`9ZG!{eQU
zbAk*kQBq<RVw)JTb0!aGlHgn{4VW`K`u#@U#)nq8bX}r*1x{hL4Os)m2q-kwRr6F`
z)s$bTv}qNU!oQmE&6A#Qgo3)ZmQOns81=bEXsmC<%GVHAYm1q;^|@(tXiZc&aFq9P
z^1vCy_jqh%T5;z3F+jzTs#N<lwvsMiabJtgm8xezpI@l<@<A-_4oW3Lm1Y-@)@HxN
zNwNj;sq?-ghL=O`9ifb7YHsnfI+r2WR>!%zQ`|@^T%yubq9mSir1HzI$rLv%hcZ&j
zCw4a}#J;rDe$yo{fImIPjGLKhf!E7$H)dZsTL;8T@}K*jpHG;wv`P(`WtDoa$XMU(
z+&m;N+WmS%{*8h@>Z<>kKsJK#bD{yS+?(s#c0~u)@0TduNL26qK%w1x*CR_UMGUFY
zfz{rwHl8B^WPBWtAfdkt?|6BM4$Z<;Y8o@Y;KFE9EB9rP+#>z^hHwjtY`ONU5%+0!
ztvnTo#=6ac2vh3xEzHA4kDZ&fXR$#VeY+Bx?mafsJ2qme<tj<x^crw9;69A5j$TEz
zjjm)xn5W56*lMd=jzwp^42rDF&|Ii{WX@n)sZvzO%#JPiX(w-yYXcE&Aa2NE|6H}?
zatBNVvVFaVxA~P<t1G3YW?7+Tn!tp5YgItFnPtII$6-q1XtPWzAW}0_IpoT1658RM
zH>1tI3-9V4*6_9ICtnN7JD=94BDptzKhCc>XH_t0asv{(K6&HBknsM2M(JlmnxM3d
zwq^d>O0i$t;&3qNLxP3+q-8M5-84s6N6O-;Q7Q?F{NEbk)R|=AqFblMfnw7ShG1Ud
zgY&{_%C=WF_C@a$&g$W*th=Rf-({uVLaNfz7-$$2-m&q?37l3TwpzjXObps!`r)Az
z#rsgr^}b7PO$!@f!G)6+4k5r~PR2z3F!A$xr^P#;Ja<Z=E2>p-e1!RWRTTrHGF~$=
z!}u;bWM5sysi~#8*VNik-Pl7^j>NXCLl|krlBkYXC1hS>pe}<Aa=(7n&}c;}L4G{f
z%GF#C9DS}jtDdyAE`nyh86wA09b`x292&QF<8V92SD6|)TYi8-rDesOE(4mZ5lXd`
zp{N(o;PsO&HQ)^@xWsZ6k&|~t062tobW~Ng=ae<B9jo;94BE>OYL$)ZqDSN&Ah`+<
zTeV5W&j=k=(H7C7Mk6J>%*|70SJkza=Q@7=EE``{-VSWbWP6fL+R*0|m~M*NSggWZ
zsdv<lrpX5C8*2QlvL4)cbkm?jSF?!USU;_t_tx!R(w_4yW#)c5|0;=87B_ERD7E-I
zS*)o1Qta0Lq4f*3@4N5eK8*zJMRM@wQU>rED9s<mXBj8bsC}G`$lGEh{g~nbEv6Ff
zDSwuX$PsJA^TjP3Ag~fuY0AIe02lY7FUK;@oHfioN-nieG_P2qjjf`Qc%@8_cZ#|)
ztw8b&urYD-eKrx`q-%_5DIW_xEaMCPhVY{vkYU<ky^_(wV-e-I3?MtMA(pi=u5D((
zJH2JkV3QM~Ls{%m$K^({QG<J&8B$&*6`4@FLn?D*JF}CpO2$Jnq2Fc1>f;}!BF74Z
z58`B)``JGMwM76YwO`R!q9OtNSt4f2AR9lTmJ^gB+{Y`$QVArb7Gun!0U8v-R&imV
zgiAA~_?ajpdxUSuJ%9`r0;}g;W{B}93soEq<MNRXvkStOXF9Nk!iBkm<dp+1UYD8g
z#^<S)YZI;HtJU{|+X(d_d5fXtOy$@$%cB^$&y^!h>56U_hPon5EL&_MvO^nk%vOQW
z)gg0bG?=d^nqtPSJT)512gIt9W?{2hv89d#3h>`>F9A^*J3r@8_=T{Aru8EwT|c7Y
z<osR=Wh3;%Vh5^}kya&51-b~TTd-Q`a^`SxziPgZV{vz-SBH#5q3yBx!<BCqgQ00`
zRywN;3i894G9M0A7FVW7X4N%XO}pK$;z19wq7$}o;(cwxKUE`aM3M=kQ7Zs+ZE^P}
zn^gU5<;0lBT5@w^Pu4Y4t;cK7HlJ^|Vhck=@1i{5pR}j`9!*=dlS1<Fs`!44>G%Fj
zA}Xd-zL%BQ>h^}JxI+OiUZmh*C!0z^a?Y~ZnxUot=b=_h%|^wI?nRXFRlv@MGbjOs
z+{1!*Mf#z`3xkWhRCnY_j5V-)pc)=01Lrkf<ZUiecHsJr_Zu##8O;_l)hj$>^uaD&
zuXxW$j(S@XE7~K)^*j{N+&MHQyb#LCaW$-8g<z{Lqap;);s#=LX|pa|X&VC0xyOEw
z4@<y_f@-}yXIW$wOT4n;gGY_hlAxAKFjb^>FsQI-okAYAEuNpTXsJD1buQ%A@V3n+
zVD<kpDAra$HEjq%+oh}9l0gk6(p1Fus0D+xu{4{Kk2?ojiQ(d5kYz|Nzrmg?d0W9Z
zO|BsG2?>?uFhmDWw}o0}<0E`7|Nl_-&QX>w$@*|rSC?(uw$)|Zwr#s=mu<Vtwr$(C
ztGmqp`pn$9_nUKnXYR}&d#%0Rm63bDPef)$W=6yVA$Az^8UQ<B195^Xkiz`4iv`96
zY<!V1XKer-J5@e{1=gnSl#S_;0c}8c`#bD>=a1VfT5)F?CDUAUPRDtM&XDPbS>n4z
zW76u*adVE!)RAWf?{V%~=c8IZ85z>39Sq_tP5UY=ySwu2?*>(R_%Z`U@2wGg?7>K0
zirqfW+(kGRpQ8~0;n6~5-CKiDZChcEg9j=X!cXM2So+dR9A<zfaca&byybS*qK$sR
zBpNIVBFgkx0nBIP{-pD~x1h&0?)H6WF-GMLG(;5&?gE>Nm_g+7Fb*x@LlZVw(SE~u
zv4RG!*-P~{a}o5dk0`p#Iet3>>7ti1;M79ILs?d|72)J&rQE<tCI*?fFnTTkTPmYo
zU=p7BLfUdfxqQrNPyK$Mr$3ir0h4RkI0q#f?c9zF?UxNqWOiS+f+;=}T!7w{`;GY?
zlIJSo9Yq&NkWPTGgp)K%`6f!zC(aOpc%MsYJY5u>r{@TOnLwZvT~go-kj?R>fd@|*
zocUfFkY+L*y}X8ozS4$UGcO-_>rU%Bw}mniXj5cjx+%^nsw->$Lzoc^f^J+^*s5^j
zwvU_(l@pN_c@02ZCFaB2L39;=$_De*Cve(q>v^fl(2JbPrbS`9*tVgWSv#kT7Dc)-
zeP~VegE^uN_AV8#4MQE~W6HJn%V}Vw|0mU`fS+1e18DCVJ$8TtxbG2B$ey_yZXo{-
z{ih*sBzkQJtYZwpmsLFf4<ED#%Aj^Ej!$3;qb9neLEq;g-BD%r+zX1sj-(}tQy(0|
z&x}HXj)dF9bzSeE_T2BNP1k&f6}{RN!P$W)P?0BCK_`&o?E0^l6yK2z@Fv;Qats-1
zLty%xJ%^b#A9RX23h{kAqaM*#ZAYd+ea2DNrwnk)ts|Us>%2Hu{Xa{BUNorR_7HD?
zoS!2TZXXHV7jI<x54@;uFGh3L@{<ScP5D8xmuNVqkp_)bLMusdQV}ZfJ(3+aUsJmn
zTJUqQBX11fE-4@5JJEZ?!ERhq62KKC_I;LsHV^p+zZbrsK{_=(TP4{4;)}B$B{6EF
zCWeHsv|mG@t8cqxS=C8rF>WWpNoh}RT6i;H7&B#SPfj#dUsxd9sC>y7bG6cC<Xp%|
zJ;YYpOC#Y193~sUYg>+9G#ys4@LUOql{j51Y_*B?l_|G{q|?xw3F1k!V=TwQWiPfW
z4DWs}ssW}g&=#!XieX2bKyzhN_mRC>_MK89$@61PVXFtM>4HAwnSnayo+l&2IAJX9
zIa2y`?GFw)z+#1Jt4lc`pGY)JiDj;(m@?BgrP8+hQX>**D)4nNNOj1B2~EY_>PWZv
z?l~pgegJKTjU2~EZG?`k8jiUGC=2a^t&>x%eQy*fnEOZcN|ezcCCu2+s52viE1B&j
z1w3nRT^$mR3MXSRy6Ffwv+eP;^+!G0NKdF5iBu948{e}fS~pk{F9=(!@cD$cl3~6+
zdsKXetDag3KZWbqQZRAonmN!gb4*JQAlh(Q`{5m8zuo*Id$Ys!`X#jdsT8fRb*(rK
z0L`q|!0?kodQG$+)$>9jGra%wp$9nR;0-JCcdn9Ki(ZoV5~&lda-Y^b!9IedjVn9B
z-7^>G%8>lhVeYp<PqXd#0+0EQf*a@Md`pa##GG(@wB5&U&)26XB#^XXR;qUKa|K5u
zr_ONrK1lvF!=axjQ){nTY>&uq*jS4WCT9me_w9AB1|_<KS-nP|=qB`sEtX9mN#f{|
zhM=!8wRJ6+tpMn9|CAvKH?QHEMU_DbvKU!$dYptiAc_SK*#`&HGB@l6<t|CTX`v0T
zt~CWi`z{<=<v!%&_OLW-Oq}xMLVBUzk;R&9e_QqYQmy8(i3`Z=0lxp0ugNB%`vpR$
z7B|qz^H%6Capl;_Yb0Es-Gz0eb)pStUr;TE(}UY5>0_aMmYLcy`JP=%Zxj#rwAtRK
zt1BMbVh{PAp2V}A488GHb3SZtA1{8QeHv%aTq5Z9O-Qsl$pv;~tYEXqNL$k}1<m40
z@-CO!lv?G)^2!>PPHbE7D{D31D1a6rpsLgtrad2g1lOKVJIn}8@p0FkQyX+;-yJz6
ze#4#z!mVEi>;sQw79=is;MwPEPH>66H=M3NdI+aeT~ua#I}kJi=@^VbA5P;gkn>wz
zwmU6k4_{yl@UcQbj@SZ2;$(r1ZLYzgfh~XMVa-|S$&&&7{0cn%#T6jv^9jx9Y{Xp=
zEJls0t=|EpHfZ_<Xsc=JW;z=*bT`%6soUaq%q<>yR@M%K?U(#&sU3$YsHPjFhI0Ka
z$BM-Wk&UU0CzeJgR4_<H^o2WN7R-dbcDUMxCC<t>SlwrC#>B{cJTZK0K!d$?plV}n
zOl%&X!YZJ94f3Ryu64EatDd^1UyP<wc#jY!d7~<Yt{C+-Em8#j&_-+${(HX&@C$tZ
zq%&^a7Vv^Lrpb5~iFY0PaGSM>c}BbL=q0ZAw6d6*0(&T;GCo!xn_kJ;F^0edo6Lb{
zWh;Em>%tz)qCI&QtiYlZ`TB{o`A8iyQt62-2YOAY4%jEsPcq%Qm4m02Jyi~Uou2QH
zxp^aFCu+>fIrrajKJox4V$hw}H6m5XYiUluiaIXRh~`;pMpchpFp=6}&mvv{M$WuH
z+9#WDOG~`O<!&G}n}^2iy(qbS7@@q8xO_-sP*3lF!;rrqH#7&JmK|_F=F%Ce1I^wx
z*lj70+&aC#yL}^ael=O1vZeZLpL5pDkE$8t3R$WnWm~vn**KnQz(mwD<KP=9&ZGV`
z7`Ql%^^zTHz$`$AuA|11IO4%}RT4spGRfuwFKe(IE=aJ7MXV}`g1Q*b2~>N<+8Y|e
zIO0~=i{3>aXA3gj6(VYOsj*}4tZo7QC1v)ps^+r1;uAFOsZZ0bx2C~;>Q{t4SB4jx
z+=SmPw1TRm0zRa&6xy(16`WkTKEY^8ZeXzinONtNW&rV)<l^%J1EAI!hg>dRg|As`
z7juI?82o5XyJqj)Fb>&MxXyoL9HHQH?qyyEhK?%dGE(1>+IweFF?R64o|-bQpxCja
zyc~f}sIP`vQjmPxdrC6%yKPT4c@*38_5;*UoU{;%_m_yc&hb!CLo|%18c&ZHtUx%;
z%6KEuu*STUk(x9a0744zF)Rx!@gnf(LZ6`8>e3}++IPu!LFS{+3R_IS--irmx+3L#
z0&OOUVn7}&SSwHJ*cz=UJ2GWv87s|OJL`)XJQ5ub8xBU&DOhJ^1VmppvS?*fRCPa?
zr2u!M#DBTX5lr4Hra>S>;M=}YltmLYm+22$92}e6fKJUL#TzEKO4%Q-!Fyc?XT-t#
zNuLb&O}G0BNP4^l-yiaY^Eo>?H&G_iY<GYCeG)`Ig&yC3{~ad_FE=;nZtaCr13Zs_
zf5ZWZ?Bs-FX!?iY$=7vGWH+i8&I5B_m}zFz)E0=uT@`v=X8tW`r-(s@fy<n-#M}@d
zwNssU`6AO^t=pJ*Ej`U;Xe_c-|7g0V=7!QHo$$o9f+m^zEX|gH>=U-yR3o&8A8+3%
zJ-^UxNU<Yerw0GJe}L=W=5{AxZKcjzmgKt|3_10UXkYu7oP(D$r-ofKo6h>`)nX}O
ziog6W*Yfj;cET<dV~FfpQ5A|jJ3Sags)6cf8PVa>SZqI?G-SG>;Ln$<h^><uWoy2k
zBI8#}rWDjs@V+A|iaXiBO!SR1yMDa8Dw58IRoQ;Ix|!=xew9npRjzK?e#!-SM!pRM
zm=Mj7qvk$@a}cRg*8{PbVPN@>h!ceOyyc-<fcK7GVOC&lZ%0a75*XHp6yvu;?-$nt
z^nhXj@K4HnD9^rXX~r#ehM$zmu}u>+Y~KY=pur7E8K3hM#IP8_9jh+cTeeJD*itE#
zrbg6kVu~{9BBf7A7G%g4D2?00`Fbji-`+XXBL+@fVxu^C<ao-hm{R0s;^742tvoew
z*P7K=AJx<)wj=}GO@an!m900Y<_2q8L&Mv(?uR{d;6Tgh&cRTYzDu<Zs#%HeKD7__
z2}X#rzdW&}1#PM7FsjN9VuzX@DDx-dyvfGzO(J=J(6$gwdKa}ac2o3!rWj@cw_=S*
z_|`B<a6T|lPXZls2x!>Kj-)Rz+Bl`*&g?Q|=KhT6?DH16E}x*(F*cH7I-3%LC-6kg
zzuF#fL+JKTF+MiQpwB(KAANCC_+h{ndoX=hT88sZU<S-bMsCz<%rZY8>jnPA{s?z%
z<$RKK-dae29n34<T5HN8(1_KKyNbpG6Wd$3|Kdo`6L8RQ%hYM=-4p)Z1D`KsrjmvM
zHr3`G>TxY@@4d-rb%4b@+A*tMnLS&IQ<ZZoYZ|wIn%U+;5h~f!$+MFcx4yDvwAR{d
zj$wl8YE{OkKY<3DQR<Rz!Ly^bX<|~Sf-6{MY<hL#$OJ7?RY$VU@<zYLVsg7rOXe;e
z>|j-lAHJqQz}#ES*ck2CYQ$dbEW`b!&w(G)WIJJ(Rnixyb6lp$S3;{rI0JSVgNo$n
z<3?EvoDFU2&`hgQKB>zgsO6;Gmy21tA>$$iSI&aWZ+;ADwS|Cjk>MbRlt`>_?oLb*
z+fJ&U)L{IKVtD+_<__j-G;R~y7GJbnDk{ovk3h~Z@O?A*!5^=&2T^i)xwvsQ>_9Wa
zFREcb%T|S4_QSds|6Gvv$By@vF)$Di!k53iJ^Qc7C>w>pm7wJvsF1Hf6Gj<&`u=Sc
z!42#HFgO@o3K<R^9homHDM8spE6P9Qr+?5d_P3fSKhPKwPNm71pC;Q*a=7na9zKEf
z@x3gPP%5ccm1~Rjwfbbi7|p5n)70Vzvm#K?SPt{8C=68wz|dGP4Z{iTlC*do$XkiE
zBU^-aT&uu@HYxNNP@+>fPo4HwbKG}v>C9c-OAxnAq9t;8cSo9uv5%wx89&slz${!t
zc2Zh|&N7gF&u3k)Zo>%Ya5lvO(hJxL>J&a;SA#CaJI=xgqyG7~J;-2W;$msv?*-3~
z@e?H4zq5CiufSDTz(kM^D9x2vu2=d2Hm#oz1b?~sEuTpwT2@Bo8<=x%rlxeBoDh*z
zOU?TrX6Rt%$<E|{Z36v%F&DYOKV*IsPwJd53mQQzT&0|wudEyIA;?m%E@V4SDZ}X*
zqoNn*8}u4xY>0v%oo-ArUc$?^Jiz|Xy2${dd_4mN0vd(>OWpi~8BW#0Yf%}+cR)JR
z8A5B^(n5f(;~Pk8fQWG#oJmpkvIIJ~vb33PNq_|ti3M#nMe9w+Zs5Kmx-tb<6+syG
z>+{;pC-TGQWD$I$lEd+s*9`B?n8r0P`xw4oZWoX~v2Q8^$sQl%01}*Jt6o0{l5YHM
zd9V=@U-E5wa1H4@%^o^rk7O&!J}Y8Pq`S~yCeb#MgYuvQ;!WhUs<7^0T9^akPB;hk
zepc8GbsoXE0eC1H95?46$L4f?vJiGCM<_Rye7FwII;XR;J|mY<TId$eHKYOXHJkzA
zV{k1*I6@sFoF;_S?Bw1wLUmskp)%pvUNu5_n*?k-=e_-`kovI8#OzQ$d+^aJ^#P$V
z$0`%vuo4sA-YrGw2nWuweel2mPR{WyOsE+r&&Zw!9KEAECLDO`KqAxjFfitgL2eX0
z1Hl3D{lxRvl&G2blpmn4##w`TQS^0s!)l{r7$KAgFff?>1f&P-_mB{a%R^r)E32%Q
zrW$Q9Em%#`>6mp`6)}(}>*|FjZINozDixRg%gv&*eC4lHTwb5bEeej2o8<84mnv;d
zm8Y6unHLT{ZXWGh{Pk^$7zWRYzGzz3VA+=sBrvAP9$2i}?EfgYr0<}dui3!jW*D7B
zxm%q|ZMf=sQy;fkXI4>RS0UARx$-l^7(0&<a<!^9WZ$#jQh|XkzX}p%ySf?)RD9f8
zI4xV1A-(_Q6yK8E>N1n0N#C<%>Z3s=Wn*O9Go)3d?cxcmgi25`EihsNVrjrNk;|2M
zJkb4uz`T&6!-BpH9oJk`53p#}8oNj-kZ<nd%`!hWBEl(Q#HgE(dOkLHqd`I?U>j+S
zS+-Z~oy4tkmtvWV4;$hhTaj(ABF`d7Os{h%L9~e+<{qd*VK>c~e1tNJ@ef&O>Q=Pu
zI&8M@v=ZZ(UrP=nqbO^BJf?U-;YPZe(m{lxCM&3#s})rM(Y&J@S28LS$V7s31!%GC
zcN9X>F5{I1x@4eoXRWtUuxiQ{9#<)a+8m`_VeyQKEM$EJcJdi^RIUj+<&aaY$_Q&4
zEOBgRHI{EF!*bH0iZ-OlP0>19sqJTX&`3FYrM=5rKa;X)FEdM{B~WHrpO~OpapGJz
zDQ`}#Mxj)6Rvt)tey5y}{iSHR4!bU++iIJZRMOk^15SScaNr2adp*cE5pw}jgvP`&
z!LV)^)DOxOWk?yEm?OA|T4Zf1BpNX^Y6Ln3MXM7B%`JN|VPeP6V(MfxPHJSb-~(8Y
z>w7klrvq>rUy;kQW##w|n8?bWeDCK|^sq5jKZhfhDj%oL)$|-c8k<aaKCG^dgey^>
zW~E7-Pk(oB6FegCGS4uBei(KJPj}psQ%kWNV`4t|*$;MFkQOKsJ^hqcpKGHP{g!T1
zZ+!sF#vl%TS#;Ko2^XGVg<4<$(q&w6mKl%{(6b<3J_z$UPBKN9F;%FLS6Ar^BU94n
zhiW_;ajzZwHL%c}N5yzYKrcR9$rvQ!H1VdOM;wcyQ2bk}Gal=hKa-FYSaMzpjnWs*
zdTqqUqS7RbjxSo}Mab%Ia8d~;wKSZ7jq?h&<2spisW>rr81^HFJB1`rIXuMRc)w2^
zfm(9=guq38awK)lNe(R-Zb5+{7CgKmERpGhWg~T_2riQt@@c#wOH$#2lUm*M<dN4%
z^)&0QU~?fn>^6eLT2_f+L;J4}0aZ&<a{3}dE_hnQb!QmI9{ZaQBZOe02wX^cMW0Y;
z???Gms0XVIF&A<_NkEcDp(L#+Rr?=BL%ZeRP!stW>*7*r@0va(ebpm$_8Rb04b@&R
z#VK8rXL6{9*q$%X6fa%)-ef47m(6BU4KKVO1u0#tW^`$Ws_)kDrRpB|-WI-c?_6+x
zQ#7SMI%uua@AKNB)fAS$UMr1YiJ2OotiLNQc&yyJ(kMJ~i2RmuZk(5c0?V@Fi^y8y
zY3|{^3Rd~RCf6T?EM~62csS{#F8$#(fXRXem*7thfm(nruS-8GW=lGyD>&5i9|k@d
z{VDLNI%Bu3^mjvG;J;W=jQ*R<KAI6O@Ed}N8DihO;0@3cNpoWo3EAoz?1eZQ;<5>0
zAF(?LH2iLUR9*-g+B8aH=ex(R&(>`qeNbk69(-@$RD$>i#4_a!&&KG(@%ldL>^bxB
zt$?>J-NHSkiRhs;Zc<J%DawoW)%&T!TREwPlpYe|n6ETJMR_r`MN}ivtmWf{_SE0v
z{D;&804$Y*z%%^t7nS-JU4(FOQ3tJGzB2&3>$nNa{f7xiM*k}TiM<-(Ys>GZJ3xOC
z9B%YK2}mL_brJpY2qH5WtO|w0mFhM|B^G$A)vK#?)`aS-UB)6rwkVK+xh8~xA^5vu
zw6gOY16>2XFeiM!Zs7F=cM8vt+PzsycTtzk_jg~P8@<1@^YL<h31r5i4|!#on)fDC
zK6%?|Lh!Y_8q3I@Vl$1$U$DL-9hEdusbdg-^c%jO58};SRlh2-Cv@lk9Nch8U{>xf
z?4y!YVgXe-J4zyo_ta{c`S~UARFv1TTDefZdXX;a;ZL!ac5gUp<-cF_EAYQ~;s1)5
za*5@I>i>oy+QT?(9>pKNi@9hzr&?FngnY>!J`Br<2pKq1k3_@cABse7py}qZW8}JK
z@ObCb1x&->xXX3gPQb$3sE=GZ<}7DkC2c#-if<S3{0*YHtlJ{_j7Op4r{zy$iM%j|
zn23h?^tRIusN`c@m6sc$Lp8<$+OtuT$#6#L2u>^>$l2pd`@pMkul;U!0=x(x2ZHbC
z+*xpHzB(X}myj0$o`0@Lr(J_ZbMgEAL_z<>JN|<^Jz+}@Spa2dCZ&197Cpadw`CvQ
zmfv}uHY_|CUC%r2`J3VXL8HEgB6Q!-;4dg7SW#p>nfJn|ljer{+B;#kr>r$@H($4U
zuV3#UKcK&bv7*cA@Ho|-?|Wc!E(%vi(1g)MXd}1LISL(qAEkwdJI6DXe~1%X8X?}i
zn;Wc;O%cbIBGRUej}ccRK{*Sr+=avxIGD=$tXvY04Yj1^iy9tCg)5hMrHB!=RKjOy
zab;}D;Z2{izCDzlbwAPP9KF`eq+f-CECofsCK*HTE2bkAi@ccQh+xM#)Vs2~iL>jN
z)IR2})cr}F)KajgJ|Y%sePk}0%eYIAap|Y*iGq7dUtV*6?@*g20Z-y?nn@T1A4O=C
zipZJ9fAQMf)509~f<0sVs_D0WWW)KDQx=v$Y0zPhiX55wN3(-Tr%|UB56d?5G~_-8
z8`%XAYc*%c;>e`(8C=&a&(J0$g9NL?hV{ynYuO8G$W5!`d(VD%St(*hA$n$&9R*2n
zO0v8(;`%ZayUJYslYJuIxFkjPg#l?2lHiCWMG3^XECqRRb@Fa81TJ@<6hwZqyaZyq
zs~{=iedSkv5s0g={DhUea1Hf6!svq8!D~CE@4}xSl*h40E|Qrsb6aCDJPak%3TASO
zF7N?<|7;{b$x@Y{L4bf@p#E|)H2g<>rY+S!YD&xcrZGg3egkTHR+ECwccyvZFVg%{
zB?1M7B3-eRIA#F>!|Y%xs8!Qt?{T5>0PMK{t;JGSpHiWArK$T2)9qiAckKiLT?#o!
z%52rm+wjD<!)JEmw4Af^`Ff-VRA@gC=KUrH69b^es<wO<9w@=8ws@8vIKgTKbOJ80
zBCt|elUOQ6>s+Fni2(~piyKx*x~aF{V;B;Uq;U~p&cgPSV%R#V_F%KM6}i?KD+hWp
zam9+9$Ymwn#RN6QaEOt%&;4UsU?&NP_jn->kjO|n>GwcDB3lUrx@4rDM|+WuVZEao
zz#P>X^bMxJ0V^TVVI#Df>x=lVyRY<OF~KB`<y%bXFt_PY-D#QbYV|_~n;lE(W$3Ok
zt*8xE^*_{~LG~De9|x<`YZwNCd&?&2(5ES#vj}l;HkRH(36XG;@`EKTY*M=0mg#HK
z#d8IuC;v2!OF6c7y1R$cJNZ79UBHR&PFj+-%{<mQcGf(}GsOFlt4?uwWNcKvJb!!m
zdJ;m8$`WrS<E}M%jgGp<E?F~Q5$>1BgHtX<`Lt3cYs#N7kUsA0sFvTr_VmHaxwDOX
zWU_*IoMGIoEti(1^qw8i@PcX}(f+yR?1cJzE1*^SB}<%bJr$M$&atur!xNj6j%{wC
zFCtpQb&L|!40C<>oIbu%3jt<WWCSrsv-{Qps;X!gOeVi(t#ABND=V;k_@$mxmy*tX
zQ?rZ2I~RRu+GEx4z3+t5iy||~!SiQQPUppXAa~?uwS05h5X0&`nE}Uk;Etn}EjtF%
zFG=>T=tWg#m+ra@)uc~+RBruy;D>@Jv{OP%x(NS#E3>y4JJOtdGck6L1*D_A!vwa^
z!<V%}P4&mG<fdD$ks2$_$z3B45yufXT*r&=my?gBrFPH?DNMU~K32X%_2%ImGTBcM
z;sUUoBpW0yKjJQvBo%W>$|h9HNLVEk7-8a1II&oz^hQc^L&YDr#CD9FZHZE(U{`M6
z0rT&9pU{H!Vk;jt34Xzc*5!ay#Y^&gadGj}EnyC|frYm8L=~RIbzu@Q=^4q?#n{uc
zWwCOOSA=$FwTKv65pdY9k}ob}u6po|!hYCH@@!d{zWxClVSt<Y(m~>=ddwHW^%LJ=
zYL+(cFq-JN8Mo6NVIFqH0e!d92xNEz<sXKoyL1X<=EXto<#@*Rc!ys;x<{8v!fT%p
zr)yy)=F&HWJ0u67S#c`%-Py4_Vn0VtIbV6XkWW4RQ+o`1c3$4(=F3rrjD$VAW!Ghr
zqKvhuTIx1(sx~^rCB2lvwisiVrW{PZ5^WqR*GY|DV$sx4$TZneTfyL$|73avQCi{u
zkDZG@2bz=mAq6`AZd&oz&c%O+n*UE-UN~1UHdioLQ840vs>n<7Axt0*W?&_Ai6pTc
z1yg{<rx9)v{>mBdarW9rDw6JTww$351rrq>1!Ji03~V6^1{{p`tEh7E5Q!}h42%p6
zLEq58Sl>k7R3B)8hJf%-Yi5Ie2l*cb_d_B6#ee<BgqUpgN2yl8&H{9zv{GJjimJkG
z4%=LSr;yfMLV>E{T(fHA%9wG6Y$n-&u_A@;Hw9|<9s(59oBa@Y2w8=W6upj=U;X&I
zdiHHQB)jL9=jhrRCmv60X1QH6Sx!uMBRf4GaCy)rLaQ}<u&{QP?otCASle^A)qp3K
z&YC?C*j!7Fvb_d|^IM?0NDLCuFok`{ead~zeiB84V0-=_@)!p9$gzlM2FOOjfHac&
zL1hfCAQv8S9%&flgJ2<Pq~g}B7%Z4mMVpQoPm(Z_9}qt%esI)fx+l12xT}s(-JjL7
zq@$5xg+Tzq8e>FVvFj4k%)imPB0P!Q@^nJL^^txL_Zft7@OS47RI_IYR105`57STS
zYk)}~iVTM7l*KvjHP95>6}u&@D!j)nen8ZX*v04=S>=_z;Hcu%bZV5H<r26sx+ENY
z4Svpg{_+CRUG#wZgY^gO4_b7O2&W#SC$D|*eK8#6(rDLv>dHu067orlh0%<*D8@rC
zS-OR)S?4~T`|L_a{r0V5NMb1Lg772eX7p_9^+%FYy7irS`Bg-jjJC#9w|PMF%!}(Z
zJJO<$@6%65TnTD^lQfMHR<o!igYlUH$@anGlXx1PIZNXCaydq+#2A|NLv$KSTQAY^
zH9Ple6KT11<}=2X+e==Nj$Le@$3~+ypYL{X>$cl>;1i$4sGr1A`Ds-t!L}OGQjOyW
z*Q)ZFsDiwz%VV6MY#}PVsD*U#avM-pD)@3go2ojGrk1V;GE7<o>e|cX?b<EKtMW3d
zGo7J6!>-1-ii}PMD-@wBl!hj2%`_8*yl{80&`U@Wms`&sULAo`X@z~4Hqo}KmSU}n
zfh#-<Q1_LnRm2@c_x)O7p}JDNu~D!p3r@x+4a_8`)yLSZEFcq{;_-Nm=9%VOS7I6=
zLz;f!omVdg+q_6=A33S2_w?gy(P=ExC_`0`ueU|fw^{uJ#kA)wY4HXXv}IIbeE3P6
zWS6f>p_!tiUz^(_U%ovfx6T=2?=UU_pK4>X{s<+jOOvgo&`rNeWOoBLTIvn#-0gd0
z_5BW)T9e+_LkU_hPB*c%pyiI|`W2F*4bH&M<eC1(b1~wx&Hwh)W0R8$A#-F3xH>8l
z3z)9N7OpnFowQeFu^K3|wB>7ShNqRkRcQ<8>bEZ5Ueq6l8jT~qLtU)mba}FlJ1huV
z!d+a*u^&<9{!5G4AeH&L*!r|h#NUt~06<fV(?F>TM!?GoHPEwEjy_D=m0uc@TKOKK
z_nlTrLcC-Pc)R^Y%Us<mUGcW=R@q{`Fg%X;3ulz^x>O#k0dK0h=60~MsfPVXN|l4w
zRfB`vQd0bp%_7#9I9qKHGTDNqN|HMca97X}5@S^-vt)=zl7u{NKVUQ^$qCYvg~hGt
zb3y)Gb`HuKvC`%X5YRWUzjU|$!4IkuDZBU$g}0$Y(Y36ehNhIF`sNxW@@9l+T#AH{
z5jZ(7e9YQy(9q_hacCDE;}>8sL<NbzH<oF8jWs}=k;FPPXM>ZO_euK3`Ss!{HW$cN
zzZ+YQg=bcNiJ^Kg9{>p(%fhqFP-Z|CjWSKikt>Q$N7b4n@P!zYgt2lrDzE|boFh5l
zJ3;gU6ciNQ(=G<xDMnEKZbnQ;Ye8OVUO}(2z0?SA)Ol-cCf9d`WyYWlu48+#5hZPt
zG}Z{{l&8MKn5#QjW*C}1fM5peTLY!fgti|&+qs>OQUrmcpp$6jMoQWqp&m*%`M?mG
zjtK@qHf#5^OlU{Nu_A?yTk>g<g7?^M|7vETsUsI{gDS7~xt|jqWEq5_pOgPJq1inn
zlE7w?rnd^_FH2|9a^jlj34^J3x$n%XqR}5i+j_ssMqSSZ=bybd-93ATy58^H=HCXb
zV#4ByqN^P?ng$>Ni;ZgNFt42#P@Gq{1PH(b`tOQ)sN3;KOo#i@b!yHIOd~#etuB^}
zr&_Bg!P6WWFvAOILJttRU;~Ho6_asW**6XA8MR^KSBjDG7v+YGFu3w=fX}r3glcOq
zSPye8Dq5lMHpM!tMN!&-_`D^((gpu7ZFIuj2R}Ro#Lvbg0|cOnCXj%WySeYz!!5|A
z=X51tkk%^KKY=0|U*>YM@~mJ;&%0#Z1{P%%FKLspXQh(CJS8_UR)e`-8K4htdRIuw
z@Up3Wg0_Y6Lvn67(!U|M9ZiMcI#*d2>ak{wl3{ZQ7=WK8<7|j_ZwlX_fweF!_Bt%7
zZ<A=~19=!zFuf}IUz;nmARWN}iP|k6{G{x+ah?GErIG&Ek-JSy-5&=e!e)p(0#MLK
z?_Y=Z3usB}i0f{lW4Hwg+%X&(U)7R^`<Dk}nef=yCei2{xW}g7?%cnu5*puPegRkj
z1)>`UG8*(qhN#*oQPE-BING?+-&yWABBA$L<wN_j*px-OXOABbis<AFMVo1_#`78l
zX0lL`#}Uwg31J%W*~<s7{hA@HaI~lm2}1NleD5wHZLqa?iZQ|H+EqZexwh}ngZoc&
z<&6L2!kEJfiCFyJN(cPa1(ET89~mkB{elSOG)WN!I*i^sk|(%aD;iotJKj8S?$lP&
zik8wwsT?5p19}q+UHreY<<JJzk<6G*j&riSPPWtEULGES_3=Bt9D`QMTPvVYG*e2V
zm_$Gg!HKZONE`|a$0ITZG(rG70<8fZ3lB0<8=!hXVynaGYxI+)kf4CH09+uU&>+6W
zQKn$oxXz$Nt^wxnc^BB=AfSeNtV?TO>GytQTUfM@JghN%3}Jj`5NKFEws&uraX&^|
zAV}k7G@s!k4xYz+M;<j0K^zX5baBx-z-`Wo>8DvR;T2I?wGW+J=g=e-$7uIE=B&Pc
z;r()UBD<g<D;>EKhm~w!-u#dv7l(cKrDt$p8e*RK{C(L8FAd8$+RY`^W75q%ZkKz2
zWmO0UrEfoC*Q-tEKsQ@XC|FB`Ecz!9b2RxN9W{t}>}ZcrYXWginx{ZP>=_fkPZ5|n
z8`TUC&v+;qFyrXUp9*8xFi);;{BfT5SILaV|C2jA^T$cY=Xctz`pUqg)ChGEij69+
zK>kD|<U&@)1o3&{Aav#{*%ZPJ%vD*57p3#Q3Us(E%ffImxOauY^a#XaaMJ|#9dEmC
zcDwD)gTxzt;L3doxL8N`OZ~Ngo4iARF85vip}z7+mTC>BEfKH<I#GrrqDToV)2g;}
zLloxaNe}fwTzC<bN{w5D-IUP!t?eNh_$P*&y>1bBhaiHh)NKUm=i&#O=8;nQ`=&6D
z5dCv_RA$V%4B6l)s-Qc3$nPJ_-EI#y+q0+>=pT0(`35<#obCc=KZlBLAnUCJp+2$*
z?i53^{22l<$p(bO<I2&h#(Co@)(#ajpV*WW>(wu7eKbp~87>A+XXiD#H%uKS0%OcA
zK!%B{^%k|LY^}Qc?$P?P49an*kjM5jR3RguspHcW%ZzjNA3IyVr?Xjjn)wCl|Ge2K
z&j#C>6O_0!`nB>4|J)5x+LbXierm{~ym^s_#9nT$MA%@+SrN{)NcsZB0sE_zX^ZJP
zjfrYctdtJQtG!p6`mcaXQ_g3=1aFiZqbA(zEnE-LT>uUiZj>ivjD}57zeQ0AS<FN7
z8^(sWSMX3?=sWr(xX1iJ^2}|Z_qadZ@Fb}i#u!c!JQ(C2`kyX!IX-LnevelH(7!Z^
ze;j@(YyI6Mw78OV5NZSWQH3|RwfnF&d!?>~h>6C?kbD>iuGP^dn%8Wj-%<PmYF-WN
z`7m<5Z|R@)7MZogE34{SGqafQra13>n9WSPKc4R~dy%McB5|Z}Ryb_!D;+BxHji3I
z9Q?k*lsJ<xR82;~!ICGXD;{^k#Vm|xEigtUj%O{!4`YI?IP~?(Ok%edYfdo0Zi+7V
z;vT{#E%rhk!|?QqfS62TxrgBh^-Weo@4#Z^SaHJgC;6JMaTCQ|n-b`ae|wFwo>J4M
zxBf~BfC;&YSm`f^?lI+E+fJ4hzg;BUgzIWofi)rE`hlzi(yZK<k?u3So5tH|a<mg%
zyn}JcaQnXgO}rW1P@R`cs`9?hJf&Xlm(-EL=Qu&ZieU<9gPYRZ^<DiMw}^}X7sYea
z+(q9^_uzq9xha1ai4^Q=V{w;bLx%Eh`XEQ0M$P)6xaO`5`hM4MjM5C!zltGX8h$NK
z=)<*>0SHUzKwqL3RvU!3tRj4@HjwU>*v?4ZXNcE}oRb$U6RZK&`0I^<2cXQixO3}a
zpzvPcEkOqFGf-{<p=F6(=#d7E7o{!_Hl&mflGh{AMfeThGp|5s)rFCS<n;n|V=B}M
z^zyc$`x6hZv~}OY;vu*O8pQMz#zZhoR;h$JrV$7SYI9;4rf<=l7Sr^f0~bZB)hR^N
zq)TOkjj)=xKi*}_jFMgnzc(0;PcWX5dLE;k!E{+hI9Cdle`jFnj6J}tj#Ggz5cL>R
zentNemzF=1CJ8xywMqMJroaBmOili=v~($HDJ|$D@aj<((FS~P@)r?NSWG}8)>S}A
z&ZI?Ch}8Fy+Gqrv*_hi8vi}0ac0ZRhvzZtV<L|~gZqkC%6fyIqOHW_tY-L?~XMQ}q
zjmQBdihD6!^jSelA?1jxC*NxKLqpP&7LinX><yCwsA1GFiC_+3sDvg%>9p_jvC+Lx
z1BUIlz#$7^j9?P^+&S)dnLt8x;kv?JcL%->uwueHgzj}maY{4uq%g)(0=$^eIJAw!
zm`N~FFmv_;qDZ``TS*TvZ71AAu$h(})P})qp`1mAk-y}Rx;rZQl~{>%Y0oMyr)bbg
zL&M<BZlq`|9zPT)OrL2bK{S)1IZve7N><%*hX)s`(>NyZYH+k<&tSiYhx^g6N4A-M
z_$z&Qf`3N$ih+OnF>P+BA3jrZ<z$6H-cP2PEM%bC&!{<q$@JFAmk4%g7Becu<&#S_
zOsPs{=(1G2#-z;Me{6)arJ=o(okj9U98qhLZWZJa%xW=I3b&b_9nln%Ml4Svd5kOI
zSES1jTQw=XRn6(`@t6hV!y%($*qYKDbQKp*DmIzl0@F5eLFK&DmgzY{Eo%YW*>Eda
z`K%eKz-2&O&NkI2Obi_qD^{gQ7MqW4HD>3DIR8+MKiPM&Tpvn_Zm}*fN!4Oos}E#z
z0^A~sD4}?b4ljbqmd$Z_E~(?zb18`BV!5u&)c`s!ZY%b3xKLPWmJpx8y1#VBzESOi
zJRA~fZ3nUAI<wldwSiOOZViP+-?2@zGNh4>C&ER5^`E=luVXYj3=hwW-rMP3_ddDo
zzQwvnymvtO7MPATASw#xGR~`B@t1!F&OIupBGog_l9k|$Q^q(-nsE*Z(AiU<+b2Og
zr$FPRMy_*wG;xCenM&2%W0BkcD-ci!#9!L;KUU)ZCMlFoi~1%wP#jnlvK$v2Qx##e
zph}5SOePN<n6H{mqJ+UUS(GS2`cUoOvxDw)SX^_Znc=Syd6a4Og8dHs33agzDNmO_
zk)CXq+c2}evu1Xa&FuH__J-we^gI*^Nq^kgdN%Z?`+hhyLxh9qfygf0Nw_bB7)iv3
z^rJ3JPS~4jpBXVX@>y^&m8cu(hYSeTEzLmOSHu}{7OnvX3W0tJNWLsXjw$<`Jx%~L
z3?x7S5`Hf@SQJLed|v^1nlVbsTr_Gg;VVD#^N-G8pv=ZyP(W+2kGp~(^@S$mFvE2a
zx|t7zp}#@!UO|+VIFq)4d-9$OpfQR@82~c?6GVEzrJHC#OiDar%bCW6#z0%x3vKuF
zly-959lK`K9Xyd~dnhUD>9#%!-u=N!JLLy$_4qR!{n#^JdlY`!xtKJRzkj>@O_;w=
z{`Pa0r;rNFQkKFnt`@tQ;TKKzMGrCdB!Q*b$tcSOLH&*XxO4M5s3l|2640+gU8z=#
zU_!)NZdg)N78arRxcTnu8EVQxGv%P9#ijR_l2pS{TlwXowv+?y`9rRE^(qXFnW@AU
z8|6Jo>@ut(IF}A2%0XqSvp&BjZnbsUnKE!U5XW^1ZBI+A?rvnoGE73qRVRF(_6|~b
z3n!0gl-d~h*xJ+2k>MYG<%v86xhr%RDorXhv}ZVzOSi;etwg_lSZpn3H?ZJ0GGzdH
z46?9#&B{A*(vs)-)C57BZ*GHq`I@{gGi4m6JY`zOE|FYdx;>OfRb*QwqdlRkWI1mx
znbACM4mg(IeOQ0!w3Hvkn`)-bM1^)%Rb13-y7XAe-!*0FC+iPTo@V+P<Er3d3i>S0
zY<P^bB#j&|-T>*7BTAPYv%BCV)GpIhfBB`@>>{1A>1n~om$1qNcZ&&><%Z^yO{IzM
zUT(F}s0CAQay>&*;j*R_$EHtV_~E58-=QsZWoF5-rxT>P3axe6newums`R9Vf_5Np
zmBMgb;ouQ2-<5%?pjdQ4k*L9gZS0Jl6)i=E8U84?c%_a__S6+hgXtFSRDy&F^R<>`
zwivGUv>3XHsX!{JDD=A9Y8C=ELu5}BcPwZR$+N%T&fLfxK6Ot@RMI^dRY7qRl;3w>
zvf2x;lmVF5goS(}E@5z1L(mR!ulxsLcYDRKAi9l`+&um#s*PX2PpSzbc&d5D_~|SX
zRz=};lUAdyD1nBcp0`e_bY*tcg&X*m&V+d^*w%=g2N7<L3eQphVu4nx&rR+q6ke>b
z>JJuD;)V!c^v`cbOpKZ;4;_Wn9Gbxi6a%?1i>V0VXo$rc$Tm*F!?B>+Uqyl=I68x`
z%QMZ=1vShbtm|Xw+HX`2JR9vmaj92x^DMlaQRUk0p&uHx-M%xQ>Wa!0IW2@UkL&u7
zI-@%1Th56X{L+z09^C1D=*%hdY!%0&D@-=zMvMK*1MG%4QbH8a&M>ioQ1YceTO3ht
zlaQRAYZemI{1Is?*#(PVf-W|6{HMJOI`Ca`*Vk8-oL_%B`Q=(j0sVtJt@p2@0!;op
z1~Be#lxTooiMrpT=f0N>FJtR0w}(}uvJZvGBM5KG%?l{)7Zp{djzCeMq4W8}ljcwg
zvZWhL^WSB+W&b*Py1?$mjQQ#c+Wv(%fH%M=Ac%~{dX0dCjcT<~VE_OEPYcecjl52F
zi9i)};3a6s5Hnx$jqHbXH>d$YTLl3Rd)u`>Px1_tc#$u}HD1HL2q0Xu<Q%;&20b<S
zoFbdT_e#?$IU0#Gw}P{ez9;EhLaj~;^@svz4g%NEOtmgCtJYu{Su1E4WC@ifLg$w)
zx+XSM`>Qp@gQTkRIwhC53oN-+rN~h5REtnEz8cuNP;z{P0l8I9X{!T-s$aZ5s)jCr
z8w6^WpQsrx84xV;CP!G4xRuMVET4aZR5X<i>GJo6EDQWEA^k__o{G*NOTiX85*Z9~
z#`mwKs?e6CBxQA$DqrUm%jUmof?|VLFr~v7=!?&f75VRIUbNVCH(I?+GS{jqPHEER
zo{!Mq4)qk|FiQjnx2h&icAs3YIbFA%WVO8<+~oR#*@Nx8*sq1E`HV_ZNZONhQt$CX
z-bg)v>kmcZOSr8ImLu_|+5-g7kZdO1wxM62usaV#o?uQhN{`*@Ym-?CilPr=<QTb!
z8)WPe2?+v%OE7Z`IA-hv_7Y(5bCSodG%$J768Fp|V$m^7F~TlPX1d(t1HOwfP!sz%
z@Nz_?VkYoH7$)qYf|4o1Pz?|br~pU-je#!aFkk~2fjHZWaU&ZrHxv{MZqa?F^rW5n
zyIccca_npC{ivXNyQ}~YP(7w6R5TRtXm(WZpcPc_NK#-32#q{u9<GCZk$~=7b4Qhq
z>LFU%)M!1)8mxBaZOIw#=JW}qt(`on7>gk@oPp)6PTp&-j{W_D-Z^_2qvHc~=?RPz
z?mjfz__02ppG>s7Mb?Qt?XN~}EpWB@w|nXyL+a1=wV?;ORJ8QiIG1N$Ntvp{OQGv$
zS_2lhDAVHD-Cdz|UW(0ruD81l(A2KJLQ*RYTcbHz#YGy<+O9>(*&LVd^D3@`fUn-j
z?Iy?4W{P=M1-9<fC(K|f4LWwtGns2y$4S;m5YZU|6UL_sRq_mu#$hZv?fz;lKSdJm
z&t4u{P18YbsB>bhn(VmO!xk2Nx7b)l(wNy=eMYP5B(NzGI!r2*wGrb~8~3y7&g3^u
zyJ$g^f_TLY@UxcJBOI5$gHlF;X>I5>tZqHsf44=!Va`Q{Xk;@%R=N9jBm3ryg7KU?
zZKZkL^Mzf#CE~<dYhz!Ljcw&#7wVo3J?p0_W?QAu%ekiBL>e3EY@$<xYf<k;t{aPw
zP2aM!=J3fOcD@(8`!8ojuQQ&nT!eQLA}Nz4iQKwQV)UYCF|sF<R8uhvs}hC$^`Y|4
z@E>)&Fqf^NY!fNx^#;zf=nyK1^3?9yGNQhNiMZk-H@nZ>JW8o@3qP*&9jx`L$*v7c
zBWyGHxU@p#qE+lI=^Wdm+$*EvZQO$jmP~@>v^7(8K1JYOb`GC(?sxijZ74c02oBJA
zxK*CVY}93tREEtX480@?1O_kzv^f6ovwOa!N2|_NfN@iY%@s608qw^0p3Ion231kD
zFX{wSwaUpP{phuMCNjygo^5mleX3|^;y&CJj@a!hGsle29MHs%@%aVvMMd0lQmN10
z5IcgqOrHXg5b*<#&<}p$VOG{M)X@di?FY3ASncU~FVjaw6@kjkJ|xx)G6WPAoDjcI
z7tiy**e@ad^BnPaDvf`^ae(vxY;WplU}NHD=V<jWBuV}cNhcFWR|}(m_1pCSW)B9o
zwsy`2&K7pIf7<t*pH?(|{_Z6A_j)7vpLZr_Z{qm3Z^|C_CjV8YD~?xgfB^xp6V$xd
zfvb)nNC1E$ld7y$CPETV%0p03%Q_9y#^ILS%zI}A^9ACE+GCo9i^sUW-`+CX8CiK6
zA@_%l`f~Yo6}DDvm7lvOb4(P9R)!8wr&!uof<s3_(x@^~R)bh@3KToFk<{z72s>iU
zW0*QN>X!gsrK-k7U!g5Syvp?S3itv;TX;33z`JwqrmRrE0MC;j%6p|{vSrSDS2?6w
zI&JV`c~TXHbvaAqiX_^*Z3Vl6(^6@a+M6(`T90KNmO&#9nWR}3XTQUV_r&*LU*d<X
zk+1z3EiQgm=ZJt)T9oE4{`+LunoxQIQT$8{8X{5uD*S&&x5vjS<m@-9zQ57^_MfAx
zXyRnzEM#YAW$_PeV`QWT{@{pH*m&5`6%qb1dl4wc8xDq2nT*ioo)KJU-H}N<#+J}?
z-1mFGjntBgM!4GxbN6F%^6lg91#}ll49W}Y4GKIsa)gq-k~S52%H#|L{6H#O-9Zsh
znLWX}*NH7jDokdIi1``B<7E}W7Fe>SKfEL?nDrzk;mY4lTzY>*>4iZWeBg{|$Kk=+
zG*-1)*=*UbvX^aYb-ZbL;$$S!qjq^XpvJ5twUj3K2~|$I>B-M5h*4P_bytQGV82{u
z`;jnfwMu6!PGBv(GdK^?!I(1`6Y;W#EnXX9bDxr&7n`m3&oB~a!7^X}hA-$hj3WOz
zj4JlV2F@nJCVxDaur;;&Usyg@sUa%x+_&#81wp_z>Q@CXMwUoqrBr2Z#aR=-SmFKN
z-BCDr)!}`Co4lQ#WX9Lq!OsP<wMW_`=r;%^?td6az*YrZ3Dz}DH>^yTuZj~cm)KCY
z1XtKnAmXRxePMbA_iz+Fu>qoQ?@Ou(d7izI+jnNcMJh0UOp76B+@sM5!42WL&@>ah
z_A9aM*SUro5>4GK?>AWw%TUuE?WovRrd26)dhs$-?XFMFue>ngb_-sZ;$N_)Y$Mlp
z?QU(8I%Tz1Wg<Xm4zx3}3I0Hs5h8_peFi02?W6O&ke(gchX3m+1o!_1=>MNN=&wbI
z{x8x02Rk=p{N)Gn7a*X;-<xxue@p%!<g`N87ACgNGJk9I4}xwhy9EXmUfp#v8D@1M
z4}NyAqF6*WeQ8Tp3#xevOJD_-#aLS-$z_@{Ebux%P`y>4aQxm_!A%qdosBvfB7E<w
zL?`^m9}iFXdfmY4eHj2LEIdo~rCV_k0TBfeiJ^pu4yqKD%F@;v;_wD8MGky;bZ2vp
z5+N~JF|alm7;P4N<W$&02U<KdnAKLxUA$@xcYhBs1`1W*$b6Hf^Nn}h7UDBc*Py3~
z2iaO9r<toeoy;e<z~+l^dFO%vYB!-0vz|R%1G`T1Pe6vOUEOiV&teE-x#cZ+C_R{Q
zhf6cn?6+wGd)yA>=U}N0tc|DoEPjs^rh)mMFK}*q4n0=vN4*angEctQ_#5}iPmc~;
z)QQ`Pqp$ZQR?85ton5qC^*rH+<b(hjEA4ipB*vyN<snkY6-=b1UPPGn?{U~ZBQ6+|
z5)PPA8FJ0%KNwI5h1$<tedr2-+nA<n?Sor4$>x8C+W`$6{BmH&bR;%dcVO+I(!>pb
z5C0%{Tyi?&VgZl<q}4_<@FlO^%#&kgeyYqO^9^jaTEndMWbp3oY0XC)Jo?8hW`2aF
zMMQy$i{xW0nkPh&PzHJwm8~4u0ov2nvxY@9O~w?Bh&5J)9uMN;MrgIkHQ&7=@nAzP
z7ivZuAN8BDObg7(q?=>gW;hCWUB<E~Gnm1Fip{BrzZu|{Bq6;8FR)~OFiaZ2LbnN&
z-ONgpSIieWb0>d7{<ZO<{Il^nI~o19E)&OpVeS}zAz^6Y`R}_2|0LyTZ}cxDN&gQ?
z<G;;lqV|6pVfKd8f>*yqMSsth0{?Cof-Yvtjs`|nGA2$=24*Hof1gGFKFmyF`y@dG
zU;xbPu1#I;562Sg6JVWaUr~9gP^^FC;2tnsT}~#X>uBIl1;OtMg>R&k>l2XpLG0vu
z`*!&O^`c5MjWTg4*mKe@FCuaM1WT2uWWQVc6(4vZ7z#DEmcdmiXn}hWDL+&rz=olr
zS%EqB7DutR>!8qZ*{-7I1kd4T?Ol(`zh*8q!p@(m&^MHmDYhKFx_Cr`R0Kh`(#N?h
z(f1zf6OrL#*f-yuzlfFVap9|XU}K~z=y})6n6P*BNds!ugHJpD0LS6lw~2c?kfJ?6
z3<?#ak8PQ^ixT6-d%09p6T~-yC<?UmZ+mP13rklk6Axq4KWoD_Gvo#Sw<ex`f4Kk6
z9t7;||KN!ivN8TAJw(g>)&nC#_F{9zvSH1q|KbE3L=Kdo!o6at@{b&u5>gvB?8M7)
z&)Wf>KhphJHbR;MLt%rBw>zIqw`Xov*nzZ#_yZ3hWHG(r$cd!lsV&^Yw;|_qXvlto
zR3WNYmSxeyXnIbJdEj6($4~DR-)TfgRb!p&RDX_B>ksZe%IBJfD+fbQD0$9YV&Sd{
zLJ3y89Ji&W50?>kd~_uN0{ez&R&>ALQ)Nq|M7v3k?AAX<<A!fa>J2aPJ;BQ{?$9F9
zk1=Dg5omf=ma@zIybj`9fyB5U$m5;VuiXa~8+t%08H*6E<=ctjAaQ}Jc06a&pA9^3
zT!)d}rC7|Cf9T(UdzutrXYu^SO632it5=>@050usj8(t<-&X$*od50;2pc#XD4N*Y
zIXeFn+R1TKf1o`=-h{ti?*4FD+;!={5-3lR6OmlyJ~M0~(UBP~;cDXZ6@M%Uel`>-
zvAS^|eDRz3@dZ2cuZOn_Y#{A^3-B1OS)<$e+%O)Y9LXtaXVo}IV}|${^Tu9Bk);9c
z!u*lI$^ph?#o07&yu|6~NULA=wd6x+XLfPBcucKlaw(mMX^u_3>CB3>pJI3xyz#E!
zov)f%N8!?tCjhhiq)b#zCIf^+$)gzVbm}Zirpz6k;xUlv13}L8xvoYg35&+5Mi@Fv
zTVn|n(RM1Rfv6fgVqG~z+EGS~_hb_g@vo>v4e<ee_PHuO73>u)`m+xoe4zUF&B%@!
zG!kFcwoIF^Ch}B%Hs-N`fWbnP%o*FmfN$G+Rh;ak^pK;$`Q$-Q<p#j@g8%iXq4_s;
z;b`LEV&dfdr_p1l6NZ2Jy9dVKnicvFd-|VIr1<wI|CKl*CnNP+uRazXI#ntg`}nut
zb-_Acf#(zDDH?ZqJHkn?*uo_=&3`46_X+v=^Go8afP$Oi*`=jF9bdfN0qvp{;(Xwg
za87&vf32MdG}i6=!0o-als&TdD3QI%CM)YPviB&3q-15J$jqoHDXXNEEi#g<1}S8O
zl(h8!KI#4SKHtI9d;ae^&e40^pX<7>>$<OdeDC4GGtZ-KRTvfWgS-Ep{Ie46nBEaV
zQHdOpx0a@Si?P#!EO&3yca~Ubk-mBI?NKZ5vT=iK*Q4+|#SHpB8C2#Mln4(!2`vqq
z8#3$nW7|cq6tREu`ijltjlFoxwPylkh955H-4hYA<oKR=AhA>|;?`SkHXYwm(Yr4+
zcI7jQJ>1x1+j%>G>cUS37P%2G|NaTx6R$r9RBHFc%M#zZNFDsrqyw~}#&RhFM-DLL
z6!4?_m&OD)6%3Q2On#X(ujYlXZN-nOW4rEMJs&;MWqNk)3W?83{)=SPm=9g`DB-so
z`$#tj(+flzJ35c}Ib7)B`SNvRogmsvfqarP&X?pKlR1}%I!Or8P-3?L(I+mUU>>5{
zn?}4RHh!2g#9metUGF()o@h&y_oQc6*>_czK;I3;mKT-w?ix{#S;aE_@06OvNRaYV
zwBK|HO1ngR<2mZ4xseU~WV|i?sx#lA4EL7nN4rqd>l#cf-3k8ALdkW$HeV^4<My3t
zcC5-v%IPc7YzX7Il-VBg6HiG?pVjOD4`cSlsT?EWy~ShJjl$}(2J8{63ir~_+?w$+
zm@cIv_mqB0)*IuH9!i)KcPdV$ap_Cv>VwsrGxU9z^S|XQ_H%n@R6bxAT>EAbM;RD7
zzJv32<f$<>@8K<m<ic1xCn&@l++>U*M6(_P09Guze-P;3Ee8EReka1zzQfHbH0@22
z&txR8v+FGZ-o-tjR?6w1ba1(UJjdHfmcQGL@wM$IV>0%m(aM>@6ze#<E;wy0NA)ay
z4%~~+Qp~|kx<d0>5|1lsKuth3?i+zpFzG|b+uXrrWfB|7{rTs!`TL0{WktiT1-e)~
zzONTDSvys`=T@~KM_og&vZ$i{Vo;y77jxN%Rr@+`rns)3L-OwiwRSOFOn+4??Hph}
zZ+Gkr+4Z)UcXx=#K1rwGefNm#%CJ#YNxPJid>AMDj|pFfqs2c?@`IO#sZBnO45E`1
zU@PVSWGhTV83N-Znv;jJ3kG<FXvNRwH3*Ur5NPTIXItQnTDd(c3d!}198(Dtwu(ic
z*Hasl+Y?<I-c}#Je7|6ESU#Gom;NJNF2BP31j%)Fx*F2tih07KC_lX^4wA<mLT1fv
zA2ltTPiF4vyC;o0ragP6*39giz>3=Jf@e{R|3ynbk&`!XxgEM}6B*Jd!xk#{cBrDV
z+P&Lo{&Vx{`VIL+4VE9pd(&*F?{(kqH{WOFu6CTKTTK#&@J=CPbz(*#d)@o}KlYy5
zNA)z7qQ+Nw;JZrWF3>!@?TXS%z)bXiF_!slE;Xkh)W2<|c|b`YuvOGln|EOTA+D18
zK^gqmbIwKAIa#W7>gx}-w6DG&c|nkV9DRUq{{s#_Be|2(J<N^rtJA-}T<{T*og&jF
z>xiN;Poa2$7xj@W_Y$Y;40B)H`{WAyM!w+p7qj^&*qI_r?>zaGD==_3@|a<v;N&A2
zziYz7bFv+d-n*{PJn<Q+kGHxJs&vG2biC>s_p5h~1*ZBeWl@!r37?GC+3YO?XWsnm
zak*2ab@ofjy}_d9CoF7uy&6aPZweUMzWtEfA8=O4ha)|=TSkwBljFGa@!Y7w)f89I
z;U>{lx-1&NWaw+|wg1j+(6sxna69|Z2v3qG{-;nC+3DEEX!%c1T3a*PHQsiTl6>|J
zYfVGdzsr(cw#+x!w~nKn8DKq3Ty^T0w9m$V>7T!r*@P*0c52RQDtM|FjcUeaHE(=r
zvnvYeW<8~NvfU;BY_sEcXT4&x4AGA=;k``q+>&CG8bv<2Y(ccsZx|z2A|+Sb#V+62
zxlr9)``Bu%WT8jvRI@2l=lq5GF~y2*KA&`f%Sw#%GPA^H{Ut(-?|&AtnRI1o@n0al
z^ZeBQ)D-(8;*VHwxF$H&;?G3t<+nw6y*AIk$aToHjON@M^4`+JOAE(mI#}0ucXesL
zPUG0A7fSXcr$d%l_JCKYSLoq#``dvWI>R?23nRXyw6m43;v?r%0^r9l(0z-k7U}Q5
zI2`n^6;kM*(fs?*e!CF#vB~L+Gcn-jGT?^?=CAe44j5^MyP*8hD^tG@b{hZskf&s}
z>fw^KhSKz(6f<PP_hpoCOJ27&f1Vn`V%BV+YszuFbOQg^Js#m^E~Qs4-kEv1%A&Bu
zal;QMv_EJdU?Ak?%LjCG>@0TFvNA^rmZM~DP8U<A7SXSzw!gMnHuq>drJ3bX+ud)g
zP+*Um*0L)}zu>!W`)a@Y2+2>G%*^WZvn3<$RYcRKrmg!2)^rSlUeD_>oe-a;-Io<1
z#vr=LG5&B-$LLJ!?8*6kNlx9aXHtWT@91PC+@3nsGMI6PeB7M8xSZvj8j40JY%cz#
z#h6X-je+1x>x66g5`#q6SJxk(p}w@vN~L>go%C6K<;k~t!zBkdT(ncG-n+{vgZ6J6
zc)=!p7Vw)m;2CBZJ33)*-Y}xy+Y%g2L&B&tcJ&EAZ;?s4MR%K;hW=Yq%_2c9MP7W0
zGE#nevQMVs;opcG?DPki*+1ewdlJXz_0DDZLmNjw$3#=rdnJPymGXVLOAFO~_m3Va
z2y)x_K2!e+H+V{z)kSLB^@7yPw6wGUeJ#uOOG#mTjRKQVq#Qcy#?AJm9J=e)%>s1F
z=c<GzrAZ5hFOmKrW3V&#$GfrnN{ci_3)$Ska_w9vb5;C&)a@RL2NIpj-1v);{wF8P
zW3@uPT7xLWB^rAqE<NbR%?Yn3?UVi}<e`;{$Kki`pHP(Qbb6AHaWy>8=?vFnM~R;D
z&Q&e;K?-?RQ;I!|gpH-m&AjTdlZHfjPFk9@Q$ktGIcLUi_b%6+K{b{;6Uv)Ef5;|u
z|A8#yA!jue0z$i@-rLD7c!ov2X@pU_si=<&b|U!$<R{r<rpXr9dt%dWQC$_d)|j0)
zf0M^>EL{Bo#~F?~R*{_Snlu43d7q5y;xcx!F-@k&`^TC0F0^XqR+QanubJ10|C!<c
zfi|*S*;@0^y(eUksG7<%i?yY8iuCr5CEZQ&*r;kIw^$7Na%V)1>wNM%)*zEZ3HEs`
z9Bej5tch9K-Ruk9>f&?y6~*E<Zv0GrC@FK1Bg+o@v&JKt_qZ<MbsTwo&GQp^Foj31
zH)p}Hl}xvFU5#y9Y$>CNlAmY2p_c=>(I8`JN06tw$}Ss+5(X`sLD?r?*TjoeMb8h%
z>OP@<fAWn?S^hxQM}vWWvei4z{MR3|yfLoob}V=*7U1x1A<RK#lv2ttdu_;bUaJR>
zqoPnr_9`kUOYWku+u$34;7GQ}y@r}|iHTZS1ZkI4tG#-w2wc^^O_DxMS8#TnxfX%j
zB{GusF8TeD!qrHJ%Veu~l*IWyCttjGA`Pc{sl4~h+_3h<8y+#eHlvpp-mbL@jaY=L
zaV{5F=@hO^+;`BFH`CO<9>m<E7`%S#+&EW)^vBWb#T=&|NNzZ$o9jzOxsx(`ygil3
z`+#1oShg{_U4wPzm}WP><B@^k;hT-AJ8pY!B#IQL(TVYX-8blU<rD9>;epqm<E-EF
z9!v<g=L`P%P%i(?j^`J7l~6Y>d3n6nTxYI1O{Zoyf5a=Nz-`EAwqW7A;Evqt3@!2G
z-N_`$?CwUl?o0K3J#hnnV`+ePR7<^iUTo^AT&6~0QU+h{is_RM{qWd#K3a{k`<9q;
zLdkqeGdnygi$mAx(xmc5ioI@d#JeyB^caojB|cZr8@v~i>zJ_f1Y@$n-W01VZ)FXh
zd%D_^rbeA`bR~EHX7>a4XQ~IeHlFS5?Kfq0H4S$JE5vSYOe{V238#NKh0+MMmVc7w
z5Oyg=v4ftv{&OnPea$FNy_bA($D?^q)7`-13+C5aQk_x=J<dCK;0S3>eduM$oqHRc
zh-bb94w5RrHom{}Wx{BEa->jgR8PpjVi5gQwesh%D~p#7e>b!De#0}CXM6gl^N``2
zrLc1}BO|3zj}x97NWa=Yn()1PQ0yy@BGZdrN+lG1R)YV?k!wk-8Y3AZlQK77UZ7*E
zGh`bp3XDDuN@CVhxpfRcM^F#^u)-uUXWrjw40Yg+QHu&N8e*G@+eu|*ILUjGR`hhN
zxsDEl4ny!o$Afj2UZ?YPzSCHcT{*jZx8VBj){#*>zVW2BJn8*S1&45Y{b#v?2f`%%
zZ!Wb&&$q;~6%rQEXti9l6VVhosW&z5ncq{sYPepR<1U06Ns9kWAly*i!8sO6#X-`m
zS$1nKJtX6`Bp1Q39^YyL11dX{fR5k@KY3eb#y;^l*Q)C5R^QsQ>HVV9p1J2wo;lf*
z->Scl?_+%xJ=Ldj=X<-2zNp}Ts*d=O$651b_^qz&-mlR=UXrL0DH+zw`Xs&FQJKh&
z_jp%;@vhMw$6MG^9h_{1gGy1vBLlaTb~&wG>6)#=zx#8J(thdMe8Mh|wQ9#(U)Mo%
zSB)~SDp8<EPNRnJ5B_;p#wx<jZisP%U3!^aTHNizX{XM90}`@ER<#|&XU~$cuo+ya
zDWyzFxK2H-%1^a4DMIRbX6&$i!^q<?qr-+eK37d_O+$!UcMS4feRqH9y8S{~=%JsI
zN;CK637Shj34DJa)~7V{Jg6^JJT*gHd4o4vcD+9KF2hm1hnE=*gu*o*7L$>Yl`-tA
zbkus7L6#yEuJ=%qu)u6Ng7A>>vL;~%<Gvdchop{iPMwlE#yiy^b&PxJveYsDsTryK
zv=wsJrpy&#)~2kLYe}y<*RLnN>IzqF=RkeeZ7)E5FQt22#d3>Xq|H|8%ENIM-<86w
zt2Sj>llJUSouVg2DdeRZ$4^)}W;$`SJf^6ZY&<cU$1ZZ}p+u`hvp;@|4@Hf9Yb=c^
zMa?z$)#M(pX3iEPB08DsLRQjvdx~Lc3TaoCHHowN@wbVc<Y=_gAG+#DFSvzQGYbdM
zw=6oyIEuHhw2ZU9cf38ANbX;8rf-5ho?7~7rc>@DZagt7yK}g88|m}M{?sk1@du>#
z6}{H)lsp>iq}DbVPTiu=;%<@q=B@5gySDQ;54BnO>$F*|9AiAx;>37p=B>QHN}K$O
zGUKb}Q|3q6I80V{mEG@NR*GL*oownLw)l>_WU;c7ZCzNo?6qIx=cU`{CzTn0I?ffW
zN5|dz8cAANHZ2zOf-Xx&)^D_Q>6vXt!=9&O=bjF}3!&@H>v%EN)XmZ<;`rIklr-q{
z$PDA?r~&urSe~S5WV>Ek;o<zkVMn&$1-Y1E9e??d56%b8hSl!ojXqR8k$n4N!>E0J
z=c~gxdS4#A_F2#i^ZY_+NRBVWI`z{mx7ONTFJS!OI>Q2rZ(Y1Ypd;pdslxoxH++J<
z&kEo2l?$W?6diZcjS`l9+92$ceLYf2^3syez49=x;HlYY$#h-o>1<Zf_j{#_HI-2^
z{W6#DHe7Q}Pk)dVo_f6Unl{Hl_plB;4x%^}8%-D4+P8B<agV;nxHcQO%IRFOUZR-^
ziyN_594tzb%ps+8AIvsxlFXD)KSGzCSJWPrOlO&|*(WiT@{Gmv&fRObxr&Y!XX`GO
z;>f3@oNb_`epl44<I<@&dbl>|i%&9F)Y<n;1H)`Jx{Gp#Jbb>_(z5zHJK|qwrBP*D
z@|Or?JY&Dqlck#SfFyf#@)*y#GL?ImcRe>s5E{}>?9<7Qd*mUP{pLhhw9qWAuv5C?
z$FhZ4cNSL(Rs!*svwUy8PVPTp`79|YD@3ncSxW6oA)!wu(P_ylvjZXhR7=q)w~ukz
zFMDY9N-mvsZb+rmwrQt4sH9ue5Kr;Mf<*Hp-J86~y?R&qg`C=x2d<wmC{;8S%<BoK
zd*?gYi&wfYEoIJREYCk*FtXH0pm6Y3dc2XUi1L(S=7i$oJI#;Q1iGH34_+IU%dh|R
zsHD_=dRM=pAlvJb$CAv9=dwF)kxQncJ}Z6lf2S|x^zL9KkJ5OlukL{8!<QwO!%Xw8
zvN7GCqGNjO74Q7KE#$;tYfw$(9c9L+B64XmJzQdi;|#Ka7oRHA&27vCsl3k<9M)gH
z5|bq|A)EQ6L@p@Vbu=$i(tEM&gGE{O4^M%Lmr1o<ETYraUDleWW2YED2AF8SI*j_L
zf4nh)Y`Gvj$3o|Ok;*#D^;mye!u1+Fu_tcE9KsVrsYP!|)=$ZDgv$I>&v`4;q>^LX
z9MO988`T5)wevFrVVT3!XGA~lX}&zRUv-CzjAi@}#%rN*AL|Bg^QY<;Hwrv^@3sFl
zpN7NYxId2mL1o-S{lom;!i~CKle>K0dmQK{70FR`=~)tW92|)Lrf?YVy<nr<hut<d
zc<(*!X4GC0^wQ3I&Z1@&7f0G;>}0qXsFOo_dp7KOU$ZKb)GzzLewxGM)YNmTuWXV_
zfRfTRuBC#Ol$<<O;|c!+RiFNI{N5Ct=guA6dVUH_ViS~v8a}l`<y}8gY~)eHhCz3k
zn9?3SAz<2*)_9ZRW<I@j*TX(ehSeivx4HM79DaLqpec?sRd^3ynr_F!pu)lhdm$T~
z<-@K*`;xu7cW1sH4O7(X_Lvs4?$H|z&xrFhK0o$M=*z`E%gonrTnQgrd38(<e6X(P
zU_9peWT^Ke-+NY(RExWB=gCHByo5gw%>+agc&Xdhemh$ua@(Pzd+L_8;`u2F$~IQd
z03v@LO6p`q&5YRG;@klRm0|~85|7fGdF@mV#E+sB*W*+o&R!<nd2rhHIL%AK?{<aH
zn|7yCaW8S-dc^O?6?oGyg)Sn+kc$3Yb=O9rxJ=61heFTyQBfNbcbG6<BXin$p18tt
zg67#7=i66V9tzrd3_Ix;+WG&m<DM%E3EY?ZsjjDPK49nFAwI*#b?*mVX3=7%=ko%n
zj|VH3j=s0+zn;0mzQ}So(7H(JWX?XD&u03hheN2mTJK$X!_Qf2V|!ID)oM&n<9gSg
z^V+)^$1|0y@=mNhQGI@#=v?4DQ)Nk0L$uW=<G%hw&v)+SjtFj8IwkNrv8t){6&KeI
z&!W2`dv6wtzxHy`)wsAgCfKOedUP(~w4XtzLZ`B)X=_PwfiH0w?hlUFw^#P<d3eix
zx5Ewow*dhuHVe;n&j?*mk98((mt%f~YtgDNj`QWHr+2lV1-sAZBC}OijpvEAIex{Q
zmR`rK*u8?5y~N&|%bzQWT5Y{LBXc}^LOj2Fc)e<Mt@upY^pB@A9sQXnn%%2PVtRTC
z_h?nhF!X0=iw9Ye_|gYiG5A}sUlj0c;fuJ&J+Ef0Qs46S=;%31f7dm^O4>g9Pa709
z7b>EM_s8noG#HFK*3hv-X<lHqV0`u6u18kp8=!+)y6*~Pz7yf#oTGprVf@~98)Z3u
zgnpRz=VD}=o-?6WOmdq|f^%RRA6r^n8Ks<2RZM$A0(o-)gZd*q8*<iz!oj#^dSfMq
zk@}HbR(Ff!GPMj}*Xfa&+RTtsM|A(}zyI;u*Jt-X-U)CIwQ`JO`=Z#CEj`oIv($6v
zTGRT68wI%GB*z1IX4<c@iQiobl0P=tF8<>7Z2P>gUEoxz?@?|SllJtaZmCN2aG^r#
zn81`0s|9P*`IY-g)UHQ&PaTjtETx>ja+6qyN_yvtN=pgxi}3hKmX=itfktDA={9~A
z3fA}x2k&++@iErA2|*(Li)+rpUc17dBpMw}oE)dvtDer)cGj&^D))mk+kuzy?yPQ&
zv#))bwcn}5PVOPvK~g0eefi!<N`UwP->lo=7pJ9nqAoaIa8~G*D4t+sVC|JWdTNp|
zo|)Cbc|9h!V8Vj1$vHejpedo6f|=#mqvf2~dSkZ>F6))C^=a<w*|A~PM~L^EN~E5N
zC2TC37*@D3VSn_%LqC75hf)TF$5nJ67OX@O4&OdPx!>GBkA5h?Miu`up~{1@vkp|H
zMsu1<7IJ5}aD66U(voWvdQ*N*c|7a>(b}lb-Fd2umB)hJL$;&4&0AU8@ykA!$soL%
z<<7jIc;Uf8tu!~iNfV>y*jvG8t;HQaN3Kok$(_H?8u!76bUf&m+rsIhRT^8x<}f;U
zhaZ!Q(oq)ar-t+Vn51uJr)Q_WyW_38pZSQC^2W!QJDDcC-5-Bf(O)aG60RuAvks|r
zsn;8<4V{?nx)fn~V46ah=}XNMorCz5%TG!4v)^1{)O<G{^j&Siy6@?in0tx@-Yh-S
z)o;0Q@s=K*&X((ZH*x>wI<C|}aBXd&`5Rf8ctdIT*+zq(k*8Y1cH0UK;HkNPv^&Xt
zY6?|s?5J*fAdl=^UrrI-LA@ex!A$w?BGXc1i9{5Sq5c`GbUv?7MI{HjF6(m@TgxPB
ze3(rm<-Tn6#%xcuYl*sGQ0TMH^9dsw`6-LuayQK4&Mq2M6y}iay>2efkhD*eDgCLb
z>qN%=)b9jRz7j@OAMFxek3I6>_hU+?z1RBb0zba)o{I<Af~E#FDi1PzV_@^VtDsS|
zM`G`>Rf_(54fo=MJ#&bT9KSfdrbwoL)OU34BIDSy8(nt|f7gx~lXCTVeBTBXoAe!)
z!}I(v+|DTS&D;IFMK-c_T#R@~-2IL8+l-pG)sZXa-=8V#ebEyW;9Ng995+&*GCx0(
zK0o5Y^Mdf6wUpKu5*<yUQk(-<Bf>puyyb@Z(sFAx+8&(vs1nv+Zy4JtF6znMbTzAl
zc_{s3e)`9=S~ujC&hD?fe{uo$IftjCJFiVg)auz{3vaua^wV<wOCitcJ@2OMq9{sz
zus??5SjYZ}^>5t5BRy1;L|O};i{A<T%NDiRJXI6|DHWL}_-GplUXkIEHdVxQ_-fF(
zraj5z;WnvrBls$(Kx<?|U?kH;I~{P|aBfHBv|#<)qp^8iRR;bCc73L{oMfA#Xq{VO
z8{>PVr>x}D?N#Q*+~vH-B!^w2pSr+8_^a=pghMA1H=={a@Z{D{=B!<vHy%Ix_|gmK
zf#G&q{*t1?(37W4*6tTF84Rzeyr$K)Yi)Nt73_Sa;cKdp+)~;F6BTDYrc};VM{U2>
zrlOP+^4w85nJ*1%Ec>%(y*MqauTV}!YhKT5N~fy*e0uk=E0<}9JpGBo-lRko9D#Y)
zP|;Zgdv~fN$#-YZ*lTE+MJ4vvo*X)EWwpP4u~Gb3_8yPJuAZL`d0V(7vT&k~hkWuA
zc{*~d?7ektsIYlGWBDMJ?B&NT#aD|e{5`vehOSkolJ6eLZTtN0f$^R;GQx0f$xic=
z%p|v4m7c{Au=~4SXgA8p4SW-k{_b?$`OpyCOEEW=(k}HlpN=JQm|q@mayaau{dH$V
z(pcq{SC6}^?<rSJA5#_8_37Q~652HC;PbA&j@kCBpW+9KT4Aq+Pthf&ul)=xt*A5R
zZVsI&iS!AHHgB^GOPi}6`i5s}?mH1(ek}HWV%_yT@5*tXLmTp(gg%S=AHL@c$1~lP
z`pkF7&)#o!c%rISM{m1@)djg9dVF<?%jb06f>hnN@tVEt$CwwRc6|H5PHk!Rvr9RO
zp*lsI&gEE93h~UBD>{~<KiKBOPqQbd23U#CeU?#FoeRI1ch^fbWEd45J6CKqKx-Z*
z<{V_ac*s>hm{eM(A?`<w=v{lO0gloKcc0$TT=!la<s-1H;-d{2T9Ngdq|`W^VX-b+
zG3RS@%@^O~S>3H?eKv|-_iDR5L~Ty!KNnQySEg#ZeQ2KuI~ObS<yIHo)WmoNLn)pd
zXWU~mxOXS)Y8__s$Ul6tS7kouL%s4szm%2Fq=V+3v+PXGAP^n4oe`hwZY3V_?zg|B
zc&LMO&q(#keq()HJO+HE6?B6CEs`&yzdPa>YMKN7Fwzp=c!Y!Vrzi=|9-wH^w7;zl
z@JH@An>(@o`L85K_}@hhRgHADG|kM#47IirPVm3q(8B9~e`DFI1UW{DQOvJ0TNR|o
zD2RuPQP9cPHPFw~bxQy<20$7f;N<Tw{%?~h01*4U2xU2-raYvZyDI*e%mW#stLp6;
zZtN7nYZe^xzvU({*{YC8-whx$0%Rc!@+={CWOy!Nt!o)K`fX>t&CP6oxLIV|a^aDq
z4;UUQ0IL2Z1}uw#{6>z9G)4LN1^=_DP2I`c+u6y*YfF<@d+x|+2IRN`CQ-nUlSuPl
z<iJa5^=zr;0Sq(&{77R+DQ5gjDPRH6z@x?pJZ5GL0h=3rF}16R^V7Zq{P`5{!-S!o
z2DC85j@vaINfsyrChGk&&0~0he}(}D;lfbD86Kb-66|5_6a+EIChl<R>2fE)+5|vI
z3Si*cxM6WRvS^^HOR#6CXD~ug7LBDp+W>+k6bKf645$|`0u%`Ft(m-@%XJq4MOpAS
z_gVj8UKfNnoKpn4+DHL??((baQh?i1C2(*!F?gqix8lLm9*Ss-?*_Dc_WPLPAKJPa
zEDb@c7t37i9O#Q-$-x|J4Ok9BL;7rzG+YL_bc6uRxuFZoae?P-%r~^OqCef@gE`3t
zupC!-4xjaqECry?B!rV-1j|9ebB;ZY2x0>CDTdhju`w*i4W3g)!rzSc*C2$$W(v!3
zhv%rj(6ZtO>g58l^AR&xjt4v^mS=#{9bi-vgE^xXupH0r)61^^{f162;Wn_GAoQ7#
zpkPlINTTUkBJ9xzLa~l~bF1$km8!QxAq2NdVToNDV5~d>Fj2*E8zMrOSJ|>o%Twau
z>}CTK>0P!VLINIsNBkcHCiz2&KqiFP&DOh7KkIj*!qn+L0zuUnol^gt!~qlMM5u54
z1PF(I@1giZ%nC#x{`$9>hCV!SwQu!mB;bfbz!AGKfX{*ufd9(*NEx+V@MgLI5Wf{v
zU}{z<7E}Zm=Y9M<QUMGx1bM-I3I4I|sqoBa7mrJS2aK5sxQGpd`5^_KiBM%Wb2W4H
zUO8SoFi0Q`9)wU!BKtmFasYA>qES*hJP09SM=|T|=LIzC#07);GvPr989VGk-J2dj
zBQZiSNHhx`gpjg3iR`3S0BvqSswR~U4?@V<x1!Hmp>KK<f@oxS5gvq)v_(#MG>sGC
z;9R8wgP8K+K?qqpW-<McETBy|85kr~3J<~}ZT}frqO;D0a#+yeAV}UxE@7=kkK}#=
zKO7j!^dK^vcqQR$cH--@1G?Y8j|YYwzJ?4#XeAeXoqqHK-k%}<cc=7gI9Q1YgGVu`
zjzpj@El$J%qe5>Xp%9v!Aq~~!5)cLblwcH3H4+M;(OuFcF53rGuz?VaGHgIXAvC*G
z-*Y)KfYI>@z^K-HNGM3d+pa5<egHwa`1wLZ>RPc&&Q+jZwvZNwLLeZxO}d?D!XLd!
z7Lq5mTj4<nP8+VeYMc*%u0ue}ZSbJK?&mu?ARt$#U?+%iD5bjIJ_8I>N&!~o3jzVb
zIBV=yuRj4+eoYJpk@UiY5R4-kmbkAL(584N7$o-u9)u9jdnyUk1^_FchNNuXSMVT6
zG;g=gBQ^;Ep?qBeBm9FQhIY9`|A`y`h6CxE9YY%zWC((-yA;Ysjsme0P5@?=ze8jp
zm^-Lk!ea`skRUOb<-CB%La_KF&t6p)Kqm<ZD`pvyg^)r{P4tJ51A46zf>}c!5m{K|
z5X|L@o$C;mFAD0sF}GS*Az%g}%mkj;7{UV(95-rDdp4XD2Zx*uGNHxCh2ub+wp~wq
zh!Vo_cXIK9sgpI&nr02)tZSs;9G!v4K&Te;mroA%Ks?Go(tRu)5(*(4rwM)e<bR)L
z!bI(0L_#4%qfKdJ+D;%Vnuvi>NlZv6gkY3P7P<Ng=w*c=z3h|_5(<l0{F9Z?uKOX0
zg!1(9_lEdyiQa4#eH!R8E_f+PPHIaKf)h<>M!NR_tgjGWs`QpT1W&3S6-4<04fq8S
zm`5(VB@e-!M{=(W?SQTC9fd7<SY&k;3`fxKh4KRZg8f|lpk8=&&qs$9sO33A@DNjX
z3kre@W}lzungT#H6ku3^5;6>n9D$kin$#h%pa|%=X)eP1q$2=xr2!|aWq1J6Xtz<L
ziUA0MNXTm7X#-f!Usvd<DTEV@@x5kKk%ojP68nJ`Y_|)n2%#A)0HH$s@6E*KfmCNl
z2Id@fgympSA<WTR0Sdwi3HF3W-`sKBHFTTZj|cw5Gk`$&wMM;p-pJ6;73B?I!v}kY
zvUdTUI1OZOY2gmfMKG0on(W3-K)Eo;7_7n<9)yrhu3On%Mc1;N01UzjfCnL@5z^)(
zJJFEcq+n2Z5IhK>PY@+FOG^O?0y9ZapI{pf4?-bLEiXOvu+{=v$026ONHqch1rPda
z8XhkUSjiV+rQ$ev5W*@&^uSX5Dgb%}nKKcef(Ie2QjA~so>T+05hekHq|d;E5LPMZ
zgDV$T01!7h7*v@84}z>xY=X*vUa9;5RLuZVwUG>X&|!E`nhw*?7eGN4$WR6UJUj^T
zGtOdKa*PotF!fde>%?{e0fi7r{gy|*0Q&et+S{eu@F0W?KrQIuA_jo2LRR3OHo${?
z{&uLU*a!iIdAhp83{_1~UXj5-dp%7L?ic+K8HnpRdot82=YYKC%m{WHXFDPc!EICY
zSC#<-mEwa@nnOq^g#31RftvIrfQrQfqx^@FPzV{WN2XGq3uq}Okb%9#C=v=G$8oN&
znxLPiuz+Zl^a2Tm#kiLkBMu~9ZK5z%C!mF>FbY}xDHIay>gg)AWm!6mvN4ddPN2~O
z%CcXF%IJqk3ovX6q6UvQZ^D*W^>j6K@^x}Y1ww6!=H-`l`8)t>-bxML6;Lyc!25k2
z11gZ$*zeb&^k8$3K$H`Vv(N%A-JVI31xAh)EZ|QzZSS`e08gZS!ua_dU`~BH@ZOYt
z-w=pq!G3{&4b=U7g9H7%y`kjovH}|c9+-^9_M4p;j01=abf&@_=}K7j>kOac=S%`z
z!$<`lMkQ=RQq?rGK>q@7zx`4;EgC@cc?bN6VQ}p!w&tP_*2~H8sslqb1m9?%yuXMC
zv~VdPjY(jz7b&q~YoJ_^>G?~Yt2Th0&r*ZwO3YZ%HGQ|B7vzrl#RE+Xj{^LS?JWm3
zba?7HTGo^Z^d%^GU~Avx$A+qd^7cp4_$cKhg*uQ^Yly)uA$0fFYz>rii2D{Xl5w`Q
z1L!Pp<{(3Oe9^7Ry1v0%apPMIX@P&%(SxnQDZVw=2o;RJb8!oHb066`X}}tb#Ng<N
z+Oti|^YHWibz9>W^fyPO2yOuup~VMp(%Mkknr`Od6o_&)4n(=30#Uv$sI5GjG?Mp~
z0H}jKPzO;ADMTvUNC^(~^xev(-0`IXT>w^#8jQBk*ajT|Bx9c~(2f~6Z$1K%LPNND
zpUfY$r@_`}b59=>EO@)gb=d(h*u^gpwPiMD#{dk&0|3tic>>k-4Tf~RgYO&CchTVB
zyy3yYk;SMbz43M|EvKMhYaeejRG=p?Hi<-Xf5MxXx&1(py~5wT!}X7d6OP-7FpK~P
zS`e>cgr=(}(D%VhBW$aReG1UgAAPJb8>91ok#@ir{QuNFoP6C;2EWQ6)p^=~EU^aA
zU=I-X@)%kicKHulzze|(G&kPMfP)htwt1V(A0a`gZR6m7zXIb2H&6GF&0C1!1zDQz
zRYDJO8-PjkLCgjmxt$>MKqucICl@r_+R#AD(;LMLQ$bxHe{bGRx1xWAS3@lC+~ELV
zPMQYHl8i9a=sofOrv|)iIg!MUKEMRKffg%=A-f{=?`6ZwXlk#gF=fTUv6BP$e7)J*
z$pG3RmMMo3BV!z{29q~$w1gxIj%2l>2p}CQ5P`Rm<{=?A@7{s0tBtfap)Y`PB?s?p
zwy4_@2fynHjU?b=d<0CDaH8?SyPk;dAs{Wxx6*M`FroQ6;BQ-A@U(=t2@z<4{x?Eu
z8uT)90uq8RF?cLSJGeD(tKL<Pk2K*C{-$FDF{rnPv7t)+?If~md=ncI{1=nR_kRi@
z1Q?xnk#Z{V*X20im4_YA!DWHj57M^nP1ubLg=%FW7J%s<XtVA#EX>b0DA>t27$MQ(
zYn<ssZ`vd#{P*<d*N5AeU>Z_LK@CKSVW8#-ynoN~x1OM5?nGY%7scFrfIgc^^x~RQ
z6?&HlA$TYHj!8&im?aoA!=$A*B@PJRB@!@WV+z86S$jb<ypI(|h5<gw!2>huW+4oi
zMHe(<7AI=e9bgnd7*2B#224{#Gr|O>6TbuHJ&3@J@AD7_OnN{wqWH7cqJV}cOAKa+
zEI}ABi@#`ws_lycb%0?6(c{Gj2m@x__t%Rz7EyPt0lyBBff?p&5C+VWFPc$VBhZd+
zeCW&RFc}lyAPkt*UNj?j%+e+XDANvM6n}>>U>17O4Aa5F92&qc0r+5s^$!RGrtPB{
z$;t9K-+(gcz5tVv`xC-|bobjewr(7JOolV0v6<vNL*WCJXn|B>9a<QRV;`&-3W(!l
zGJa1z{L$0BznChxZH4jKyjL5U#e>1Rv@HuXkJ+@7PN$m>ddKKqLhzVs3Ok@qaIin<
zE;z7^P`a}WXkU;KfMwtlV=coX&|3%P1iQw9meI(^e<u@=af}c=hq58XN`|Sw%Qn@B
zUziC+@6}ks1utEwQeY(li!l2$3`6_$0VQ@^h*wMPYhO$N5G7pjC>EazOC&-E^dY_G
z!*hUS0wIf1V@XEnmW;Z_QQiP43I|L!qrsAl&{<tjbd3SJXPgIwU@|E!mSlu3ti_eB
z(gDaY!$e@RGy|4ogpN)1)WNj~fRqfe#yB&UWQ6YS`rRFzYUnpe@W5*-`7GFx5kkXF
zf_^p+XY-nCOt9b%?7#?-ag*b2fd$Uyv=<Xh&4wKqAux8zCU~y_+LGae!Pl__BgDme
zMsH^y07jp5#q{37F08<?M>^5u)E7TzRROXa9+*tXi6t4q%HJ+07`g!yh8{j}dOOR7
z9T}cW+LFf*186J-S@Bhtz>16DJcX~42D<^rEfa&e#8Oys5qx*rc)vFKuDfN3zG1Rh
zaS>Ydde=oB74#7!2scz7D=tENu4@h1a{=J|zyWhN6tLnV3~6r;u{;O?^i9SGb6@Vk
zii<GJy~0uBQw?xU3BcToidb<GhQ2vR_x?BvWcW35FgHsHD=xxtIKQbw68-#@3Z%!g
zQOAl4yA9&k&5G};moxz@7?6N9PS(JV49~3&F2C*s^hl!AVD1iGthg}iZ)h%ixz!V(
zTf-?Q0&`mqV8w;(nb_pAcD9<LUluWjL>h+~R$PPu+s??DlzRY^6k=Zo3#_;>i(F{#
zGxqad&Vasske2Ln5G$@fJXai_kF=Em2Pano%%!x&iW`71aK-N*Yyvo|kPN}<j};eT
z%-tS6l-&T>0T<#o&H${qFiSnZZfNgnoLd1n>5zdocMw+GV0iA(EqDBBfTIZE+6H6A
z4T0yz>8{`%1~^9`_Du-EiW>^gRg*u?+6Qo)Ao?nXV#N)E=Uxtea^n%e+zrXVreRod
z!{ND;?Hf@605=2@53UhdabZq=qPf?EnNzv|UDL?G++9bo;zn*i@%ppc`RkxdG$z*{
z?m;<Z7#9Z2YkL@U2FFdeC`t(QWXE@a*Qv{~!C^7g#8mQA;<i-iA`6-Jp~8FU9dr0#
zC1sMZ!2Pw7@+sR=T_8%j+{X?41Z3*nL|`RDvBCYdk~h<~rMg0t^ea|*J_lHG7-Gp~
zY;Xtzj0o+kNrXVvi6BSDIWw`KA`Ixu1&Y}Ufq_;wWIKyj78X>5;rx$VMFaVOu6l%E
zs!1*uRD{8N`|0@c41o9$qN{8H7E~<0AYeM5s&rc_bPbN=+LMA|03d-2R?-j~++RoN
z;j(S1ZV)9uUh3t03HWCN(u}TRgF{*~*r|4m2&i@or0S2aVnIcSP(g<~Gw2iko_Js?
zYXufmgb3wp%!s51+UI@9r^Cc+SWponG=8%DG&i89F{F*Yxq$^0VX`^$(ckhoV1Wim
zJ~6n31r=ec`D!K3{}iAr6(j~|Yp|dqOf)OTh^Nq#!Bb>l>dQJTs0h<c{5w14`2i{?
zgc^Dm3n~_8{{L(`MK`L~P1{qQT%e8Lkf-x0`V1Nikfruu=*jy4JEE%bKab0rxq89f
z4S*ISc}L<%CxFcaMCoCO32FW>Vsw2yf4}2{ya@*_H-z)YEE^yb2XFK3yFYSETmFk&
zb3ZSX@4p`q0t-xg$z;urKH*IX-u1)P_8$bo3+eYNHALT<7mW)RlKBWbA)3CS=mSZc
z8-M;bfzNkuE5scVXp?d8E;#<a3=XqF2=!orLrCCF8=rT70<1s+Nnic_SWpoXIGyg>
z&>ny)4oP3+gIG|pxIO^$!~d=!465^AeE8P^7u|Z-04+x05NP48i(~FpEP*Qyol7`}
zF2tdaw+T>z5AY4a1F#rTVD4ZNdI8UYsPg^o&dDY8qAd}47l%C(0wM6e-3cnd#oN5@
z0Fx9yi9kXKwtaWv*F4bKmkdmLIE6q$7$K+>uskFJbV`C;nC9{hmh{(0Ka1vJIM9ii
z(W6UB=!e><A&NYK2Ot<Z%SJt#hz$oPNCC_#ScK&un0V#Y(M4B4AM~~YOwJ1+almj8
z44i`_`1Kv&s!qt++6XdO4i<-@F%6tU1H*w%Dl2m)?py(i;6kpV>xKvXb(5-~h37z2
zk*}m7KwlR73I`m%FOd)k-uC;p)2bXONq`F`_0b`a5d3X-V~5B*K+%G1)~cpQAR&1C
z1OIvRbs&l<$iRjkVT2`N(WEd9O|k=?12Ht;ak^OaHAWQ>Ln|U75DZ=Ie^&rKHa$fG
zCe0v`5DZP`O?%A;XjCdhVDo5mz>*Nm{Hlm}<|<Hb1_#Vp;DY7+b;Ekh4a0#hgm_S@
zYod?f#XvH}20Q@4#6HqJW8>(?3CVy3ys#Xk%%!k#LmB-VHzAmFiyxMQ#n=PWFuMg|
zIM8{5dLV(%1wfIX5Je8c0}u@35%E+p8i>7<Bw&u92rLJ|Fnb5H2+;%k2apUnDFMqt
zh&-+HVss0DlX4-KXv#>za<GUz%=3@dau}S=0pnjBuR9G}-Yw9{2ZcU3v?U31j@Y~n
zDQNRH<SmKf7(@bj?1)ajzJ9^KP8UD|Yi_opb_2i_0FG3{aDd6*!w>kQHV-kFNBAQw
zO*BP$okV|6J%$TDigH8YujK(VK~%81pP!c}f;667O6m6i{RDc)3x>3{J%26D!r#>?
z7=^qCe!J^jwH0ARV*62n8v_-)9SU}_fi!L52M>@$o&pJAABHuWvEuzRF;@5XMEM3A
z{`#ZsjevRC$9`oDN&kC1cq;<tg*5>P1oZR6*f;CTTTr&!dWpGBZ*m*b=B{)te~3H$
zoqN?50f-jv<}2ra+`+paOQc$eyLq6Ki<coPD9FkEpZnDRcJazzWovQ&Jm?IrfbYeV
zU#J1)(O>T|Pe0wllKAJfb_CUb&(Utj?-B)sSmJ>#wL=X%LEuNIv9{EoJs-c02dZNy
zE^zaxIrKx1{b`N`oXt&gnCoH7e@XuLJNLi-54`0pmm+ZFe%~;riy=@+^X~*gpYetj
z3$@^%t#xP%j%i^l_SfU#kg08iXx3u@#R_RNJlcN+{<r;*mlLT?K8*~bqW}=6j3MrT
z&VLcNl`Qbf^nYX>)BP)1;CJf5g1~RN{}EKH_g8|pdf9!eh`@a6M96^P_sizUB}g$!
z82m2r`=xW_Vl)`Vg8p6XcNHPyQPA7xe{53(QyS(abTAP72>2i1J3}ZCX{#9M5#B$L
zN>eBVarY?r0op&9FJ>?pcnJ87xjztFJ1FFT!+t^{^dITt>f?sG<KQHrFW<-cKjEyu
AQvd(}

diff --git baselib/jniLibs/arm64-v8a/libweibosdkcore.so baselib/jniLibs/arm64-v8a/libweibosdkcore.so
new file mode 100644
index 0000000000000000000000000000000000000000..e4de30fef6b9f1b0300a8588418b342524610d03
GIT binary patch
literal 26136
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
EU*Q$@S^xk5

diff --git app/src/main/res/drawable-hdpi/ic_launcher.png app/src/main/res/drawable-hdpi/ic_launcher.png
new file mode 100644
index 0000000000000000000000000000000000000000..cde69bcccec65160d92116f20ffce4fce0b5245c
GIT binary patch
literal 3418
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

diff --git baselib/libs/umeng_social_tool.jar baselib/libs/umeng_social_tool.jar
new file mode 100644
index 0000000000000000000000000000000000000000..46bd61285e2a21ee75a27b1f5facc289cd6bbecb
GIT binary patch
literal 9820
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

diff --git baselib/libs/SocialSDK_Sina_Simplify.jar baselib/libs/SocialSDK_Sina_Simplify.jar
new file mode 100644
index 0000000000000000000000000000000000000000..96a7ce7bba0e3e926a6f465330b92f37a51c1801
GIT binary patch
literal 72900
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

diff --git baselib/jniLibs/armeabi/libweibosdkcore.so baselib/jniLibs/armeabi/libweibosdkcore.so
new file mode 100644
index 0000000000000000000000000000000000000000..bad42f4733f4306f1373b10d21c8a4c972db105c
GIT binary patch
literal 21744
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
I))?ddH_E&t8vp<R

diff --git baselib/src/main/res/drawable/close_ico.png baselib/src/main/res/drawable/close_ico.png
new file mode 100644
index 0000000000000000000000000000000000000000..e90b72eca775dbe9b0d86dfc08b29309fefc9cba
GIT binary patch
literal 1208
zc%17D@N?(olHy`uVBq!ia0vp^0wB!61|;P_|4#%`k|nMYCBgY=CFO}lsSJ)O`AMk?
zp1FzXsX?iUDV2pMQ*9U+m=!ZaB1$5BeXNr6bM+EIYV;~{3m8Da#=fE;F*!T6L?J0P
zJu}Z%>HY5gN(z}Nwo2iqz6QPp&Z!xh9#uuD!Bu`C$yM3OmMKd1b_zBXRzL%CQ%e#R
zDspr3imfVamB8j&0ofp7eI*63l9Fs&C5WRUd;=7m^NUgyO!Z84lMM__6wEF43{4G9
zEDUuNj0_Bo^$m>m4UKgTjjRkTtqe^Spg;*|TTx1yRgjAt)Gi>;Rw<*Tq`*pFzr4I$
zuiRKKzbIYb(9+UU-@r)U$VeBcLbtdwuOzWTH?LS3W`av<adJ^+K}lwQo&t!Un3P{y
zVymPC^FnR`+}ONgXfOc-Our(rK;KZ$Kp#n=uP=V3xw&xF#U(+hY4}wahg24%>IbD3
z=a&{G10ya?8Kk+u%DE^tu_V7JBtJg~7K#BG`6c<q8TkbY&dv%N;hA|U`Q^o$VCBBP
zR-SpqC5d^-sh%#jN<b04%*+%kLnAX+Clgl_M^h(5Lqk_{Cv#IbH)AIQGcyBYBXc7o
zm|mCs<kH;Kyb_q+6og(=oO(ei0irv#D6=dz#jPkmR{`u}t4!Q(F~aQ@h~5<3ZZXEG
zS0CsYeYALn2>}xihzU=%Kn^_Jr{)0@dl4{I^L|{Q$H2g->*?YcQgJIOW>X3$v(yEq
zM<NQ}Sdv^<+^|)+$9SZ;;fK_wBsCQ?X#s!6N2eWPIF3j;oZ&k<E5LBV9Ug^eEtyG<
zm-dKu#7cZ%p3wTzVGUR5L;V@tzdA4U@XTr0!JoFs>`F+GBb$f5u*rcL7gg3a{!kG5
z&tM`mfziXCOM}N|!;E`eM-(0Quyy=rF4PcMe{9h?=9C5@F;4as&jd8;O+$EOH4Gnq
zd|a<$rp#yhAYw<m>m!Cqo5P)Biv+rNwfkHUY2*7eaSrciKT)yLY6rG6tdI6*2#H_(
zlf!?+{o<8|FJ~Af3s^hSCr#vYs9JY`NpQ-!?-LeO%7^gV82@ET%2$}jb>#ntj6dvK
zZ?dmqS2b^9DQbw|?@(v@=&SIL_egx>53LX%`B^Rd51TNuNHCP}*|gl8+WQJrmUz1Q
KxvX<aXaWE+(2x@V

diff --git baselib/jniLibs/mips64/libweibosdkcore.so baselib/jniLibs/mips64/libweibosdkcore.so
new file mode 100644
index 0000000000000000000000000000000000000000..5740da6d372ae5b45fdf1dc8b4e9bc0f253e83db
GIT binary patch
literal 31800
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

diff --git baselib/src/main/res/raw/beep.ogg baselib/src/main/res/raw/beep.ogg
new file mode 100644
index 0000000000000000000000000000000000000000..14199476a89093b575f6ef388febe417b5cd003b
GIT binary patch
literal 6401
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

diff --git baselib/src/main/res/drawable/loading_progress.png baselib/src/main/res/drawable/loading_progress.png
new file mode 100644
index 0000000000000000000000000000000000000000..f6ea5a391ad64c5bc5c9f14865617b4e55e601bd
GIT binary patch
literal 1061
zc%17D@N?(olHy`uVBq!ia0vp^J|N7&3?x5zE|dgP)d4;su0Z-ruj7EAeV^r@0j<|4
z3GxeO;FU5`o7v#|Y;)QfE;a>Gb8TnAzF6@*7Td6-@*wx0w^lEj+PdNJ9@C$;Qy3VS
z4Lw~PLn02Zo%VX#Dgz$3%RvDP#Py24+nwuq|Gy=D!UZjN)~?^%-%Zu`3~w;(2nzAi
zn>j^O$Ki=lnU%+utd%k+*ZPRKMzw_moe2?qrr?&=ami9kCriUPBrD6oVBNwq0{%ss
z)0PRRs1&+|#u%x2n`w2Y3cPWPn!ZWwXm4BKQVV^{sfAmvuiLw#Ss~-e?+#g~G9^{E
z(#@+TpS0NVQB5nAL-&7(<*c@S`+o_|W0gH=Eq>_g?3<@+<5+Ef2Z}3y=$pjS_9S%w
zgpcgb*~#7W&I<+_^m+93{=FZ5_DH*UW~6hQuk5z$IT5$Rn%mA6DfVr%wF^;VmrPd^
zO$b<0?_to*lDulSl*Lj@ea&Q{XNtGlCm3$}bjGFlSG&+0t{I%XQtmF%=ed0nWzDXu
ztF8GE^(%lY)iNTWT2_*6ImgC{s&be9&b}eq_CfcQR?hy|#1nF<2c5k(D4SaPda+J3
z(I|eGb}~0r^i)~7u6Ay!<teU)p!1hz)y;GIZohRptH$C3Uy~v>J4LQ(KlwIQ@RX8A
zpxT>M!&8&|PpF&<`w(dHlA(IW?TNKPVcC(H`o#g;m>M^+GJ6C}t8ofje5O$-^-f&a
z0w1OcM}==J@TqZdyI6YAHTueyy>Z428@FUePYGq{F4hwFOsqU7yKB$8MfzI3^)LVK
zcbqn5+KVX~@dixmR^^@LdLb}(RZ8#CZ}YQ)wtFV8%{QKO_MyPp(xdy{&tJXg#jXCO
zoEg`yzy9ix)>iU&T6d46#G(&Xk4^la{XD_P^QOR6uQ+CAf6e9g_WHM)X)^Kqm$y|P
z3A{b)<hp$Mn>_13Io{rOIi`2LvzNq%y;*)Kr<Si-zw&|ozMi);dfrWcZJ#d@G;clI
zcA1-@hd+0A#w&k*+_2y0#+;p+XSC!0yt=ZR?@e{>ouCRQxj$`*!aqG2)@%IU7hCpP
zY`?^r&a~$np1N1=ieImpC%wt9{+h>&sz|Y;E$hl!e+z$$$=IE;e4=CM+izw^s~k3Q
z%6A&yzklH(>n$0lDw(M}|HK?-S@a^?R*PHP?(3R=eJ5km&&~YMZe%U0)P4W?rs8SM
ztR_ExRZf|!m$9kYJ@Q$uSz+v(vU4{Q|FYY4`FR(w`Fk9g;TSw!{an^LB{Ts5pRDm*

diff --git baselib/src/main/res/drawable/history_foot_right_empty.png baselib/src/main/res/drawable/history_foot_right_empty.png
new file mode 100644
index 0000000000000000000000000000000000000000..73511a093eb5f49302f4be95b9e313f61f25988c
GIT binary patch
literal 5369
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
M4KS!`gmcvY060QrcmMzZ

